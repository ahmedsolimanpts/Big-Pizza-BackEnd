var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ATGuard.html",[0,1.06,1,4.763]],["body/injectables/ATGuard.html",[0,1.648,1,7.402,2,2.091,3,0.042,4,0.037,5,0.042,6,9.073,7,6.368,8,2.79,9,5.681,10,0.288,11,1.944,12,6.167,13,2.068,14,5.746,15,7.204,16,0.639,17,6.368,18,1.906,19,0.004,20,1.136,21,0.378,22,0.893,23,7.402,24,5.905,25,6.899,26,6.368,27,4.788,28,1.495,29,0.198,30,1.065,31,4.411,32,4.411,33,4.001,34,0.042,35,0.254,36,2.555,37,4.258,38,2.36,39,1.356,40,7.402,41,6.368,42,5.337,43,5.337,44,1.906,45,1.555,46,5.746,47,2.36,48,2.39,49,4.585,50,0.003,51,0.003]],["title/injectables/ATStrategy.html",[0,1.06,52,4.171]],["body/injectables/ATStrategy.html",[0,1.523,2,1.856,3,0.037,4,0.033,5,0.037,8,2.579,10,0.256,11,1.797,13,2.462,16,0.591,18,1.762,19,0.004,20,1.051,21,0.35,22,0.825,28,1.326,29,0.215,30,0.945,33,3.551,34,0.037,35,0.226,37,3.779,38,2.094,39,1.203,44,1.313,47,2.094,48,2.846,50,0.003,51,0.003,52,5.991,53,8.557,54,5.65,55,7.582,56,2.981,57,7.582,58,5.099,59,4.606,60,6.948,61,5.65,62,4.633,63,7.582,64,5.65,65,5.099,66,3.48,67,5.991,68,3.453,69,5.65,70,5.65,71,5.65,72,5.099,73,4.736,74,2.982,75,2.94,76,3.13,77,2.641,78,5.65,79,5.65,80,5.65,81,5.099,82,5.65,83,4.465,84,3.779,85,1.496,86,2.068,87,5.65,88,5.65,89,5.65,90,3.779,91,2.883,92,1.968]],["title/controllers/AdminController.html",[93,1.264,94,4.424]],["body/controllers/AdminController.html",[3,0.035,4,0.031,5,0.035,10,0.242,11,1.732,13,1.737,16,0.649,18,1.934,19,0.004,20,1.153,21,0.384,22,0.905,28,1.953,29,0.22,30,0.894,34,0.035,35,0.214,44,1.934,50,0.002,51,0.002,59,3.528,76,2.964,77,2.545,85,1.934,93,1.281,94,6.124,95,1.491,96,5.349,97,1.982,98,6.593,99,5.26,100,7.306,101,6.593,102,7.306,103,5.349,104,7.815,105,1.153,106,7.306,107,8.941,108,7.306,109,5.349,110,8.941,111,4.827,112,0.526,113,5.349,114,5.349,115,5.349,116,7.306,117,5.349,118,2.089,119,2.207,120,2.146,121,4.484,122,2.117,123,1.106,124,5.229,125,4.827,126,4.827,127,2.9,128,4.827,129,4.022,130,5.349,131,5.763,132,3.851,133,4.827,134,4.484,135,5.349,136,1.572,137,5.349,138,5.991,139,5.349,140,5.349,141,5.349,142,5.349,143,5.349,144,5.349,145,5.349]],["title/modules/AppModule.html",[146,1.754,147,4.171]],["body/modules/AppModule.html",[3,0.023,4,0.021,5,0.023,19,0.004,29,0.232,30,0.587,34,0.023,35,0.14,50,0.002,51,0.002,60,5.081,68,2.145,95,0.979,146,2.174,147,8.706,148,1.56,149,1.56,150,1.611,151,1.611,152,1.585,153,2.47,154,1.611,155,3.168,156,3.168,157,6.275,158,6.275,159,4.844,160,6.275,161,6.275,162,6.009,163,6.009,164,6.275,165,5.781,166,5.404,167,5.781,168,6.275,169,6.275,170,6.009,171,6.009,172,6.275,173,6.275,174,5.781,175,6.275,176,6.275,177,6.275,178,4.844,179,6.275,180,2.47,181,1.585,182,1.611,183,3.51,184,3.338,185,3.51,186,3.51,187,4.046,188,1.903,189,0.785,190,3.51,191,3.51,192,3.51,193,3.51,194,3.51,195,3.51,196,3.51,197,3.51,198,3.51,199,3.51,200,3.51,201,3.51,202,3.51,203,3.51,204,3.51,205,3.51,206,3.51,207,3.51,208,3.51,209,3.51,210,3.51,211,4.856,212,3.51,213,3.51,214,3.51,215,3.51,216,9.19,217,3.51,218,3.51,219,3.51,220,3.51,221,3.51,222,3.51,223,3.51,224,3.51,225,3.51,226,3.168,227,3.51,228,3.51,229,3.168]],["title/classes/AssignRoleDto.html",[35,0.211,104,4.171]],["body/classes/AssignRoleDto.html",[3,0.044,4,0.039,5,0.044,10,0.303,16,0.66,19,0.004,21,0.391,29,0.203,34,0.044,35,0.338,45,2.069,50,0.003,51,0.003,104,6.695,105,1.174,112,0.536,123,1.385,124,5.839,127,5.459,230,1.016,231,6.7,232,1.127,233,6.436,234,4.593,235,3.031,236,6.7,237,6.7,238,8.473,239,5.616,240,6.7,241,3.728,242,3.126,243,3.677,244,2.518,245,1.908,246,3.987,247,3.024,248,6.047]],["title/classes/Attendence.html",[35,0.211,249,3.968]],["body/classes/Attendence.html",[3,0.035,4,0.031,5,0.035,10,0.243,16,0.754,19,0.004,21,0.471,29,0.211,34,0.048,35,0.214,39,1.141,45,2.417,50,0.002,51,0.002,74,1.628,75,2.789,105,1.34,112,0.637,189,1.198,230,0.813,232,0.974,235,2.908,249,5.502,250,4.839,251,4.615,252,3.693,253,3.646,254,4.25,255,6.583,256,6.583,257,6.264,258,2.502,259,5.362,260,3.538,261,3.009,262,3.917,263,5.362,264,7.403,265,5.362,266,3.989,267,5.362,268,5.362,269,5.362,270,2.297,271,2.039,272,2.151,273,3.86,274,4.494,275,4.237,276,4.494,277,2.635,278,3.305,279,3.86,280,2.735,281,4.494,282,4.839]],["title/controllers/AttendenceController.html",[93,1.264,283,4.424]],["body/controllers/AttendenceController.html",[3,0.03,4,0.027,5,0.03,10,0.208,11,1.557,16,0.718,18,2.057,19,0.004,20,1.226,21,0.408,22,0.963,28,2.161,29,0.201,30,0.768,34,0.03,35,0.183,36,1.843,39,0.978,44,2.14,50,0.002,51,0.002,85,2.215,93,1.1,95,1.281,97,1.702,105,1.276,112,0.647,118,1.793,119,1.895,120,3.076,122,1.818,123,0.95,249,5.764,252,1.895,256,3.63,283,5.505,284,4.593,285,1.527,286,3.408,287,2.846,288,4.729,289,4.938,290,3.076,291,3.454,292,7.012,293,4.697,294,3.838,295,4.593,296,5.31,297,4.593,298,6.568,299,4.593,300,7.987,301,4.593,302,3.85,303,5.505,304,4.593,305,3.454,306,3.064,307,4.593,308,4.593,309,8.125,310,6.568,311,4.593,312,2.108,313,4.938,314,4.145,315,5.19,316,3.63,317,4.145,318,4.593,319,6.568,320,4.593,321,3.63,322,4.145,323,4.593,324,2.3,325,1.923,326,2.39,327,4.593,328,4.593,329,3.63,330,4.593,331,3.85,332,4.593,333,4.593,334,4.593,335,4.593,336,4.593]],["title/interfaces/AttendenceInterface.html",[315,4.171,337,1.441]],["body/interfaces/AttendenceInterface.html",[3,0.042,4,0.038,5,0.042,10,0.291,19,0.004,21,0.47,22,1.176,29,0.181,34,0.042,50,0.003,51,0.003,112,0.684,232,1.099,251,5.331,252,3.97,253,4.211,254,4.909,255,7.603,256,7.603,257,7.234,274,5.397,275,5.088,315,6.527,337,1.758,338,2.583,339,5.811,340,6.439,341,7.603,342,5.397]],["title/injectables/AttendenceService.html",[0,1.06,313,3.968]],["body/injectables/AttendenceService.html",[0,1.17,2,1.279,3,0.025,4,0.023,5,0.025,10,0.176,11,1.38,13,1.891,16,0.702,18,2.019,19,0.004,20,1.204,21,0.401,22,0.945,28,2.039,29,0.19,30,0.651,34,0.025,35,0.156,38,3.219,39,1.484,44,2.019,47,3.219,48,3.718,50,0.002,51,0.002,56,3.62,66,4.422,77,2.028,86,3.387,91,3.52,92,2.429,112,0.626,136,1.711,189,0.871,249,2.929,252,2.402,272,1.145,285,1.353,287,2.631,288,4.192,289,4.378,300,6.981,313,4.378,315,7.114,316,3.078,317,3.515,343,3.895,344,5.822,345,6.972,346,3.515,347,3.715,348,6.972,349,3.895,350,5.254,351,5.822,352,3.895,353,4.378,354,1.563,355,3.895,356,4.88,357,3.895,358,4.192,359,5.822,360,3.895,361,3.895,362,5.822,363,3.895,364,3.895,365,5.816,366,3.895,367,1.788,368,1.631,369,3.078,370,3.515,371,3.515,372,3.895,373,4.726,374,3.895,375,4.88,376,3.029,377,3.895,378,3.895,379,3.895,380,3.895,381,3.895,382,3.895,383,1.987,384,3.265,385,3.895,386,3.895,387,3.895]],["title/controllers/AuthController.html",[93,1.264,388,4.424]],["body/controllers/AuthController.html",[3,0.034,4,0.031,5,0.034,10,0.238,11,1.713,16,0.643,18,1.918,19,0.004,20,1.143,21,0.381,22,0.898,28,1.937,29,0.219,30,0.88,34,0.034,35,0.21,36,2.112,44,1.918,50,0.002,51,0.002,56,3.545,66,4.413,86,3.019,93,1.26,95,1.467,97,1.951,99,3.79,105,1.143,118,2.821,120,2.112,122,2.083,123,1.088,131,5.715,132,3.79,133,4.75,136,1.547,293,4.21,294,4.446,326,2.738,388,6.057,389,5.264,390,6.521,391,7.446,392,7.226,393,5.264,394,5.264,395,5.264,396,4.75,397,7.598,398,7.226,399,4.003,400,5.264,401,5.264,402,6.66,403,7.226,404,5.264,405,5.264,406,5.264,407,3.408,408,4.75,409,4.75,410,4.75,411,4.75,412,5.005,413,3.958,414,3.055,415,5.264,416,5.264,417,5.264,418,5.264,419,5.264,420,5.264,421,5.264,422,5.264]],["title/modules/AuthModule.html",[146,1.754,157,3.968]],["body/modules/AuthModule.html",[3,0.034,4,0.031,5,0.034,19,0.004,29,0.23,30,0.874,31,3.621,33,3.285,34,0.034,35,0.209,50,0.002,51,0.002,52,7.582,60,6.134,68,3.194,73,4.382,81,4.718,94,6.891,95,2.005,131,6.646,132,3.764,146,2.732,148,2.324,149,2.324,150,2.399,151,2.399,152,2.361,153,3.773,154,3.301,157,7.872,178,5.569,180,3.301,181,2.361,182,2.399,184,4.195,187,6.182,226,4.718,229,4.718,388,6.891,423,4.718,424,5.228,425,4.718,426,7.215,427,5.228,428,6.891,429,5.228,430,3.496,431,5.228,432,4.382,433,5.228,434,5.228,435,4.718,436,6.028,437,5.228,438,7.192,439,5.228,440,5.228,441,5.228,442,5.228,443,5.228,444,5.228,445,4.718,446,5.228,447,4.718,448,5.228,449,5.228,450,5.228]],["title/injectables/AuthService.html",[0,1.06,131,3.656]],["body/injectables/AuthService.html",[0,0.891,2,0.902,3,0.018,4,0.016,5,0.018,10,0.124,11,1.051,13,1.44,16,0.663,18,1.976,19,0.004,20,1.178,21,0.392,22,0.925,28,1.932,29,0.195,30,0.459,34,0.018,35,0.11,38,3.051,39,1.9,44,1.913,47,3.051,48,3.604,50,0.002,51,0.002,56,3.542,58,2.478,59,3.092,60,5.479,62,2.71,66,3.778,68,1.678,74,2.651,76,1.521,77,1.943,86,3.549,91,3.516,92,2.755,104,6.718,112,0.575,126,2.478,131,3.072,136,0.807,233,4.868,354,2.238,376,1.429,390,4.002,391,4.002,396,4.002,397,5.554,399,2.457,407,5.122,408,2.478,409,2.478,410,2.478,411,2.478,432,2.302,445,4.002,447,4.002,451,2.746,452,4.002,453,4.435,454,4.435,455,4.435,456,4.435,457,6.63,458,7.91,459,2.746,460,4.435,461,2.746,462,4.435,463,2.746,464,4.435,465,2.746,466,1.778,467,4.435,468,2.746,469,2.746,470,4.435,471,5.061,472,2.746,473,2.746,474,4.435,475,5.579,476,2.746,477,2.746,478,2.746,479,4.435,480,1.778,481,2.746,482,3.717,483,1.977,484,2.302,485,1.375,486,2.746,487,2.746,488,4.002,489,2.746,490,4.435,491,4.435,492,2.746,493,2.746,494,2.17,495,1.977,496,2.746,497,2.746,498,4.002,499,2.746,500,2.746,501,5.579,502,5.94,503,4.435,504,2.746,505,2.746,506,2.746,507,2.478,508,2.478,509,2.746,510,2.746,511,2.746,512,2.787,513,2.746,514,2.746,515,2.478,516,4.435,517,6.404,518,1.778,519,1.836,520,4.435,521,4.435,522,2.746,523,2.478,524,6.404,525,2.302,526,4.435,527,4.435,528,2.746,529,2.17,530,2.746,531,4.435,532,4.435,533,4.435,534,2.746,535,2.746,536,4.435,537,4.435,538,2.746]],["title/classes/Billing.html",[35,0.211,539,4.171]],["body/classes/Billing.html",[3,0.055,4,0.049,5,0.055,19,0.003,34,0.055,35,0.333,50,0.003,51,0.003,230,1.266,539,7.65,540,8.349]],["title/controllers/BillingController.html",[93,1.264,541,4.424]],["body/controllers/BillingController.html",[3,0.034,4,0.03,5,0.034,10,0.233,11,1.689,16,0.72,18,2.046,19,0.004,20,1.22,21,0.406,22,0.958,28,2.169,29,0.202,30,0.862,34,0.034,35,0.206,36,2.069,44,2.148,50,0.002,51,0.002,85,2.53,93,1.235,95,1.438,97,1.912,105,1.28,112,0.641,118,2.782,119,2.128,120,3.275,122,2.041,123,1.067,136,1.516,285,1.656,286,2.293,287,2.995,290,2.859,306,3.325,312,2.367,324,2.582,539,4.076,541,5.973,542,5.158,543,3.635,544,3.167,545,4.655,546,7.185,547,5.158,548,5.158,549,2.994,550,5.158,551,2.448,552,3.381,553,5.158,554,2.535,555,7.887,556,3.502,557,5.158,558,6.138,559,4.655,560,2.582,561,5.973,562,2.631,563,5.158,564,5.158,565,5.158,566,5.158,567,3.573,568,5.158,569,3.069,570,5.158,571,2.796,572,5.158]],["title/modules/BillingModule.html",[146,1.754,158,3.968]],["body/modules/BillingModule.html",[3,0.033,4,0.03,5,0.033,19,0.004,20,1.212,29,0.229,30,0.849,34,0.033,35,0.203,50,0.002,51,0.002,95,1.965,132,3.656,146,2.69,148,2.258,149,2.258,150,2.331,151,2.331,152,2.293,153,3.716,154,2.331,158,7.942,165,6.587,178,5.519,180,3.235,181,2.293,182,2.331,184,3.596,188,2.753,189,1.135,270,2.746,430,3.396,435,4.583,541,6.787,558,7.15,559,4.583,573,4.583,574,5.078,575,4.583,576,7.15,577,7.15,578,5.078,579,6.787,580,5.078,581,3.818,582,5.909,583,6.787,584,4.013,585,4.583,586,3.656,587,5.909,588,4.013,589,3.905,590,5.909,591,3.656,592,5.909,593,4.013,594,4.583,595,3.103,596,5.909,597,4.583,598,5.078,599,4.583,600,5.078,601,2.814,602,5.078,603,4.257,604,4.257,605,4.257,606,4.583]],["title/injectables/BillingService.html",[0,1.06,558,3.968]],["body/injectables/BillingService.html",[0,1.496,2,1.807,3,0.036,4,0.032,5,0.036,10,0.249,11,1.765,16,0.737,18,2.103,19,0.004,20,1.254,21,0.417,22,0.985,28,2.339,29,0.185,30,0.92,34,0.036,35,0.22,44,2.197,50,0.003,51,0.003,85,2.58,92,1.917,112,0.598,251,5.237,285,1.731,287,3.077,290,2.988,539,7.469,543,3.8,544,3.311,545,6.721,546,7.107,549,4.322,551,3.534,554,3.661,555,7.873,558,5.6,560,2.755,561,6.242,562,2.807,607,5.502,608,5.502,609,5.502,610,2.692,611,5.502,612,5.502,613,5.502,614,3.961,615,3.68,616,3.961]],["title/classes/Branch.html",[35,0.211,617,1.884]],["body/classes/Branch.html",[3,0.038,4,0.034,5,0.038,10,0.261,16,0.749,19,0.004,20,1.199,21,0.478,29,0.202,34,0.05,35,0.231,39,1.23,45,2.113,50,0.003,51,0.003,74,1.755,75,3.006,105,1.332,112,0.584,189,1.291,230,0.876,232,1.024,235,1.794,253,4.485,258,2.696,260,3.919,261,2.587,262,3.368,266,3.859,270,2.416,271,2.197,272,2.262,273,4.16,277,2.84,278,2.609,280,2.948,617,2.747,618,5.214,619,6.23,620,6.838,621,6.838,622,5.778,623,5.778,624,5.778,625,4.001,626,5.778,627,5.778,628,4.843,629,5.214]],["title/controllers/BranchController.html",[93,1.264,630,4.424]],["body/controllers/BranchController.html",[3,0.033,4,0.03,5,0.033,10,0.229,11,1.669,16,0.716,18,2.031,19,0.004,20,1.211,21,0.403,22,0.951,28,2.155,29,0.208,30,0.847,34,0.033,35,0.202,36,2.033,44,2.134,50,0.002,51,0.002,85,2.516,93,1.213,95,1.413,97,1.878,105,1.272,112,0.638,118,2.748,119,2.091,120,2.824,122,2.005,123,1.048,136,1.49,285,1.636,286,2.253,287,2.972,306,3.284,312,2.326,324,2.537,412,4.875,413,3.81,543,3.591,549,2.941,552,3.34,556,3.46,560,2.537,562,2.585,567,3.51,617,1.809,630,5.9,631,5.067,632,7.039,633,8.087,634,5.067,635,7.509,636,4.573,637,5.067,638,5.067,639,5.067,640,5.067,641,5.067,642,5.067,643,8.33,644,5.067,645,4.694,646,4.573,647,6.352,648,5.067,649,5.067,650,5.067,651,5.067,652,5.067,653,3.281,654,5.067,655,5.067,656,5.067]],["title/interfaces/BranchInterface.html",[337,1.441,657,4.424]],["body/interfaces/BranchInterface.html",[3,0.044,4,0.04,5,0.044,10,0.307,19,0.004,20,1.359,21,0.466,22,1.172,29,0.148,34,0.044,50,0.003,51,0.003,112,0.653,232,1.136,253,4.637,337,1.851,338,2.72,619,7.06,620,7.748,621,7.748,625,4.029,657,7.154,658,6.779,659,6.779]],["title/modules/BranchModule.html",[146,1.754,159,3.063]],["body/modules/BranchModule.html",[3,0.041,4,0.037,5,0.041,19,0.004,20,0.868,29,0.221,30,1.047,34,0.041,35,0.25,50,0.003,51,0.003,95,2.262,146,2.991,148,2.784,149,2.784,150,2.875,151,2.875,152,2.829,153,4.131,154,4.131,159,6.116,178,5.866,180,3.724,181,2.829,182,2.875,184,4.14,188,3.396,189,1.4,270,1.966,430,4.189,601,3.47,617,2.236,628,6.802,630,7.546,645,6.249,646,5.653,660,5.653,661,5.653,662,5.653,663,6.264,664,6.264,665,6.264,666,5.653,667,4.056]],["title/injectables/BranchService.html",[0,1.06,645,3.063]],["body/injectables/BranchService.html",[0,1.159,2,1.265,3,0.025,4,0.023,5,0.025,10,0.174,11,1.368,13,1.874,16,0.699,18,2.01,19,0.004,20,1.198,21,0.399,22,0.941,28,2.03,29,0.189,30,0.644,34,0.025,35,0.154,38,3.205,39,1.637,44,2.084,45,0.94,47,3.205,48,3.709,50,0.002,51,0.002,56,3.613,59,3.713,62,4.23,66,3.969,74,2.335,76,2.133,77,2.011,85,1.528,86,3.375,91,3.507,92,2.412,112,0.625,136,1.132,189,0.86,272,1.132,285,1.341,287,2.616,347,3.173,354,2.778,367,1.767,368,1.612,529,3.042,617,2.06,619,4.155,645,3.35,657,7.517,666,3.474,668,3.85,669,5.771,670,5.771,671,5.771,672,5.771,673,3.85,674,3.85,675,5.771,676,5.771,677,3.85,678,3.85,679,3.85,680,5.771,681,3.85,682,5.931,683,5.771,684,3.85,685,5.771,686,3.85,687,5.771,688,7.69,689,3.85,690,3.85,691,3.85,692,5.771,693,3.737,694,3.85,695,3.85,696,3.85,697,3.85,698,3.474,699,3.85,700,2.493,701,3.85,702,3.85,703,1.566,704,3.85,705,3.85,706,3.85,707,3.85]],["title/classes/Cart.html",[35,0.211,708,4.171]],["body/classes/Cart.html",[3,0.055,4,0.049,5,0.055,19,0.003,34,0.055,35,0.333,50,0.003,51,0.003,230,1.266,708,7.65,709,8.349]],["title/controllers/CartController.html",[93,1.264,710,4.424]],["body/controllers/CartController.html",[3,0.034,4,0.03,5,0.034,10,0.233,11,1.689,16,0.72,18,2.046,19,0.004,20,1.22,21,0.406,22,0.958,28,2.169,29,0.202,30,0.862,34,0.034,35,0.206,36,2.069,44,2.148,50,0.002,51,0.002,85,2.53,93,1.235,95,1.438,97,1.912,105,1.28,112,0.641,118,2.782,119,2.128,120,3.275,122,2.041,123,1.067,136,1.516,285,1.656,286,2.293,287,2.995,290,2.859,306,3.325,312,2.367,324,2.582,543,3.635,544,3.167,549,2.994,551,2.448,552,3.381,554,2.535,556,3.502,560,2.582,562,2.631,567,3.573,569,3.069,571,2.796,708,4.076,710,5.973,711,5.158,712,4.655,713,7.185,714,5.158,715,5.158,716,5.158,717,5.158,718,7.887,719,5.158,720,6.138,721,4.655,722,5.973,723,5.158,724,5.158,725,5.158,726,5.158,727,5.158,728,5.158,729,5.158]],["title/modules/CartModule.html",[146,1.754,160,3.968]],["body/modules/CartModule.html",[3,0.047,4,0.042,5,0.047,19,0.004,29,0.209,30,1.197,34,0.047,35,0.286,50,0.003,51,0.003,95,2.462,146,3.181,148,3.182,149,3.182,150,3.285,151,3.285,152,3.232,153,4.394,154,3.285,160,7.863,180,4.052,181,3.232,182,3.285,710,8.026,720,7.863,721,6.459,730,6.459,731,6.459,732,7.158,733,7.158]],["title/injectables/CartService.html",[0,1.06,720,3.968]],["body/injectables/CartService.html",[0,1.496,2,1.807,3,0.036,4,0.032,5,0.036,10,0.249,11,1.765,16,0.737,18,2.103,19,0.004,20,1.254,21,0.417,22,0.985,28,2.339,29,0.185,30,0.92,34,0.036,35,0.22,44,2.197,50,0.003,51,0.003,85,2.58,92,1.917,112,0.598,251,5.237,285,1.731,287,3.077,290,2.988,543,3.8,544,3.311,549,4.322,551,3.534,554,3.661,560,2.755,562,2.807,610,2.692,614,3.961,615,3.68,616,3.961,708,7.469,712,6.721,713,7.107,718,7.873,720,5.6,722,6.242,734,5.502,735,5.502,736,5.502,737,5.502,738,5.502,739,5.502]],["title/classes/CashPayment.html",[35,0.211,740,4.171]],["body/classes/CashPayment.html",[3,0.043,4,0.039,5,0.043,10,0.301,16,0.657,19,0.004,21,0.449,29,0.213,34,0.055,35,0.265,39,1.414,45,2.058,50,0.003,51,0.003,105,0.92,112,0.533,189,1.485,230,1.007,232,1.121,235,2.062,258,3.099,261,2.833,262,3.688,266,3.29,270,2.645,271,2.526,272,2.477,278,3,617,3.474,667,4.301,740,6.659,741,5.995,742,6.663,743,6.643,744,6.959,745,3.601,746,4.442,747,7.063,748,6.643,749,4.601,750,5.249,751,4.442,752,5.568,753,5.995]],["title/injectables/CashService.html",[0,1.06,754,3.968]],["body/injectables/CashService.html",[0,1.253,2,1.405,3,0.028,4,0.025,5,0.028,10,0.194,11,1.479,13,2.026,16,0.574,18,1.712,19,0.004,20,1.02,21,0.34,22,0.801,28,1.465,29,0.212,30,0.715,34,0.028,35,0.171,38,2.312,39,1.975,44,1.45,47,2.312,48,3.038,50,0.002,51,0.002,56,3.13,59,4.479,74,2.728,76,2.37,77,2.82,85,1.133,86,3.479,91,3.616,92,3.232,112,0.466,136,1.258,189,0.956,272,1.258,325,3.603,347,3.34,354,2.503,367,1.963,368,1.791,376,5.125,512,5.087,617,2.889,645,5.384,754,4.691,755,4.278,756,6.239,757,6.239,758,3.586,759,6.646,760,5.087,761,4.278,762,5.23,763,6.239,764,6.396,765,4.278,766,6.239,767,6.785,768,4.278,769,2.861,770,3.381,771,3.861,772,4.492,773,4.492,774,4.278,775,3.861,776,2.861,777,3.586,778,5.23,779,4.93,780,4.871,781,5.631,782,5.23,783,5.631,784,4.322,785,3.861,786,3.861,787,3.861,788,3.861,789,4.278,790,3.586,791,3.861]],["title/classes/Cashier.html",[35,0.211,792,3.8]],["body/classes/Cashier.html",[3,0.055,4,0.049,5,0.055,19,0.003,34,0.055,35,0.333,50,0.003,51,0.003,230,1.266,792,6.97,793,8.349]],["title/controllers/CashierController.html",[93,1.264,794,4.424]],["body/controllers/CashierController.html",[3,0.034,4,0.031,5,0.034,10,0.237,11,1.705,16,0.724,18,2.058,19,0.004,20,1.227,21,0.408,22,0.964,28,2.179,29,0.194,30,0.874,34,0.034,35,0.209,36,2.098,44,2.158,50,0.002,51,0.002,85,2.54,93,1.252,95,1.458,97,1.937,105,1.287,112,0.643,118,2.808,119,2.157,120,3.299,136,1.537,285,1.672,286,2.324,287,3.012,290,2.886,306,3.356,312,2.399,324,2.617,543,3.669,544,3.197,549,3.034,551,2.481,552,3.413,554,2.57,556,3.535,560,2.617,562,2.667,567,3.621,569,3.111,571,2.834,792,3.764,794,6.028,795,5.228,796,4.718,797,7.215,798,5.228,799,5.228,800,5.228,801,5.228,802,7.913,803,5.228,804,6.182,805,4.718,806,6.028,807,5.228,808,5.228,809,5.228,810,5.228,811,5.228,812,5.228]],["title/modules/CashierModule.html",[146,1.754,161,3.968]],["body/modules/CashierModule.html",[3,0.047,4,0.042,5,0.047,19,0.004,29,0.209,30,1.197,34,0.047,35,0.286,50,0.003,51,0.003,95,2.462,146,3.181,148,3.182,149,3.182,150,3.285,151,3.285,152,3.232,153,4.394,154,3.285,161,7.863,180,4.052,181,3.232,182,3.285,794,8.026,804,7.863,805,6.459,813,6.459,814,6.459,815,7.158,816,7.158]],["title/injectables/CashierService.html",[0,1.06,804,3.968]],["body/injectables/CashierService.html",[0,1.496,2,1.807,3,0.036,4,0.032,5,0.036,10,0.249,11,1.765,16,0.737,18,2.103,19,0.004,20,1.254,21,0.417,22,0.985,28,2.339,29,0.185,30,0.92,34,0.036,35,0.22,44,2.197,50,0.003,51,0.003,85,2.58,92,1.917,112,0.598,251,5.237,285,1.731,287,3.077,290,2.988,543,3.8,544,3.311,549,4.322,551,3.534,554,3.661,560,2.755,562,2.807,610,2.692,614,3.961,615,3.68,616,3.961,792,6.806,796,6.721,797,7.107,802,7.873,804,5.6,806,6.242,817,5.502,818,5.502,819,5.502,820,5.502,821,5.502,822,5.502]],["title/classes/ChangeUserStatusDTO.html",[35,0.211,823,4.424]],["body/classes/ChangeUserStatusDTO.html",[3,0.048,4,0.043,5,0.048,10,0.335,16,0.578,19,0.004,21,0.342,29,0.197,34,0.048,35,0.36,50,0.003,51,0.003,74,2.739,105,1.027,230,1.123,232,1.2,242,3.458,243,3.569,245,2.11,483,7,485,3.71,823,7.56,824,9.019,825,7.41,826,4.462,827,7.41,828,7.41,829,6.211,830,7.41]],["title/classes/Coordinates.html",[35,0.211,264,4.171]],["body/classes/Coordinates.html",[3,0.041,4,0.037,5,0.041,10,0.283,16,0.631,19,0.004,20,0.866,21,0.415,29,0.137,34,0.059,35,0.324,39,1.724,45,2.323,50,0.003,51,0.003,105,1.123,112,0.666,189,1.396,230,0.947,232,1.078,235,2.515,253,2.734,258,3.78,264,7.104,266,4.224,270,2.543,271,2.376,610,2.493,831,5.236,832,6.227,833,6.227,834,6.247,835,6.247,836,6.79,837,5.236,838,4.327,839,4.327,840,4.327,841,4.327,842,4.327,843,4.327,844,4.327,845,2.006,846,4.327,847,4.936,848,5.236]],["title/classes/CoordinatesInteface.html",[35,0.211,341,4.171]],["body/classes/CoordinatesInteface.html",[3,0.046,4,0.041,5,0.046,10,0.319,16,0.682,19,0.004,20,0.977,21,0.403,22,1.082,34,0.057,35,0.282,50,0.003,51,0.003,112,0.681,230,1.068,232,1.164,337,1.925,341,7.514,610,2.606,832,6.586,833,6.586,838,4.882,839,4.882,840,4.882,841,4.882,842,4.882,843,4.882,844,4.882,845,2.263,846,4.882,849,6.361,850,7.048,851,7.048,852,5.075]],["title/classes/Coupon.html",[35,0.211,853,2.991]],["body/classes/Coupon.html",[3,0.037,4,0.033,5,0.037,10,0.254,16,0.764,19,0.004,20,1.183,21,0.476,29,0.187,34,0.049,35,0.225,39,1.197,45,2.546,50,0.003,51,0.003,105,1.359,112,0.577,189,1.257,230,0.852,232,1.005,235,2.956,258,3.983,260,3.626,261,2.541,262,3.308,266,3.912,270,2.372,271,2.138,272,2.221,278,2.539,610,2.392,617,2.007,625,3.977,667,3.641,751,3.76,853,4.283,854,5.074,855,5.364,856,5.912,857,3.855,858,5.623,859,5.623,860,4.097,861,5.623,862,5.623,863,5.623,864,5.623,865,4.443,866,5.074]],["title/controllers/CouponController.html",[93,1.264,867,4.424]],["body/controllers/CouponController.html",[3,0.034,4,0.03,5,0.034,10,0.233,11,1.689,16,0.72,18,2.046,19,0.004,20,1.22,21,0.406,22,0.958,28,2.169,29,0.202,30,0.862,34,0.034,35,0.206,36,2.069,44,2.148,50,0.002,51,0.002,85,2.53,93,1.235,95,1.438,97,1.912,105,1.28,112,0.641,118,2.782,119,2.128,120,3.275,122,2.041,123,1.067,136,1.516,285,1.656,286,2.293,287,2.995,290,2.859,306,3.325,312,2.367,324,2.582,544,3.167,551,2.448,552,3.381,554,2.535,556,3.502,560,2.582,562,2.631,569,3.069,571,2.796,853,2.923,867,5.973,868,5.158,869,3.072,870,5.158,871,7.551,872,5.158,873,5.158,874,2.367,875,5.158,876,5.158,877,8.366,878,5.158,879,5.878,880,4.655,881,6.43,882,5.158,883,5.158,884,5.158,885,5.158,886,2.994,887,5.158,888,5.158,889,5.158]],["title/interfaces/CouponInterface.html",[337,1.441,890,4.424]],["body/interfaces/CouponInterface.html",[3,0.045,4,0.04,5,0.045,10,0.309,19,0.004,20,1.362,21,0.477,22,1.186,34,0.045,50,0.003,51,0.003,112,0.653,232,1.14,337,1.862,338,2.736,610,2.708,625,4.035,855,6.175,856,6.806,857,4.438,890,7.181,891,6.819]],["title/modules/CouponModule.html",[146,1.754,162,3.8]],["body/modules/CouponModule.html",[3,0.041,4,0.037,5,0.041,19,0.004,20,0.868,29,0.221,30,1.047,34,0.041,35,0.25,50,0.003,51,0.003,95,2.262,146,2.991,148,2.784,149,2.784,150,2.875,151,2.875,152,2.829,153,4.131,154,4.131,159,5.866,162,7.587,180,3.724,181,2.829,182,2.875,184,4.14,188,3.396,189,1.4,270,1.966,601,3.47,853,3.55,865,6.413,867,7.546,879,7.752,880,5.653,892,5.653,893,5.653,894,5.653,895,6.264,896,6.264,897,6.264,898,5.653,899,4.189,900,5.653]],["title/injectables/CouponService.html",[0,1.06,879,3.8]],["body/injectables/CouponService.html",[0,0.842,2,0.842,3,0.017,4,0.015,5,0.017,10,0.116,11,0.994,13,1.362,16,0.681,18,1.984,19,0.004,20,1.277,21,0.394,22,0.929,28,2.004,29,0.159,30,0.429,34,0.017,35,0.102,38,3.164,39,1.766,44,1.984,45,0.626,47,3.164,48,3.681,49,1.845,50,0.001,51,0.001,56,3.594,77,1.461,86,3.265,91,3.393,92,2.677,112,0.653,136,0.753,189,0.573,272,0.753,285,0.975,287,2.091,347,2.537,354,3.425,367,1.176,368,1.073,376,1.333,383,2.715,543,2.715,617,1.497,625,2.401,645,4.46,693,2.715,700,1.66,703,1.706,776,1.714,853,2.376,855,2.635,857,2.777,869,1.808,879,3.019,890,6.441,898,2.313,901,2.563,902,4.193,903,4.193,904,5.321,905,5.321,906,4.193,907,5.321,908,5.321,909,2.563,910,2.563,911,4.193,912,4.193,913,2.563,914,2.563,915,2.563,916,4.193,917,2.563,918,4.193,919,2.563,920,6.781,921,4.193,922,6.423,923,6.827,924,2.563,925,6.781,926,4.623,927,2.563,928,4.899,929,2.563,930,6.781,931,2.563,932,2.563,933,4.193,934,2.563,935,2.563,936,2.563,937,2.563,938,6.148,939,2.563,940,2.563,941,2.563,942,6.148,943,3.784,944,2.563,945,3.784,946,2.563,947,2.563,948,2.563,949,2.563,950,2.563,951,4.193,952,2.563,953,2.563,954,7.488,955,7.28,956,6.148,957,4.46,958,3.831,959,4.46,960,3.831,961,4.623,962,3.313,963,3.784,964,2.025,965,2.313,966,2.563,967,2.313,968,1.525]],["title/classes/CreateAttendenceDTO.html",[35,0.211,292,4.424]],["body/classes/CreateAttendenceDTO.html",[3,0.034,4,0.03,5,0.034,10,0.233,16,0.72,19,0.004,21,0.467,22,0.775,29,0.202,34,0.034,35,0.326,50,0.002,51,0.002,105,1.28,112,0.604,123,1.067,230,0.782,232,0.948,241,3.707,242,2.407,243,3.657,244,2.426,245,1.469,251,5.119,252,2.128,253,4.045,254,4.165,255,6.451,257,6.62,274,4.323,275,4.076,292,5.973,358,5.878,845,2.967,860,3.863,969,9.556,970,4.655,971,4.773,972,5.631,973,6.43,974,3.502,975,5.158,976,5.158,977,5.631,978,5.158,979,5.158,980,6.653,981,5.13,982,5.158,983,5.158,984,2.738,985,5.631,986,4.655,987,5.158,988,6.43,989,5.631,990,5.158,991,5.158,992,6.43,993,2.745,994,2.482,995,3.502,996,2.49,997,3.152,998,3.152,999,3.381,1000,4.655,1001,3.152,1002,3.449]],["title/classes/CreateBaseOrderDto.html",[35,0.211,1003,3.8]],["body/classes/CreateBaseOrderDto.html",[3,0.035,4,0.032,5,0.035,10,0.245,16,0.756,19,0.004,21,0.466,22,1.127,29,0.183,34,0.035,35,0.334,45,2.044,50,0.002,51,0.002,105,1.344,112,0.638,230,0.82,232,0.98,244,2.487,245,1.541,625,2.875,780,3.992,853,4.744,993,3.462,994,3.378,995,3.62,996,2.613,1003,5.302,1004,9.921,1005,4.277,1006,3.906,1007,3.972,1008,5.598,1009,5.26,1010,5.598,1011,5.537,1012,5.412,1013,4.884,1014,6.223,1015,4.069,1016,4.069,1017,5.412,1018,3.896,1019,5.412,1020,4.069,1021,3.749,1022,3.896,1023,5.412,1024,4.069,1025,4.884,1026,3.067,1027,4.355,1028,4.274,1029,4.884,1030,5.412,1031,4.638,1032,4.174]],["title/classes/CreateBasePaymentDto.html",[35,0.211,1033,4.171]],["body/classes/CreateBasePaymentDto.html",[3,0.043,4,0.039,5,0.043,10,0.299,16,0.719,19,0.004,21,0.426,29,0.184,34,0.043,35,0.335,50,0.003,51,0.003,105,1.279,112,0.531,230,1.001,232,1.117,242,3.082,243,3.653,244,2.743,245,1.88,610,2.2,749,4.575,993,3.235,994,2.925,1033,6.634,1034,9.713,1035,5.053,1036,5.536,1037,4.802,1038,7.294,1039,6.173,1040,5.96,1041,6.605,1042,6.94,1043,6.605,1044,6.605,1045,6.605,1046,6.605,1047,4.283,1048,5.219,1049,6.605]],["title/interfaces/CreateBasePaymentInterface.html",[337,1.441,1050,3.968]],["body/interfaces/CreateBasePaymentInterface.html",[3,0.043,4,0.039,5,0.043,10,0.3,19,0.004,21,0.473,29,0.184,34,0.043,50,0.003,51,0.003,112,0.673,232,1.119,337,1.809,338,2.657,485,3.316,610,2.422,742,7,749,5.826,1035,3.446,1037,5.058,1038,7.683,1039,6.502,1042,7.311,1048,5.234,1050,6.324,1051,6.623,1052,4.98,1053,3.347,1054,7.683,1055,7.311]],["title/classes/CreateBillingDto.html",[35,0.211,546,3.968]],["body/classes/CreateBillingDto.html",[3,0.054,4,0.049,5,0.054,19,0.003,34,0.054,35,0.332,50,0.003,51,0.003,230,1.261,546,7.264,1056,8.319,1057,7.507]],["title/classes/CreateBranchDto.html",[35,0.211,635,4.171]],["body/classes/CreateBranchDto.html",[3,0.034,4,0.03,5,0.034,10,0.233,16,0.72,19,0.004,20,1.13,21,0.46,22,0.957,29,0.192,34,0.034,35,0.326,50,0.002,51,0.002,105,1.279,112,0.556,123,1.064,230,0.78,232,0.947,234,4.768,235,3.182,241,3.831,243,2.816,244,2.423,245,1.465,247,3.296,253,3.569,466,4.607,619,5.871,620,6.443,621,6.443,625,3.435,635,5.622,703,3.756,993,2.741,994,3.217,995,3.497,996,2.485,997,3.145,998,3.145,1028,4.733,1058,9.549,1059,4.644,1060,5.835,1061,4.067,1062,4.314,1063,4.644,1064,5.146,1065,4.644,1066,5.349,1067,4.644,1068,4.644,1069,6.333,1070,6.333,1071,6.614,1072,5.622,1073,4.644,1074,4.644]],["title/classes/CreateCartDto.html",[35,0.211,713,3.968]],["body/classes/CreateCartDto.html",[3,0.054,4,0.049,5,0.054,19,0.003,34,0.054,35,0.332,50,0.003,51,0.003,230,1.261,713,7.264,1075,8.319,1076,7.507]],["title/interfaces/CreateCashPaymentInterface.html",[337,1.441,764,4.171]],["body/interfaces/CreateCashPaymentInterface.html",[3,0.05,4,0.045,5,0.05,8,3.123,10,0.345,19,0.004,21,0.352,29,0.167,34,0.05,50,0.003,51,0.003,112,0.623,232,1.221,285,1.774,337,2.084,338,3.062,617,3.647,764,7.255,772,5.494,773,5.494,1035,3.97,1050,7.404,1052,5.738,1077,7.631]],["title/classes/CreateCashierDto.html",[35,0.211,797,3.968]],["body/classes/CreateCashierDto.html",[3,0.054,4,0.049,5,0.054,19,0.003,34,0.054,35,0.332,50,0.003,51,0.003,230,1.261,797,7.264,1078,8.319,1079,7.507]],["title/classes/CreateCordinatesDto.html",[35,0.211,980,3.8]],["body/classes/CreateCordinatesDto.html",[3,0.032,4,0.029,5,0.032,10,0.224,16,0.54,19,0.004,20,1.474,21,0.42,29,0.175,34,0.045,35,0.345,50,0.002,51,0.002,105,0.959,112,0.635,123,1.023,230,0.75,232,0.921,234,3.753,241,4.194,243,4.105,244,3.022,245,1.409,247,3.63,610,2.266,832,5.531,833,5.531,838,4.795,839,4.795,840,4.795,841,4.795,842,4.795,843,4.795,844,4.795,845,2.563,846,4.795,980,6.553,994,2.412,995,3.403,996,2.389,997,4.879,1060,3.023,1066,3.72,1080,3.72,1081,7.805,1082,4.948,1083,4.948,1084,4.948,1085,4.948,1086,5.802,1087,5.802,1088,4.465,1089,4.465,1090,4.147,1091,4.147,1092,4.147,1093,4.147,1094,4.147,1095,4.147,1096,3.72,1097,4.147,1098,4.147,1099,4.147,1100,4.147,1101,4.147,1102,3.91,1103,3.91,1104,4.147]],["title/classes/CreateCouponDto.html",[35,0.211,871,4.171]],["body/classes/CreateCouponDto.html",[3,0.033,4,0.03,5,0.033,10,0.229,16,0.74,19,0.004,20,1.119,21,0.438,29,0.154,34,0.033,35,0.281,45,2.132,50,0.002,51,0.002,105,1.316,112,0.552,123,1.046,230,0.766,232,0.935,234,5.148,235,3.232,241,3.908,243,3.631,244,2.4,245,1.44,247,3.39,610,2.288,625,3.409,703,3.552,855,5.076,856,5.595,857,3.648,871,5.553,993,2.708,994,2.814,1021,3.502,1026,2.866,1027,3.656,1028,4.688,1031,3.894,1032,2.866,1047,4.121,1067,4.563,1069,6.285,1070,6.285,1071,5.284,1072,5.553,1105,9.741,1106,4.563,1107,6.342,1108,5.056,1109,5.056,1110,5.056,1111,6.285,1112,5.056,1113,6.342,1114,5.056,1115,5.891,1116,5.891,1117,5.056,1118,5.056,1119,5.056]],["title/classes/CreateCustomerDto.html",[35,0.211,1120,3.968]],["body/classes/CreateCustomerDto.html",[3,0.033,4,0.029,5,0.033,10,0.226,16,0.712,19,0.004,20,1.265,21,0.448,22,1.077,29,0.152,34,0.033,35,0.278,45,1.701,50,0.002,51,0.002,105,1.265,112,0.651,123,1.032,230,0.757,232,0.927,235,2.936,241,3.795,243,3.175,244,2.81,245,1.421,247,3.376,261,2.341,399,3.858,703,3.264,845,2.931,971,4.95,994,3.024,1001,5.931,1002,6.106,1006,4.753,1022,3.593,1026,2.828,1027,4.516,1031,2.765,1032,2.828,1120,5.236,1121,9.458,1122,4.504,1123,6.339,1124,6.339,1125,6.285,1126,4.991,1127,4.991,1128,5.837,1129,5.837,1130,6.339,1131,4.991,1132,6.527,1133,4.991,1134,4.991,1135,5.014,1136,4.991,1137,4.991,1138,4.504,1139,3.593]],["title/classes/CreateCustomerLocationDto.html",[35,0.211,1140,4.424]],["body/classes/CreateCustomerLocationDto.html",[3,0.041,4,0.036,5,0.041,10,0.28,16,0.628,19,0.004,21,0.465,29,0.207,34,0.041,35,0.358,45,1.968,50,0.003,51,0.003,105,1.117,112,0.51,123,1.281,230,0.939,232,1.072,241,3.233,243,3.544,244,2.394,245,1.764,253,3.92,261,2.083,845,1.989,971,3.359,993,3.105,995,3.961,996,2.992,997,3.786,998,3.786,1006,4.854,1026,3.512,1027,4.934,1031,3.433,1032,3.512,1060,6.007,1080,4.659,1140,6.755,1141,8.082,1142,8.082,1143,6.197,1144,6.197,1145,6.755,1146,7.272,1147,5.592,1148,6.197,1149,5.592]],["title/classes/CreateDeliveryOrderDto.html",[35,0.211,1150,4.424]],["body/classes/CreateDeliveryOrderDto.html",[3,0.025,4,0.023,5,0.025,8,1.98,10,0.176,16,0.762,19,0.004,20,0.807,21,0.451,22,1.117,29,0.19,34,0.025,35,0.233,50,0.002,51,0.002,83,4.601,85,1.541,105,1.355,112,0.585,123,0.806,230,0.591,232,0.775,235,2.873,241,3.485,242,1.818,243,2.759,244,2.072,245,1.109,247,3.439,253,2.548,261,2.344,485,1.95,625,1.521,703,3.766,826,2.672,845,2.658,853,3.3,964,4.601,974,4.27,993,2.243,994,2.695,1003,6.813,1005,3.078,1006,2.717,1007,2.763,1008,3.894,1009,3.659,1010,3.894,1011,4.378,1013,3.515,1014,2.698,1015,2.929,1016,2.929,1018,2.805,1020,2.929,1021,2.698,1022,2.805,1024,2.929,1025,3.515,1035,2.027,1096,4.378,1150,4.88,1151,8.686,1152,7.001,1153,5.242,1154,5.242,1155,5.242,1156,5.019,1157,6.225,1158,5.961,1159,3.895,1160,5.961,1161,3.895,1162,3.659,1163,3.156,1164,3.895,1165,5.537,1166,3.895,1167,3.895,1168,3.515,1169,3.3,1170,5.254,1171,4.033,1172,3.895,1173,4.88,1174,3.895,1175,5.809,1176,3.078,1177,3.078,1178,3.078,1179,3.078,1180,3.078,1181,3.078,1182,2.698,1183,2.805,1184,2.929,1185,2.805,1186,2.929,1187,2.605,1188,3.515,1189,3.515,1190,3.515,1191,3.515,1192,3.515,1193,3.265]],["title/classes/CreateDineInOrderDto.html",[35,0.211,1194,4.424]],["body/classes/CreateDineInOrderDto.html",[3,0.038,4,0.034,5,0.038,8,2.613,10,0.261,16,0.786,19,0.004,21,0.465,22,1.14,29,0.168,34,0.038,35,0.307,50,0.003,51,0.003,105,1.397,112,0.625,230,0.874,232,1.022,243,3.041,244,2.283,245,1.641,625,2.25,853,4.354,1003,7.466,1005,4.554,1006,3.585,1007,3.646,1008,5.138,1009,4.828,1010,5.138,1011,5.777,1014,3.992,1015,4.333,1016,4.333,1018,4.149,1020,4.333,1021,3.992,1022,4.149,1024,4.333,1035,2.998,1175,6.605,1176,4.554,1177,4.554,1178,4.554,1179,4.554,1180,4.554,1181,4.554,1182,3.992,1194,6.44,1195,7.683,1196,6.44,1197,6.829,1198,5.201,1199,5.763]],["title/classes/CreateEmployeeDto.html",[35,0.211,1200,4.424]],["body/classes/CreateEmployeeDto.html",[3,0.022,4,0.02,5,0.022,10,0.153,16,0.737,19,0.004,21,0.458,22,1.07,29,0.18,34,0.022,35,0.256,45,1.278,50,0.002,51,0.002,74,2.363,85,2.178,105,1.31,112,0.587,123,0.7,230,0.513,232,0.696,235,2.884,241,3.851,242,1.58,243,3.395,244,2.139,245,0.964,247,3.575,252,3.902,261,1.139,610,1.886,625,3.212,703,3.605,845,3.122,971,4.929,974,2.573,989,6.15,993,2.465,994,2.866,995,2.573,996,1.635,997,2.069,998,2.069,1001,3.198,1027,3.745,1028,3.714,1031,1.876,1035,2.723,1047,2.671,1060,5.027,1062,2.839,1135,3.769,1139,2.438,1169,4.08,1200,4.388,1201,9.599,1202,3.056,1203,5.056,1204,5.056,1205,6.15,1206,6.984,1207,6.15,1208,5.056,1209,4.279,1210,5.056,1211,4.811,1212,3.056,1213,4.724,1214,4.724,1215,3.056,1216,3.387,1217,4.724,1218,3.387,1219,3.387,1220,4.724,1221,7.741,1222,3.056,1223,3.387,1224,4.724,1225,4.724,1226,3.387,1227,3.387,1228,5.851,1229,3.387,1230,3.387,1231,4.724,1232,4.136,1233,3.387,1234,3.387,1235,2.676,1236,3.387,1237,3.387,1238,4.724,1239,4.724,1240,4.724,1241,4.388,1242,3.056,1243,3.387,1244,3.387,1245,3.387,1246,4.136,1247,3.387,1248,3.387,1249,2.676,1250,2.676,1251,2.015,1252,3.056,1253,3.056,1254,3.056,1255,3.056,1256,3.056,1257,3.056]],["title/classes/CreateEmployeeMonthlyPdrDTO.html",[35,0.211,1258,4.171]],["body/classes/CreateEmployeeMonthlyPdrDTO.html",[3,0.033,4,0.029,5,0.033,10,0.226,16,0.677,19,0.004,21,0.457,22,0.945,29,0.152,34,0.033,35,0.278,50,0.002,51,0.002,105,1.203,112,0.549,123,1.032,230,0.757,232,0.927,241,3.218,243,3.175,244,2.384,245,1.421,247,3.534,252,4.203,519,4.657,610,2.102,625,3.866,845,2.787,860,3.775,971,3.775,977,5.503,981,6.574,984,3.697,985,5.503,993,2.683,994,2.794,999,3.807,1028,4.042,1047,3.553,1111,5.014,1169,3.947,1251,2.97,1258,5.503,1259,8.24,1260,8.24,1261,5.912,1262,4.504,1263,5.838,1264,6.285,1265,5.503,1266,4.504,1267,4.991,1268,6.285,1269,6.285,1270,6.285,1271,5.837,1272,5.503,1273,6.285,1274,4.504,1275,4.991,1276,4.376,1277,4.991,1278,4.991,1279,6.285,1280,5.837,1281,6.285,1282,6.285,1283,6.285,1284,4.504,1285,4.991,1286,3.944]],["title/classes/CreateEmployeePdrActionDto.html",[35,0.211,1287,4.171]],["body/classes/CreateEmployeePdrActionDto.html",[3,0.031,4,0.027,5,0.031,10,0.213,16,0.696,19,0.004,21,0.457,22,0.726,29,0.17,34,0.031,35,0.267,50,0.002,51,0.002,85,1.766,105,1.237,112,0.587,123,0.971,230,0.712,232,0.888,235,2.071,241,3.581,242,2.191,243,3.533,244,2.511,245,1.337,247,3.59,251,5.495,252,3.936,254,4.554,261,1.579,373,5.667,610,2.214,625,3.725,703,2.715,845,2.866,972,5.272,974,3.28,993,2.571,994,2.324,999,3.166,1028,3.873,1047,3.404,1111,4.804,1168,4.238,1232,5.272,1251,3.971,1263,5.964,1265,5.272,1272,5.272,1286,5.272,1287,5.272,1288,8.369,1289,8.369,1290,4.238,1291,7.053,1292,6.711,1293,4.696,1294,4.696,1295,4.238,1296,4.696,1297,4.696,1298,4.696,1299,4.804,1300,4.696,1301,4.696,1302,5.272,1303,5.593,1304,6.021,1305,4.696,1306,3.936,1307,3.711,1308,4.238,1309,4.238]],["title/classes/CreateEmployeeSpendingAuthDto.html",[35,0.211,1310,4.424]],["body/classes/CreateEmployeeSpendingAuthDto.html",[3,0.037,4,0.033,5,0.037,8,2.575,10,0.255,16,0.712,19,0.004,21,0.421,22,0.824,29,0.187,34,0.037,35,0.302,45,2.087,50,0.003,51,0.003,105,1.266,112,0.541,123,1.166,230,0.854,232,1.007,234,3.055,235,2.959,241,3.037,243,2.996,244,2.249,245,1.605,247,2.012,252,3.933,254,4.36,261,1.895,285,1.31,373,4.625,589,5.646,610,1.477,703,2.293,826,3.922,845,2.933,974,2.771,993,2.917,1037,4.446,1169,4.29,1175,5.715,1251,4.505,1276,4.757,1310,6.345,1311,5.45,1312,6.831,1313,4.058,1314,7.378,1315,5.981,1316,6.601,1317,5.087,1318,5.087,1319,4.725,1320,4.725,1321,5.087,1322,4.454,1323,5.087,1324,4.901,1325,4.725,1326,5.087,1327,4.058]],["title/classes/CreateInvoiceSpendingAuthDto.html",[35,0.211,1328,4.424]],["body/classes/CreateInvoiceSpendingAuthDto.html",[3,0.037,4,0.033,5,0.037,8,2.575,10,0.255,16,0.712,19,0.004,21,0.421,22,0.824,29,0.187,34,0.037,35,0.302,45,2.087,50,0.003,51,0.003,105,1.266,112,0.541,123,1.166,230,0.854,232,1.007,234,3.055,235,2.959,241,3.037,243,2.996,244,2.249,245,1.605,247,2.012,254,4.36,261,1.895,285,1.31,589,5.646,595,6.126,610,1.477,703,2.293,826,3.922,845,2.933,974,2.771,993,2.917,1037,4.446,1169,4.29,1175,5.715,1251,4.505,1276,4.757,1311,5.45,1313,4.058,1314,7.378,1315,5.981,1316,6.601,1317,5.087,1318,5.087,1319,4.725,1320,4.725,1321,5.087,1322,4.454,1323,5.087,1324,4.901,1325,4.725,1326,5.087,1327,4.058,1328,6.345,1329,6.831]],["title/classes/CreateLocationDto.html",[35,0.211,1060,3.225]],["body/classes/CreateLocationDto.html",[3,0.026,4,0.023,5,0.026,10,0.178,16,0.753,19,0.004,20,1.486,21,0.463,29,0.153,34,0.038,35,0.311,50,0.002,51,0.002,105,1.339,112,0.658,123,0.815,230,0.598,232,0.782,234,5.035,241,4.027,243,3.93,244,2.871,245,1.122,247,3.449,610,1.539,832,2.73,833,2.73,838,5.389,839,5.389,840,5.389,841,5.389,842,5.389,843,5.389,844,5.389,845,2.671,846,5.389,971,2.137,980,6.282,994,2.046,995,2.887,996,1.903,997,5.992,1060,3.589,1061,3.115,1066,4.417,1080,2.964,1081,5.301,1086,4.924,1087,4.924,1088,3.558,1089,3.558,1090,4.924,1091,4.924,1092,4.924,1093,4.924,1094,4.924,1095,4.924,1096,4.417,1097,4.924,1098,4.924,1099,4.924,1100,4.924,1101,4.924,1102,4.642,1103,4.642,1104,4.924,1330,3.942,1331,3.558,1332,3.942,1333,3.558,1334,3.558,1335,3.942,1336,3.942,1337,3.558,1338,3.942,1339,3.942,1340,3.942,1341,3.558,1342,3.942,1343,3.558,1344,3.942,1345,3.558,1346,3.942,1347,3.558,1348,3.942,1349,3.558]],["title/classes/CreateMaterialDto.html",[35,0.211,1350,3.968]],["body/classes/CreateMaterialDto.html",[3,0.054,4,0.049,5,0.054,19,0.003,34,0.054,35,0.332,50,0.003,51,0.003,230,1.261,1350,7.264,1351,8.319,1352,7.507]],["title/classes/CreateNotificationDto.html",[35,0.211,1353,4.171]],["body/classes/CreateNotificationDto.html",[3,0.054,4,0.049,5,0.054,19,0.003,34,0.054,35,0.332,50,0.003,51,0.003,230,1.261,1353,7.634,1354,8.319,1355,7.507]],["title/classes/CreateOfferDto.html",[35,0.211,1356,4.171]],["body/classes/CreateOfferDto.html",[3,0.03,4,0.027,5,0.03,10,0.209,16,0.74,19,0.004,20,1.066,21,0.438,22,0.913,29,0.144,34,0.03,35,0.263,45,2.502,50,0.002,51,0.002,105,1.316,112,0.583,123,0.955,230,0.7,232,0.878,234,5.147,235,3.232,239,3.873,241,3.895,243,3.651,244,2.493,245,1.316,247,3.389,261,2.217,610,2.198,625,3.275,855,4.834,857,3.474,993,2.964,994,2.68,1007,3.65,1021,4.569,1026,2.619,1027,4.002,1028,4.464,1031,4.648,1032,3.738,1047,3.924,1069,6.04,1070,6.99,1116,3.873,1162,4.834,1235,3.651,1356,5.212,1357,9.708,1358,4.17,1359,4.621,1360,4.621,1361,6.596,1362,4.621,1363,4.621,1364,4.621,1365,5.953,1366,4.411,1367,4.621,1368,5.811,1369,4.621,1370,4.621,1371,4.621,1372,4.621,1373,5.953,1374,5.953]],["title/classes/CreateOrderItemsDto.html",[35,0.211,1014,3.656]],["body/classes/CreateOrderItemsDto.html",[3,0.036,4,0.032,5,0.036,10,0.245,16,0.756,19,0.004,21,0.447,22,1.099,29,0.161,34,0.036,35,0.295,45,2.047,50,0.002,51,0.002,105,1.344,112,0.639,230,0.822,232,0.981,242,2.531,243,3.317,244,2.795,245,1.544,254,4.276,610,1.933,780,5.381,857,3.785,993,3.229,994,3.277,1014,5.109,1018,5.311,1026,3.074,1027,4.36,1029,8.958,1031,4.086,1032,3.074,1040,4.895,1047,3.763,1235,4.287,1375,9.927,1376,5.425,1377,6.301,1378,4.864,1379,6.623,1380,6.623,1381,5.425,1382,5.425,1383,5.425,1384,5.425,1385,5.425,1386,5.425,1387,5.425,1388,5.427,1389,5.425,1390,5.425,1391,4.079,1392,3.628,1393,4.547]],["title/classes/CreateProductDto.html",[35,0.211,1394,4.171]],["body/classes/CreateProductDto.html",[3,0.023,4,0.021,5,0.023,10,0.161,16,0.766,19,0.004,20,0.914,21,0.453,22,0.98,29,0.183,34,0.023,35,0.217,45,2.4,50,0.002,51,0.002,85,1.44,105,1.362,112,0.531,123,0.736,230,0.54,232,0.724,234,5.328,235,3.293,241,3.985,242,1.661,243,3.563,244,2.195,245,1.013,247,3.508,610,2.199,617,2.841,703,3.414,857,2.98,968,3.236,993,2.095,994,3.041,1027,2.829,1047,3.769,1116,4.558,1162,4.147,1163,3.577,1368,5.812,1378,3.156,1388,5.154,1392,2.38,1393,2.983,1394,4.297,1395,9.933,1396,3.212,1397,5.215,1398,5.215,1399,5.215,1400,4.962,1401,5.215,1402,5.215,1403,5.215,1404,4.962,1405,3.559,1406,3.212,1407,5.612,1408,5.956,1409,3.212,1410,5.513,1411,3.559,1412,3.212,1413,3.212,1414,3.212,1415,4.908,1416,3.212,1417,3.212,1418,3.212,1419,3.212,1420,2.983,1421,3.212,1422,3.212,1423,2.983,1424,3.212,1425,3.212,1426,5.984,1427,3.559,1428,3.212,1429,5.731,1430,3.559,1431,3.212,1432,6.668,1433,4.751,1434,2.562,1435,2.676,1436,2.812,1437,3.212,1438,3.212,1439,3.212]],["title/classes/CreateSpendingAuthDto.html",[35,0.211,1314,3.968]],["body/classes/CreateSpendingAuthDto.html",[3,0.037,4,0.033,5,0.037,10,0.255,16,0.666,19,0.004,21,0.394,22,0.824,29,0.187,34,0.037,35,0.302,45,2.231,50,0.003,51,0.003,105,1.184,112,0.479,123,1.166,230,0.854,232,1.007,235,3.046,241,3.666,242,2.63,243,3.382,244,2.539,245,1.605,247,3.051,254,4.862,261,1.895,589,5.779,610,1.984,703,3.08,826,4.374,845,2.933,974,3.721,994,2.637,1037,4.958,1047,3.862,1311,6.578,1313,4.058,1314,5.691,1316,6.797,1319,4.725,1320,6.345,1322,4.454,1324,6.171,1325,4.725,1440,9.136,1441,5.637,1442,5.637,1443,5.637,1444,4.238,1445,2.992,1446,5.087,1447,5.087]],["title/classes/CreateStockDto.html",[35,0.211,1448,4.171]],["body/classes/CreateStockDto.html",[3,0.039,4,0.035,5,0.039,10,0.27,16,0.613,19,0.004,21,0.46,22,0.856,29,0.204,34,0.039,35,0.351,45,2.148,50,0.003,51,0.003,85,2.083,105,1.09,112,0.497,123,1.235,230,0.905,232,1.047,235,2.442,241,3.529,243,3.113,244,2.337,245,1.7,247,2.808,617,3.468,703,2.43,845,2.525,971,4.264,993,3.031,994,2.74,995,3.867,996,2.884,1007,4.174,1027,4.092,1031,3.309,1171,4.137,1448,6.216,1449,8.796,1450,5.39,1451,5.972,1452,5.972,1453,7.5,1454,6.594,1455,3.858,1456,3.7,1457,7.099,1458,5.972,1459,5.006,1460,5.972,1461,5.006,1462,5.006]],["title/classes/CreateStockGardDto.html",[35,0.211,1463,4.171]],["body/classes/CreateStockGardDto.html",[3,0.043,4,0.038,5,0.043,10,0.296,16,0.51,19,0.004,21,0.461,29,0.212,34,0.043,35,0.367,45,1.599,50,0.003,51,0.003,105,0.907,123,1.354,230,0.993,232,1.111,241,3.35,243,3.305,245,1.864,261,2.201,845,2.102,971,3.55,995,4.104,996,3.162,1007,4.363,1026,3.711,1027,4.344,1032,3.711,1454,6.999,1455,4.22,1456,3.832,1463,6.598,1464,5.247,1465,7.536,1466,5.91,1467,6.476,1468,6.598,1469,6.548,1470,6.548,1471,4.536,1472,4.536]],["title/classes/CreateStockItemDto.html",[35,0.211,1473,4.171]],["body/classes/CreateStockItemDto.html",[3,0.037,4,0.033,5,0.037,10,0.253,16,0.663,19,0.004,20,1.316,21,0.392,22,0.818,29,0.186,34,0.037,35,0.3,50,0.003,51,0.003,105,1.178,112,0.576,123,1.154,230,0.846,232,1.001,241,3.412,242,2.605,243,3.366,244,2.704,245,1.589,247,3.493,845,3.264,971,4.077,974,3.696,984,2.963,994,2.62,999,3.569,1163,5.149,1302,4.411,1455,4.296,1456,3.958,1464,5.718,1473,5.943,1474,8.212,1475,5.038,1476,7.357,1477,5.582,1478,5.582,1479,6.787,1480,6.787,1481,6.787,1482,8.831,1483,5.038,1484,5.582,1485,5.582,1486,5.582,1487,4.019,1488,3.733,1489,5.038]],["title/classes/CreateStockItemLogsDto.html",[35,0.211,1453,3.968]],["body/classes/CreateStockItemLogsDto.html",[3,0.038,4,0.034,5,0.038,10,0.265,16,0.606,19,0.004,21,0.474,29,0.211,34,0.038,35,0.348,50,0.003,51,0.003,105,1.077,123,1.213,230,0.889,232,1.034,241,3.498,242,2.737,243,3.451,244,2.31,245,1.67,845,2.496,971,4.214,974,3.821,995,3.821,996,2.832,1026,3.325,1032,3.325,1453,5.845,1455,4.178,1456,4.245,1461,7.308,1464,5.479,1467,6.254,1471,4.063,1472,4.063,1487,4.223,1490,5.294,1491,5.61,1492,6.143,1493,5.866,1494,5.866,1495,6.208,1496,5.866,1497,5.866,1498,5.866,1499,4.063,1500,5.866,1501,5.294]],["title/classes/CreateStockItemQuantityDto.html",[35,0.211,1467,3.417]],["body/classes/CreateStockItemQuantityDto.html",[3,0.041,4,0.036,5,0.041,10,0.282,16,0.63,19,0.004,21,0.438,29,0.177,34,0.041,35,0.323,50,0.003,51,0.003,105,1.121,112,0.511,123,1.288,230,0.944,232,1.076,241,3.602,243,3.553,244,2.403,245,1.774,247,3.392,610,2.353,845,2.596,857,4.447,971,4.384,993,3.116,1047,4.126,1169,4.583,1171,4.315,1276,5.082,1284,5.622,1368,5.601,1455,4.239,1456,4.202,1464,5.642,1467,5.236,1471,6.219,1502,5.622,1503,6.465,1504,6.23,1505,6.23,1506,6.23]],["title/classes/CreateSupplierDto.html",[35,0.211,1507,4.171]],["body/classes/CreateSupplierDto.html",[3,0.036,4,0.033,5,0.036,10,0.252,16,0.662,19,0.004,20,1.315,21,0.475,22,0.817,29,0.199,34,0.036,35,0.339,45,1.36,50,0.003,51,0.003,105,1.177,112,0.6,123,1.151,230,0.844,232,0.999,241,3.408,243,3.362,244,2.524,245,1.585,247,3.245,253,4.154,261,1.872,845,2.727,971,4.07,984,2.956,994,2.616,995,3.69,996,2.689,997,3.403,998,3.403,999,3.563,1001,4.588,1026,3.156,1027,3.906,1031,3.085,1032,3.156,1060,5.799,1135,5.406,1139,4.009,1209,5.68,1507,5.933,1508,9.091,1509,5.025,1510,6.773,1511,5.025,1512,5.569,1513,6.776,1514,5.569,1515,5.569,1516,6.293,1517,5.569,1518,5.025,1519,5.569,1520,5.025,1521,5.025]],["title/classes/CreateTakeAwayOrderDto.html",[35,0.211,1522,4.424]],["body/classes/CreateTakeAwayOrderDto.html",[3,0.04,4,0.036,5,0.04,8,2.722,10,0.277,16,0.783,19,0.004,21,0.463,22,1.152,29,0.134,34,0.04,35,0.245,50,0.003,51,0.003,105,1.392,112,0.597,230,0.929,232,1.065,625,2.394,853,4.536,1003,7.556,1005,4.845,1006,3.734,1007,3.798,1008,5.352,1009,5.029,1010,5.352,1011,6.017,1014,4.246,1015,4.61,1016,4.61,1018,4.414,1020,4.61,1021,4.246,1022,4.414,1024,4.61,1035,3.189,1175,6.72,1176,4.845,1177,4.845,1178,4.845,1179,4.845,1180,4.845,1181,4.845,1182,4.246,1522,6.708,1523,6.131,1524,5.139]],["title/classes/CreateTicketDto.html",[35,0.211,1525,3.968]],["body/classes/CreateTicketDto.html",[3,0.034,4,0.03,5,0.034,10,0.235,16,0.722,19,0.004,21,0.427,29,0.209,34,0.034,35,0.286,50,0.002,51,0.002,105,1.283,112,0.453,123,1.074,230,0.787,232,0.952,241,3.842,242,2.423,243,3.79,244,2.127,245,1.478,826,4.251,845,3.402,971,2.815,974,4.34,1163,5.021,1224,7.969,1445,2.757,1488,3.473,1525,5.382,1526,8.641,1527,4.686,1528,7.764,1529,7.319,1530,6.964,1531,5.193,1532,5.193,1533,5.193,1534,5.193,1535,6.416,1536,5.193,1537,5.193,1538,6.964,1539,5.193,1540,5.193,1541,6.416,1542,5.193,1543,5.193,1544,6.358,1545,4.103,1546,3.739,1547,5.376,1548,4.686,1549,4.686,1550,4.686,1551,4.686]],["title/classes/CreateTicketUpdateDto.html",[35,0.211,1552,4.171]],["body/classes/CreateTicketUpdateDto.html",[3,0.049,4,0.044,5,0.049,10,0.342,16,0.589,19,0.004,21,0.348,29,0.165,34,0.049,35,0.365,50,0.003,51,0.003,105,1.047,112,0.577,230,1.145,232,1.214,243,3.612,244,2.712,245,2.151,845,3.148,1526,8.236,1547,5.297,1552,7.212,1553,6.819,1554,6.819,1555,7.556]],["title/classes/CreateTransactionDto.html",[35,0.211,1556,4.171]],["body/classes/CreateTransactionDto.html",[3,0.039,4,0.035,5,0.039,10,0.269,16,0.611,19,0.004,21,0.459,29,0.204,34,0.039,35,0.35,45,1.451,50,0.003,51,0.003,105,1.086,112,0.496,123,1.229,230,0.901,232,1.043,241,3.52,243,3.472,244,2.329,245,1.692,247,2.798,617,2.798,845,2.517,971,4.25,993,3.021,995,3.853,996,2.869,1026,3.367,1031,3.292,1032,3.367,1169,4.443,1251,3.536,1276,4.926,1455,4.191,1456,3.692,1459,4.98,1464,5.514,1467,6.28,1468,6.195,1471,4.115,1472,4.115,1491,4.343,1492,6.195,1556,6.195,1557,7.918,1558,5.362,1559,6.933,1560,6.195,1561,5.941,1562,5.941,1563,7.075,1564,5.941,1565,5.941]],["title/classes/CreateUserDto.html",[35,0.211,402,3.656]],["body/classes/CreateUserDto.html",[3,0.042,4,0.037,5,0.042,10,0.287,16,0.706,19,0.004,21,0.418,29,0.179,34,0.042,35,0.327,45,2.213,50,0.003,51,0.003,105,1.256,112,0.642,123,1.313,230,0.963,232,1.089,234,4.912,235,3.149,241,3.84,243,3.788,244,2.433,245,1.808,247,3.234,399,5.02,402,5.671,518,5.867,1420,5.323,1566,6.35,1567,6.813,1568,7.389,1569,5.731,1570,6.35,1571,6.863,1572,6.35,1573,6.35,1574,7.389,1575,6.35,1576,6.47,1577,6.35,1578,6.35]],["title/classes/CreateUserDto-1.html",[35,0.175,402,3.041,968,2.613]],["body/classes/CreateUserDto-1.html",[3,0.041,4,0.037,5,0.041,10,0.285,16,0.703,19,0.004,21,0.416,29,0.178,34,0.041,35,0.325,45,2.204,50,0.003,51,0.003,105,1.251,112,0.64,123,1.302,230,0.955,232,1.084,234,4.893,235,3.142,239,6.826,241,3.828,243,3.776,244,2.682,245,1.793,247,3.222,399,5,402,5.641,518,5.844,1567,6.786,1568,7.349,1571,6.826,1574,7.349,1576,6.435,1579,9.542,1580,5.684,1581,6.298,1582,6.298,1583,5.684,1584,6.298]],["title/classes/CreateWalletDto.html",[35,0.211,1585,3.968]],["body/classes/CreateWalletDto.html",[3,0.054,4,0.049,5,0.054,19,0.003,34,0.054,35,0.332,50,0.003,51,0.003,230,1.261,1585,7.264,1586,8.319,1587,7.507]],["title/classes/Customer.html",[35,0.211,1006,2.463]],["body/classes/Customer.html",[3,0.038,4,0.034,5,0.038,10,0.261,16,0.77,19,0.004,20,1.199,21,0.465,29,0.189,34,0.05,35,0.231,39,1.23,45,2.414,50,0.003,51,0.003,74,2.802,75,3.006,105,1.369,112,0.673,189,1.291,230,0.876,232,1.024,235,2.389,258,3.591,260,2.454,261,2.587,262,3.368,266,4.091,270,2.416,271,2.197,272,2.262,278,2.609,280,2.948,860,4.172,1001,5.287,1002,5.787,1006,3.591,1123,6.838,1124,6.838,1588,5.214,1589,5.778,1590,5.778,1591,5.778,1592,5.778,1593,5.778,1594,5.778,1595,4.843,1596,5.214]],["title/controllers/CustomerAdminController.html",[93,1.264,1597,4.424]],["body/controllers/CustomerAdminController.html",[3,0.032,4,0.028,5,0.032,10,0.22,11,1.619,16,0.731,18,2.101,19,0.004,20,1.252,21,0.417,22,0.984,28,2.2,29,0.198,30,0.812,34,0.032,35,0.194,36,1.948,44,2.179,50,0.002,51,0.002,85,2.482,93,1.162,95,1.353,97,1.799,105,1.299,112,0.654,118,2.667,119,2.003,120,3.171,122,1.921,123,1.004,136,1.427,285,1.588,286,2.158,287,2.917,306,3.187,312,2.228,324,2.43,552,3.241,556,3.357,610,1.79,653,3.143,869,2.945,874,2.228,886,2.817,1006,2.265,1120,7.049,1597,5.725,1598,4.854,1599,6.164,1600,4.423,1601,4.587,1602,4.381,1603,4.854,1604,4.854,1605,4.854,1606,6.83,1607,4.854,1608,4.854,1609,3.246,1610,4.854,1611,3.05,1612,7.393,1613,4.854,1614,5.285,1615,4.069,1616,4.381,1617,5.725,1618,4.381,1619,4.381,1620,4.381,1621,4.854,1622,4.854,1623,4.854,1624,4.854,1625,4.854,1626,4.854,1627,3.65,1628,4.854]],["title/interfaces/CustomerInterface.html",[337,1.441,1629,4.171]],["body/interfaces/CustomerInterface.html",[3,0.044,4,0.039,5,0.044,10,0.301,19,0.004,20,1.35,21,0.474,22,1.182,34,0.044,50,0.003,51,0.003,74,2.959,112,0.7,232,1.123,337,1.819,338,2.673,1001,5.954,1002,6.516,1123,7.699,1124,7.699,1629,6.671,1630,6.662]],["title/classes/CustomerLocations.html",[35,0.211,1631,3.968]],["body/classes/CustomerLocations.html",[3,0.042,4,0.038,5,0.042,10,0.294,16,0.647,19,0.004,21,0.445,29,0.211,34,0.054,35,0.259,39,1.382,45,2.357,50,0.003,51,0.003,105,1.151,112,0.525,189,1.451,230,0.984,232,1.105,235,2.996,253,4.54,260,3.528,261,3.078,262,3.635,266,3.575,270,2.607,271,2.469,272,2.441,273,4.675,278,2.932,1006,4.503,1631,6.244,1632,7.675,1633,5.86,1634,6.493,1635,6.493,1636,6.493,1637,5.442,1638,5.442,1639,5.86]],["title/controllers/CustomerLocationsController.html",[93,1.264,1640,4.424]],["body/controllers/CustomerLocationsController.html",[3,0.032,4,0.029,5,0.032,10,0.223,11,1.639,13,1.603,16,0.709,18,2.008,19,0.004,20,1.197,21,0.398,22,0.94,28,2.135,29,0.199,30,0.825,34,0.032,35,0.197,44,2.114,50,0.002,51,0.002,77,1.72,85,2.562,93,1.182,95,1.376,97,1.83,105,1.26,112,0.635,118,2.699,119,2.037,120,3.2,122,1.954,123,1.021,136,1.451,285,1.607,286,2.195,287,2.939,306,3.225,312,2.266,324,2.472,325,2.893,552,3.28,556,3.397,653,3.197,869,2.98,874,2.266,886,2.866,998,4.223,1006,3.721,1140,7.242,1142,4.456,1145,6.685,1600,4.476,1601,4.629,1609,3.302,1611,3.103,1612,6.496,1619,4.456,1620,4.456,1627,3.712,1640,5.794,1641,8.506,1642,4.937,1643,2.866,1644,4.937,1645,4.937,1646,4.937,1647,4.937,1648,7.242,1649,4.937,1650,4.977,1651,4.456,1652,4.138,1653,6.912,1654,4.456,1655,4.937,1656,4.937,1657,4.937,1658,4.937,1659,4.937,1660,4.937]],["title/interfaces/CustomerLocationsInterface.html",[337,1.441,1661,4.424]],["body/interfaces/CustomerLocationsInterface.html",[3,0.049,4,0.044,5,0.049,10,0.339,19,0.004,21,0.418,22,1.105,29,0.164,34,0.049,50,0.003,51,0.003,112,0.617,232,1.207,253,4.443,337,2.043,338,3.002,342,6.272,852,7.308,1006,4.736,1661,7.604,1662,7.483,1663,7.483]],["title/injectables/CustomerLocationsService.html",[0,1.06,1650,3.8]],["body/injectables/CustomerLocationsService.html",[0,1.177,2,1.29,3,0.026,4,0.023,5,0.026,10,0.178,11,1.389,13,1.903,16,0.704,18,2.025,19,0.004,20,1.207,21,0.383,22,0.948,28,2.045,29,0.19,30,0.657,34,0.026,35,0.157,38,3.229,39,1.247,44,2.025,45,0.959,47,3.229,48,3.725,50,0.002,51,0.002,56,3.624,77,2.041,84,2.627,86,3.304,91,3.433,92,2.441,112,0.6,136,1.155,189,0.878,272,1.155,285,1.362,347,3.205,354,3.496,367,1.803,368,1.644,376,2.044,383,2.989,1006,3.269,1614,6.037,1631,2.954,1650,4.218,1661,7.567,1664,8.374,1665,3.929,1666,7.768,1667,5.859,1668,5.859,1669,5.859,1670,7.007,1671,3.929,1672,3.929,1673,5.859,1674,4.911,1675,3.929,1676,3.293,1677,3.929,1678,5.859,1679,3.929,1680,7.498,1681,5.859,1682,3.929,1683,7.007,1684,5.859,1685,3.929,1686,3.929,1687,7.01,1688,3.929,1689,3.545,1690,3.293,1691,3.929,1692,3.929,1693,3.929,1694,3.929,1695,3.545,1696,3.929,1697,3.929,1698,3.929,1699,3.929,1700,3.929,1701,3.929,1702,5.859,1703,3.929,1704,3.929,1705,3.929]],["title/modules/CustomerModule.html",[146,1.754,163,3.8]],["body/modules/CustomerModule.html",[3,0.035,4,0.031,5,0.035,19,0.004,20,1.004,29,0.227,30,0.884,34,0.035,35,0.211,50,0.002,51,0.002,95,2.021,146,2.748,148,2.351,149,2.351,150,2.427,151,2.427,152,2.388,153,3.796,154,3.796,163,7.65,166,6.235,178,5.589,180,3.327,181,2.388,182,2.427,184,3.698,188,2.866,189,1.182,270,2.275,430,3.536,601,2.93,1006,2.467,1595,6.076,1597,6.933,1614,7.015,1615,4.432,1631,3.976,1637,4.432,1638,6.076,1640,6.933,1650,7.552,1651,4.772,1652,4.432,1689,4.772,1690,4.432,1706,4.772,1707,4.772,1708,5.288,1709,4.772,1710,5.288,1711,6.933,1712,5.288,1713,4.772,1714,4.179,1715,7.249,1716,5.288,1717,5.288,1718,4.772]],["title/injectables/CustomerService.html",[0,1.06,1614,3.53]],["body/injectables/CustomerService.html",[0,1.152,2,1.254,3,0.025,4,0.022,5,0.025,10,0.173,11,1.36,13,1.862,16,0.697,18,2.004,19,0.004,20,1.195,21,0.398,22,0.938,28,2.024,29,0.188,30,0.638,34,0.025,35,0.153,38,3.195,39,1.466,44,2.004,45,0.932,47,3.195,48,3.702,50,0.002,51,0.002,56,3.609,59,3.698,62,4.209,66,2.632,74,2.618,76,2.115,77,1.998,84,2.553,85,1.518,86,3.367,91,3.499,92,2.668,112,0.624,136,1.122,189,0.853,272,1.122,285,1.333,347,3.16,354,3.293,367,1.752,368,1.598,383,1.948,610,1.001,693,3.714,1001,4.209,1006,1.781,1560,3.017,1599,5.176,1614,3.836,1629,7.067,1674,4.807,1676,3.2,1680,7.408,1687,6.911,1713,3.446,1719,3.818,1720,7.658,1721,5.735,1722,5.735,1723,6.888,1724,3.818,1725,3.818,1726,5.735,1727,3.818,1728,3.818,1729,5.735,1730,3.818,1731,5.735,1732,5.735,1733,3.818,1734,5.735,1735,3.818,1736,3.818,1737,3.818,1738,3.446,1739,3.818,1740,3.818,1741,3.818,1742,3.818,1743,3.818,1744,3.818,1745,3.818,1746,3.818,1747,3.818,1748,3.818,1749,3.446,1750,3.818,1751,3.818,1752,3.818,1753,3.818,1754,3.818]],["title/controllers/CustomerUserController.html",[93,1.264,1711,4.424]],["body/controllers/CustomerUserController.html",[3,0.034,4,0.031,5,0.034,10,0.238,11,1.71,16,0.642,18,1.915,19,0.004,20,1.142,21,0.38,22,0.897,28,1.934,29,0.215,30,0.878,34,0.034,35,0.21,36,2.107,39,1.118,44,1.915,50,0.002,51,0.002,74,2.191,93,1.257,95,1.464,97,1.946,105,1,118,2.817,120,3.307,122,2.078,123,1.086,136,1.544,285,1.677,293,5.346,294,5.152,324,2.629,325,2.198,326,4.287,414,3.048,869,3.11,1006,3.845,1120,7.4,1601,4.783,1602,4.74,1612,7.537,1614,5.511,1615,4.402,1616,4.74,1617,6.047,1618,4.74,1629,5.701,1641,8.007,1711,6.047,1738,4.74,1755,5.252,1756,5.252,1757,5.252,1758,5.252,1759,5.252,1760,5.252,1761,5.252,1762,5.252,1763,5.252,1764,5.252,1765,5.252,1766,5.252]],["title/classes/Delivery.html",[35,0.211,1152,3.656]],["body/classes/Delivery.html",[3,0.052,4,0.046,5,0.052,19,0.004,29,0.173,34,0.061,35,0.316,39,1.686,45,1.934,50,0.003,51,0.003,189,1.77,230,1.2,270,2.946,271,3.011,277,3.892,1152,6.501,1767,7.146,1768,6.638,1769,7.146]],["title/controllers/DeliveryController.html",[93,1.264,1770,3.8]],["body/controllers/DeliveryController.html",[3,0.052,4,0.046,5,0.052,19,0.004,29,0.206,30,1.329,34,0.052,35,0.317,50,0.003,51,0.003,93,1.902,95,2.215,97,2.945,122,3.145,123,1.643,1152,5.504,1770,6.771,1771,7.946,1772,7.171,1773,7.946]],["title/controllers/DeliveryController-1.html",[93,1.051,968,2.613,1770,3.161]],["body/controllers/DeliveryController-1.html",[3,0.031,4,0.028,5,0.031,10,0.213,11,1.586,13,1.531,16,0.66,18,1.968,19,0.004,20,1.173,21,0.39,22,0.921,28,1.987,29,0.213,30,0.788,34,0.031,35,0.188,39,1.004,44,1.968,50,0.002,51,0.002,77,2.331,93,1.129,95,1.315,97,1.747,105,1.173,112,0.65,118,2.613,119,1.946,120,1.892,122,1.866,123,0.975,136,1.967,293,4.738,294,3.894,312,2.164,325,1.974,326,2.453,485,2.361,617,1.683,760,4.888,780,2.556,928,5.173,1053,1.623,1150,7.096,1152,3.266,1165,3.153,1182,3.266,1187,3.153,1193,3.952,1770,4.818,1772,4.255,1774,4.715,1775,4.715,1776,6.692,1777,7.778,1778,6.692,1779,6.692,1780,4.715,1781,6.692,1782,4.715,1783,7.465,1784,4.715,1785,5.288,1786,4.715,1787,6.52,1788,4.715,1789,6.692,1790,4.715,1791,4.715,1792,6.692,1793,6.692,1794,4.715,1795,4.635,1796,3.726,1797,3.395,1798,3.726,1799,4.715,1800,3.545,1801,5.202,1802,4.255,1803,4.715,1804,3.395,1805,3.053,1806,3.726,1807,3.952,1808,4.715,1809,7.778,1810,4.715,1811,4.715,1812,4.715,1813,4.715]],["title/modules/DeliveryModule.html",[146,1.754,164,3.968]],["body/modules/DeliveryModule.html",[3,0.044,4,0.039,5,0.044,19,0.004,20,0.928,29,0.22,30,1.12,34,0.044,35,0.268,50,0.003,51,0.003,95,2.362,146,3.088,148,2.978,149,2.978,150,3.075,151,3.075,152,3.026,153,4.265,154,3.075,164,7.734,180,3.889,181,3.026,182,3.075,184,3.418,188,3.632,189,1.497,270,2.103,601,3.712,1152,4.641,1768,7.102,1770,6.69,1798,5.295,1801,6.879,1814,6.047,1815,6.047,1816,6.7,1817,6.7,1818,6.7,1819,6.7]],["title/classes/DeliveryOrder.html",[35,0.211,1797,3.8]],["body/classes/DeliveryOrder.html",[3,0.034,4,0.03,5,0.034,10,0.233,16,0.745,19,0.004,21,0.467,29,0.218,34,0.047,35,0.206,39,1.098,45,2.334,50,0.002,51,0.002,74,1.566,75,2.683,105,1.28,112,0.557,189,1.153,230,0.782,232,0.948,235,2.534,258,3.809,260,2.191,261,3.212,262,3.854,266,3.824,270,2.237,271,1.961,272,2.095,278,3.218,280,2.631,485,2.582,745,5.009,746,3.449,1153,6.138,1154,6.138,1155,6.138,1156,5.878,1157,6.138,1158,5.878,1160,5.878,1165,5.459,1183,3.714,1184,3.878,1185,3.714,1186,3.878,1187,3.449,1631,3.878,1632,4.323,1690,4.323,1718,4.655,1797,5.13,1805,5.286,1820,4.655,1821,5.158,1822,5.158,1823,5.158,1824,5.158,1825,6.451,1826,7.126,1827,5.158,1828,5.158,1829,3.241,1830,4.323,1831,5.158,1832,5.158,1833,4.323,1834,4.655]],["title/injectables/DeliveryService.html",[0,1.06,1801,3.53]],["body/injectables/DeliveryService.html",[0,1.921,2,2.684,3,0.053,4,0.048,5,0.053,19,0.004,29,0.179,30,1.366,34,0.053,35,0.326,50,0.003,51,0.003,1801,6.394,1835,8.171]],["title/injectables/DeliveryService-1.html",[0,0.882,968,2.613,1801,2.936]],["body/injectables/DeliveryService-1.html",[0,1.506,2,1.825,3,0.036,4,0.032,5,0.036,10,0.251,11,1.777,13,2.434,16,0.584,18,1.742,19,0.004,20,1.039,21,0.346,22,0.816,28,1.304,29,0.218,30,0.929,34,0.036,35,0.222,38,2.059,39,1.183,44,1.291,47,2.059,48,2.814,50,0.003,51,0.003,56,2.955,77,1.935,86,2.743,91,3.226,92,2.611,112,0.537,136,1.633,189,1.242,272,1.633,347,3.748,354,2.229,367,2.55,368,2.325,376,2.89,480,3.597,485,3.753,780,5.141,782,4.656,1039,3.715,1165,6.074,1187,3.715,1797,4,1798,4.39,1801,5.013,1806,4.39,1829,3.491,1836,5.555,1837,7.496,1838,4.656,1839,5.555,1840,5.923,1841,7.496,1842,7.949,1843,5.555,1844,4.177,1845,3.715,1846,4.39,1847,5.555,1848,7.496,1849,5.555,1850,4,1851,4.39,1852,5.013,1853,5.013,1854,5.555,1855,4.656]],["title/controllers/DineInController.html",[93,1.264,1856,4.424]],["body/controllers/DineInController.html",[3,0.039,4,0.035,5,0.039,10,0.272,11,1.871,16,0.468,18,1.395,19,0.004,20,0.832,21,0.277,22,0.653,28,1.409,29,0.218,30,1.004,34,0.039,35,0.24,36,2.409,39,1.278,44,1.395,50,0.003,51,0.003,93,1.437,95,1.674,97,2.225,105,0.832,112,0.558,118,3.082,119,2.477,120,2.409,122,2.376,123,1.241,136,1.765,293,5.097,294,4.415,325,2.513,326,3.123,617,2.143,760,5.542,780,3.254,928,5.724,1053,2.066,1182,4.158,1194,7.852,1196,5.032,1785,6.237,1787,7.392,1795,5.467,1796,4.744,1800,4.514,1804,4.322,1805,3.887,1807,5.032,1856,6.616,1857,7.893,1858,6.003,1859,6.003,1860,8.819,1861,6.003,1862,6.003,1863,4.514,1864,5.418,1865,6.003,1866,6.003,1867,6.003,1868,5.032]],["title/injectables/DineInService.html",[0,1.06,1869,4.171]],["body/injectables/DineInService.html",[0,1.905,2,2.646,3,0.053,4,0.047,5,0.053,19,0.004,29,0.176,30,1.347,34,0.053,35,0.322,36,3.233,50,0.003,51,0.003,1869,7.493,1870,8.057,1871,8.057]],["title/classes/DineinOrder.html",[35,0.211,1863,3.968]],["body/classes/DineinOrder.html",[3,0.044,4,0.039,5,0.044,10,0.303,16,0.724,19,0.004,21,0.429,29,0.185,34,0.055,35,0.268,39,1.426,50,0.003,51,0.003,105,1.174,112,0.536,189,1.497,230,1.016,232,1.127,266,3.813,270,2.66,271,2.548,610,2.22,745,4.593,746,4.481,1197,7.343,1805,6.017,1825,7.343,1829,4.21,1830,5.616,1863,6.371,1872,6.047,1873,7.789,1874,8.473,1875,6.7,1876,4.824,1877,7.646,1878,6.7,1879,6.7,1880,5.616,1881,6.047]],["title/injectables/EmailService.html",[0,1.06,1882,4.171]],["body/injectables/EmailService.html",[0,1.921,2,2.684,3,0.053,4,0.048,5,0.053,19,0.004,29,0.179,30,1.366,34,0.053,35,0.326,50,0.003,51,0.003,1882,7.555,1883,8.171]],["title/controllers/EmpPdrActionController.html",[93,1.264,1884,4.424]],["body/controllers/EmpPdrActionController.html",[3,0.029,4,0.026,5,0.029,10,0.198,11,1.503,16,0.706,18,2.018,19,0.004,20,1.203,21,0.4,22,0.945,28,2.126,29,0.198,30,0.732,34,0.029,35,0.175,36,1.756,39,0.931,44,2.105,50,0.002,51,0.002,85,2.533,93,1.048,95,1.22,97,1.622,105,1.255,112,0.641,118,1.708,119,1.805,120,2.993,122,1.732,123,0.905,136,1.286,251,4.133,285,1.474,286,1.945,287,2.783,288,4.566,289,4.769,290,2.545,291,3.29,293,4.62,294,3.735,296,5.167,302,3.668,303,5.316,305,3.29,306,2.959,312,2.008,316,3.458,321,3.458,324,2.191,325,1.832,326,2.276,329,3.458,331,3.668,373,4.558,544,2.819,551,2.076,552,3.01,554,2.151,556,3.117,569,2.604,571,2.372,1053,1.506,1263,6.067,1287,6.464,1289,3.949,1884,5.316,1885,9.341,1886,4.376,1887,4.376,1888,4.376,1889,4.376,1890,4.376,1891,4.376,1892,6.464,1893,6.857,1894,4.376,1895,4.769,1896,3.949,1897,3.949,1898,6.342,1899,5.724,1900,5.012,1901,3.949,1902,3.949,1903,4.376,1904,3.949,1905,3.949,1906,3.949,1907,3.949,1908,3.949,1909,4.376,1910,4.376]],["title/injectables/EmpPdrActionService.html",[0,1.06,1895,3.968]],["body/injectables/EmpPdrActionService.html",[0,1.098,2,1.176,3,0.023,4,0.021,5,0.023,10,0.162,11,1.295,13,1.774,16,0.682,18,1.955,19,0.004,20,1.166,21,0.388,22,0.915,28,1.974,29,0.197,30,0.599,34,0.023,35,0.143,38,3.117,39,1.578,44,1.955,47,3.117,48,3.65,50,0.002,51,0.002,56,3.573,59,3.579,62,4.048,66,4.463,74,1.659,76,1.984,77,2.308,84,2.395,85,1.962,86,3.382,90,2.395,91,3.515,92,2.582,112,0.615,136,1.053,189,0.8,252,2.734,272,1.053,285,1.27,287,2.521,288,3.934,316,2.83,325,1.499,347,3.058,356,4.58,358,3.934,365,5.573,367,1.644,368,1.499,373,3.338,375,4.58,376,2.842,383,1.827,384,4.58,784,2.48,869,2.356,874,2.508,1261,2.319,1263,5.473,1600,3.538,1601,3.845,1611,2.25,1643,3.171,1895,4.108,1900,5.857,1901,3.232,1911,9.02,1912,3.581,1913,3.581,1914,5.207,1915,3.581,1916,5.464,1917,3.581,1918,3.581,1919,3.581,1920,3.581,1921,5.464,1922,3.581,1923,3.002,1924,5.573,1925,3.581,1926,3.002,1927,3.002,1928,2.83,1929,3.002,1930,3.232,1931,3.232,1932,3.581,1933,3.002,1934,3.581,1935,3.581,1936,3.581,1937,3.581,1938,3.581,1939,3.581,1940,3.232,1941,3.232,1942,3.232,1943,3.581,1944,3.581]],["title/classes/Employee.html",[35,0.211,252,2.178]],["body/classes/Employee.html",[3,0.028,4,0.025,5,0.028,10,0.195,16,0.788,19,0.004,21,0.478,29,0.208,34,0.041,35,0.172,39,0.918,45,2.442,50,0.002,51,0.002,74,2.467,75,2.242,105,1.401,112,0.624,189,0.963,230,0.653,232,0.835,235,2.797,252,2.588,253,3.778,258,3.79,260,3.142,261,3.028,262,3.556,266,4.095,270,1.969,271,1.639,272,1.844,273,3.103,277,2.119,278,2.833,280,2.199,610,1.644,617,1.539,625,3.172,667,2.791,745,4.009,751,2.882,1203,5.844,1204,5.844,1205,5.844,1206,6.773,1207,5.844,1208,5.844,1209,4.946,1210,5.844,1211,5.561,1228,5.561,1249,3.406,1250,3.406,1535,5.123,1546,3.103,1876,3.103,1945,3.89,1946,6.675,1947,6.199,1948,4.31,1949,4.31,1950,4.31,1951,4.31,1952,4.31,1953,4.31,1954,4.31,1955,4.31,1956,4.31,1957,4.31,1958,4.31,1959,4.31,1960,3.406,1961,4.31,1962,4.31,1963,3.613,1964,3.89]],["title/controllers/EmployeeController.html",[93,1.264,1965,4.424]],["body/controllers/EmployeeController.html",[3,0.034,4,0.03,5,0.034,10,0.232,11,1.684,16,0.719,18,2.043,19,0.004,20,1.218,21,0.405,22,0.956,28,2.165,29,0.202,30,0.859,34,0.034,35,0.205,36,2.06,44,2.144,50,0.002,51,0.002,85,2.526,93,1.229,95,1.432,97,1.903,105,1.278,112,0.64,118,2.774,119,2.119,120,3.268,122,2.032,123,1.062,136,1.509,252,2.119,285,1.651,286,2.283,287,2.989,289,5.341,290,3.268,305,3.861,306,3.314,312,2.357,321,4.058,322,4.634,324,2.571,329,4.058,544,3.158,551,2.437,552,3.371,554,2.524,556,3.492,571,2.784,653,3.325,1200,7.998,1914,4.847,1965,5.954,1966,5.135,1967,5.135,1968,5.135,1969,5.135,1970,5.135,1971,5.135,1972,8.357,1973,5.135,1974,4.304,1975,5.135,1976,7.104,1977,5.135,1978,5.135,1979,5.135,1980,5.135,1981,5.135,1982,5.135]],["title/interfaces/EmployeeInterface.html",[337,1.441,1983,4.424]],["body/interfaces/EmployeeInterface.html",[3,0.035,4,0.031,5,0.035,10,0.244,19,0.004,21,0.485,22,1.197,29,0.183,34,0.035,50,0.002,51,0.002,74,2.723,112,0.677,232,0.977,253,3.655,337,1.471,338,2.161,610,2.188,625,3.781,1203,7.086,1204,7.086,1205,7.086,1206,7.583,1207,7.086,1208,7.086,1209,5.997,1210,7.086,1211,6.742,1228,6.742,1249,4.257,1250,4.257,1535,6.211,1546,3.878,1946,8.093,1947,7.516,1960,4.257,1983,6.153,1984,5.387]],["title/modules/EmployeeModule.html",[146,1.754,165,3.656]],["body/modules/EmployeeModule.html",[3,0.03,4,0.027,5,0.03,19,0.004,20,1.154,29,0.231,30,0.76,34,0.03,35,0.182,50,0.002,51,0.002,95,1.818,146,2.533,148,2.022,149,2.022,150,2.087,151,2.087,152,2.054,153,3.499,154,3.499,159,5.326,165,7.384,166,5.941,178,5.326,180,2.993,181,2.054,182,2.087,184,3.327,188,2.465,189,1.016,249,3.42,252,1.877,270,2.614,279,3.274,281,5.466,283,6.391,313,6.899,314,4.104,369,3.594,370,4.104,430,3.041,601,2.52,899,3.041,1261,4.223,1263,4.425,1714,3.594,1884,6.391,1895,6.899,1896,4.104,1897,4.104,1914,6.079,1928,3.594,1929,5.466,1930,4.104,1963,5.466,1965,6.391,1974,3.812,1985,4.104,1986,4.104,1987,4.548,1988,4.104,1989,6.899,1990,4.548,1991,6.391,1992,4.548,1993,4.104,1994,4.104,1995,4.548,1996,4.548,1997,4.548,1998,3.594,1999,5.466,2000,4.104,2001,5.466,2002,4.548,2003,4.548,2004,4.548,2005,4.548,2006,4.548]],["title/classes/EmployeeMonthlyPDR.html",[35,0.211,1998,4.171]],["body/classes/EmployeeMonthlyPDR.html",[3,0.036,4,0.033,5,0.036,10,0.252,16,0.74,19,0.004,21,0.461,29,0.199,34,0.049,35,0.222,39,1.185,45,2.441,50,0.003,51,0.003,74,1.691,75,2.897,105,1.315,112,0.618,189,1.245,230,0.844,232,0.999,235,2.331,252,3.751,258,3.503,260,3.189,261,3.056,262,3.979,266,3.902,270,2.357,271,2.118,272,2.207,276,4.668,277,2.737,278,3.391,279,4.009,280,2.841,610,1.967,625,3.706,860,4.07,981,6.116,1053,2.924,1261,6.332,1263,4.93,1998,5.933,1999,4.668,2007,8.196,2008,5.025,2009,5.569,2010,5.569,2011,5.569,2012,5.569,2013,5.569,2014,5.025]],["title/interfaces/EmployeeMonthlyPDRInterface.html",[337,1.441,1924,3.968]],["body/interfaces/EmployeeMonthlyPDRInterface.html",[3,0.045,4,0.04,5,0.045,10,0.31,19,0.004,21,0.467,22,1.173,34,0.045,50,0.003,51,0.003,112,0.677,232,1.142,252,4.059,337,1.867,338,2.744,610,2.458,625,4.098,981,7.082,1053,3.386,1261,4.429,1263,5.709,1924,6.453,2015,6.839,2016,6.839]],["title/classes/EmployeePDRAction.html",[35,0.211,1928,4.171]],["body/classes/EmployeePDRAction.html",[3,0.034,4,0.03,5,0.034,10,0.236,16,0.747,19,0.004,21,0.461,29,0.203,34,0.047,35,0.208,39,1.108,45,2.534,50,0.002,51,0.002,74,1.58,75,2.707,105,1.328,112,0.606,189,1.163,230,0.789,232,0.954,235,3.048,251,4.544,252,3.647,254,4.185,258,3.827,260,3.045,261,2.971,262,3.869,266,3.906,270,2.251,271,1.979,272,2.108,276,4.362,277,2.558,278,3.238,279,3.747,280,2.655,610,1.879,625,3.62,1053,2.823,1263,5.698,1291,6.481,1292,6.167,1307,4.113,1928,5.666,2001,4.362,2007,8.229,2017,4.697,2018,5.204,2019,5.204,2020,5.204,2021,5.204,2022,5.204,2023,5.204,2024,4.697,2025,4.697]],["title/interfaces/EmployeePDRActionInterface.html",[337,1.441,1900,4.171]],["body/interfaces/EmployeePDRActionInterface.html",[3,0.043,4,0.038,5,0.043,10,0.295,19,0.004,21,0.471,22,1.178,29,0.142,34,0.043,50,0.003,51,0.003,112,0.671,232,1.107,251,5.353,252,3.987,254,4.929,337,1.778,338,2.612,339,5.876,610,2.403,625,4.053,1053,3.326,1263,3.779,1291,7.635,1292,7.265,1307,5.145,1900,6.575,2024,5.876,2026,6.511]],["title/injectables/EmployeeService.html",[0,1.06,1914,3.141]],["body/injectables/EmployeeService.html",[0,0.818,2,0.812,3,0.016,4,0.014,5,0.016,10,0.112,11,0.965,13,1.322,16,0.688,18,2.009,19,0.004,20,1.198,21,0.399,22,0.941,28,2.029,29,0.179,30,0.413,34,0.016,35,0.099,38,3.204,39,1.683,44,2.123,45,1.267,47,3.204,48,3.708,50,0.001,51,0.001,56,3.613,59,2.905,62,3.171,66,4.191,74,2.681,76,1.37,77,1.808,85,1.761,86,3.389,91,3.522,92,2.317,112,0.649,124,3.78,127,3.261,136,0.727,189,0.553,233,5.475,246,1.471,252,2.745,272,0.727,285,0.946,287,2.046,346,2.231,347,2.482,350,3.674,354,2.414,358,2.931,365,4.523,367,1.135,368,1.035,369,1.954,371,2.231,376,3.13,383,1.261,466,2.636,512,1.554,529,1.954,543,2.077,617,2.147,645,4.391,703,2.111,776,1.653,779,3.217,784,2.82,869,1.755,874,1.868,922,5.152,923,5.688,926,3.061,928,4.83,961,3.061,962,1.954,1211,3.061,1535,5.24,1546,1.78,1600,2.636,1601,2.363,1609,2.722,1611,2.558,1914,2.423,1947,7.069,1960,1.954,1983,6.341,2027,2.472,2028,5.19,2029,4.071,2030,4.071,2031,4.071,2032,5.19,2033,5.19,2034,2.472,2035,2.472,2036,2.472,2037,4.071,2038,2.472,2039,4.071,2040,2.472,2041,2.472,2042,2.472,2043,4.071,2044,2.472,2045,2.472,2046,4.071,2047,2.472,2048,2.472,2049,2.472,2050,2.472,2051,2.472,2052,2.472,2053,2.472,2054,2.472,2055,4.071,2056,3.412,2057,2.472,2058,2.472,2059,2.472,2060,2.472,2061,2.472,2062,2.472,2063,5.19,2064,4.071,2065,2.472,2066,2.472,2067,2.472,2068,2.472,2069,2.472,2070,3.674,2071,2.472,2072,2.472,2073,4.071,2074,2.472,2075,2.472,2076,2.472]],["title/interfaces/EmployeeSpendingAuthInteface.html",[337,1.441,2077,4.171]],["body/interfaces/EmployeeSpendingAuthInteface.html",[3,0.042,4,0.038,5,0.042,10,0.293,19,0.004,21,0.496,22,1.049,29,0.142,34,0.042,50,0.003,51,0.003,112,0.693,232,1.103,252,3.978,254,4.919,337,1.768,338,2.598,589,3.587,610,2.396,826,4.425,1037,5.016,1053,3.319,1324,6.243,1444,4.868,1445,3.437,2077,6.551,2078,5.843,2079,5.427,2080,5.843,2081,7.25]],["title/classes/EmployeeSpendingAuthorization.html",[35,0.211,586,3.8]],["body/classes/EmployeeSpendingAuthorization.html",[3,0.044,4,0.039,5,0.044,10,0.305,16,0.663,19,0.004,21,0.475,29,0.204,34,0.056,35,0.269,39,1.435,50,0.003,51,0.003,105,0.934,112,0.619,189,1.506,230,1.022,232,1.131,252,4.037,260,2.863,261,2.859,262,3.722,266,3.32,270,2.669,271,2.563,272,2.5,278,3.044,279,4.852,586,6.708,587,5.649,588,7.362,589,5.162,2082,7.362,2083,5.649,2084,6.082,2085,6.082,2086,6.082,2087,5.326]],["title/interfaces/EmployeeTransactionInterface.html",[337,1.441,2088,4.763]],["body/interfaces/EmployeeTransactionInterface.html",[3,0.045,4,0.04,5,0.045,10,0.312,19,0.004,21,0.469,22,0.939,29,0.151,34,0.045,50,0.003,51,0.003,112,0.678,232,1.148,252,4.072,337,1.884,338,2.769,610,2.468,1002,6.6,1037,5.134,1053,3.397,1491,5.89,2088,7.789,2089,6.901,2090,6.228,2091,6.901,2092,6.228]],["title/classes/EmployeeTransactions.html",[35,0.211,2093,4.763]],["body/classes/EmployeeTransactions.html",[3,0.037,4,0.033,5,0.037,10,0.256,16,0.743,19,0.004,21,0.463,29,0.209,34,0.05,35,0.226,39,1.203,45,2.45,50,0.003,51,0.003,74,1.716,75,2.94,105,1.322,112,0.621,189,1.263,230,0.857,232,1.009,235,2.839,252,2.331,258,3.538,260,3.22,261,3.074,262,4.003,266,3.917,270,2.38,271,2.149,272,2.229,277,2.777,278,3.424,279,4.068,280,2.883,610,1.987,1002,5.723,1037,4.452,1053,2.945,1491,5.44,2086,5.099,2092,5.099,2093,6.842,2094,5.099,2095,8.557,2096,5.65,2097,5.65,2098,5.65,2099,5.65,2100,5.65,2101,5.099,2102,5.099,2103,5.099]],["title/controllers/GoogleController.html",[93,1.264,428,4.424]],["body/controllers/GoogleController.html",[3,0.042,4,0.037,5,0.042,10,0.287,11,1.941,16,0.495,18,1.476,19,0.004,20,0.88,21,0.293,22,0.691,28,1.491,29,0.209,30,1.062,34,0.042,35,0.254,36,2.548,39,1.352,44,1.476,50,0.003,51,0.003,56,3.157,74,2.486,86,2.324,93,1.52,95,1.77,97,2.353,105,0.88,118,3.197,120,3.635,136,1.867,293,4.177,294,5.166,354,2.548,414,3.686,426,6.156,428,6.863,494,6.47,495,6.524,2104,6.35,2105,6.35,2106,8.177,2107,6.35,2108,8.023,2109,6.35,2110,8.187,2111,6.35,2112,6.35,2113,6.35,2114,6.35,2115,6.35,2116,6.35,2117,6.35,2118,6.35]],["title/injectables/GoogleService.html",[0,1.06,426,3.968]],["body/injectables/GoogleService.html",[0,1.158,2,1.262,3,0.025,4,0.022,5,0.025,10,0.174,11,1.366,13,1.872,16,0.699,18,2.009,19,0.004,20,1.277,21,0.413,22,0.941,28,1.932,29,0.189,30,0.643,34,0.025,35,0.154,38,1.424,39,2.102,44,2.009,47,1.424,50,0.002,51,0.002,56,3.542,59,4.173,60,6.208,67,4.555,68,2.348,74,3.062,75,2,76,2.129,77,2.409,86,3.45,91,2.192,92,2.409,99,4.15,112,0.625,131,5.322,132,2.767,136,2.033,232,0.767,354,3.303,399,4.561,407,4.975,426,4.334,494,5.465,495,4.15,502,3.037,2106,5.202,2119,3.844,2120,6.916,2121,5.764,2122,5.764,2123,5.764,2124,5.764,2125,3.844,2126,6.916,2127,5.764,2128,5.764,2129,3.844,2130,5.764,2131,3.844,2132,5.764,2133,3.844,2134,5.764,2135,3.844,2136,5.764,2137,3.844,2138,5.764,2139,3.469,2140,3.222,2141,3.469,2142,3.469,2143,5.202,2144,3.469,2145,5.764,2146,3.844,2147,3.844,2148,3.844,2149,3.844,2150,3.844,2151,3.844,2152,3.844,2153,5.764,2154,3.844,2155,3.844,2156,3.844,2157,3.844,2158,3.844,2159,3.844,2160,3.844,2161,3.844,2162,3.844,2163,3.844,2164,5.764,2165,3.844,2166,3.844,2167,3.844,2168,3.469,2169,4.831,2170,3.844,2171,3.844,2172,3.844]],["title/classes/Invoice.html",[35,0.211,595,3.225]],["body/classes/Invoice.html",[3,0.052,4,0.047,5,0.052,19,0.004,29,0.175,34,0.062,35,0.32,39,1.703,50,0.003,51,0.003,189,1.788,230,1.213,270,2.964,271,3.043,595,5.77,596,6.707,2173,7.221,2174,7.221]],["title/injectables/InvoiceService.html",[0,1.06,576,3.968]],["body/injectables/InvoiceService.html",[0,1.671,2,2.139,3,0.043,4,0.038,5,0.043,10,0.295,11,1.972,13,2.114,16,0.648,18,1.934,19,0.004,20,1.153,21,0.384,22,0.905,28,1.528,29,0.211,30,1.089,34,0.043,35,0.26,38,2.413,44,1.513,47,2.413,48,3.123,50,0.003,51,0.003,56,3.194,66,3.818,77,2.268,85,1.724,86,2.383,91,2.476,112,0.58,189,1.455,272,1.914,347,3.987,368,2.726,576,6.256,595,3.979,597,5.876,869,3.587,874,3.818,2175,6.511,2176,6.511,2177,6.511,2178,8.32,2179,6.511,2180,6.511,2181,6.511]],["title/interfaces/InvoiceSpendingAuthInteface.html",[337,1.441,2182,4.171]],["body/interfaces/InvoiceSpendingAuthInteface.html",[3,0.041,4,0.037,5,0.041,10,0.285,19,0.004,21,0.494,22,1.184,29,0.138,34,0.041,50,0.003,51,0.003,112,0.69,232,1.084,254,4.868,337,1.72,338,2.527,589,3.489,595,5.83,610,2.365,826,4.379,1037,4.964,1053,3.285,1324,6.179,1444,4.735,1445,3.343,2078,5.684,2080,5.684,2081,7.175,2182,6.435,2183,5.279]],["title/classes/InvoiceSpendingAuthorization.html",[35,0.211,591,3.8]],["body/classes/InvoiceSpendingAuthorization.html",[3,0.044,4,0.039,5,0.044,10,0.305,16,0.663,19,0.004,21,0.475,29,0.204,34,0.056,35,0.269,39,1.435,50,0.003,51,0.003,105,0.934,112,0.619,189,1.506,230,1.022,232,1.131,260,2.863,261,2.859,262,3.722,266,3.32,270,2.669,271,2.563,272,2.5,278,3.044,589,5.162,591,6.708,592,5.649,593,7.362,595,5.979,606,6.082,2082,7.362,2083,5.649,2084,6.082,2085,6.082,2087,5.326,2184,6.74]],["title/classes/IsEmployeeGuard.html",[35,0.211,2185,4.763]],["body/classes/IsEmployeeGuard.html",[3,0.039,4,0.035,5,0.039,8,2.689,9,5.477,10,0.272,11,1.874,12,6.639,13,2.567,15,7.517,16,0.616,18,1.838,19,0.004,20,1.096,21,0.365,22,0.86,24,4.333,25,6.752,27,5.945,28,1.413,29,0.213,30,1.006,31,4.169,32,4.169,33,3.782,34,0.039,35,0.24,37,4.025,38,2.231,39,1.281,44,1.838,47,2.231,48,2.259,49,4.333,50,0.003,51,0.003,66,3.629,74,1.828,77,2.754,230,0.912,703,2.449,1407,5.288,1914,5.58,1974,5.045,2185,7.135,2186,6.019,2187,5.432,2188,8.83,2189,6.019,2190,6.019,2191,7.969,2192,5.045,2193,5.432,2194,6.019]],["title/classes/IsUserCustomerGuard.html",[35,0.211,2195,4.763]],["body/classes/IsUserCustomerGuard.html",[3,0.047,4,0.042,5,0.047,8,3.003,9,6.116,13,3.109,16,0.558,19,0.004,24,5.153,25,6.357,29,0.209,30,1.197,32,4.958,33,4.498,34,0.047,35,0.286,37,4.787,39,1.524,44,1.664,50,0.003,51,0.003,74,2.681,230,1.085,703,2.912,2191,6.459,2192,5.999,2195,7.968,2196,8.829,2197,7.158,2198,7.158,2199,7.158,2200,7.158]],["title/classes/IsWorkingInBranchGuard.html",[35,0.211,2201,4.763]],["body/classes/IsWorkingInBranchGuard.html",[3,0.039,4,0.035,5,0.039,8,2.671,9,5.439,10,0.27,11,1.862,12,5.904,13,2.55,14,5.376,15,7.022,16,0.612,18,1.825,19,0.004,20,1.088,21,0.362,22,0.855,23,7.087,24,5.654,25,6.724,27,4.479,28,1.398,29,0.212,30,0.996,31,4.126,32,4.126,33,3.743,34,0.039,35,0.238,37,3.984,38,2.208,39,1.87,44,1.825,47,2.208,48,2.236,49,4.289,50,0.003,51,0.003,77,2.736,230,0.903,293,4.006,294,2.982,326,3.099,414,3.457,466,3.857,617,2.803,703,2.423,1246,6.942,1914,5.558,2201,7.087,2202,8.785,2203,5.957,2204,8.785,2205,5.957,2206,5.957,2207,4.707,2208,5.957,2209,5.957,2210,5.957]],["title/injectables/JWTGuard.html",[0,1.06,436,4.424]],["body/injectables/JWTGuard.html",[0,1.677,2,2.151,3,0.043,4,0.038,5,0.043,8,2.84,9,5.784,10,0.296,11,1.979,12,6.278,13,2.126,15,7.689,16,0.651,18,1.941,19,0.004,20,1.157,21,0.385,22,0.909,24,6.012,25,6.971,27,4.924,28,1.537,29,0.201,30,1.095,31,4.536,32,4.536,33,4.115,34,0.043,35,0.262,36,2.627,37,4.379,39,1.394,42,5.489,43,5.489,44,1.941,45,1.599,46,5.91,50,0.003,51,0.003,136,1.925,436,6.999,2187,5.91,2211,6.548,2212,6.548,2213,6.548,2214,8.35,2215,6.548]],["title/classes/Location.html",[35,0.211,253,2.31]],["body/classes/Location.html",[3,0.034,4,0.03,5,0.034,10,0.233,16,0.799,19,0.004,20,1.13,21,0.478,29,0.112,34,0.053,35,0.284,39,1.514,45,1.737,50,0.002,51,0.002,105,1.42,112,0.682,189,1.15,230,0.78,232,0.947,235,2.209,253,3.114,260,2.186,264,6.443,266,4.258,270,2.233,271,1.957,610,1.864,831,4.314,832,3.565,833,3.565,836,6.835,837,4.314,838,5.648,839,5.648,840,5.648,841,5.648,842,5.648,843,5.648,844,5.648,845,2.618,846,5.648,847,4.067,848,4.314,2216,5.146,2217,5.146,2218,5.146,2219,5.146,2220,5.146,2221,5.146,2222,5.146,2223,5.146,2224,5.146,2225,5.146]],["title/controllers/LocationController.html",[93,1.264,2226,4.424]],["body/controllers/LocationController.html",[3,0.05,4,0.045,5,0.05,19,0.004,29,0.216,30,1.28,34,0.05,35,0.306,36,3.072,50,0.003,51,0.003,93,1.833,95,2.134,97,2.837,122,3.03,123,1.583,136,2.251,253,3.351,2226,7.71,2227,7.656,2228,7.414,2229,6.909,2230,7.656,2231,7.656]],["title/interfaces/LocationInterface.html",[337,1.441,852,3.8]],["body/interfaces/LocationInterface.html",[3,0.038,4,0.034,5,0.038,10,0.261,19,0.004,20,1.279,21,0.483,22,1.194,34,0.05,35,0.231,50,0.003,51,0.003,112,0.703,232,1.024,337,1.578,338,2.318,341,7.292,610,2.017,832,4.002,833,4.002,838,6.391,839,6.391,840,6.391,841,6.391,842,6.391,843,6.391,844,6.391,845,2.962,846,6.391,849,5.214,852,5.541]],["title/modules/LocationModule.html",[146,1.754,166,3.417]],["body/modules/LocationModule.html",[3,0.042,4,0.038,5,0.042,19,0.004,20,0.9,29,0.218,30,1.086,34,0.042,35,0.259,50,0.003,51,0.003,95,2.315,146,3.043,148,2.886,149,2.886,150,2.98,151,2.98,152,2.932,153,4.203,154,4.203,166,6.716,180,3.812,181,2.932,182,2.98,184,3.313,188,3.52,189,1.451,253,2.842,270,2.038,601,3.597,847,6.563,2226,7.675,2228,8.137,2229,5.86,2232,5.86,2233,5.86,2234,5.86,2235,6.493,2236,6.493,2237,5.86,2238,6.493]],["title/injectables/LocationService.html",[0,1.06,2228,3.968]],["body/injectables/LocationService.html",[0,1.665,2,2.127,3,0.042,4,0.038,5,0.042,10,0.293,11,1.965,13,2.692,16,0.646,18,1.927,19,0.004,20,1.149,21,0.382,22,0.902,28,1.52,29,0.218,30,1.083,34,0.042,35,0.259,38,2.4,44,1.505,47,2.4,48,3.112,50,0.003,51,0.003,77,2.256,91,2.462,92,2.256,189,1.447,253,2.834,272,1.903,347,3.978,368,2.71,852,6.942,2228,6.233,2237,5.843,2239,6.475,2240,8.29,2241,6.475,2242,6.475,2243,8.29,2244,8.29,2245,6.475,2246,6.475,2247,6.475,2248,6.475,2249,6.475]],["title/controllers/MailController.html",[93,1.264,2250,4.424]],["body/controllers/MailController.html",[3,0.051,4,0.046,5,0.051,19,0.004,29,0.204,30,1.306,34,0.051,35,0.312,36,3.134,50,0.003,51,0.003,93,1.87,95,2.178,97,2.895,136,2.296,2250,7.804,2251,7.812,2252,7.05,2253,6.889,2254,7.05,2255,7.812]],["title/modules/MailModule.html",[146,1.754,167,3.656]],["body/modules/MailModule.html",[3,0.044,4,0.04,5,0.044,19,0.004,29,0.214,30,1.133,34,0.044,35,0.271,50,0.003,51,0.003,68,4.142,95,2.38,146,3.104,148,3.013,149,3.013,150,3.111,151,3.111,152,3.061,153,4.288,154,4.288,167,7.255,180,3.917,181,3.061,182,3.111,184,3.459,187,6.418,2250,7.831,2253,7.54,2254,6.118,2256,6.118,2257,6.118,2258,6.118,2259,6.779,2260,6.779]],["title/injectables/MailService.html",[0,1.06,2253,3.656]],["body/injectables/MailService.html",[0,1.384,2,1.615,3,0.032,4,0.029,5,0.032,10,0.222,11,1.634,13,1.596,16,0.62,18,1.602,19,0.004,20,0.955,21,0.367,22,0.75,28,1.618,29,0.206,30,0.822,34,0.032,35,0.196,36,1.972,38,1.822,39,2.004,44,1.602,47,1.822,48,2.987,50,0.002,51,0.002,56,3.279,60,6.52,68,3.004,74,1.493,77,2.772,86,2.912,91,1.869,92,2.401,99,3.54,112,0.311,285,1.143,354,2.765,407,4.462,412,5.512,495,3.54,1454,4.121,2139,4.437,2140,4.121,2141,4.437,2142,6.219,2143,4.437,2144,6.219,2253,4.773,2261,4.916,2262,6.891,2263,8.624,2264,4.916,2265,4.916,2266,6.891,2267,6.815,2268,4.916,2269,4.121,2270,4.916,2271,4.916,2272,4.916,2273,8.624,2274,6.219,2275,4.916,2276,4.121,2277,7.957,2278,4.916,2279,4.916,2280,4.916,2281,4.916,2282,6.891,2283,7.181,2284,4.916,2285,4.916,2286,4.916,2287,4.916,2288,4.437,2289,4.916,2290,4.916,2291,4.437,2292,4.916,2293,4.916,2294,3.54,2295,4.916,2296,4.916,2297,4.916,2298,4.916,2299,4.916,2300,4.121,2301,4.916,2302,4.437,2303,4.916,2304,4.916]],["title/classes/Material.html",[35,0.211,2305,4.171]],["body/classes/Material.html",[3,0.047,4,0.042,5,0.047,10,0.323,16,0.687,19,0.004,20,1.325,21,0.441,29,0.193,34,0.047,35,0.285,50,0.003,51,0.003,105,1.221,112,0.557,189,1.595,230,1.082,232,1.172,260,3.031,266,3.899,270,2.766,2305,6.964,2306,7.135,2307,9.562,2308,9.259,2309,7.135,2310,7.135,2311,7.135,2312,7.135]],["title/controllers/MaterialController.html",[93,1.264,2313,4.424]],["body/controllers/MaterialController.html",[3,0.034,4,0.03,5,0.034,10,0.233,11,1.689,16,0.72,18,2.046,19,0.004,20,1.22,21,0.406,22,0.958,28,2.169,29,0.202,30,0.862,34,0.034,35,0.206,36,2.069,44,2.148,50,0.002,51,0.002,85,2.53,93,1.235,95,1.438,97,1.912,105,1.28,112,0.641,118,2.782,119,2.128,120,3.275,122,2.041,123,1.067,136,1.516,285,1.656,286,2.293,287,2.995,290,2.859,306,3.325,312,2.367,324,2.582,543,3.635,544,3.167,549,2.994,551,2.448,552,3.381,554,2.535,556,3.502,560,2.582,562,2.631,567,3.573,569,3.069,571,2.796,1350,7.185,2305,4.076,2313,5.973,2314,5.158,2315,4.655,2316,5.158,2317,5.158,2318,5.158,2319,5.158,2320,7.887,2321,5.158,2322,6.138,2323,4.655,2324,5.973,2325,5.158,2326,5.158,2327,5.158,2328,5.158,2329,5.158,2330,5.158,2331,5.158]],["title/modules/MaterialModule.html",[146,1.754,168,3.968]],["body/modules/MaterialModule.html",[3,0.047,4,0.042,5,0.047,19,0.004,29,0.209,30,1.197,34,0.047,35,0.286,50,0.003,51,0.003,95,2.462,146,3.181,148,3.182,149,3.182,150,3.285,151,3.285,152,3.232,153,4.394,154,3.285,168,7.863,180,4.052,181,3.232,182,3.285,2313,8.026,2322,7.863,2323,6.459,2332,6.459,2333,6.459,2334,7.158,2335,7.158]],["title/injectables/MaterialService.html",[0,1.06,2322,3.968]],["body/injectables/MaterialService.html",[0,1.496,2,1.807,3,0.036,4,0.032,5,0.036,10,0.249,11,1.765,16,0.737,18,2.103,19,0.004,20,1.254,21,0.417,22,0.985,28,2.339,29,0.185,30,0.92,34,0.036,35,0.22,44,2.197,50,0.003,51,0.003,85,2.58,92,1.917,112,0.598,251,5.237,285,1.731,287,3.077,290,2.988,543,3.8,544,3.311,549,4.322,551,3.534,554,3.661,560,2.755,562,2.807,610,2.692,614,3.961,615,3.68,616,3.961,1350,7.107,2305,7.469,2315,6.721,2320,7.873,2322,5.6,2324,6.242,2336,5.502,2337,5.502,2338,5.502,2339,5.502,2340,5.502,2341,5.502]],["title/classes/Notification.html",[35,0.211,1132,3.968]],["body/classes/Notification.html",[3,0.055,4,0.049,5,0.055,19,0.003,34,0.055,35,0.333,50,0.003,51,0.003,230,1.266,1132,7.279,2342,8.349]],["title/controllers/NotificationsController.html",[93,1.264,2343,4.424]],["body/controllers/NotificationsController.html",[3,0.051,4,0.046,5,0.051,13,2.554,19,0.004,29,0.204,30,1.315,34,0.051,35,0.314,50,0.003,51,0.003,93,1.883,95,2.193,97,2.915,122,3.113,123,1.626,2343,7.835,2344,7.865,2345,7.098,2346,7.865,2347,7.865]],["title/modules/NotificationsModule.html",[146,1.754,169,3.968]],["body/modules/NotificationsModule.html",[3,0.042,4,0.038,5,0.042,19,0.004,29,0.223,30,1.079,34,0.042,35,0.258,50,0.003,51,0.003,68,3.945,95,2.307,146,3.035,148,2.87,149,2.87,150,2.963,151,2.963,152,2.916,153,4.191,154,2.963,167,7.057,169,8.032,180,3.798,181,2.916,182,2.963,184,4.222,187,6.222,1882,8.051,2343,7.655,2348,5.827,2349,5.827,2350,6.457,2351,8.051,2352,6.457,2353,6.457,2354,6.457,2355,6.457,2356,5.827]],["title/injectables/NotificationsService.html",[0,1.06,2351,4.171]],["body/injectables/NotificationsService.html",[0,1.496,2,1.807,3,0.036,4,0.032,5,0.036,10,0.249,11,1.765,16,0.737,18,2.103,19,0.004,20,1.254,21,0.417,22,0.985,28,2.339,29,0.185,30,0.92,34,0.036,35,0.22,44,2.197,50,0.003,51,0.003,85,2.58,92,1.917,112,0.598,251,5.237,285,1.731,287,3.077,290,2.988,543,3.8,544,3.311,549,4.322,551,3.534,554,3.661,560,2.755,562,2.807,610,2.692,614,3.961,615,3.68,616,3.961,1132,6.802,1353,7.469,2345,4.966,2351,5.885,2357,5.502,2358,7.447,2359,5.502,2360,5.502,2361,5.502,2362,5.502,2363,8.351,2364,5.502,2365,6.721]],["title/classes/Offer.html",[35,0.211,1366,3.53]],["body/classes/Offer.html",[3,0.034,4,0.031,5,0.034,10,0.237,16,0.767,19,0.004,20,1.141,21,0.483,29,0.194,34,0.047,35,0.209,39,1.115,45,2.558,50,0.002,51,0.002,105,1.363,112,0.607,189,1.171,230,0.794,232,0.958,235,2.981,258,4.136,260,3.496,261,2.98,262,3.88,266,3.912,270,2.261,271,1.993,272,2.117,278,3.253,610,2.323,617,1.87,625,3.912,667,3.393,751,3.504,855,5.173,857,3.717,860,3.905,1007,3.906,1162,5.173,1366,4.817,1378,3.041,2366,4.729,2367,5.24,2368,5.24,2369,5.24,2370,5.24,2371,5.24,2372,5.24,2373,5.24,2374,4.729,2375,4.392,2376,4.141,2377,4.729]],["title/interfaces/OfferInterface.html",[337,1.441,2378,4.424]],["body/interfaces/OfferInterface.html",[3,0.043,4,0.039,5,0.043,10,0.299,19,0.004,20,1.346,21,0.48,22,1.19,34,0.043,50,0.003,51,0.003,112,0.673,232,1.117,337,1.803,338,2.65,610,2.686,625,4.002,855,6.103,857,4.386,1007,4.609,1162,6.103,2378,7.037,2379,6.605]],["title/controllers/OffersController.html",[93,1.264,2380,4.424]],["body/controllers/OffersController.html",[3,0.032,4,0.028,5,0.032,10,0.22,11,1.622,16,0.731,18,2.102,19,0.004,20,1.253,21,0.417,22,0.984,28,2.202,29,0.198,30,0.813,34,0.032,35,0.194,36,1.952,44,2.18,50,0.002,51,0.002,85,2.483,93,1.165,95,1.356,97,1.803,105,1.3,112,0.654,118,2.671,119,2.007,120,3.174,122,1.925,123,1.006,136,1.43,285,1.59,286,2.162,287,2.92,290,2.744,306,3.192,312,2.232,324,2.435,544,3.041,551,2.308,552,3.246,554,2.391,556,3.362,560,2.435,562,2.482,569,2.895,571,2.637,869,2.949,874,2.232,886,2.823,1009,3.057,1356,7.413,2380,5.734,2381,4.864,2382,6.84,2383,4.864,2384,4.864,2385,4.864,2386,4.864,2387,6.84,2388,4.864,2389,6.173,2390,4.864,2391,4.864,2392,8.246,2393,4.864,2394,4.077,2395,5.696,2396,4.39,2397,6.173,2398,4.864,2399,4.864,2400,4.864,2401,4.864,2402,4.864,2403,4.864,2404,4.864,2405,4.864,2406,4.864]],["title/modules/OffersModule.html",[146,1.754,170,3.8]],["body/modules/OffersModule.html",[3,0.04,4,0.035,5,0.04,19,0.004,20,0.838,29,0.223,30,1.012,34,0.04,35,0.242,50,0.003,51,0.003,95,2.212,146,2.941,148,2.69,149,2.69,150,2.777,151,2.777,152,2.732,153,4.063,154,4.063,159,5.811,170,7.664,174,6.935,180,3.641,181,2.732,182,2.777,184,4.048,188,3.28,189,1.352,270,1.899,601,3.352,899,4.046,1366,4.046,2376,6.269,2380,7.42,2395,7.713,2396,5.46,2407,5.46,2408,5.46,2409,6.05,2410,5.46,2411,6.05,2412,6.05,2413,5.46,2414,5.46,2415,5.46]],["title/injectables/OffersService.html",[0,1.06,2395,3.8]],["body/injectables/OffersService.html",[0,0.871,2,0.877,3,0.017,4,0.016,5,0.017,10,0.121,11,1.028,13,1.408,16,0.674,18,1.957,19,0.004,20,1.167,21,0.388,22,0.916,28,1.976,29,0.171,30,0.446,34,0.017,35,0.107,38,3.12,39,1.792,44,1.957,45,0.652,47,3.12,48,3.652,50,0.001,51,0.001,56,3.574,77,1.906,85,1.668,86,3.359,91,3.491,92,2.933,112,0.64,136,0.785,189,0.597,272,0.785,285,1.272,347,2.599,354,3.378,367,1.225,368,1.118,376,1.389,383,2.792,512,2.724,519,2.899,543,2.212,617,1.547,625,2.137,645,4.537,693,4.079,698,2.409,700,2.807,703,1.764,776,1.785,855,1.678,857,2.471,922,6.062,923,6.505,926,4.115,928,3.849,943,2.409,945,3.912,954,6.696,957,3.633,958,3.121,959,3.633,960,3.121,961,4.115,962,3.425,963,3.912,964,2.11,965,2.409,967,2.409,968,1.589,1366,2.899,2378,6.553,2389,3.912,2395,3.121,2413,2.409,2416,2.67,2417,6.299,2418,4.335,2419,4.335,2420,4.335,2421,5.473,2422,4.335,2423,5.473,2424,4.335,2425,2.67,2426,5.415,2427,2.67,2428,4.335,2429,4.335,2430,2.67,2431,2.67,2432,2.67,2433,4.335,2434,2.67,2435,4.335,2436,2.67,2437,6.927,2438,4.335,2439,2.67,2440,6.251,2441,2.67,2442,2.67,2443,4.335,2444,2.67,2445,2.67,2446,2.67,2447,4.335,2448,6.299,2449,2.67,2450,2.409,2451,2.67,2452,2.67,2453,6.299,2454,2.67,2455,4.939,2456,6.299,2457,2.67,2458,2.67,2459,2.67,2460,2.67,2461,2.67,2462,2.67,2463,5.473,2464,2.67,2465,2.67,2466,2.67,2467,2.67,2468,2.67,2469,2.67,2470,2.67,2471,2.67,2472,6.299]],["title/controllers/OnlineController.html",[93,1.264,2473,4.424]],["body/controllers/OnlineController.html",[3,0.053,4,0.047,5,0.053,19,0.004,29,0.177,30,1.357,34,0.053,35,0.324,50,0.003,51,0.003,93,1.943,95,2.262,97,3.007,2473,7.981,2474,8.114,2475,8.114,2476,8.114]],["title/injectables/OnlineService.html",[0,1.06,2477,4.171]],["body/injectables/OnlineService.html",[0,1.787,2,2.38,3,0.047,4,0.042,5,0.047,13,2.889,16,0.565,18,1.684,19,0.004,20,1.004,21,0.334,22,0.789,29,0.219,30,1.212,34,0.047,35,0.29,50,0.003,51,0.003,77,2.525,136,2.13,189,1.62,272,2.13,347,4.143,368,3.034,780,3.929,1838,6.075,1840,7.031,1844,5.449,1846,5.727,2477,7.031,2478,7.248,2479,7.248]],["title/classes/Order.html",[35,0.211,780,2.861]],["body/classes/Order.html",[3,0.018,4,0.016,5,0.018,10,0.128,16,0.736,19,0.004,21,0.463,22,0.493,29,0.204,34,0.03,35,0.113,39,2.056,44,0.655,45,2.197,50,0.002,51,0.002,56,0.982,74,0.856,75,1.467,85,0.747,86,2.38,92,1.578,105,1.308,112,0.611,189,0.63,230,0.427,232,0.603,235,2.482,258,1.316,260,3.396,261,3.212,262,4.011,266,3.87,270,1.422,271,1.072,272,1.669,277,1.386,278,3.436,280,2.311,347,2.683,383,1.439,485,1.412,610,1.994,617,2.716,625,2.539,667,1.826,745,2.456,751,1.886,780,3.525,853,4.038,856,3.934,865,2.228,900,2.545,958,4.682,960,2.03,968,1.678,974,2.227,1006,3.034,1007,2.695,1008,3.798,1009,3.569,1010,3.798,1053,1.955,1103,3.58,1366,3.03,1368,3.138,1378,1.637,1456,1.116,1637,2.364,1797,2.03,1805,4.211,1806,2.228,1829,1.772,1845,3.798,1851,2.228,1863,2.12,1868,2.364,1876,3.262,2376,2.228,2415,2.545,2440,2.545,2480,2.545,2481,4.488,2482,4.76,2483,4.488,2484,4.76,2485,2.82,2486,2.82,2487,2.82,2488,2.82,2489,2.82,2490,2.82,2491,5.451,2492,2.82,2493,2.82,2494,2.82,2495,2.82,2496,2.82,2497,2.82,2498,2.82,2499,4.531,2500,2.82,2501,2.82,2502,2.82,2503,2.82,2504,2.82,2505,2.12,2506,2.82,2507,2.82,2508,2.82,2509,2.364,2510,2.364,2511,2.364,2512,2.364,2513,2.545,2514,2.82,2515,2.82,2516,4.531,2517,2.82,2518,4.531,2519,2.82,2520,4.531,2521,2.82,2522,4.531,2523,2.82,2524,2.82,2525,4.089,2526,2.82,2527,2.82,2528,2.545,2529,2.82,2530,2.82,2531,2.82,2532,2.82,2533,2.82,2534,2.82,2535,2.82,2536,2.82,2537,2.228,2538,2.82,2539,8.314,2540,2.82,2541,2.82,2542,4.531,2543,2.82,2544,2.364,2545,4.531,2546,2.82,2547,2.82,2548,2.82,2549,2.82,2550,4.531,2551,2.82,2552,4.531,2553,4.531,2554,2.82,2555,4.531,2556,2.82]],["title/controllers/OrderController.html",[93,1.264,2557,4.424]],["body/controllers/OrderController.html",[3,0.025,4,0.022,5,0.025,10,0.17,11,1.345,16,0.766,18,2.178,19,0.004,20,1.299,21,0.432,22,1.02,28,2.308,29,0.178,30,0.629,34,0.025,35,0.15,36,1.509,44,2.285,50,0.002,51,0.002,85,2.012,93,0.901,95,1.049,97,1.394,105,1.362,112,0.677,119,1.552,122,1.489,123,0.778,136,1.106,286,1.672,287,2.586,293,4.374,294,3.805,306,2.646,312,1.727,326,1.957,414,2.184,466,4.922,485,1.883,543,2.894,549,2.184,552,2.692,567,2.606,682,6.594,760,4.29,780,2.039,1783,5.133,1800,2.829,1829,2.364,1845,2.516,2511,3.153,2557,4.754,2558,3.762,2559,5.672,2560,5.119,2561,5.119,2562,5.119,2563,6.86,2564,5.119,2565,5.119,2566,5.672,2567,6.86,2568,5.119,2569,3.762,2570,5.672,2571,5.672,2572,3.762,2573,3.762,2574,3.395,2575,5.672,2576,3.762,2577,3.762,2578,5.672,2579,3.762,2580,3.762,2581,5.672,2582,3.762,2583,5.672,2584,3.762,2585,3.762,2586,5.672,2587,3.762,2588,3.762,2589,5.672,2590,3.762,2591,3.762,2592,5.672,2593,3.762,2594,5.672,2595,3.762,2596,3.762,2597,3.395,2598,3.762,2599,3.762,2600,3.762,2601,3.762,2602,3.762,2603,3.762,2604,3.762,2605,3.762,2606,3.762,2607,3.762,2608,3.762,2609,3.762,2610,3.762,2611,3.762,2612,3.762,2613,3.762,2614,3.762,2615,3.762,2616,3.762,2617,3.762,2618,3.762,2619,3.762,2620,3.762]],["title/interfaces/OrderInterface.html",[337,1.441,1795,3.656]],["body/interfaces/OrderInterface.html",[3,0.027,4,0.024,5,0.027,10,0.187,19,0.004,21,0.49,22,1.203,29,0.186,34,0.04,50,0.002,51,0.002,112,0.695,232,0.809,254,2.108,337,1.661,338,1.658,485,3.045,610,2.654,617,2.842,625,2.819,853,4.512,856,5.515,857,1.866,1006,3.715,1007,3.778,1008,5.325,1009,5.003,1010,5.325,1053,2.741,1153,5.986,1154,5.986,1155,5.986,1156,5.732,1157,5.986,1158,5.732,1160,5.732,1165,5.325,1183,2.975,1184,3.107,1185,2.975,1186,3.107,1187,2.764,1197,6.292,1377,3.107,1378,2.399,1379,3.266,1380,3.266,1388,3.939,1391,3.107,1392,2.764,1795,4.213,1805,5.155,1829,2.597,1845,5.325,1873,6.674,2481,6.292,2482,6.674,2483,6.292,2484,6.674,2621,3.73,2622,6.674]],["title/classes/OrderItems.html",[35,0.211,2491,4.424]],["body/classes/OrderItems.html",[3,0.037,4,0.033,5,0.037,10,0.256,16,0.765,19,0.004,21,0.47,29,0.2,34,0.05,35,0.226,39,1.203,50,0.003,51,0.003,105,1.361,112,0.645,189,1.263,230,0.857,232,1.009,254,4.366,260,3.22,261,3.074,262,4.003,266,4.11,270,2.38,271,2.149,272,2.229,278,3.424,610,1.987,857,3.864,1377,6.434,1378,5.308,1379,6.762,1380,6.762,1388,5.541,1391,4.248,1392,3.779,2374,5.099,2375,6.355,2491,6.355,2623,9.053,2624,5.099,2625,5.65,2626,5.65,2627,5.65,2628,5.65,2629,5.65,2630,5.65,2631,5.099,2632,5.099]],["title/interfaces/OrderItemsInterface.html",[337,1.441,2622,4.424]],["body/interfaces/OrderItemsInterface.html",[3,0.036,4,0.032,5,0.036,10,0.247,19,0.004,21,0.448,22,1.147,29,0.206,34,0.048,50,0.003,51,0.003,112,0.695,232,0.985,254,4.597,337,2.02,338,2.187,485,3.704,610,2.604,617,1.945,625,2.128,853,3.089,856,3.775,857,4.069,1006,2.543,1007,2.586,1008,3.645,1009,3.425,1010,3.645,1053,1.876,1153,4.098,1154,4.098,1155,4.098,1156,3.924,1157,4.098,1158,5.328,1160,5.328,1165,4.949,1183,3.924,1184,4.098,1185,3.924,1186,4.098,1187,3.645,1197,4.307,1377,6.775,1378,5.23,1379,7.121,1380,7.121,1388,5.835,1391,4.098,1392,3.645,1795,3.775,1805,3.529,1829,3.425,1845,4.949,1873,4.568,2481,4.307,2482,4.568,2483,4.307,2484,4.568,2621,4.919,2622,7.042]],["title/modules/OrderModule.html",[146,1.754,171,3.8]],["body/modules/OrderModule.html",[3,0.027,4,0.024,5,0.027,19,0.004,20,1.099,29,0.233,30,0.686,34,0.027,35,0.164,50,0.002,51,0.002,95,1.687,146,2.389,148,1.824,149,1.824,150,1.883,151,1.883,152,1.853,153,3.299,154,3.299,159,5.138,162,6.374,163,6.374,165,6.132,170,6.374,171,7.774,174,6.132,180,2.777,181,1.853,182,1.883,184,3.087,188,2.224,189,0.917,270,2.491,594,3.703,601,2.273,603,3.439,760,6.291,780,2.224,899,2.744,1770,5.176,1797,2.954,1798,3.242,1800,3.085,1801,5.92,1802,3.703,1806,3.242,1833,5.072,1844,3.085,1856,6.026,1863,3.085,1864,3.703,1868,3.439,1869,6.996,1880,5.072,2414,3.703,2473,6.026,2477,6.996,2505,3.085,2510,3.439,2512,5.072,2557,6.026,2633,3.703,2634,3.703,2635,3.703,2636,4.103,2637,6.996,2638,4.103,2639,6.026,2640,4.103,2641,4.103,2642,4.103,2643,4.103,2644,4.103,2645,4.103,2646,4.103,2647,4.103,2648,4.103,2649,4.103,2650,4.103,2651,4.103,2652,4.103,2653,5.072,2654,3.703,2655,4.103,2656,4.103,2657,3.703]],["title/injectables/OrderService.html",[0,1.06,760,3.317]],["body/injectables/OrderService.html",[0,0.58,2,0.542,3,0.011,4,0.01,5,0.011,10,0.075,11,0.684,13,0.937,16,0.664,18,1.833,19,0.004,20,1.093,21,0.364,22,0.858,28,1.968,29,0.176,30,0.276,34,0.011,35,0.066,38,3.107,39,1.814,44,1.914,45,0.403,47,3.107,48,3.643,50,0.001,51,0.001,56,3.568,66,3.704,74,0.876,77,2.41,84,4.819,85,0.764,86,3.551,91,3.506,92,2.51,112,0.625,127,0.894,136,0.848,189,0.369,233,4.301,246,0.981,272,0.848,285,0.671,287,1.57,305,1.24,325,0.69,347,1.904,354,2.644,367,1.324,368,0.69,376,2.401,383,3.921,480,1.068,485,0.826,512,3.295,519,2.572,617,2.572,625,2.252,645,3.604,682,2.077,760,1.813,776,1.103,778,1.382,779,1.303,780,2.501,788,2.604,792,2.077,826,0.757,853,2.615,857,1.303,879,3.322,922,6.224,923,4.669,926,2.169,928,3.524,959,1.382,960,1.187,961,1.24,1006,1.795,1007,2.19,1009,1.036,1053,1.985,1156,1.187,1173,1.382,1366,4.153,1377,1.24,1455,0.68,1456,1.826,1614,4.153,1643,1.675,1650,3.322,1652,1.382,1664,1.488,1695,1.488,1783,3.942,1795,3.196,1796,1.303,1829,1.036,1838,1.382,1840,2.28,1842,5.799,1844,1.24,1845,4.153,1846,1.303,1850,1.187,1852,2.604,1853,2.604,1855,1.382,1914,3.696,2169,2.418,2207,1.303,2395,3.322,2426,4.301,2450,1.488,2481,2.28,2483,5.207,2511,3.224,2528,1.488,2544,2.418,2560,2.604,2561,2.604,2562,2.604,2563,4.164,2564,2.604,2565,2.604,2567,4.164,2568,2.604,2574,2.604,2597,2.604,2658,1.649,2659,3.846,2660,3.846,2661,4.615,2662,3.846,2663,2.885,2664,2.885,2665,3.846,2666,3.846,2667,3.846,2668,3.224,2669,3.224,2670,1.649,2671,1.649,2672,1.649,2673,1.649,2674,1.649,2675,1.649,2676,1.649,2677,1.649,2678,1.649,2679,2.885,2680,1.649,2681,2.885,2682,1.649,2683,1.649,2684,1.649,2685,1.649,2686,2.885,2687,1.649,2688,2.885,2689,1.649,2690,1.649,2691,2.885,2692,1.649,2693,2.885,2694,1.649,2695,1.649,2696,2.418,2697,1.649,2698,1.649,2699,1.649,2700,1.488,2701,1.488,2702,1.649,2703,2.885,2704,1.649,2705,2.885,2706,2.885,2707,1.649,2708,1.649,2709,3.846,2710,2.885,2711,1.649,2712,2.885,2713,2.885,2714,2.885,2715,2.885,2716,1.649,2717,1.649,2718,1.649,2719,4.615,2720,2.885,2721,1.649,2722,2.604,2723,4.615,2724,2.885,2725,1.649,2726,3.471,2727,1.649,2728,1.649,2729,1.649,2730,2.885,2731,4.615,2732,2.885,2733,1.649,2734,2.885,2735,2.885,2736,4.164,2737,1.649,2738,1.649,2739,1.649,2740,2.604,2741,1.649,2742,1.488,2743,1.649,2744,1.649,2745,1.649,2746,1.649,2747,1.649,2748,1.649,2749,1.649,2750,1.649,2751,1.488,2752,1.649,2753,1.649,2754,1.649,2755,1.649,2756,7.686,2757,1.488,2758,1.649,2759,7.207,2760,1.649,2761,1.649,2762,1.649,2763,1.649,2764,1.649]],["title/classes/PayPalPayment.html",[35,0.211,2765,4.171]],["body/classes/PayPalPayment.html",[3,0.045,4,0.04,5,0.045,10,0.311,16,0.671,19,0.004,21,0.397,29,0.188,34,0.056,35,0.275,39,1.465,45,2.407,50,0.003,51,0.003,105,0.953,112,0.545,189,1.538,230,1.043,232,1.146,235,2.136,258,3.21,266,3.364,270,2.704,271,2.616,742,6.772,744,7.072,745,3.73,746,4.601,749,4.766,750,5.437,860,4.67,2765,6.808,2766,6.209,2767,7.884,2768,6.88,2769,7.775,2770,6.88,2771,5.767,2772,6.209]],["title/classes/Payment.html",[35,0.211,769,3.53]],["body/classes/Payment.html",[3,0.032,4,0.029,5,0.032,10,0.224,16,0.735,19,0.004,21,0.456,29,0.219,34,0.045,35,0.198,39,1.053,45,2.452,50,0.002,51,0.002,74,1.502,75,2.574,105,1.307,112,0.597,189,1.106,230,0.75,232,0.921,235,2.685,258,3.23,260,2.94,261,3.321,262,3.785,266,3.858,270,2.173,271,1.881,272,2.035,277,2.432,278,3.126,280,2.524,485,2.477,610,1.814,740,3.91,742,6.227,744,3.72,745,4.934,747,4.147,749,5.531,750,3.91,769,4.629,780,2.682,860,3.753,974,3.403,1037,4.154,1038,6.31,1039,5.34,1042,6.004,1048,3.91,1053,2.748,1054,6.31,1055,6.004,1876,3.562,2509,4.147,2657,4.465,2765,3.91,2773,4.465,2774,4.948,2775,4.948,2776,4.948,2777,4.948,2778,4.948,2779,4.948,2780,4.948,2781,4.948,2782,4.948,2783,4.465,2784,4.465,2785,4.948,2786,4.948,2787,4.147,2788,4.465]],["title/controllers/PaymentController.html",[93,1.264,2789,4.424]],["body/controllers/PaymentController.html",[3,0.028,4,0.025,5,0.028,10,0.191,11,1.463,13,1.369,16,0.667,18,1.868,19,0.004,20,1.114,21,0.371,22,0.875,28,2.008,29,0.218,30,0.705,34,0.028,35,0.168,39,1.314,44,1.988,50,0.002,51,0.002,77,2.544,85,2.128,93,1.009,95,1.175,97,1.562,105,1.185,112,0.637,118,2.851,119,1.739,120,1.691,122,1.668,123,0.872,136,2.147,286,1.874,287,2.734,293,5.077,294,4.623,306,2.88,325,3.964,326,3.211,353,4.641,414,2.447,485,2.11,544,2.744,551,2.001,552,2.929,560,2.11,571,2.285,617,1.505,742,4.444,744,3.17,747,3.534,749,4.275,750,3.331,754,5.491,764,4.878,769,2.819,771,3.804,772,3.035,773,4.444,869,2.661,874,1.935,886,2.447,928,5.228,1033,7.297,1035,3.211,1050,4.641,1053,2.125,1054,4.878,1055,3.17,1804,4.444,2769,3.804,2789,5.174,2790,4.216,2791,7.303,2792,7.303,2793,4.216,2794,6.173,2795,4.216,2796,4.216,2797,6.173,2798,4.216,2799,4.216,2800,4.216,2801,4.216,2802,5.491,2803,3.804,2804,3.804,2805,4.728,2806,3.804,2807,3.331,2808,3.804,2809,4.216,2810,4.216,2811,6.173,2812,4.216,2813,4.216,2814,4.216,2815,4.216,2816,4.216]],["title/modules/PaymentModule.html",[146,1.754,172,3.968]],["body/modules/PaymentModule.html",[3,0.034,4,0.031,5,0.034,19,0.004,20,1.143,29,0.229,30,0.88,34,0.034,35,0.21,50,0.002,51,0.002,95,2.015,146,2.742,148,2.34,149,2.34,150,2.416,151,2.416,152,2.377,153,3.787,154,2.416,159,5.581,171,6.923,172,8.063,178,5.581,180,3.316,181,2.377,182,2.416,184,3.686,188,2.853,189,1.176,270,2.59,430,3.52,601,2.916,603,4.412,740,4.159,752,6.057,754,7.23,769,3.52,770,4.159,899,3.52,2765,4.159,2771,6.057,2783,4.75,2784,4.75,2787,6.057,2789,6.916,2802,7.23,2803,4.75,2804,4.75,2805,6.226,2806,4.75,2817,4.75,2818,5.264,2819,4.75,2820,5.264,2821,5.264,2822,5.264,2823,5.264,2824,5.264,2825,5.264]],["title/injectables/PaymentService.html",[0,1.06,2802,3.968]],["body/injectables/PaymentService.html",[0,1.501,2,1.816,3,0.036,4,0.032,5,0.036,10,0.25,11,1.771,13,2.426,16,0.706,18,1.967,19,0.004,20,1.173,21,0.39,22,0.921,28,1.986,29,0.198,30,0.924,34,0.036,35,0.221,38,3.136,44,1.967,47,3.136,48,3.663,50,0.003,51,0.003,56,3.582,77,1.926,85,1.978,86,3.097,91,3.218,112,0.617,136,1.625,189,1.236,272,1.625,287,3.083,347,3.74,354,3.395,368,2.314,544,3.321,551,3.546,758,4.634,762,6.263,769,3.697,770,4.369,777,4.634,869,3.221,874,3.429,2802,5.618,2826,5.529,2827,5.529,2828,5.529,2829,5.529,2830,5.529,2831,5.529,2832,5.529,2833,5.529]],["title/controllers/PaypalController.html",[93,1.264,2834,4.424]],["body/controllers/PaypalController.html",[3,0.042,4,0.037,5,0.042,10,0.289,11,1.948,16,0.64,18,1.484,19,0.004,20,0.885,21,0.294,22,0.695,28,1.929,29,0.199,30,1.068,34,0.042,35,0.255,36,2.562,44,1.91,50,0.003,51,0.003,56,3.539,86,3.007,93,1.529,95,1.78,97,2.366,105,1.139,112,0.575,119,2.635,136,1.877,247,2.279,354,3.297,407,5.32,412,6.293,413,4.801,1037,3.322,1783,6.178,2805,5.882,2834,6.887,2835,6.385,2836,4.597,2837,9.592,2838,6.385,2839,6.385,2840,6.385,2841,6.385,2842,6.385,2843,5.762,2844,6.385,2845,6.385,2846,6.385,2847,6.385,2848,6.385,2849,6.385]],["title/modules/PaypalModule.html",[146,1.754,173,3.968]],["body/modules/PaypalModule.html",[3,0.047,4,0.042,5,0.047,19,0.004,29,0.209,30,1.197,34,0.047,35,0.286,50,0.003,51,0.003,95,2.462,146,3.181,148,3.182,149,3.182,150,3.285,151,3.285,152,3.232,153,4.394,154,3.285,173,7.863,180,4.052,181,3.232,182,3.285,2805,6.771,2834,8.026,2843,6.459,2850,7.158,2851,7.158,2852,7.158,2853,7.158]],["title/injectables/PaypalService.html",[0,1.06,2805,3.417]],["body/injectables/PaypalService.html",[0,1.204,2,1.331,3,0.027,4,0.024,5,0.027,10,0.183,11,1.421,16,0.656,18,1.659,19,0.004,20,0.989,21,0.364,22,0.777,28,1.851,29,0.131,30,0.678,34,0.027,35,0.162,38,2.222,39,2.126,44,1.833,47,2.222,48,1.521,50,0.002,51,0.002,56,3.515,65,3.657,66,3.275,83,5.64,86,3.427,91,2.28,92,2.089,99,4.317,112,0.451,118,2.341,120,2.863,232,0.798,325,1.696,354,2.863,407,2.624,523,3.657,745,2.197,746,4.01,769,2.71,1035,3.713,1037,3.713,1129,3.397,1316,4.943,1783,3.047,2169,5.026,2283,7.118,2288,3.657,2742,3.657,2805,3.883,2836,2.918,2854,4.053,2855,5.996,2856,5.996,2857,7.887,2858,5.996,2859,5.996,2860,4.053,2861,5.996,2862,4.053,2863,4.053,2864,5.996,2865,4.053,2866,7.887,2867,5.996,2868,5.996,2869,4.053,2870,4.053,2871,4.053,2872,3.657,2873,3.397,2874,3.657,2875,5.996,2876,5.996,2877,4.053,2878,4.053,2879,4.053,2880,4.053,2881,4.053,2882,7.137,2883,4.053,2884,5.996,2885,4.053,2886,4.053,2887,5.996,2888,4.053,2889,4.053,2890,4.053,2891,4.053,2892,4.053,2893,5.996,2894,5.996,2895,4.053,2896,4.053,2897,4.053,2898,4.053,2899,4.053,2900,4.053,2901,5.996,2902,5.996,2903,5.996,2904,5.996,2905,4.053,2906,5.996,2907,4.053,2908,4.053,2909,4.053,2910,3.657,2911,3.397,2912,4.053]],["title/injectables/PaypalService-1.html",[0,0.882,968,2.613,2805,2.843]],["body/injectables/PaypalService-1.html",[0,1.382,2,1.611,3,0.032,4,0.029,5,0.032,10,0.222,11,1.631,13,2.234,16,0.619,18,1.847,19,0.004,20,1.101,21,0.367,22,0.865,28,1.615,29,0.216,30,0.82,34,0.032,35,0.196,38,2.55,39,1.692,44,1.599,47,2.55,48,3.234,50,0.002,51,0.002,56,3.277,59,4.664,74,2.414,76,2.718,77,2.769,85,1.299,86,3.153,91,3.276,92,2.769,112,0.503,136,1.442,189,1.096,272,1.442,325,3.798,347,3.555,354,2.761,367,2.251,368,2.053,376,4.482,512,4.324,758,4.112,759,7.173,760,5.414,762,5.768,769,3.281,770,3.877,773,4.954,775,4.427,777,4.112,780,4.308,781,4.427,782,4.112,783,4.427,784,3.398,785,4.427,786,4.427,787,4.427,791,4.427,1035,2.552,1050,6.478,2805,4.456,2808,4.427,2836,3.532,2913,4.906,2914,6.881,2915,6.881,2916,4.906,2917,6.881,2918,4.906,2919,6.881,2920,7.222,2921,4.906,2922,4.906]],["title/controllers/PdrController.html",[93,1.264,1991,4.424]],["body/controllers/PdrController.html",[3,0.029,4,0.026,5,0.029,10,0.2,11,1.514,16,0.708,18,2.026,19,0.004,20,1.208,21,0.402,22,0.949,28,2.133,29,0.199,30,0.739,34,0.029,35,0.176,36,1.772,39,0.94,44,2.112,50,0.002,51,0.002,85,2.175,93,1.058,95,1.232,97,1.637,105,1.259,112,0.642,118,1.725,119,1.823,120,3.009,122,1.748,123,0.913,136,1.299,252,2.635,285,1.484,286,1.964,287,2.795,288,4.598,289,4.802,290,3.009,291,3.321,293,4.635,294,3.755,296,5.195,302,3.703,303,5.353,305,3.321,306,2.98,312,2.027,321,3.491,324,2.211,325,1.849,326,2.298,329,3.491,331,3.703,544,2.839,1053,1.521,1258,6.493,1260,3.987,1261,6.508,1263,3.706,1892,6.493,1904,3.987,1905,3.987,1906,3.987,1907,3.987,1908,3.987,1923,6.888,1924,4.802,1926,3.703,1927,3.703,1989,4.802,1991,5.353,1993,3.987,1994,3.987,2923,9.368,2924,4.417,2925,4.417,2926,4.417,2927,4.417,2928,4.417,2929,3.987,2930,6.386,2931,4.417,2932,4.417,2933,6.888,2934,6.386,2935,4.417,2936,6.386,2937,5.763,2938,3.987,2939,4.417,2940,4.417,2941,4.417,2942,4.417,2943,4.417]],["title/injectables/PdrService.html",[0,1.06,1989,3.968]],["body/injectables/PdrService.html",[0,1.111,2,1.195,3,0.024,4,0.021,5,0.024,10,0.165,11,1.311,13,1.795,16,0.686,18,1.967,19,0.004,20,1.173,21,0.39,22,0.921,28,1.987,29,0.198,30,0.608,34,0.024,35,0.145,38,3.137,39,1.591,44,1.967,47,3.137,48,3.663,50,0.002,51,0.002,56,3.582,59,3.608,62,4.087,66,4.478,74,1.679,76,2.015,77,2.33,84,2.433,85,1.978,86,3.398,90,2.433,91,3.531,92,2.603,112,0.617,136,1.069,189,0.813,252,3.083,272,1.069,285,1.285,287,2.542,288,3.981,325,1.523,347,3.083,356,4.635,358,3.981,365,5.618,367,1.669,368,1.523,369,2.874,373,3.378,375,4.635,376,2.876,383,1.856,384,4.635,544,2.458,784,2.52,869,2.384,874,2.538,1261,3.58,1601,3.882,1611,2.286,1643,3.209,1914,5.235,1923,3.049,1924,6.614,1926,3.049,1927,3.049,1929,3.049,1931,3.283,1933,3.049,1940,3.283,1941,3.283,1942,3.283,1989,4.157,1998,2.874,2000,3.283,2929,4.99,2944,9.065,2945,3.638,2946,3.638,2947,3.638,2948,5.529,2949,3.638,2950,3.638,2951,3.638,2952,3.638,2953,3.638,2954,3.638,2955,3.638,2956,3.638,2957,3.638,2958,3.638,2959,3.638,2960,3.638,2961,3.638,2962,3.638,2963,3.638]],["title/classes/Product.html",[35,0.211,1378,3.063]],["body/classes/Product.html",[3,0.029,4,0.026,5,0.029,10,0.202,16,0.8,19,0.004,20,1.045,21,0.477,29,0.205,34,0.042,35,0.178,39,0.949,45,2.137,50,0.002,51,0.002,105,1.423,112,0.576,189,0.997,230,0.676,232,0.856,235,1.996,260,1.894,261,2.162,262,2.815,266,4.22,270,2.019,271,1.696,272,1.89,277,2.192,278,2.014,610,2.389,617,2.946,667,2.888,745,3.486,751,2.983,857,3.406,1162,4.739,1163,4.088,1299,4.63,1378,3.732,1388,4.883,1392,2.983,1397,5.959,1398,5.959,1399,5.959,1400,5.67,1401,5.959,1402,5.959,1403,5.959,1404,5.67,1407,6.096,1410,5.223,1426,5.67,1429,5.429,1433,5.429,1434,3.211,1435,3.353,1436,3.524,1876,4.63,2537,3.524,2964,4.025,2965,4.46,2966,4.46,2967,4.46,2968,4.46,2969,4.46,2970,4.46,2971,4.46,2972,4.46,2973,4.46,2974,4.46,2975,4.46,2976,4.46,2977,4.46,2978,4.025]],["title/controllers/ProductController.html",[93,1.264,2979,4.424]],["body/controllers/ProductController.html",[3,0.028,4,0.025,5,0.028,10,0.193,11,1.473,16,0.722,18,2.084,19,0.004,20,1.243,21,0.414,22,0.976,28,2.174,29,0.212,30,0.711,34,0.028,35,0.17,36,1.707,44,2.152,50,0.002,51,0.002,85,2.374,93,1.019,95,1.186,97,1.577,105,1.283,112,0.654,118,2.426,119,1.756,120,2.493,122,1.684,123,0.88,124,2.674,127,2.306,136,1.251,138,6.183,246,2.532,285,1.444,286,1.891,287,2.746,290,2.493,306,1.985,312,1.953,324,2.13,412,5.592,413,3.199,544,2.762,551,2.019,552,2.019,554,2.091,556,2.091,560,2.13,562,2.171,569,2.532,571,2.306,636,3.84,869,2.679,874,1.953,886,2.469,928,5.247,1163,4.376,1378,2.469,1394,7.086,1410,5.592,1433,3.063,1434,3.063,1804,3.063,2426,5.085,2979,5.209,2980,4.255,2981,6.214,2982,7.341,2983,4.255,2984,4.255,2985,4.255,2986,4.255,2987,4.255,2988,4.255,2989,4.255,2990,4.255,2991,4.255,2992,4.255,2993,4.255,2994,4.255,2995,4.255,2996,4.255,2997,7.957,2998,4.255,2999,4.255,3000,3.84,3001,5.608,3002,3.199,3003,4.255,3004,4.255,3005,4.255,3006,4.255,3007,4.255,3008,4.255,3009,4.255,3010,4.255,3011,4.255,3012,4.255,3013,4.255,3014,4.255,3015,4.255]],["title/interfaces/ProductInterface.html",[337,1.441,3016,4.424]],["body/interfaces/ProductInterface.html",[3,0.034,4,0.03,5,0.034,10,0.234,19,0.004,20,1.221,21,0.485,22,1.197,29,0.193,34,0.034,50,0.002,51,0.002,112,0.641,232,0.95,337,1.411,338,2.074,610,2.656,617,3.146,857,3.98,1162,5.538,1163,4.778,1388,5.707,1392,3.457,1397,6.964,1398,6.964,1399,6.964,1400,6.627,1401,6.964,1402,6.964,1403,6.964,1404,6.627,1407,6.779,1410,6.105,1426,6.627,1429,6.345,1433,5.885,1434,3.722,1435,3.887,1436,4.085,3016,5.982,3017,5.169]],["title/modules/ProductModule.html",[146,1.754,174,3.656]],["body/modules/ProductModule.html",[3,0.041,4,0.037,5,0.041,19,0.004,20,0.868,29,0.221,30,1.047,34,0.041,35,0.25,50,0.003,51,0.003,95,2.262,146,2.991,148,2.784,149,2.784,150,2.875,151,2.875,152,2.829,153,4.131,154,4.131,159,5.866,174,7.299,180,3.724,181,2.829,182,2.875,184,4.14,188,3.396,189,1.4,270,1.966,601,3.47,899,4.189,1378,3.636,2375,5.25,2426,7.458,2537,6.413,2979,7.546,3000,5.653,3018,5.653,3019,6.264,3020,5.653,3021,5.653,3022,6.264,3023,6.264,3024,5.653]],["title/injectables/ProductService.html",[0,1.06,2426,3.656]],["body/injectables/ProductService.html",[0,0.682,2,0.654,3,0.013,4,0.012,5,0.013,10,0.09,11,0.805,13,1.102,16,0.681,18,1.995,19,0.004,20,1.189,21,0.396,22,0.934,28,2.015,29,0.158,30,0.333,34,0.013,35,0.08,38,3.181,39,1.601,44,2.115,45,1.437,47,3.181,48,3.629,49,3.195,50,0.001,51,0.001,56,3.603,66,4.515,77,1.182,84,2.968,85,0.899,86,3.289,90,1.331,91,3.264,92,1.827,112,0.659,189,0.445,272,0.585,285,0.789,347,2.164,367,0.914,368,0.833,383,3.836,512,1.251,525,1.668,543,1.732,610,1.679,617,2.939,645,3.971,682,5.189,693,2.198,700,3.811,703,2.133,776,1.331,857,3.518,922,6.812,923,6.918,926,4.818,928,5.032,957,1.668,958,2.444,961,4.425,962,1.573,1163,3.907,1378,4.659,1400,1.497,1404,3.943,1410,4.738,1429,3.775,1433,2.444,1434,1.433,1435,1.497,2056,2.845,2394,4.395,2426,2.351,2455,5.311,2726,1.796,2910,1.796,2911,1.668,3016,5.734,3024,1.796,3025,1.99,3026,4.438,3027,5.244,3028,4.438,3029,3.394,3030,4.438,3031,4.438,3032,4.438,3033,4.438,3034,4.438,3035,3.394,3036,3.394,3037,4.438,3038,4.438,3039,1.99,3040,1.99,3041,3.394,3042,1.99,3043,1.99,3044,4.438,3045,3.394,3046,1.99,3047,5.885,3048,1.99,3049,1.99,3050,1.99,3051,8.584,3052,3.394,3053,1.99,3054,1.99,3055,1.99,3056,1.99,3057,1.99,3058,1.99,3059,1.99,3060,1.99,3061,1.99,3062,1.99,3063,1.99,3064,3.394,3065,1.99,3066,3.394,3067,3.394,3068,1.99,3069,1.99,3070,1.99,3071,1.99,3072,1.99,3073,1.99,3074,1.99,3075,4.438,3076,1.99,3077,3.394,3078,1.99,3079,4.438,3080,4.438,3081,1.99,3082,6.407,3083,4.438,3084,1.99,3085,1.99,3086,1.99,3087,1.99,3088,1.99,3089,1.99,3090,1.99,3091,1.99,3092,1.99,3093,1.99,3094,1.99,3095,1.99,3096,1.99,3097,1.99,3098,1.99,3099,1.99]],["title/classes/RTGuard.html",[35,0.211,3100,4.763]],["body/classes/RTGuard.html",[3,0.051,4,0.045,5,0.051,8,3.148,9,6.41,13,3.216,16,0.603,19,0.004,29,0.169,32,5.356,33,4.86,34,0.051,35,0.309,37,5.172,50,0.003,51,0.003,230,1.172,488,8.352,3100,8.352,3101,9.254,3102,7.733,3103,7.733]],["title/classes/ResetPassword.html",[35,0.211,3104,3.968]],["body/classes/ResetPassword.html",[3,0.042,4,0.038,5,0.042,10,0.292,16,0.645,19,0.004,21,0.421,29,0.2,34,0.054,35,0.258,39,1.374,45,2.588,50,0.003,51,0.003,74,2.925,105,1.147,112,0.523,189,1.443,230,0.979,232,1.101,235,2.835,258,3.013,260,2.742,261,2.782,262,3.622,266,3.566,270,2.598,271,2.455,272,2.433,277,3.174,278,2.916,280,3.294,610,2.169,860,5.221,3104,6.222,3105,8.242,3106,5.827,3107,6.867,3108,6.457,3109,6.457,3110,5.827,3111,5.412,3112,5.827]],["title/injectables/ResetPasswordService.html",[0,1.06,3113,3.968]],["body/injectables/ResetPasswordService.html",[0,0.854,2,0.856,3,0.017,4,0.015,5,0.017,10,0.118,11,1.008,13,1.38,16,0.685,18,1.995,19,0.004,20,1.189,21,0.413,22,0.934,28,2.015,29,0.176,30,0.436,34,0.017,35,0.104,38,3.181,39,1.827,44,2.043,45,0.637,47,3.094,48,3.634,50,0.001,51,0.001,56,3.603,59,3.737,60,5.36,67,3.359,68,1.593,74,2.451,77,2.163,85,0.69,86,3.51,91,3.264,92,2.383,112,0.631,118,1.018,181,1.92,189,0.582,272,0.766,285,0.988,294,1.305,325,2.864,347,2.563,354,3.444,367,1.196,368,1.091,376,1.356,383,3.49,399,1.444,466,4.751,502,4.254,512,1.638,518,3.486,519,1.743,543,1.33,610,2.028,869,1.833,874,1.951,960,1.877,968,1.551,1006,1.216,1299,1.877,1516,2.185,1643,2.467,2168,2.352,2252,2.352,2253,5.36,2267,3.359,2269,2.185,2276,2.185,2291,2.352,2300,2.185,3104,1.96,3107,6.961,3113,3.196,3114,8.965,3115,2.606,3116,3.836,3117,4.251,3118,3.836,3119,5.605,3120,3.836,3121,4.251,3122,3.836,3123,3.836,3124,2.606,3125,2.606,3126,4.251,3127,3.563,3128,2.606,3129,3.836,3130,2.606,3131,4.251,3132,2.606,3133,2.606,3134,3.836,3135,2.606,3136,2.606,3137,4.251,3138,2.606,3139,4.251,3140,2.606,3141,3.836,3142,4.858,3143,2.606,3144,4.251,3145,6.21,3146,2.606,3147,2.352,3148,2.352,3149,2.352,3150,2.185,3151,2.352,3152,2.606,3153,4.858,3154,2.352,3155,3.836,3156,2.352,3157,2.352,3158,2.352,3159,2.606,3160,2.352,3161,2.606,3162,4.251,3163,4.251,3164,2.352,3165,2.606,3166,2.606,3167,2.352,3168,4.251,3169,2.606,3170,2.606,3171,2.352,3172,4.251,3173,2.606,3174,2.606,3175,2.606,3176,2.606,3177,2.352,3178,2.352,3179,3.836,3180,2.352,3181,3.836,3182,2.352,3183,2.352,3184,2.352,3185,2.352,3186,3.359,3187,2.606,3188,2.606,3189,2.606,3190,2.352,3191,2.352,3192,2.606]],["title/injectables/RolesGuard.html",[0,1.06,129,3.968]],["body/injectables/RolesGuard.html",[0,1.588,2,1.977,3,0.039,4,0.035,5,0.039,8,2.689,9,5.477,10,0.272,11,1.874,12,5.945,13,1.954,15,7.051,16,0.616,18,1.838,19,0.004,20,1.096,21,0.365,22,0.86,24,5.693,25,6.752,27,4.525,28,1.413,29,0.213,30,1.006,31,4.169,32,4.169,33,3.782,34,0.039,35,0.24,36,2.415,37,4.025,38,2.231,39,1.683,40,5.432,42,5.045,43,5.045,44,2.052,47,2.231,48,2.259,49,4.333,50,0.003,51,0.003,56,3.076,74,2.401,125,5.432,127,3.263,128,5.432,129,5.945,354,2.415,703,3.217,2193,5.432,3193,6.019,3194,6.019,3195,6.019,3196,7.907,3197,6.019,3198,5.432,3199,6.019,3200,6.019,3201,6.019]],["title/classes/SignInByEmailDto.html",[35,0.211,397,4.171]],["body/classes/SignInByEmailDto.html",[3,0.044,4,0.039,5,0.044,10,0.305,16,0.663,19,0.004,21,0.392,29,0.186,34,0.044,35,0.34,45,2.077,50,0.003,51,0.003,105,1.178,112,0.619,123,1.394,230,1.022,232,1.131,234,4.61,235,3.038,241,3.738,243,3.687,244,2.527,245,1.919,247,3.036,397,6.72,399,5.162,518,6.033,1420,5.649,1569,6.082,1571,7.128,1576,6.72,3202,9.317,3203,6.74,3204,8.504,3205,6.74,3206,6.74]],["title/controllers/SpendingAuthController.html",[93,1.264,579,4.424]],["body/controllers/SpendingAuthController.html",[3,0.027,4,0.024,5,0.027,10,0.184,11,1.423,16,0.657,18,1.835,19,0.004,20,1.094,21,0.407,22,0.859,28,1.977,29,0.218,30,0.679,34,0.027,35,0.162,36,1.629,39,1.278,44,1.958,50,0.002,51,0.002,85,2.09,93,0.972,95,1.132,97,1.505,99,5.144,105,1.167,112,0.558,118,3.082,119,1.675,120,1.629,122,1.607,123,0.84,132,2.923,286,1.805,287,2.685,293,5.036,294,4.568,312,1.863,325,2.513,326,3.123,365,5.935,373,3.669,414,2.356,552,2.849,556,2.951,577,5.372,579,5.032,583,5.032,586,2.923,588,3.208,589,5.3,590,5.032,591,2.923,593,3.208,595,3.669,599,3.664,604,3.403,605,3.403,653,2.629,1053,2.067,1310,6.617,1312,3.664,1327,5.683,1328,6.617,1329,3.664,1600,3.888,1601,4.147,1609,2.715,1611,2.551,1627,3.053,2077,4.744,2079,3.403,2182,4.744,2183,3.403,3207,8.819,3208,4.06,3209,7.144,3210,7.144,3211,4.06,3212,6.004,3213,4.06,3214,8.819,3215,4.06,3216,6.004,3217,4.06,3218,4.06,3219,4.06,3220,6.617,3221,6.617,3222,4.06,3223,7.894,3224,5.418,3225,5.418,3226,3.664,3227,3.664,3228,4.06,3229,4.06,3230,6.004,3231,4.06,3232,4.06,3233,4.06]],["title/injectables/SpendingAuthService.html",[0,1.06,577,3.968]],["body/injectables/SpendingAuthService.html",[0,0.926,2,0.946,3,0.019,4,0.017,5,0.019,10,0.13,11,1.092,13,1.496,16,0.673,18,1.947,19,0.004,20,1.161,21,0.386,22,0.912,28,1.966,29,0.194,30,0.481,34,0.019,35,0.115,38,3.105,39,1.717,44,1.947,45,0.703,47,3.105,48,3.641,50,0.002,51,0.002,56,3.567,59,3.178,62,3.519,66,4.354,74,2.332,76,1.595,77,2.293,84,1.926,85,2.346,86,3.472,91,3.608,92,2.919,112,0.607,189,0.644,252,3.656,272,0.846,285,1.339,287,2.239,325,3.709,347,2.716,354,1.155,367,1.322,368,1.205,383,2.938,576,6.063,577,3.464,581,2.165,583,2.414,584,2.275,585,2.599,589,2.553,595,4.692,693,4.973,790,2.414,826,3.021,869,1.986,874,2.115,1053,0.991,1324,4.262,1445,1.529,1600,2.983,1601,3.343,1609,3.081,1611,1.81,1643,1.671,1914,4.799,1933,3.862,2077,6.372,2079,2.414,2081,2.165,2182,6.372,2183,2.414,2207,2.275,3224,4.158,3225,4.158,3234,8.861,3235,2.88,3236,4.607,3237,5.759,3238,5.759,3239,2.88,3240,2.88,3241,4.607,3242,2.88,3243,2.88,3244,4.607,3245,2.88,3246,4.607,3247,2.88,3248,2.88,3249,5.759,3250,2.88,3251,2.88,3252,2.88,3253,2.88,3254,2.88,3255,2.88,3256,2.599,3257,2.88,3258,4.607,3259,3.641,3260,2.599,3261,2.88,3262,2.599,3263,2.88,3264,4.607,3265,2.88,3266,2.88,3267,2.88,3268,2.88]],["title/classes/SpendingAuthorization.html",[35,0.211,581,3.968]],["body/classes/SpendingAuthorization.html",[3,0.033,4,0.029,5,0.033,10,0.227,16,0.739,19,0.004,21,0.48,29,0.207,34,0.046,35,0.201,39,1.069,45,2.375,50,0.002,51,0.002,74,1.525,75,2.613,105,1.313,112,0.627,189,1.123,230,0.761,232,0.931,235,2.499,254,4.107,258,3.756,260,2.972,261,3.186,262,3.81,266,3.872,270,2.196,271,1.91,272,2.056,277,2.469,278,3.159,280,3.569,373,3.069,581,6.052,582,4.21,584,7.684,586,3.617,589,3.876,590,5.864,591,3.617,595,3.069,604,4.21,605,4.21,610,1.833,745,3.792,826,3.694,974,3.439,1037,4.188,1053,2.771,1324,5.212,1445,2.667,1447,4.533,2081,6.052,2082,7.684,2087,3.969,2509,4.21,3256,4.533,3269,4.533,3270,5.023,3271,5.023,3272,5.023,3273,5.023,3274,5.023,3275,5.023]],["title/classes/Stock.html",[35,0.211,1455,2.178]],["body/classes/Stock.html",[3,0.04,4,0.035,5,0.04,10,0.274,16,0.69,19,0.004,21,0.462,29,0.213,34,0.052,35,0.242,39,1.288,45,2.383,50,0.003,51,0.003,105,1.227,112,0.502,189,1.352,230,0.917,232,1.056,235,2.463,260,3.76,261,3.159,262,3.473,266,3.669,270,2.49,271,2.301,272,2.332,277,2.974,617,3.354,667,3.918,751,4.046,860,4.301,1007,4.201,1455,3.877,1456,2.395,3276,5.46,3277,6.995,3278,6.05,3279,7.065,3280,6.05,3281,6.765,3282,6.05,3283,4.781,3284,5.071,3285,5.46,3286,5.071,3287,5.46]],["title/controllers/StockController.html",[93,1.264,3288,4.424]],["body/controllers/StockController.html",[3,0.029,4,0.026,5,0.029,10,0.2,11,1.512,16,0.708,18,2.024,19,0.004,20,1.207,21,0.402,22,0.948,28,2.131,29,0.19,30,0.737,34,0.029,35,0.176,36,1.769,39,1.595,44,2.11,50,0.002,51,0.002,56,3.403,85,2.586,86,2.742,91,2.849,92,2.61,93,1.056,95,1.229,97,1.634,105,1.258,112,0.642,118,2.49,119,1.819,120,3.006,122,1.745,123,0.912,136,1.296,285,1.482,286,1.96,287,2.793,306,2.976,312,2.023,324,2.207,354,3.006,367,2.023,552,3.026,556,3.135,653,2.855,869,2.749,874,2.023,886,2.559,1448,7.175,1455,4.093,1600,4.129,1601,4.348,1609,2.948,1611,2.771,1627,3.315,3288,5.345,3289,4.409,3290,5.755,3291,4.409,3292,4.409,3293,4.409,3294,4.409,3295,3.979,3296,6.377,3297,6.377,3298,4.409,3299,5.345,3300,4.409,3301,8.036,3302,4.409,3303,5.01,3304,3.484,3305,4.409,3306,5.755,3307,4.409,3308,3.315,3309,3.315,3310,4.409,3311,4.409,3312,7.492,3313,4.409,3314,3.979,3315,6.761,3316,4.409,3317,4.409,3318,4.409]],["title/classes/StockGard.html",[35,0.211,3279,3.968]],["body/classes/StockGard.html",[3,0.042,4,0.038,5,0.042,10,0.293,16,0.646,19,0.004,21,0.445,29,0.211,34,0.054,35,0.259,39,1.378,45,2.233,50,0.003,51,0.003,74,1.966,75,3.368,105,1.149,112,0.524,189,1.447,230,0.982,232,1.103,235,2.573,260,3.521,261,3.074,262,3.629,266,3.571,270,2.602,271,2.462,272,2.437,277,3.183,278,2.924,280,3.303,1007,4.34,1053,3.148,1455,2.672,1456,2.562,3279,6.233,3319,6.584,3320,5.843,3321,6.475,3322,6.942,3323,6.475,3324,5.116,3325,5.427,3326,5.843]],["title/controllers/StockGardController.html",[93,1.264,3327,4.424]],["body/controllers/StockGardController.html",[3,0.029,4,0.026,5,0.029,10,0.2,11,1.512,13,1.432,16,0.64,18,1.908,19,0.004,20,1.138,21,0.379,22,0.893,28,1.927,29,0.198,30,0.737,34,0.029,35,0.176,39,1.748,44,1.908,50,0.002,51,0.002,56,3.163,77,2.222,85,1.688,86,2.334,91,2.425,92,2.222,93,1.056,95,1.229,97,1.634,105,1.138,112,0.669,118,2.49,119,1.819,120,1.769,122,1.745,123,0.912,136,1.296,285,1.741,286,1.96,291,3.315,293,4.632,294,4.11,296,5.189,325,1.846,326,2.294,354,2.559,367,2.023,414,2.559,544,2.835,1053,2.195,1455,3.956,1463,6.487,1465,3.979,3277,5.92,3299,8.315,3303,5.01,3304,3.484,3308,3.315,3309,3.315,3314,3.979,3315,5.755,3327,5.345,3328,6.883,3329,4.409,3330,6.377,3331,7.492,3332,5.49,3333,5.755,3334,4.409,3335,4.409,3336,6.377,3337,4.409,3338,4.409,3339,6.377,3340,4.409,3341,8.21,3342,4.409,3343,6.377,3344,4.409,3345,5.633,3346,3.315,3347,3.979,3348,3.484,3349,3.979,3350,3.979,3351,4.409,3352,4.409,3353,4.409,3354,4.409,3355,4.409,3356,6.377,3357,4.409,3358,4.409,3359,4.409]],["title/interfaces/StockGardInterface.html",[337,1.441,3360,4.171]],["body/interfaces/StockGardInterface.html",[3,0.047,4,0.042,5,0.047,10,0.325,19,0.004,21,0.442,22,1.139,29,0.157,34,0.047,50,0.003,51,0.003,112,0.662,232,1.177,337,1.96,338,2.881,1007,4.749,1053,3.445,1455,2.963,1456,2.842,3332,6.693,3360,6.99,3361,5.398,3362,7.18,3363,7.525,3364,6.018]],["title/injectables/StockGardService.html",[0,1.06,3345,3.968]],["body/injectables/StockGardService.html",[0,1.078,2,1.149,3,0.023,4,0.02,5,0.023,10,0.158,11,1.273,13,1.743,16,0.65,18,1.937,19,0.004,20,1.155,21,0.384,22,0.907,28,1.854,29,0.19,30,0.585,34,0.023,35,0.14,38,2.927,39,1.682,44,1.836,45,0.855,47,2.927,48,3.518,50,0.002,51,0.002,56,3.481,66,2.464,77,2.275,85,2.298,86,3.176,91,3.3,92,2.551,112,0.646,136,1.578,189,0.782,272,1.029,285,1.248,325,3.489,347,3.581,353,2.631,354,2.938,367,1.606,368,1.465,376,2.793,383,2.739,700,5.115,1455,3.022,1456,1.385,1643,3.116,1851,2.765,3277,4.242,3279,2.631,3284,2.933,3332,6.469,3345,4.036,3360,6.858,3365,6.525,3366,3.5,3367,5.368,3368,5.368,3369,5.368,3370,5.368,3371,3.5,3372,5.474,3373,5.804,3374,3.5,3375,5.368,3376,3.5,3377,5.368,3378,3.5,3379,5.368,3380,3.5,3381,5.368,3382,3.5,3383,5.368,3384,3.5,3385,2.52,3386,2.424,3387,3.158,3388,2.765,3389,2.631,3390,3.5,3391,2.933,3392,3.158,3393,3.158,3394,5.368,3395,5.368,3396,2.933,3397,3.158,3398,2.933,3399,5.368,3400,3.5,3401,3.158,3402,2.765,3403,3.5,3404,3.158,3405,5.368,3406,3.5,3407,3.5,3408,3.5,3409,3.5,3410,3.5,3411,3.5,3412,3.5,3413,2.933]],["title/interfaces/StockInterface.html",[337,1.441,3414,4.424]],["body/interfaces/StockInterface.html",[3,0.045,4,0.04,5,0.045,10,0.31,19,0.004,21,0.454,22,1.155,29,0.188,34,0.045,50,0.003,51,0.003,112,0.654,232,1.142,337,1.867,338,2.744,617,3.511,1007,4.668,1455,3.542,1456,2.707,1491,5.45,3277,7.773,3360,7.773,3387,6.172,3414,7.194,3415,6.839,3416,6.814,3417,5.142]],["title/classes/StockItem.html",[35,0.211,3418,3.8]],["body/classes/StockItem.html",[3,0.042,4,0.038,5,0.042,10,0.294,16,0.714,19,0.004,20,1.269,21,0.422,29,0.182,34,0.054,35,0.259,39,1.382,45,2.492,50,0.003,51,0.003,105,1.269,112,0.61,189,1.451,230,0.984,232,1.105,235,2.578,258,3.875,266,3.895,270,2.607,271,2.469,845,2.94,860,4.502,1163,4.964,1456,2.57,1476,6.885,1488,4.342,3319,6.949,3418,5.979,3419,5.86,3420,6.493,3421,6.493,3422,6.493,3423,4.08,3424,5.442,3425,5.86]],["title/controllers/StockItemController.html",[93,1.264,3426,4.424]],["body/controllers/StockItemController.html",[3,0.033,4,0.029,5,0.033,10,0.226,11,1.653,16,0.712,18,2.019,19,0.004,20,1.204,21,0.401,22,0.946,28,2.145,29,0.2,30,0.836,34,0.033,35,0.2,36,2.007,44,2.124,50,0.002,51,0.002,85,2.506,93,1.197,95,1.394,97,1.854,105,1.266,112,0.636,118,2.723,119,2.064,120,3.222,122,1.979,123,1.034,136,1.47,285,1.621,286,2.223,287,2.956,290,2.798,291,3.76,296,4.831,306,3.254,312,2.295,324,2.504,544,3.1,551,2.373,552,3.31,554,2.458,556,3.428,569,2.976,571,2.711,869,3.007,874,2.295,886,2.903,1455,3.314,1456,3.178,1473,6.866,1474,4.514,1892,6.866,3308,3.76,3309,3.76,3328,7.479,3346,3.76,3348,5.511,3373,5.371,3389,3.76,3426,5.846,3427,5.001,3428,5.001,3429,5.001,3430,5.001,3431,5.001,3432,7.283,3433,5.001,3434,6.294,3435,4.514,3436,5.001,3437,5.001,3438,5.001,3439,5.001,3440,5.001]],["title/interfaces/StockItemInterface.html",[337,1.441,3441,4.424]],["body/interfaces/StockItemInterface.html",[3,0.047,4,0.042,5,0.047,10,0.325,19,0.004,20,1.387,21,0.442,22,1.139,29,0.157,34,0.047,50,0.003,51,0.003,112,0.662,232,1.177,337,1.96,338,2.881,845,3.213,1163,5.425,1456,2.842,1476,7.525,1488,4.802,3361,5.398,3423,4.512,3441,7.415,3442,7.18]],["title/controllers/StockItemLogsController.html",[93,1.264,3443,4.424]],["body/controllers/StockItemLogsController.html",[3,0.031,4,0.027,5,0.031,10,0.212,11,1.579,13,1.522,16,0.604,18,1.802,19,0.004,20,1.074,21,0.358,22,0.844,28,1.82,29,0.208,30,0.784,34,0.031,35,0.187,39,0.998,44,1.802,50,0.002,51,0.002,77,2.321,85,2.235,93,1.122,95,1.307,97,1.737,105,1.074,112,0.664,118,2.601,119,1.934,120,1.88,122,1.855,123,0.969,136,1.378,285,1.802,286,3.446,293,4.728,294,4.227,296,5.848,325,1.962,326,2.438,414,2.72,544,3.446,1053,1.613,1453,6.348,1455,2.749,1456,4.026,1457,6.996,1461,3.928,1462,3.928,2394,3.928,3303,5.184,3304,3.703,3308,3.524,3309,3.524,3328,6.671,3332,6.869,3333,6.013,3346,3.524,3348,3.703,3350,4.229,3386,3.246,3416,4.615,3417,3.524,3443,5.585,3444,4.687,3445,6.498,3446,4.687,3447,4.687,3448,4.229,3449,4.687,3450,8.364,3451,4.687,3452,4.687,3453,5.581,3454,3.928,3455,4.687,3456,6.663,3457,6.013,3458,6.663,3459,4.687,3460,4.687]],["title/interfaces/StockItemLogsInterface.html",[337,1.441,3416,3.656]],["body/interfaces/StockItemLogsInterface.html",[3,0.043,4,0.038,5,0.043,10,0.298,19,0.004,21,0.462,22,1.166,29,0.183,34,0.043,50,0.003,51,0.003,112,0.673,232,1.115,337,1.798,338,2.642,1053,3.34,1455,2.717,1456,4.053,1491,5.375,1495,6.489,1499,4.562,3332,6.489,3361,4.952,3363,7.295,3364,5.52,3416,5.805,3423,4.138,3461,6.586,3462,7.295]],["title/injectables/StockItemLogsService.html",[0,1.06,3453,3.8]],["body/injectables/StockItemLogsService.html",[0,1.197,2,1.32,3,0.026,4,0.023,5,0.026,10,0.182,11,1.412,13,1.934,16,0.612,18,1.825,19,0.004,20,1.088,21,0.362,22,0.855,28,1.667,29,0.204,30,0.672,34,0.026,35,0.16,38,2.631,39,1.672,44,1.65,45,0.981,47,2.631,48,3.298,50,0.002,51,0.002,56,3.324,66,4.032,77,2.474,86,3.069,90,2.687,91,3.341,92,2.922,112,0.63,136,2.087,189,0.898,272,1.181,285,1.385,325,2.494,347,3.752,353,3.021,367,1.844,368,1.682,480,2.601,619,2.893,693,2.601,700,3.857,1007,2.827,1455,3.625,1456,3.776,1495,2.687,1499,2.783,1643,3.458,3281,2.893,3283,3.175,3332,6.38,3365,6.306,3372,5.951,3373,6.082,3385,2.893,3386,2.783,3388,3.175,3389,3.021,3391,3.367,3392,3.626,3396,3.367,3398,3.367,3401,3.626,3402,3.175,3404,3.626,3413,3.367,3416,5.44,3417,3.021,3423,2.525,3445,5.951,3448,3.626,3450,6.408,3453,4.289,3463,4.018,3464,7.1,3465,4.018,3466,4.018,3467,5.376,3468,4.018,3469,4.018,3470,4.018,3471,7.1,3472,4.018,3473,3.626,3474,4.018,3475,4.018,3476,3.367,3477,3.626,3478,3.175,3479,4.018,3480,5.376,3481,4.018,3482,4.018,3483,3.626]],["title/classes/StockItemQuantity.html",[35,0.211,3322,3.8]],["body/classes/StockItemQuantity.html",[3,0.043,4,0.038,5,0.043,10,0.298,16,0.653,19,0.004,21,0.425,29,0.201,34,0.055,35,0.263,39,1.402,45,2.37,50,0.003,51,0.003,105,1.161,112,0.53,189,1.472,230,0.998,232,1.115,235,2.861,258,3.073,260,2.797,261,2.817,262,3.668,266,3.599,270,2.631,271,2.504,272,2.463,278,2.974,610,2.196,857,4.163,1455,2.717,1456,3.648,1503,6.637,3319,6.637,3322,6.034,3418,4.742,3484,5.943,3485,6.586,3486,6.586,3487,5.204,3488,5.52,3489,5.52,3490,5.943]],["title/interfaces/StockItemQuantityInterface.html",[337,1.441,3363,3.968]],["body/interfaces/StockItemQuantityInterface.html",[3,0.05,4,0.044,5,0.05,10,0.343,19,0.004,21,0.422,22,1.11,34,0.05,50,0.003,51,0.003,112,0.621,232,1.217,337,2.07,338,3.042,610,2.573,857,4.604,1456,3,1503,7.341,3361,5.7,3363,6.875,3491,7.581]],["title/injectables/StockItemQuantityService.html",[0,1.06,3492,4.171]],["body/injectables/StockItemQuantityService.html",[0,1.913,2,2.665,3,0.053,4,0.047,5,0.053,19,0.004,29,0.177,30,1.357,34,0.053,35,0.324,50,0.003,51,0.003,1456,3.211,3365,6.101,3492,7.524,3493,8.114]],["title/injectables/StockItemService.html",[0,1.06,3373,3.53]],["body/injectables/StockItemService.html",[0,1.183,2,1.299,3,0.026,4,0.023,5,0.026,10,0.179,11,1.396,13,1.912,16,0.705,18,2.03,19,0.004,20,1.21,21,0.403,22,0.951,28,2.05,29,0.182,30,0.661,34,0.026,35,0.158,38,3.237,39,1.254,44,2.103,45,1.438,47,3.237,48,3.73,50,0.002,51,0.002,56,3.628,66,2.703,77,1.378,86,3.197,91,3.441,92,2.451,112,0.628,136,1.163,189,0.884,272,1.163,285,1.369,287,2.651,325,3.488,347,3.216,354,3.343,368,1.656,376,2.058,383,3.004,480,2.561,700,2.561,703,1.609,869,2.539,1007,1.877,1643,3.418,1850,2.848,3365,6.991,3373,3.938,3385,2.848,3386,2.74,3418,2.848,3441,7.584,3480,3.57,3487,3.126,3494,3.956,3495,5.889,3496,5.889,3497,5.889,3498,3.956,3499,3.956,3500,5.889,3501,5.889,3502,3.956,3503,5.889,3504,3.956,3505,5.889,3506,3.956,3507,7.035,3508,3.956,3509,5.889,3510,3.956,3511,5.889,3512,3.956,3513,3.956,3514,3.956,3515,3.956,3516,3.956,3517,3.126,3518,3.316,3519,3.956,3520,3.956,3521,3.956,3522,3.956,3523,3.956,3524,3.956,3525,3.956,3526,3.956,3527,3.956]],["title/classes/StockItemslogs.html",[35,0.211,3281,3.8]],["body/classes/StockItemslogs.html",[3,0.037,4,0.033,5,0.037,10,0.258,16,0.715,19,0.004,21,0.463,29,0.215,34,0.05,35,0.227,39,1.212,45,1.39,50,0.003,51,0.003,74,1.729,75,2.961,105,1.271,112,0.58,189,1.272,230,0.863,232,1.014,260,3.648,261,3.084,262,4.015,266,3.842,270,2.392,271,2.165,272,2.24,277,2.798,278,3.441,280,2.904,1053,2.956,1455,3.144,1456,4.094,1491,4.758,1495,5.744,1499,3.943,3281,5.486,3319,6.885,3322,6.885,3324,4.498,3423,3.577,3462,6.458,3528,5.137,3529,5.692,3530,5.692,3531,5.692,3532,5.692,3533,4.28,3534,4.771,3535,5.137,3536,4.771,3537,5.137]],["title/modules/StockModule.html",[146,1.754,175,3.968]],["body/modules/StockModule.html",[3,0.026,4,0.023,5,0.026,19,0.004,20,1.217,29,0.231,30,0.671,34,0.026,35,0.16,50,0.002,51,0.002,95,1.659,146,2.357,148,1.783,149,1.783,150,1.841,151,1.841,152,1.811,153,3.255,154,3.255,159,5.096,175,8.01,178,5.096,180,2.731,181,1.811,182,1.841,184,3.035,188,2.174,189,0.896,270,2.756,430,2.682,601,2.222,899,2.682,1455,1.655,1456,3.317,3279,3.015,3281,2.888,3283,3.169,3284,3.362,3286,4.987,3288,5.945,3303,6.664,3304,3.169,3322,2.888,3324,3.169,3325,4.987,3327,5.945,3345,6.602,3346,6.302,3347,3.619,3373,6.664,3385,6.034,3388,3.169,3389,3.015,3418,2.888,3424,4.987,3426,5.945,3443,5.945,3453,6.321,3454,3.362,3487,3.169,3488,3.362,3489,4.987,3492,6.938,3533,3.015,3534,3.362,3535,3.619,3536,4.987,3538,3.619,3539,3.619,3540,3.619,3541,4.011,3542,7.493,3543,4.011,3544,5.945,3545,4.011,3546,4.987,3547,3.619,3548,7.847,3549,4.011,3550,4.011,3551,4.011,3552,4.011,3553,4.011,3554,4.011,3555,4.011,3556,4.011,3557,4.011]],["title/injectables/StockService.html",[0,1.06,3303,3.53]],["body/injectables/StockService.html",[0,0.95,2,0.978,3,0.019,4,0.017,5,0.019,10,0.135,11,1.121,13,1.536,16,0.661,18,1.899,19,0.004,20,1.175,21,0.391,22,0.889,28,1.918,29,0.196,30,0.498,34,0.019,35,0.119,38,3.028,39,1.905,44,1.899,47,3.028,48,3.588,50,0.002,51,0.002,56,3.531,66,2.171,77,2.336,85,1.252,86,3.196,90,1.99,91,3.474,92,2.714,112,0.588,136,1.73,189,0.665,272,1.39,287,2.281,325,1.98,347,3.604,354,3.126,367,1.366,368,1.246,376,3.062,480,1.927,617,2.394,645,3.893,776,1.99,779,3.738,857,2.658,869,2.039,874,2.171,958,2.143,1007,2.245,1455,2.767,1456,2.654,1491,1.649,1495,1.99,1499,2.061,1503,2.143,1600,3.063,1601,2.745,1609,3.163,1749,2.686,1850,2.143,2525,2.686,2668,4.934,2669,4.934,2696,3.965,2757,4.269,3281,2.143,3283,2.352,3290,4.269,3295,4.269,3299,2.495,3303,3.163,3332,3.163,3372,3.965,3385,3.406,3386,2.061,3388,2.352,3391,2.495,3402,2.352,3414,6.848,3416,4.645,3417,2.238,3418,2.143,3423,1.87,3457,2.686,3467,5.313,3473,2.686,3476,2.495,3478,2.352,3483,4.269,3487,2.352,3488,2.495,3517,2.352,3518,2.495,3558,2.976,3559,4.73,3560,4.73,3561,2.976,3562,5.887,3563,2.976,3564,4.73,3565,2.976,3566,2.976,3567,4.73,3568,2.976,3569,2.976,3570,2.976,3571,2.976,3572,2.976,3573,4.73,3574,6.707,3575,2.976,3576,2.976,3577,4.73,3578,2.976,3579,2.976,3580,2.976,3581,2.976,3582,2.976,3583,2.976,3584,4.73,3585,2.976,3586,2.976,3587,2.976,3588,2.976,3589,5.887,3590,2.976,3591,2.976,3592,2.976,3593,2.976,3594,2.976,3595,4.73,3596,2.976,3597,2.976,3598,2.976,3599,2.976,3600,4.73,3601,2.976,3602,6.707,3603,2.976,3604,2.976,3605,2.976,3606,4.73,3607,2.976]],["title/classes/StockTransaction.html",[35,0.211,3533,3.968]],["body/classes/StockTransaction.html",[3,0.034,4,0.031,5,0.034,10,0.238,16,0.725,19,0.004,21,0.469,29,0.203,34,0.047,35,0.21,39,1.121,45,2.405,50,0.002,51,0.002,74,1.598,75,2.738,105,1.29,112,0.608,189,1.176,230,0.798,232,0.961,235,2.889,258,2.456,260,3.772,261,3.372,262,4.209,266,3.754,270,2.268,271,2.002,272,2.124,277,2.587,280,3.686,745,4.814,826,3.787,1053,2.84,1445,2.794,1455,3.968,1456,2.083,1491,2.916,1559,6.52,3285,7.446,3319,6.923,3322,6.394,3324,4.159,3423,3.308,3533,5.433,3546,4.412,3608,4.75,3609,6.916,3610,5.264,3611,5.264,3612,5.941,3613,5.264,3614,5.264,3615,5.264,3616,4.75,3617,4.75]],["title/controllers/StockTransactionController.html",[93,1.264,3544,4.424]],["body/controllers/StockTransactionController.html",[3,0.026,4,0.023,5,0.026,10,0.178,11,1.391,13,1.278,16,0.704,18,2.027,19,0.004,20,1.208,21,0.402,22,0.949,28,2.12,29,0.203,30,0.658,34,0.026,35,0.157,39,1.249,44,2.099,50,0.002,51,0.002,56,2.443,77,1.371,85,2.308,93,0.942,95,1.097,97,1.458,105,1.252,112,0.646,118,2.739,119,1.624,120,2.814,122,1.557,123,0.814,136,1.157,233,4.063,285,1.364,286,1.749,287,2.644,293,4.841,294,4.522,296,5.385,306,2.737,312,1.806,325,1.647,326,3.052,354,1.579,414,2.284,552,2.784,556,2.884,653,2.548,682,5.05,826,3.568,869,2.529,874,1.806,886,2.284,1053,1.355,1445,2.089,1455,1.624,1491,4.307,1556,6.143,1557,3.551,1600,3.799,1601,4.071,1609,2.632,1611,2.473,1627,2.959,1892,6.143,3308,2.959,3309,2.959,3328,7.336,3346,2.959,3348,4.636,3386,2.726,3423,2.473,3462,5.274,3542,5.274,3544,4.917,3547,3.551,3612,5.597,3618,3.935,3619,6.33,3620,5.294,3621,3.551,3622,5.867,3623,5.867,3624,3.935,3625,3.935,3626,3.935,3627,3.935,3628,3.551,3629,5.867,3630,3.935,3631,3.935,3632,3.935,3633,6.516,3634,3.935,3635,5.294,3636,3.551,3637,4.636,3638,3.551,3639,3.935,3640,3.935,3641,3.935,3642,3.935,3643,3.935,3644,3.935,3645,3.935,3646,3.935,3647,3.935,3648,3.935,3649,3.935]],["title/interfaces/StockTransactionInterface.html",[337,1.441,3637,4.171]],["body/interfaces/StockTransactionInterface.html",[3,0.043,4,0.038,5,0.043,10,0.298,19,0.004,21,0.462,22,1.166,29,0.183,34,0.043,50,0.003,51,0.003,112,0.673,232,1.115,337,1.798,338,2.642,826,4.453,1053,3.34,1445,3.496,1455,4.134,1456,2.606,1491,3.649,1559,7.667,2090,5.943,3361,4.952,3363,7.295,3364,5.52,3423,4.138,3609,8.133,3612,6.986,3637,6.622]],["title/injectables/StockTransactionService.html",[0,1.06,3542,3.968]],["body/injectables/StockTransactionService.html",[0,0.768,2,0.752,3,0.015,4,0.013,5,0.015,10,0.104,11,0.906,13,1.241,16,0.62,18,1.781,19,0.004,20,1.062,21,0.353,22,0.834,28,1.798,29,0.189,30,0.383,34,0.015,35,0.092,38,2.839,39,1.872,44,1.781,45,0.559,47,2.839,48,3.454,50,0.001,51,0.001,56,3.436,59,2.771,62,3.004,66,4.224,74,2.22,76,1.269,77,2.401,85,0.606,86,3.537,90,4.266,91,3.614,92,3.064,112,0.595,136,1.123,189,0.512,272,1.123,285,0.888,287,1.952,290,1.533,325,2.67,347,2.368,367,1.051,368,0.959,376,1.988,383,1.95,480,3.184,502,1.81,512,4.814,519,5.124,617,0.818,682,3.54,784,3.406,790,1.92,826,3.958,857,1.035,922,2.751,1053,2.372,1445,1.216,1455,3.388,1456,2.525,1491,4.245,1495,1.532,1499,1.587,1503,1.649,1601,2.854,1643,2.218,2544,1.92,2668,4.121,2669,4.121,2696,3.203,2700,3.449,2701,3.449,2722,2.067,2751,3.449,3259,3.02,3303,4.89,3332,3.288,3365,6.174,3373,4.89,3385,1.649,3386,2.647,3389,1.722,3393,3.449,3396,1.92,3397,3.449,3398,1.92,3416,2.647,3417,1.722,3423,2.401,3445,4.121,3453,4.132,3454,1.92,3462,5.498,3476,1.92,3478,1.81,3517,1.81,3533,1.722,3534,1.92,3542,2.873,3609,1.92,3612,4.132,3616,2.067,3619,4.437,3620,4.437,3621,2.067,3628,2.067,3637,6.489,3638,2.067,3650,2.291,3651,4.917,3652,3.822,3653,2.291,3654,4.917,3655,2.291,3656,3.822,3657,2.291,3658,2.291,3659,6.38,3660,2.291,3661,2.291,3662,3.822,3663,2.291,3664,2.291,3665,2.291,3666,2.291,3667,2.291,3668,2.291,3669,2.291,3670,2.291,3671,2.291,3672,3.822,3673,2.291,3674,3.822,3675,2.291,3676,2.291,3677,2.291,3678,2.291,3679,3.822,3680,2.291,3681,2.291,3682,3.822,3683,2.291,3684,3.449,3685,3.822,3686,3.822,3687,2.067,3688,2.291,3689,2.291,3690,3.822,3691,2.291,3692,2.291,3693,2.291,3694,2.067,3695,2.291,3696,2.291,3697,2.291,3698,2.291,3699,2.291,3700,2.291,3701,2.291,3702,2.291,3703,2.291,3704,2.291,3705,2.291,3706,2.291,3707,2.291,3708,2.291,3709,2.291,3710,2.291,3711,2.291,3712,2.291,3713,2.291,3714,2.291,3715,2.291,3716,2.291]],["title/classes/Supplier.html",[35,0.211,1510,3.656]],["body/classes/Supplier.html",[3,0.043,4,0.038,5,0.043,10,0.296,16,0.717,19,0.004,20,1.274,21,0.447,29,0.183,34,0.055,35,0.262,39,1.394,45,2.442,50,0.003,51,0.003,105,1.274,112,0.612,189,1.463,230,0.993,232,1.111,235,2.033,253,4.605,258,3.055,260,2.781,266,3.905,270,2.621,271,2.49,273,4.715,277,3.219,860,4.526,1209,6.148,1510,5.784,3717,5.91,3718,6.548,3719,6.548,3720,6.548,3721,5.489,3722,5.91]],["title/controllers/SupplierController.html",[93,1.264,3723,4.424]],["body/controllers/SupplierController.html",[3,0.032,4,0.028,5,0.032,10,0.221,11,1.624,16,0.706,18,1.997,19,0.004,20,1.191,21,0.417,22,0.935,28,2.125,29,0.215,30,0.815,34,0.032,35,0.195,36,1.956,44,2.104,50,0.002,51,0.002,85,2.485,93,1.167,95,1.359,97,1.807,105,1.254,112,0.633,118,2.675,119,2.011,120,2.749,121,4.086,122,1.929,123,1.008,124,3.063,127,2.642,129,3.665,134,4.086,136,1.433,138,3.51,246,2.901,285,1.592,286,2.167,287,2.923,290,3.178,306,3.196,312,2.237,324,2.44,544,3.045,551,2.313,552,3.251,554,2.396,556,3.367,560,2.44,562,2.487,571,2.642,653,3.156,869,2.953,874,2.237,886,2.829,1507,7.778,1510,3.376,3002,3.665,3723,5.742,3724,4.875,3725,4.875,3726,4.875,3727,4.875,3728,4.875,3729,4.875,3730,4.875,3731,8.25,3732,4.875,3733,5.955,3734,4.399,3735,6.182,3736,6.851,3737,4.399,3738,4.875,3739,4.875,3740,4.875,3741,4.875,3742,4.875,3743,4.875,3744,4.875]],["title/interfaces/SupplierInterface.html",[337,1.441,3745,4.424]],["body/interfaces/SupplierInterface.html",[3,0.047,4,0.042,5,0.047,10,0.328,19,0.004,20,1.391,21,0.444,22,1.142,29,0.158,34,0.047,50,0.003,51,0.003,112,0.663,232,1.184,253,4.395,337,1.979,338,2.908,342,6.075,852,7.229,1209,6.714,3745,7.458,3746,7.248]],["title/modules/SupplierModule.html",[146,1.754,176,3.968]],["body/modules/SupplierModule.html",[3,0.042,4,0.038,5,0.042,19,0.004,20,0.89,29,0.222,30,1.073,34,0.042,35,0.256,50,0.003,51,0.003,95,2.299,146,3.027,148,2.854,149,2.854,150,2.947,151,2.947,152,2.9,153,4.18,154,2.947,166,6.587,176,7.88,180,3.784,181,2.9,182,2.947,184,4.207,188,3.481,189,1.435,270,2.015,601,3.557,1510,4.447,1714,5.074,3721,6.912,3723,7.635,3733,7.649,3734,5.794,3747,5.794,3748,6.421,3749,5.794,3750,6.421,3751,6.421,3752,5.794,3753,6.421]],["title/injectables/SupplierService.html",[0,1.06,3733,3.968]],["body/injectables/SupplierService.html",[0,1.299,2,1.476,3,0.029,4,0.026,5,0.029,10,0.203,11,1.533,13,2.1,16,0.712,18,2.04,19,0.004,20,1.216,21,0.405,22,0.955,28,2.06,29,0.192,30,0.751,34,0.029,35,0.18,38,3.253,39,0.957,44,2.04,47,3.253,48,3.74,50,0.002,51,0.002,56,3.635,66,4.572,77,1.566,86,3.212,91,3.337,92,1.566,112,0.621,136,1.321,189,1.005,272,1.321,285,1.503,287,2.818,347,3.418,368,1.882,869,2.788,1510,3.113,3733,4.862,3745,7.894,3752,4.056,3754,4.495,3755,6.467,3756,7.574,3757,4.495,3758,4.495,3759,6.467,3760,6.467,3761,4.495,3762,4.495,3763,4.495,3764,6.467,3765,4.495,3766,8.777,3767,6.467,3768,4.495,3769,4.495,3770,8.283,3771,4.495,3772,4.495,3773,4.495,3774,4.495,3775,4.495,3776,4.495,3777,4.495,3778,4.495,3779,4.495,3780,4.495]],["title/controllers/TakeAwayController.html",[93,1.264,2639,4.424]],["body/controllers/TakeAwayController.html",[3,0.039,4,0.035,5,0.039,10,0.27,11,1.865,16,0.465,18,1.388,19,0.004,20,0.828,21,0.275,22,0.65,28,1.402,29,0.218,30,0.998,34,0.039,35,0.239,36,2.396,39,1.271,44,1.388,50,0.003,51,0.003,93,1.43,95,1.665,97,2.213,105,0.828,112,0.556,118,3.071,119,2.464,120,2.396,122,2.364,123,1.235,136,1.756,293,5.089,294,4.404,325,2.5,326,3.107,617,2.132,760,5.528,780,3.237,928,5.712,1053,2.056,1182,4.137,1522,7.836,1524,5.006,1785,6.216,1787,7.373,1795,5.449,1796,4.719,1800,4.49,1804,4.3,1805,3.867,1807,5.006,2505,4.49,2510,5.006,2639,6.594,2654,5.39,3781,7.866,3782,5.972,3783,5.972,3784,7.866,3785,7.938,3786,5.972,3787,5.972,3788,5.972,3789,5.972,3790,5.972]],["title/classes/TakeAwayOrder.html",[35,0.211,2505,3.968]],["body/classes/TakeAwayOrder.html",[3,0.048,4,0.043,5,0.048,10,0.333,16,0.574,19,0.004,21,0.34,29,0.196,34,0.059,35,0.294,39,1.567,50,0.003,51,0.003,189,1.646,230,1.116,232,1.195,270,2.82,271,2.8,745,3.991,746,4.924,1805,6.278,1825,7.661,1829,4.627,1830,6.172,2505,6.755,2653,6.172,3791,6.645,3792,8.984,3793,7.363,3794,6.645]],["title/injectables/TakeAwayService.html",[0,1.06,2637,4.171]],["body/injectables/TakeAwayService.html",[0,1.494,2,1.803,3,0.036,4,0.032,5,0.036,10,0.248,11,1.763,13,2.414,16,0.58,18,1.728,19,0.004,20,1.03,21,0.253,22,0.809,28,1.288,29,0.213,30,0.918,34,0.036,35,0.219,38,2.034,39,1.795,44,1.728,47,2.034,48,2.791,50,0.003,51,0.003,56,2.937,77,2.59,86,3.086,91,2.087,92,3.148,136,1.614,189,1.227,252,3.068,253,2.403,272,2.186,347,3.729,354,2.202,368,2.298,373,4.543,485,2.748,512,4.672,780,4.571,1246,4.338,1829,3.449,1840,6.663,1844,4.127,1845,3.671,1846,4.338,1855,6.232,1914,5.795,2207,4.338,2637,5.876,2736,4.954,3785,6.71,3795,8.432,3796,5.489,3797,5.489,3798,5.489,3799,7.435,3800,5.489,3801,5.489,3802,5.489,3803,7.435,3804,5.489,3805,5.489,3806,5.489,3807,7.435,3808,5.489]],["title/classes/Ticket.html",[35,0.211,1547,3.063]],["body/classes/Ticket.html",[3,0.031,4,0.028,5,0.031,10,0.216,16,0.747,19,0.004,21,0.459,29,0.214,34,0.044,35,0.19,39,1.014,45,2.57,50,0.002,51,0.002,74,1.447,75,2.478,105,1.327,112,0.589,189,1.065,230,0.722,232,0.897,235,3.089,258,4.187,260,2.863,261,3.29,262,3.723,266,3.821,270,2.116,271,1.812,272,1.981,277,2.342,278,3.044,280,2.43,617,3.036,667,3.085,745,5.051,751,3.186,826,3.59,845,2.511,1053,2.693,1163,4.24,1445,2.529,1488,3.186,1528,6.557,1529,6.181,1530,5.881,1535,5.418,1538,5.881,1541,5.418,1544,6.123,1545,3.764,1546,3.43,1547,3.912,3809,4.299,3810,4.764,3811,4.764,3812,4.764,3813,4.764,3814,6.741,3815,4.764,3816,4.764,3817,4.764,3818,4.764,3819,4.764,3820,4.764,3821,4.764,3822,3.993,3823,4.299]],["title/controllers/TicketController.html",[93,1.264,3824,4.424]],["body/controllers/TicketController.html",[3,0.027,4,0.024,5,0.027,10,0.188,11,1.45,16,0.694,18,1.978,19,0.004,20,1.179,21,0.393,22,0.926,28,2.089,29,0.214,30,0.696,34,0.027,35,0.166,36,1.67,38,1.543,39,0.886,44,2.068,47,1.543,48,2.296,50,0.002,51,0.002,56,2.525,85,2.356,91,1.583,93,0.997,95,1.16,97,1.543,105,1.233,112,0.652,118,2.83,119,1.718,120,1.67,122,1.647,123,0.861,124,2.616,127,2.256,136,1.224,138,5.219,246,2.477,285,1.685,286,1.85,287,2.718,290,2.454,293,4.54,294,4,306,2.853,312,1.91,325,1.742,326,2.165,354,1.67,414,2.416,544,2.718,551,1.975,552,1.975,554,2.046,556,2.046,560,2.084,562,2.124,569,2.477,571,2.256,617,1.486,869,2.636,874,1.91,886,2.416,928,4.429,1053,1.433,1445,2.21,1525,7.094,1541,5.534,1544,2.997,1547,2.416,1785,4.832,1804,2.997,1842,6.697,3002,3.13,3824,5.126,3825,4.162,3826,7.249,3827,4.162,3828,4.162,3829,4.162,3830,4.162,3831,3.756,3832,4.162,3833,7.456,3834,3.756,3835,4.162,3836,4.162,3837,4.162,3838,4.162,3839,6.115,3840,5.219,3841,3.756,3842,5.519,3843,4.832,3844,3.756,3845,4.162,3846,3.756,3847,4.162,3848,4.162,3849,4.162,3850,4.162,3851,4.162,3852,4.162,3853,4.162,3854,4.162,3855,4.162]],["title/interfaces/TicketInterface.html",[337,1.441,3843,4.171]],["body/interfaces/TicketInterface.html",[3,0.04,4,0.035,5,0.04,10,0.274,19,0.004,21,0.471,22,1.178,29,0.205,34,0.04,50,0.003,51,0.003,112,0.662,232,1.056,337,1.652,338,2.428,615,6.284,617,3.354,826,4.312,845,3.017,1053,3.234,1163,5.094,1445,3.212,1488,4.046,1529,7.425,1530,7.065,1538,7.065,1541,6.508,1544,6.374,1545,4.781,3843,6.269,3856,6.05,3857,7.065,3858,5.071,3859,5.071]],["title/modules/TicketModule.html",[146,1.754,177,3.968]],["body/modules/TicketModule.html",[3,0.037,4,0.033,5,0.037,19,0.004,20,1.052,29,0.228,30,0.947,34,0.037,35,0.226,50,0.003,51,0.003,95,2.117,146,2.847,148,2.518,149,2.518,150,2.6,151,2.6,152,2.558,153,3.932,154,2.6,159,5.704,177,7.975,178,5.704,180,3.485,181,2.558,182,2.6,184,3.875,188,3.07,189,1.266,270,2.384,430,3.788,601,3.138,899,3.788,1547,3.288,3822,6.366,3824,7.181,3840,7.075,3841,5.112,3857,4.259,3858,4.748,3859,4.748,3860,5.112,3861,5.112,3862,5.664,3863,7.389,3864,5.664,3865,7.181,3866,5.664,3867,5.112,3868,6.366,3869,5.112,3870,5.112,3871,5.664,3872,5.664,3873,5.112,3874,5.664]],["title/injectables/TicketService.html",[0,1.06,3840,3.8]],["body/injectables/TicketService.html",[0,1.087,2,1.162,3,0.023,4,0.021,5,0.023,10,0.16,11,1.283,13,1.758,16,0.679,18,1.946,19,0.004,20,1.16,21,0.386,22,0.911,28,1.965,29,0.196,30,0.591,34,0.023,35,0.141,38,3.102,39,1.69,44,1.946,47,3.102,48,3.64,50,0.002,51,0.002,56,3.566,59,3.556,62,4.017,66,4.124,74,2.542,76,1.96,77,2.29,85,2.488,86,3.439,91,3.574,92,2.765,112,0.613,136,1.04,189,0.791,272,1.04,285,1.258,287,2.505,325,1.481,347,3.039,354,2.172,367,1.623,368,1.481,529,2.795,617,2.988,645,5.056,693,4.769,700,2.29,776,2.366,778,2.965,826,3.643,869,2.333,874,2.484,1445,1.878,1541,5.101,1544,2.547,1547,2.053,1643,3.141,1851,2.795,2056,2.965,3259,2.795,3260,3.192,3262,3.192,3840,3.897,3843,6.884,3844,3.192,3867,3.192,3875,3.537,3876,5.413,3877,5.413,3878,6.574,3879,3.537,3880,3.537,3881,5.413,3882,5.413,3883,3.537,3884,3.537,3885,3.537,3886,3.537,3887,5.413,3888,3.537,3889,3.537,3890,6.646,3891,3.537,3892,3.537,3893,3.537,3894,3.537,3895,3.537,3896,5.413,3897,5.413,3898,3.537,3899,3.537,3900,3.537,3901,3.537,3902,3.537]],["title/classes/TicketUpdates.html",[35,0.211,3857,3.968]],["body/classes/TicketUpdates.html",[3,0.041,4,0.037,5,0.041,10,0.283,16,0.702,19,0.004,21,0.455,29,0.208,34,0.053,35,0.25,39,1.333,45,1.53,50,0.003,51,0.003,74,1.902,75,3.259,105,1.247,112,0.639,189,1.4,230,0.95,232,1.08,260,3.447,261,3.201,262,4.168,266,3.852,270,2.547,271,2.382,272,2.386,277,3.079,278,3.665,280,3.196,845,2.89,1053,3.099,1547,5.527,3857,6.102,3868,5.25,3873,5.653,3903,8.594,3904,5.653,3905,6.264,3906,6.264,3907,6.264,3908,6.264,3909,5.653]],["title/controllers/TicketUpdatesController.html",[93,1.264,3865,4.424]],["body/controllers/TicketUpdatesController.html",[3,0.028,4,0.025,5,0.028,10,0.193,11,1.477,16,0.7,18,1.999,19,0.004,20,1.192,21,0.397,22,0.936,28,2.108,29,0.208,30,0.714,34,0.028,35,0.171,36,1.713,39,0.909,44,2.087,50,0.002,51,0.002,56,2.563,85,2.566,93,1.022,95,1.191,97,1.583,105,1.244,112,0.654,118,2.873,119,1.762,120,1.713,122,1.69,123,0.883,124,2.683,127,2.315,138,4.486,246,2.541,285,1.71,286,1.898,287,2.751,290,2.952,293,4.581,294,3.683,306,2.907,312,1.96,325,1.788,326,2.222,354,1.713,544,2.77,551,2.026,552,2.026,554,2.099,556,2.099,560,2.138,562,2.179,571,2.315,615,4.92,653,2.765,869,2.686,874,1.96,886,2.478,1053,1.47,1525,6.081,1547,4.694,1552,6.391,3002,3.211,3831,3.854,3833,6.391,3834,3.854,3846,3.854,3863,5.531,3865,5.223,3869,3.854,3870,3.854,3910,9.272,3911,4.27,3912,5.623,3913,4.27,3914,6.231,3915,4.27,3916,6.639,3917,4.27,3918,4.27,3919,6.231,3920,4.27,3921,4.27,3922,4.27,3923,6.779,3924,4.27,3925,5.623,3926,4.924,3927,3.854,3928,3.854,3929,4.27,3930,4.27,3931,4.27,3932,4.27,3933,4.27,3934,4.27,3935,4.27,3936,4.27,3937,4.27]],["title/interfaces/TicketUpdatesInterface.html",[337,1.441,3926,4.171]],["body/interfaces/TicketUpdatesInterface.html",[3,0.048,4,0.043,5,0.048,10,0.332,19,0.004,21,0.446,22,1.145,34,0.048,50,0.003,51,0.003,112,0.685,232,1.193,337,2.004,338,2.945,845,3.237,1053,3.471,1547,5.853,3926,7.085,3938,7.34,3939,7.34]],["title/injectables/TicketUpdatesService.html",[0,1.06,3863,3.968]],["body/injectables/TicketUpdatesService.html",[0,1.109,2,1.193,3,0.024,4,0.021,5,0.024,10,0.164,11,1.309,13,1.793,16,0.685,18,1.966,19,0.004,20,1.172,21,0.39,22,0.92,28,1.985,29,0.192,30,0.607,34,0.024,35,0.145,38,3.135,39,1.71,44,1.966,47,3.135,48,3.662,50,0.002,51,0.002,56,3.581,59,3.605,62,4.083,66,4.344,74,2.568,76,2.012,77,2.328,85,2.399,86,3.463,91,3.599,92,2.798,112,0.617,189,0.812,272,1.068,285,1.284,287,2.54,325,1.52,347,3.081,354,1.457,367,1.667,368,1.52,383,1.853,693,4.834,869,2.381,874,2.535,1547,5.103,1643,3.205,3259,2.87,3840,6.33,3857,2.731,3858,3.044,3859,3.044,3863,4.152,3890,3.278,3912,4.984,3916,4.984,3926,6.948,3927,3.278,3928,3.278,3940,9.06,3941,3.632,3942,5.523,3943,6.682,3944,3.632,3945,3.632,3946,5.523,3947,3.632,3948,3.632,3949,5.523,3950,3.632,3951,3.632,3952,5.523,3953,3.632,3954,3.632,3955,7.466,3956,3.632,3957,3.632,3958,3.632,3959,3.632,3960,3.632,3961,3.632,3962,3.632,3963,3.632,3964,3.632,3965,5.523,3966,3.632,3967,3.632,3968,3.632,3969,3.632,3970,3.632]],["title/interfaces/Token.html",[337,1.441,407,3.417]],["body/interfaces/Token.html",[3,0.05,4,0.045,5,0.05,10,0.349,19,0.004,21,0.426,34,0.05,50,0.003,51,0.003,112,0.673,232,1.229,337,2.104,338,3.092,407,5.98,494,8.101,495,7.381,3971,7.707,3972,7.707]],["title/classes/TokenVerificationDto.html",[35,0.211,2108,4.424]],["body/classes/TokenVerificationDto.html",[3,0.05,4,0.044,5,0.05,10,0.343,16,0.591,19,0.004,21,0.35,29,0.166,34,0.06,35,0.365,50,0.003,51,0.003,105,1.05,112,0.578,230,1.149,232,1.217,243,3.619,244,2.717,245,2.158,407,6.358,745,4.109,1198,6.841,2108,8.23,3973,7.581,3974,7.581]],["title/classes/UpdateAttendenceDTO.html",[35,0.211,309,4.424]],["body/classes/UpdateAttendenceDTO.html",[3,0.031,4,0.028,5,0.031,10,0.216,16,0.727,19,0.004,21,0.466,22,1.122,29,0.196,34,0.031,35,0.313,50,0.002,51,0.002,105,1.293,112,0.62,123,0.989,230,0.725,232,0.899,242,2.232,244,2.532,245,1.362,251,4.98,252,1.974,253,3.934,254,4,255,6.195,256,6.195,257,6.406,275,3.78,309,5.666,358,5.645,845,2.995,860,3.665,970,4.317,972,5.342,973,7.075,974,3.323,977,6.733,980,6.472,981,4.867,984,4.953,985,5.342,986,4.317,988,6.101,989,5.342,992,6.101,993,3.021,994,3.341,995,3.323,996,2.31,997,2.923,998,2.923,999,4.551,1000,4.317,1001,2.923,1002,3.199,3975,9.591,3976,4.784,3977,4.784,3978,4.784,3979,4.784,3980,4.784,3981,4.784,3982,4.784,3983,4.784,3984,4.784,3985,6.76,3986,6.76,3987,4.784,3988,4.784,3989,4.317]],["title/interfaces/UpdateBasePaymentInterface.html",[337,1.441,3990,4.171]],["body/interfaces/UpdateBasePaymentInterface.html",[3,0.042,4,0.037,5,0.042,10,0.29,19,0.004,21,0.469,22,1.175,29,0.18,34,0.042,50,0.003,51,0.003,112,0.669,232,1.095,337,1.748,338,2.569,485,3.205,610,2.384,742,6.913,749,5.701,1035,3.331,1037,4.995,1038,7.587,1039,6.421,1042,7.219,1048,5.06,1052,4.814,1053,3.305,1054,7.587,1055,7.219,3990,6.504,3991,6.403]],["title/classes/UpdateBillingDto.html",[35,0.211,555,4.171]],["body/classes/UpdateBillingDto.html",[3,0.052,4,0.046,5,0.052,8,3.186,19,0.004,29,0.205,34,0.052,35,0.315,50,0.003,51,0.003,123,1.632,230,1.196,285,1.834,546,5.934,555,7.402,561,6.615,1057,7.122,3992,7.892,3993,9.367,3994,3.454]],["title/classes/UpdateBranchDto.html",[35,0.211,643,4.424]],["body/classes/UpdateBranchDto.html",[3,0.033,4,0.029,5,0.033,8,2.362,10,0.225,16,0.711,19,0.004,20,1.109,21,0.456,22,1.108,29,0.199,34,0.033,35,0.32,50,0.002,51,0.002,105,1.263,112,0.548,123,1.028,230,0.753,232,0.924,234,4.697,235,3.16,241,3.789,244,2.378,245,1.415,247,3.254,253,3.503,285,1.155,466,4.496,619,5.762,620,6.324,621,6.324,625,3.383,635,3.927,643,5.82,647,4.484,703,3.709,993,2.675,994,3.29,995,3.413,996,2.399,997,3.036,998,3.036,1028,4.645,1059,4.484,1060,5.771,1061,3.927,1062,4.165,1063,4.484,1065,4.484,1066,5.221,1068,4.484,1069,6.238,1070,6.238,1071,6.515,1072,5.487,1073,4.484,1074,4.484,1130,3.927,3994,2.175,3995,9.445,3996,6.943,3997,4.969]],["title/classes/UpdateCartDto.html",[35,0.211,718,4.171]],["body/classes/UpdateCartDto.html",[3,0.052,4,0.046,5,0.052,8,3.186,19,0.004,29,0.205,34,0.052,35,0.315,50,0.003,51,0.003,123,1.632,230,1.196,285,1.834,713,5.934,718,7.402,722,6.615,1076,7.122,3994,3.454,3998,7.892,3999,9.367]],["title/classes/UpdateCashPaymentDto.html",[35,0.211,4000,4.763]],["body/classes/UpdateCashPaymentDto.html",[3,0.046,4,0.041,5,0.046,8,2.958,10,0.316,16,0.738,19,0.004,21,0.437,22,0.946,29,0.153,34,0.046,35,0.279,50,0.003,51,0.003,105,1.205,112,0.599,230,1.059,232,1.157,290,2.802,610,1.83,617,3.38,772,6.261,1035,3.633,1036,5.854,1037,4.524,1039,5.816,1175,5.816,2807,5.519,4000,7.848,4001,8.696,4002,8.057,4003,6.984,4004,5.854,4005,6.303,4006,5.854,4007,6.303]],["title/interfaces/UpdateCashPaymentInterface.html",[337,1.441,767,4.424]],["body/interfaces/UpdateCashPaymentInterface.html",[3,0.05,4,0.044,5,0.05,8,3.11,10,0.343,19,0.004,21,0.35,22,0.995,29,0.166,34,0.05,50,0.003,51,0.003,112,0.621,232,1.217,290,3.042,337,2.07,338,3.042,617,3.639,767,7.665,772,5.458,773,5.458,1035,3.944,1052,5.7,3990,7.759,4008,7.581]],["title/classes/UpdateCashierDto.html",[35,0.211,802,4.171]],["body/classes/UpdateCashierDto.html",[3,0.052,4,0.046,5,0.052,8,3.186,19,0.004,29,0.205,34,0.052,35,0.315,50,0.003,51,0.003,123,1.632,230,1.196,285,1.834,797,5.934,802,7.402,806,6.615,1079,7.122,3994,3.454,4009,7.892,4010,9.367]],["title/classes/UpdateCouponDto.html",[35,0.211,877,4.424]],["body/classes/UpdateCouponDto.html",[3,0.033,4,0.03,5,0.033,8,2.402,10,0.23,16,0.742,19,0.004,20,1.123,21,0.439,29,0.177,34,0.033,35,0.282,45,1.724,50,0.002,51,0.002,105,1.319,112,0.554,123,1.052,230,0.772,232,0.939,234,5.159,235,3.235,241,3.915,244,2.098,245,1.449,247,3.397,285,1.183,610,2.294,625,3.418,703,3.562,855,5.094,856,5.615,857,3.661,871,4.022,877,5.918,881,4.593,994,3.4,1027,3.673,1028,4.705,1047,4.136,1069,6.303,1070,6.303,1071,5.308,1072,5.579,1106,4.593,1107,6.371,1111,6.303,1113,6.371,1115,5.918,1130,4.022,3994,2.228,4011,9.759,4012,7.06,4013,5.09,4014,5.09,4015,5.09,4016,5.09,4017,6.371,4018,5.09,4019,5.09,4020,5.09]],["title/classes/UpdateCustomerDto.html",[35,0.211,1612,3.968]],["body/classes/UpdateCustomerDto.html",[3,0.032,4,0.028,5,0.032,8,2.327,10,0.22,16,0.705,19,0.004,20,1.253,21,0.444,22,1.125,29,0.173,34,0.032,35,0.273,45,1.671,50,0.002,51,0.002,105,1.253,112,0.648,123,1.006,230,0.737,232,0.91,235,2.912,244,2.787,245,1.385,247,3.349,261,2.3,285,1.131,399,3.79,703,3.219,845,2.904,984,4.801,994,3.268,999,4.452,1001,5.888,1002,6.049,1006,4.728,1026,2.757,1027,3.559,1031,2.695,1032,2.757,1120,3.657,1122,4.39,1123,6.252,1124,6.252,1125,6.173,1128,5.734,1129,5.734,1130,6.252,1132,6.454,1135,4.925,1138,4.39,1139,3.502,1612,5.143,1617,4.077,3994,2.129,4021,9.381,4022,6.84,4023,4.864,4024,4.864,4025,4.864,4026,4.864,4027,4.864,4028,4.864,4029,4.864,4030,4.864]],["title/classes/UpdateCustomerLocationDto.html",[35,0.211,1648,4.424]],["body/classes/UpdateCustomerLocationDto.html",[3,0.039,4,0.035,5,0.039,10,0.273,16,0.617,19,0.004,21,0.461,22,1.022,29,0.213,34,0.039,35,0.353,45,1.934,50,0.003,51,0.003,105,1.097,112,0.501,123,1.248,230,0.915,232,1.054,241,3.178,244,2.353,245,1.718,253,3.87,261,2.029,845,1.937,971,3.271,993,3.052,994,3.08,995,3.893,996,2.914,997,3.687,998,4.839,1006,4.827,1026,3.42,1027,4.883,1031,3.343,1032,3.42,1060,4.839,1080,4.537,1141,7.979,1145,6.639,1146,7.148,1147,5.446,1648,6.639,1654,7.979,4031,6.035,4032,6.035,4033,7.868,4034,6.035,4035,6.035,4036,5.446]],["title/classes/UpdateDeliveryOrderDto.html",[35,0.211,4037,4.763]],["body/classes/UpdateDeliveryOrderDto.html",[3,0.026,4,0.023,5,0.026,8,1.988,10,0.177,16,0.763,19,0.004,20,0.81,21,0.452,22,1.143,29,0.19,34,0.026,35,0.233,50,0.002,51,0.002,83,4.618,85,1.547,105,1.357,112,0.586,123,0.81,230,0.594,232,0.778,235,2.878,242,1.827,244,2.078,245,1.115,247,3.443,253,2.558,261,2.351,485,1.96,625,1.529,703,3.771,826,2.682,845,2.664,853,3.312,964,4.618,974,4.278,993,2.252,994,3.032,999,4.13,1003,6.822,1006,2.727,1007,2.773,1008,3.908,1009,3.673,1010,3.908,1011,4.394,1014,2.712,1015,2.944,1016,2.944,1018,2.819,1020,2.944,1021,2.712,1022,2.819,1024,2.944,1035,2.037,1096,4.394,1152,6.421,1153,5.258,1154,5.258,1155,5.258,1156,5.035,1157,6.238,1158,5.974,1160,5.974,1162,3.673,1163,3.168,1165,5.549,1169,3.312,1170,5.274,1171,4.048,1173,4.899,1175,5.82,1176,3.094,1177,3.094,1178,3.094,1179,3.094,1180,3.094,1181,3.094,1182,2.712,1183,2.819,1184,2.944,1185,2.819,1186,2.944,1187,2.618,1188,3.533,1189,3.533,1190,3.533,1191,3.533,1192,3.533,1193,3.282,4037,5.274,4038,8.703,4039,3.915,4040,3.915,4041,3.915,4042,3.915,4043,3.915,4044,3.915,4045,3.915,4046,3.533,4047,3.915,4048,3.533,4049,3.915]],["title/classes/UpdateEmployeeDto.html",[35,0.211,1972,4.424]],["body/classes/UpdateEmployeeDto.html",[3,0.022,4,0.02,5,0.022,10,0.156,16,0.74,19,0.004,21,0.459,22,1.133,29,0.181,34,0.022,35,0.258,45,1.293,50,0.002,51,0.002,74,2.379,85,2.191,105,1.315,112,0.59,123,0.711,230,0.521,232,0.704,242,1.604,244,2.156,245,0.979,247,3.585,252,3.916,253,3.429,261,1.155,273,2.475,610,1.901,625,3.232,845,3.132,974,2.602,984,4.848,989,6.191,993,2.488,994,3.356,995,2.602,996,1.66,999,4.571,1001,3.235,1027,3.774,1028,3.748,1031,1.904,1035,2.754,1047,2.701,1135,3.812,1139,2.475,1169,4.112,1202,3.102,1203,5.103,1204,5.103,1205,6.191,1206,7.013,1207,6.191,1208,5.103,1209,4.319,1210,5.103,1211,4.856,1212,3.102,1213,4.778,1214,4.778,1215,3.102,1217,4.778,1220,4.778,1221,7.469,1225,4.778,1228,5.891,1231,4.778,1232,4.184,1235,2.716,1238,4.778,1239,4.778,1240,4.778,1241,4.438,1242,3.102,1246,4.184,1249,2.716,1250,2.716,1251,2.045,1252,3.102,1253,3.102,1254,3.102,1255,3.102,1256,3.102,1257,3.102,1972,4.438,4050,9.632,4051,3.437,4052,3.437,4053,3.437,4054,3.437,4055,5.295,4056,3.437,4057,4.778,4058,3.437,4059,3.437,4060,3.437,4061,3.437,4062,3.437,4063,3.437,4064,3.437,4065,3.437,4066,3.437,4067,3.437,4068,3.437,4069,3.437]],["title/classes/UpdateEmployeeMonthlyPDRDTO.html",[35,0.211,2933,4.424]],["body/classes/UpdateEmployeeMonthlyPDRDTO.html",[3,0.029,4,0.026,5,0.029,8,2.175,10,0.2,16,0.68,19,0.004,21,0.451,22,1.081,29,0.164,34,0.029,35,0.255,50,0.002,51,0.002,74,1.942,105,1.209,112,0.575,123,0.915,230,0.671,232,0.851,244,2.444,245,1.26,247,3.544,252,4.193,285,1.029,519,5.5,610,1.968,625,3.747,845,2.801,860,4.458,977,6.499,981,6.281,984,4.631,985,5.053,993,2.893,994,3.167,999,4.314,1028,3.712,1047,3.263,1053,2.585,1111,4.604,1169,4.661,1251,3.806,1258,5.933,1259,8.205,1261,6.07,1262,3.994,1263,5.675,1264,5.771,1265,5.053,1266,3.994,1268,5.771,1269,5.771,1270,5.771,1271,5.36,1272,5.053,1273,5.771,1274,3.994,1276,5.168,1279,5.771,1280,5.36,1281,5.771,1282,5.771,1283,5.771,1286,3.497,2933,5.36,2937,3.994,2938,8.205,3994,3.286,4070,6.395,4071,4.426,4072,4.426,4073,4.426,4074,4.426,4075,3.994,4076,4.426]],["title/classes/UpdateEmployeePdrActionDto.html",[35,0.211,1893,4.424]],["body/classes/UpdateEmployeePdrActionDto.html",[3,0.028,4,0.025,5,0.028,8,2.1,10,0.191,16,0.697,19,0.004,21,0.453,22,1.096,29,0.176,34,0.028,35,0.247,50,0.002,51,0.002,74,1.874,85,2.128,105,1.239,112,0.599,123,0.872,230,0.639,232,0.821,235,1.916,242,1.967,244,2.542,245,1.2,247,3.593,251,5.352,252,3.81,254,4.365,261,1.417,285,0.98,373,5.786,610,2.106,625,3.606,703,2.511,845,2.87,972,4.878,974,3.034,993,2.814,994,3.217,999,4.382,1028,3.583,1047,3.149,1053,2.514,1111,4.444,1232,4.878,1251,4.784,1263,5.994,1265,4.878,1272,4.878,1286,4.878,1287,5.77,1288,8.334,1290,3.804,1291,6.76,1292,6.433,1295,3.804,1299,4.444,1302,4.878,1303,5.174,1304,5.57,1306,3.534,1307,3.331,1308,3.804,1309,3.804,1893,5.174,1899,3.804,1902,8.334,3994,3.196,4046,5.57,4048,3.804,4077,4.216,4078,4.216,4079,4.216,4080,4.216,4081,4.216,4082,4.216,4083,4.216,4084,4.216]],["title/classes/UpdateEmployeeSpendingAuthDto.html",[35,0.211,3221,4.424]],["body/classes/UpdateEmployeeSpendingAuthDto.html",[3,0.042,4,0.038,5,0.042,8,2.815,10,0.292,16,0.503,19,0.004,21,0.298,22,0.901,29,0.2,34,0.042,35,0.331,45,1.577,50,0.003,51,0.003,105,0.895,112,0.523,123,1.335,230,0.979,232,1.101,235,2.569,244,2.459,245,1.838,247,2.305,252,4.109,290,2.591,373,5.056,589,5.517,845,2.657,993,3.188,994,2.883,999,3.927,1169,4.69,1251,4.925,1276,5.2,1311,5.958,1313,4.649,1315,6.539,1316,5.732,1327,4.649,3221,6.936,3227,7.468,3994,3.997,4085,7.217,4086,5.412,4087,6.457,4088,5.827]],["title/classes/UpdateInvoiceSpendingAuthDto.html",[35,0.211,3220,4.424]],["body/classes/UpdateInvoiceSpendingAuthDto.html",[3,0.042,4,0.038,5,0.042,8,2.815,10,0.292,16,0.503,19,0.004,21,0.298,22,0.901,29,0.2,34,0.042,35,0.331,50,0.003,51,0.003,105,0.895,112,0.523,123,1.335,230,0.979,232,1.101,235,2.569,244,2.459,245,1.838,247,2.305,290,2.591,589,5.517,595,6.33,703,2.627,845,2.657,993,3.188,994,2.883,999,3.927,1169,4.69,1251,4.925,1276,5.2,1311,5.958,1313,4.649,1315,6.539,1316,5.732,1327,4.649,3220,6.936,3226,7.468,3994,3.997,4085,7.217,4086,5.412,4088,5.827,4089,6.457]],["title/classes/UpdateLocationDto.html",[35,0.211,4033,4.424]],["body/classes/UpdateLocationDto.html",[3,0.025,4,0.022,5,0.025,8,2.318,10,0.17,16,0.744,19,0.004,20,1.469,21,0.458,22,1.136,29,0.166,34,0.025,35,0.303,50,0.002,51,0.002,105,1.322,112,0.653,123,0.775,230,0.568,232,0.753,234,4.96,241,3.889,244,2.835,245,1.068,247,3.266,285,0.872,610,1.483,832,2.597,833,2.597,838,5.256,839,5.256,840,5.256,841,5.256,842,5.256,843,5.256,844,5.256,845,2.615,846,5.256,971,2.033,980,6.165,994,3.461,995,2.781,996,1.811,998,2.291,1060,2.291,1061,2.963,1066,4.254,1080,2.819,1086,4.743,1087,4.743,1090,4.743,1091,4.743,1092,4.743,1093,4.743,1094,4.743,1095,4.743,1096,4.254,1097,4.743,1098,4.743,1099,4.743,1100,4.743,1101,4.743,1102,4.471,1103,4.471,1104,4.743,1149,3.384,1331,3.384,1333,3.384,1334,3.384,1337,3.384,1341,3.384,1343,3.384,1345,3.384,1347,3.384,1349,3.384,3994,1.641,4033,4.743,4036,8.748,4090,5.658,4091,3.75,4092,3.75,4093,3.75,4094,3.75,4095,3.75,4096,3.75,4097,3.75,4098,3.75,4099,3.75,4100,3.75,4101,3.75,4102,3.75]],["title/classes/UpdateMaterialDto.html",[35,0.211,2320,4.171]],["body/classes/UpdateMaterialDto.html",[3,0.052,4,0.046,5,0.052,8,3.186,19,0.004,29,0.205,34,0.052,35,0.315,50,0.003,51,0.003,123,1.632,230,1.196,285,1.834,1350,5.934,1352,7.122,2320,7.402,2324,6.615,3994,3.454,4103,7.892,4104,9.367]],["title/classes/UpdateNotificationDto.html",[35,0.211,2363,4.424]],["body/classes/UpdateNotificationDto.html",[3,0.052,4,0.046,5,0.052,8,3.186,19,0.004,29,0.205,34,0.052,35,0.315,50,0.003,51,0.003,123,1.632,230,1.196,285,1.834,1353,6.236,1355,7.122,2363,7.851,2365,7.122,3994,3.454,4105,7.892,4106,9.367]],["title/classes/UpdateOfferDto.html",[35,0.211,2392,4.424]],["body/classes/UpdateOfferDto.html",[3,0.03,4,0.027,5,0.03,8,2.244,10,0.209,16,0.74,19,0.004,20,1.066,21,0.438,22,1.133,29,0.168,34,0.03,35,0.263,50,0.002,51,0.002,105,1.316,112,0.583,123,0.955,230,0.7,232,0.878,234,5.147,235,3.232,241,3.895,244,2.493,245,1.316,247,3.389,261,2.217,285,1.074,610,2.198,625,3.275,703,3.863,855,4.834,857,3.474,993,2.541,994,3.382,1007,3.65,1027,4.002,1028,4.464,1047,3.924,1069,6.04,1070,6.99,1162,4.834,1222,5.953,1356,3.651,1358,4.17,1365,5.953,1366,4.411,1368,5.811,1373,5.953,1374,5.953,1423,3.873,2392,5.529,2397,4.17,3994,2.023,4107,9.708,4108,6.596,4109,4.621,4110,4.621,4111,4.621,4112,4.621,4113,4.621,4114,4.621,4115,4.621,4116,4.621,4117,4.621,4118,4.621,4119,4.621]],["title/classes/UpdatePayPalPaymentDto.html",[35,0.211,4120,4.763]],["body/classes/UpdatePayPalPaymentDto.html",[3,0.046,4,0.041,5,0.046,8,2.969,10,0.318,16,0.74,19,0.004,21,0.438,22,0.95,29,0.154,34,0.046,35,0.281,50,0.003,51,0.003,105,1.21,112,0.601,230,1.065,232,1.161,290,2.819,610,1.841,1035,3.656,1037,4.541,1039,5.838,1175,5.838,2767,7.96,2807,5.553,4002,8.071,4004,5.89,4005,6.341,4006,5.89,4007,6.341,4120,7.878,4121,8.729,4122,7.027,4123,7.027]],["title/interfaces/UpdatePayPalPaymentInterface.html",[337,1.441,2920,4.424]],["body/interfaces/UpdatePayPalPaymentInterface.html",[3,0.05,4,0.044,5,0.05,8,3.11,10,0.343,19,0.004,21,0.35,22,0.995,29,0.166,34,0.05,50,0.003,51,0.003,112,0.621,232,1.217,290,3.042,337,2.07,338,3.042,773,5.458,1035,3.944,1052,5.7,2767,8.546,2836,5.458,2920,7.665,3990,7.759,4124,7.581]],["title/classes/UpdatePaymentDto.html",[35,0.211,4002,4.171]],["body/classes/UpdatePaymentDto.html",[3,0.044,4,0.04,5,0.044,8,2.903,10,0.307,16,0.665,19,0.004,21,0.394,29,0.204,34,0.044,35,0.341,50,0.003,51,0.003,105,1.183,112,0.54,123,1.402,230,1.028,232,1.136,244,2.536,245,1.93,285,1.576,610,2.237,993,3.289,994,3.255,1033,5.357,1035,5.101,1036,5.682,1037,4.86,1039,6.248,1047,4.355,2807,5.357,3994,2.967,4002,6.745,4004,5.682,4006,5.682,4125,9.342,4126,8.536,4127,6.779,4128,6.779]],["title/classes/UpdateProductDto.html",[35,0.211,2997,4.424]],["body/classes/UpdateProductDto.html",[3,0.022,4,0.02,5,0.022,8,1.791,10,0.154,16,0.759,19,0.004,20,0.891,21,0.449,22,1.149,29,0.188,34,0.022,35,0.21,45,2.379,50,0.002,51,0.002,85,1.394,105,1.35,112,0.522,123,0.705,230,0.517,232,0.7,235,3.277,242,1.592,244,2.147,245,0.971,247,3.477,285,0.793,610,2.162,617,2.787,703,3.357,857,2.903,968,3.133,993,2.028,994,3.431,999,4.673,1027,2.739,1047,3.687,1162,4.039,1163,3.484,1368,5.715,1378,3.055,1388,5.056,1392,2.282,1393,2.86,1394,2.696,1396,3.079,1397,5.079,1398,5.079,1399,5.079,1400,4.833,1401,5.079,1402,5.079,1403,5.079,1404,4.833,1406,3.079,1407,5.518,1408,5.801,1409,3.079,1410,5.409,1412,3.079,1413,3.079,1414,3.079,1415,4.751,1416,3.079,1417,3.079,1418,3.079,1419,3.079,1421,3.079,1422,3.079,1423,2.86,1424,3.079,1425,3.079,1426,5.871,1428,3.079,1429,5.622,1431,3.079,1432,6.522,1433,4.628,1434,2.456,1435,2.565,1436,2.696,1437,3.079,1438,3.079,1439,3.079,2997,4.413,3001,3.079,3994,1.493,4017,4.751,4086,8.164,4129,9.848,4130,5.264,4131,3.412,4132,3.412,4133,3.412,4134,3.412,4135,3.412]],["title/classes/UpdateRefreshDto.html",[35,0.211,4136,4.763]],["body/classes/UpdateRefreshDto.html",[3,0.05,4,0.044,5,0.05,10,0.344,16,0.593,19,0.004,21,0.351,29,0.166,34,0.05,35,0.366,50,0.003,51,0.003,105,1.054,112,0.579,230,1.153,232,1.219,243,3.626,244,2.722,245,2.165,1554,6.864,2294,7.08,4136,8.269,4137,8.269,4138,7.606,4139,7.606]],["title/classes/UpdateSpendingAuthDto.html",[35,0.211,4085,4.171]],["body/classes/UpdateSpendingAuthDto.html",[3,0.03,4,0.027,5,0.03,8,2.257,10,0.211,16,0.721,19,0.004,21,0.469,22,1.117,29,0.184,34,0.03,35,0.265,50,0.002,51,0.002,105,1.282,112,0.615,123,0.963,230,0.706,232,0.883,235,3.185,241,3.819,242,2.173,244,2.748,245,1.326,247,3.302,254,4.54,261,1.566,285,1.083,589,5.39,610,1.738,703,4.174,826,3.546,974,3.261,993,2.977,994,3.316,1037,4.019,1047,3.384,1053,2.659,1171,4.595,1311,6.852,1313,3.354,1314,3.502,1316,5.832,1322,5.242,1324,5.762,1327,3.354,1368,4.595,1444,3.502,1445,2.473,1446,4.204,2081,5.809,3994,2.039,4085,5.242,4140,9.517,4141,6.634,4142,4.658,4143,4.658,4144,6.634,4145,6.634,4146,4.658,4147,4.658,4148,4.658,4149,4.658,4150,4.658,4151,4.658,4152,4.658]],["title/classes/UpdateStockDto.html",[35,0.211,3301,4.424]],["body/classes/UpdateStockDto.html",[3,0.045,4,0.04,5,0.045,8,2.925,10,0.31,16,0.535,19,0.004,21,0.316,22,0.936,29,0.205,34,0.045,35,0.343,50,0.003,51,0.003,85,2.277,105,0.951,112,0.544,123,1.418,230,1.04,232,1.144,244,2.555,245,1.953,247,3.069,285,1.594,290,3.45,617,3.62,845,2.202,984,3.641,993,3.313,994,2.996,999,4.081,1171,4.751,1448,5.421,1450,6.191,3301,7.208,3306,6.191,3994,3.003,4153,8.599,4154,8.599,4155,6.86,4156,6.86]],["title/classes/UpdateStockGardDto.html",[35,0.211,4157,4.763]],["body/classes/UpdateStockGardDto.html",[3,0.041,4,0.037,5,0.041,8,2.78,10,0.287,16,0.494,19,0.004,21,0.456,22,1.041,29,0.216,34,0.041,35,0.361,50,0.003,51,0.003,105,0.877,123,1.309,230,0.96,232,1.087,245,1.803,285,1.472,290,3.279,845,2.033,984,3.362,994,2.847,995,4.017,996,3.058,999,3.878,1007,4.294,1455,4.255,1456,3.784,1463,5.004,1464,5.136,1466,5.715,1467,6.409,1468,6.458,1471,4.386,1472,4.386,1560,6.458,3349,5.715,3994,2.772,4157,7.376,4158,8.173,4159,8.173,4160,6.333,4161,6.333]],["title/classes/UpdateStockItemDto.html",[35,0.211,3432,4.424]],["body/classes/UpdateStockItemDto.html",[3,0.034,4,0.031,5,0.034,8,2.458,10,0.238,16,0.643,19,0.004,20,1.29,21,0.381,22,1.121,29,0.194,34,0.034,35,0.289,50,0.002,51,0.002,92,3.094,105,1.143,112,0.562,123,1.088,230,0.798,232,0.961,242,2.456,244,2.639,245,1.499,247,3.432,285,1.223,845,3.22,974,3.552,984,4.38,994,3.094,999,4.214,1163,5.045,1302,4.159,1455,4.29,1456,3.897,1464,5.581,1473,4.159,1475,4.75,1476,7.23,1479,6.521,1480,6.521,1481,6.521,1482,8.677,1483,4.75,1487,3.79,1488,3.52,1489,4.75,3191,7.446,3432,6.057,3434,4.75,3435,8.015,3994,2.304,4162,7.226,4163,5.264,4164,5.264,4165,5.264,4166,5.264,4167,5.264]],["title/classes/UpdateStockItemLogsDto.html",[35,0.211,4168,4.763]],["body/classes/UpdateStockItemLogsDto.html",[3,0.031,4,0.028,5,0.031,8,2.303,10,0.217,16,0.665,19,0.004,21,0.466,22,1.153,29,0.204,34,0.031,35,0.314,50,0.002,51,0.002,74,1.456,85,1.269,92,2.358,105,1.182,112,0.539,123,0.991,230,0.727,232,0.901,242,2.237,244,2.534,245,1.365,285,1.114,290,2.716,845,2.738,974,3.328,984,4.527,993,3.024,994,3.134,995,3.328,996,2.315,999,4.269,1053,3.096,1453,5.901,1455,4.169,1456,4.23,1462,4.018,1464,5.653,1467,5.825,1471,3.32,1472,3.32,1487,3.451,1490,4.326,1491,5.521,1492,5.35,1495,5.703,1499,3.32,1501,4.326,3462,5.901,3994,3.435,4168,6.11,4169,8.996,4170,4.794,4171,4.794,4172,4.794,4173,4.794,4174,4.794,4175,4.794,4176,4.794,4177,4.794]],["title/classes/UpdateStockItemQuantityDto.html",[35,0.211,4178,4.763]],["body/classes/UpdateStockItemQuantityDto.html",[3,0.038,4,0.034,5,0.038,8,2.618,10,0.261,16,0.6,19,0.004,21,0.426,22,1.115,29,0.189,34,0.038,35,0.307,50,0.003,51,0.003,92,3.215,105,1.066,112,0.487,123,1.195,230,0.876,232,1.024,244,2.287,245,1.645,247,3.294,285,1.343,610,2.268,845,2.471,857,4.34,984,4.085,993,2.965,994,3.015,999,4.106,1047,3.926,1169,4.362,1171,4.002,1276,4.836,1455,4.228,1456,4.181,1464,5.438,1467,5.603,1472,4.002,1502,5.214,1503,6.23,3994,3.788,4075,5.214,4178,6.945,4179,8.653,4180,6.945,4181,5.778,4182,5.778,4183,5.778]],["title/classes/UpdateStockTransactionDto.html",[35,0.211,3633,4.424]],["body/classes/UpdateStockTransactionDto.html",[3,0.034,4,0.031,5,0.034,8,2.454,10,0.238,16,0.642,19,0.004,21,0.454,22,1.046,29,0.21,34,0.034,35,0.329,45,1.283,50,0.002,51,0.002,105,1.142,112,0.456,123,1.086,230,0.796,232,0.96,242,2.45,244,2.449,245,1.495,247,2.575,285,1.221,617,2.575,826,4.268,845,2.646,984,4.375,993,2.78,994,3.091,995,3.546,996,2.536,999,4.21,1031,2.91,1169,4.089,1251,3.125,1276,4.534,1445,2.788,1455,4.061,1456,3.511,1459,4.402,1464,5.576,1467,6.022,1468,5.701,1471,3.638,1472,3.638,1487,3.781,1491,4.566,1492,5.701,1556,6.512,1558,4.74,1559,6.512,1560,5.701,1563,6.511,3612,5.934,3633,6.047,3635,4.74,3636,8.007,3994,3.607,4184,5.252,4185,5.252,4186,5.252,4187,5.252,4188,5.252,4189,5.252,4190,5.252,4191,5.252]],["title/classes/UpdateSupplierDto.html",[35,0.211,3731,4.424]],["body/classes/UpdateSupplierDto.html",[3,0.035,4,0.032,5,0.035,8,2.501,10,0.244,16,0.652,19,0.004,20,1.301,21,0.472,22,1.054,29,0.205,34,0.035,35,0.334,45,1.319,50,0.002,51,0.002,105,1.159,112,0.594,123,1.116,230,0.818,232,0.978,244,2.484,245,1.537,247,3.204,253,4.11,261,1.815,285,1.255,845,2.684,984,4.438,994,3.127,995,3.614,996,2.607,997,3.299,998,3.299,999,4.26,1001,4.493,1026,3.06,1027,3.825,1031,2.991,1032,3.06,1060,5.738,1135,5.294,1139,3.887,1209,5.591,1507,4.267,1509,4.873,1510,6.711,1511,4.873,1513,6.635,1516,6.163,1518,4.873,1520,4.873,1521,4.873,3731,6.163,3735,4.873,3994,2.363,4192,8.976,4193,7.353,4194,5.399,4195,5.399,4196,5.399,4197,5.399,4198,5.399]],["title/classes/UpdateTicketDto.html",[35,0.211,3833,4.171]],["body/classes/UpdateTicketDto.html",[3,0.029,4,0.026,5,0.029,8,2.166,10,0.199,16,0.729,19,0.004,21,0.432,22,1.124,29,0.205,34,0.029,35,0.254,50,0.002,51,0.002,74,1.934,85,2.172,105,1.297,112,0.574,123,0.91,230,0.667,232,0.847,242,2.053,244,2.437,245,1.253,285,1.023,617,2.928,826,3.995,845,3.359,974,4.032,984,3.973,993,2.884,994,3.338,999,4.547,1053,2.576,1163,4.718,1445,2.336,1488,2.943,1525,3.309,1527,3.971,1528,7.295,1529,6.878,1530,6.544,1535,6.029,1538,6.544,1541,6.029,1544,5.906,1545,3.477,1546,3.168,1547,5.266,1548,3.971,1549,3.971,1550,3.971,1551,3.971,3833,5.032,3842,3.971,3994,1.926,4057,7.402,4199,8.648,4200,6.368,4201,8.203,4202,4.401,4203,4.401,4204,4.401,4205,4.401,4206,6.368,4207,4.401,4208,4.401,4209,3.971,4210,4.401,4211,4.401,4212,4.401,4213,4.401,4214,4.401,4215,4.401,4216,4.401]],["title/classes/UpdateTicketUpdatesDto.html",[35,0.211,3923,4.424]],["body/classes/UpdateTicketUpdatesDto.html",[3,0.039,4,0.035,5,0.039,8,2.667,10,0.269,16,0.684,19,0.004,21,0.405,22,1.084,29,0.192,34,0.039,35,0.313,50,0.003,51,0.003,74,2.381,85,2.47,105,1.216,112,0.63,123,1.229,230,0.901,232,1.043,244,2.772,245,1.692,285,2.039,290,2.384,845,3.31,984,4.658,993,3.381,994,3.25,999,4.427,1053,3.02,1547,6.112,1552,4.695,1553,5.362,3923,6.571,3925,5.362,3994,2.601,4199,8.42,4209,5.362,4217,7.84,4218,5.941,4219,5.941,4220,5.941,4221,5.941,4222,5.941]],["title/classes/UpdateUserDto.html",[35,0.211,4223,4.424]],["body/classes/UpdateUserDto.html",[3,0.038,4,0.034,5,0.038,8,2.618,10,0.261,16,0.749,19,0.004,21,0.443,22,1.14,29,0.202,34,0.038,35,0.307,50,0.003,51,0.003,105,1.332,112,0.648,127,5.357,230,0.876,232,1.024,242,2.696,244,2.855,245,1.645,246,3.438,248,5.214,285,1.343,399,4.794,402,4.002,518,5.603,994,3.443,1026,3.275,1032,3.275,1567,6.506,1576,6.081,1580,5.214,1583,5.214,2294,6.23,3994,2.529,4137,8.919,4223,6.451,4224,7.696,4225,5.778,4226,5.778,4227,8.653,4228,5.778,4229,5.778,4230,5.778,4231,5.778,4232,5.778,4233,5.778,4234,5.214]],["title/classes/UpdateWalletDto.html",[35,0.211,4235,4.171]],["body/classes/UpdateWalletDto.html",[3,0.052,4,0.046,5,0.052,8,3.186,19,0.004,29,0.205,34,0.052,35,0.315,50,0.003,51,0.003,123,1.632,230,1.196,285,1.834,1585,5.934,1587,7.122,3994,3.454,4235,7.402,4236,7.892,4237,9.367,4238,6.615]],["title/classes/User.html",[35,0.211,74,1.603]],["body/classes/User.html",[3,0.031,4,0.028,5,0.031,10,0.217,16,0.777,19,0.004,21,0.46,29,0.172,34,0.044,35,0.192,39,1.023,45,2.621,50,0.002,51,0.002,74,2.059,105,1.382,112,0.62,127,5.065,189,1.074,230,0.728,232,0.902,235,3.044,246,2.859,258,4.359,261,2.279,266,3.991,270,2.128,271,1.827,277,2.361,399,4.353,483,5.657,484,4.026,485,2.405,518,5.088,703,3.801,745,5.316,826,3.606,860,4.627,1407,6.248,1567,5.908,1876,4.882,2294,5.657,3186,6.209,4239,4.335,4240,7.091,4241,6.586,4242,4.804,4243,4.804,4244,4.804,4245,4.804,4246,4.804,4247,4.804,4248,4.804,4249,4.804,4250,4.804,4251,4.804,4252,4.804,4253,4.026,4254,4.335]],["title/interfaces/UserInterface.html",[337,1.441,471,4.171]],["body/interfaces/UserInterface.html",[3,0.039,4,0.035,5,0.039,10,0.268,19,0.004,21,0.481,22,1.191,29,0.171,34,0.039,50,0.003,51,0.003,112,0.675,127,5.583,232,1.04,246,3.518,337,1.614,338,2.372,399,5.159,471,6.174,483,6.704,485,2.959,518,6.029,826,4.273,829,4.955,1407,6.969,1567,7.001,2294,6.704,3186,7.358,4240,8.403,4241,7.805,4255,5.911]],["title/controllers/UsersController.html",[93,1.264,4256,4.424]],["body/controllers/UsersController.html",[3,0.023,4,0.021,5,0.023,10,0.161,11,1.289,13,1.156,16,0.719,18,2.092,19,0.004,20,1.247,21,0.415,22,0.98,28,2.166,29,0.212,30,0.595,34,0.023,35,0.142,44,2.145,50,0.002,51,0.002,56,2.923,59,3.187,66,3.391,77,2.299,85,2.222,86,1.99,93,0.852,95,0.992,97,1.319,105,1.279,112,0.634,118,2.123,119,1.469,120,2.648,121,2.983,122,1.409,123,0.736,124,2.236,127,1.929,129,2.676,134,4.558,136,1.046,138,3.915,246,2.118,285,1.264,286,1.582,287,2.513,290,2.182,293,4.061,294,4.371,306,2.537,312,1.633,324,1.782,326,2.829,399,4.649,402,5.812,412,4.571,413,2.676,414,2.066,518,5.829,544,2.417,551,1.689,552,1.689,554,1.749,556,1.749,560,1.782,562,1.816,569,2.118,571,1.929,610,2.199,869,2.344,874,1.633,886,2.066,3002,2.676,3104,4.089,3107,6.31,3113,4.962,3737,3.212,4223,7.546,4234,4.908,4256,4.558,4257,3.559,4258,3.559,4259,5.438,4260,6.599,4261,5.438,4262,3.559,4263,5.438,4264,4.908,4265,3.559,4266,3.559,4267,3.559,4268,3.559,4269,3.559,4270,3.559,4271,3.559,4272,3.559,4273,3.559,4274,3.559,4275,3.559,4276,3.559,4277,3.559,4278,3.559,4279,5.438,4280,3.559,4281,3.559,4282,5.438,4283,3.559,4284,4.962,4285,3.212,4286,3.212,4287,3.212,4288,3.212,4289,3.212,4290,3.559,4291,3.559,4292,3.559,4293,3.559,4294,3.559,4295,3.559,4296,3.559,4297,3.559,4298,5.438,4299,3.559,4300,3.559,4301,3.559,4302,3.559,4303,3.559,4304,3.559,4305,3.559,4306,3.559,4307,3.559]],["title/modules/UsersModule.html",[146,1.754,178,3.063]],["body/modules/UsersModule.html",[3,0.033,4,0.03,5,0.033,19,0.004,20,1.125,29,0.228,30,0.853,34,0.033,35,0.204,50,0.002,51,0.002,59,5.034,68,3.117,74,2.147,95,1.971,146,2.697,148,2.267,149,2.267,150,2.341,151,2.341,152,2.304,153,3.725,154,3.725,166,6.166,167,6.596,178,6.199,180,3.245,181,2.304,182,2.341,184,3.607,187,5.316,188,2.765,189,1.14,270,2.548,280,2.602,601,2.826,1714,4.031,2356,4.603,3104,3.835,3111,5.927,3113,7.84,3147,4.603,3148,4.603,4253,5.927,4256,6.803,4284,7.16,4285,4.603,4286,4.603,4287,4.603,4288,4.603,4289,4.603,4308,4.603,4309,5.101,4310,4.603,4311,4.603,4312,5.101,4313,5.101,4314,4.603,4315,4.031,4316,5.927,4317,4.603,4318,4.603,4319,5.101,4320,5.101]],["title/injectables/UsersService.html",[0,1.06,59,2.548]],["body/injectables/UsersService.html",[0,0.696,2,0.669,3,0.013,4,0.012,5,0.013,10,0.092,11,0.821,13,0.662,16,0.713,18,2.102,19,0.004,20,1.307,21,0.417,22,0.984,28,2.123,29,0.166,30,0.341,34,0.013,35,0.081,38,3.307,39,1.27,44,2.074,45,1.301,47,3.307,48,3.775,50,0.001,51,0.001,56,3.678,59,1.672,66,4.577,74,1.617,77,0.71,85,2.01,86,3.48,91,3.481,92,2.079,101,3.125,111,3.125,112,0.671,124,3.346,127,4.599,189,0.455,233,4.133,246,1.213,272,0.599,285,0.805,287,1.811,347,2.197,353,5.477,354,1.389,368,0.853,376,1.802,383,1.04,399,4.035,452,3.125,466,2.242,471,6.213,480,1.32,482,2.903,483,1.467,485,1.02,498,1.839,507,1.839,508,1.839,515,1.839,525,1.708,700,2.242,703,0.829,823,6.105,826,0.935,829,1.708,869,1.493,874,1.589,958,1.467,968,1.213,1601,2.01,1611,2.176,1674,2.903,1676,1.708,1850,2.493,2070,1.839,2294,2.493,2302,4.075,3402,1.61,3413,1.708,3477,1.839,3517,1.61,3518,1.708,4241,1.708,4314,1.839,4321,2.038,4322,4.516,4323,4.516,4324,3.463,4325,3.463,4326,3.463,4327,3.463,4328,3.463,4329,3.463,4330,4.516,4331,3.463,4332,3.463,4333,2.038,4334,2.038,4335,3.463,4336,3.463,4337,5.325,4338,2.038,4339,2.038,4340,2.038,4341,2.038,4342,2.038,4343,5.325,4344,2.038,4345,2.038,4346,3.463,4347,2.038,4348,3.463,4349,2.038,4350,2.038,4351,3.463,4352,2.038,4353,2.038,4354,3.463,4355,2.038,4356,3.463,4357,2.038,4358,3.463,4359,2.038,4360,2.038,4361,5.325,4362,2.038,4363,3.463,4364,2.038,4365,2.038,4366,3.463,4367,5.325,4368,2.038,4369,2.038,4370,2.038,4371,2.038,4372,2.038,4373,3.463,4374,2.038,4375,2.038,4376,2.038,4377,2.038,4378,2.038,4379,2.038,4380,2.038,4381,2.038,4382,2.038,4383,2.038,4384,2.038,4385,2.038,4386,2.038,4387,2.038,4388,2.038,4389,3.463,4390,2.038,4391,4.516,4392,2.038,4393,2.038,4394,2.038,4395,2.038,4396,2.038,4397,2.038,4398,3.463,4399,2.038,4400,2.038,4401,2.038]],["title/injectables/VerifyEmailService.html",[0,1.06,4284,3.968]],["body/injectables/VerifyEmailService.html",[0,0.884,2,0.893,3,0.018,4,0.016,5,0.018,10,0.123,11,1.043,13,1.429,16,0.678,18,1.97,19,0.004,20,1.174,21,0.411,22,0.922,28,1.989,29,0.172,30,0.455,34,0.018,35,0.109,38,3.04,39,1.895,44,2.069,45,1.354,47,3.04,48,3.597,50,0.001,51,0.001,56,3.584,59,3.804,67,2.149,74,2.573,77,1.931,85,0.72,86,3.507,90,1.819,91,3.31,92,2.607,112,0.635,118,2.164,189,0.608,272,0.8,285,1.023,325,2.928,347,2.628,354,3.4,367,1.248,368,1.139,383,3.249,399,1.507,466,5.764,480,1.761,519,2.943,543,1.388,610,2.065,703,1.107,784,1.884,869,1.897,874,2.02,960,1.958,968,1.619,1299,3.169,1643,2.554,1850,1.958,2253,5.457,2267,3.478,2269,2.28,2276,2.28,2300,2.28,3107,7.036,3116,3.972,3118,3.972,3119,5.748,3120,3.972,3122,3.972,3123,3.972,3127,3.689,3129,3.972,3134,3.972,3141,3.972,3142,5.002,3149,2.455,3150,2.28,3151,2.455,3153,5.002,3154,2.455,3155,3.972,3156,2.455,3157,2.455,3158,2.455,3160,2.455,3164,2.455,3167,2.455,3171,2.455,3177,2.455,3178,2.455,3179,2.455,3181,3.972,3182,2.455,3183,2.455,3184,2.455,3185,2.455,3186,4.38,3190,2.455,4264,3.972,4284,3.309,4315,2.149,4317,2.455,4318,2.455,4402,8.902,4403,2.72,4404,4.401,4405,2.72,4406,2.72,4407,4.401,4408,2.72,4409,2.72,4410,2.72,4411,2.72,4412,2.72,4413,4.401,4414,2.72,4415,2.72,4416,4.401,4417,2.72,4418,4.401,4419,2.72,4420,2.72,4421,2.72,4422,2.72,4423,2.72,4424,5.543,4425,2.72,4426,2.72,4427,2.72,4428,2.72,4429,2.72,4430,6.369,4431,4.401,4432,2.72,4433,2.72,4434,2.72,4435,2.72,4436,2.72,4437,2.72,4438,2.72,4439,4.401,4440,2.72,4441,2.72,4442,2.72,4443,2.72]],["title/classes/VerifyUserEmail.html",[35,0.211,4315,4.171]],["body/classes/VerifyUserEmail.html",[3,0.042,4,0.037,5,0.042,10,0.29,16,0.642,19,0.004,21,0.42,29,0.199,34,0.054,35,0.256,39,1.363,45,2.584,50,0.003,51,0.003,74,3.14,105,1.141,112,0.521,189,1.431,230,0.971,232,1.095,235,2.824,258,2.988,260,2.72,261,2.767,262,3.603,266,3.552,270,2.584,271,2.435,272,2.42,277,3.147,278,2.892,280,3.267,610,2.157,860,5.205,3107,6.84,3110,5.778,4315,6.504,4316,5.367,4444,8.209,4445,5.778,4446,6.403,4447,6.403,4448,5.778]],["title/interfaces/VerifyandGenerateRefreshToken.html",[337,1.441,457,4.424]],["body/interfaces/VerifyandGenerateRefreshToken.html",[3,0.051,4,0.045,5,0.051,10,0.35,19,0.004,21,0.427,34,0.051,50,0.003,51,0.003,112,0.674,232,1.231,233,7.109,337,2.112,338,3.103,457,7.757,495,7.39,4449,7.733]],["title/classes/Wallet.html",[35,0.211,4450,4.171]],["body/classes/Wallet.html",[3,0.055,4,0.049,5,0.055,19,0.003,34,0.055,35,0.333,50,0.003,51,0.003,230,1.266,4450,7.65,4451,8.349]],["title/controllers/WalletController.html",[93,1.264,4452,4.424]],["body/controllers/WalletController.html",[3,0.034,4,0.03,5,0.034,10,0.233,11,1.689,16,0.72,18,2.046,19,0.004,20,1.22,21,0.406,22,0.958,28,2.169,29,0.202,30,0.862,34,0.034,35,0.206,36,2.069,44,2.148,50,0.002,51,0.002,85,2.53,93,1.235,95,1.438,97,1.912,105,1.28,112,0.641,118,2.782,119,2.128,120,3.275,122,2.041,123,1.067,136,1.516,285,1.656,286,2.293,287,2.995,290,2.859,306,3.325,312,2.367,324,2.582,543,3.635,544,3.167,549,2.994,551,2.448,552,3.381,554,2.535,556,3.502,560,2.582,562,2.631,567,3.573,569,3.069,571,2.796,1585,7.185,4235,7.887,4238,5.973,4450,4.076,4452,5.973,4453,5.158,4454,4.655,4455,5.158,4456,5.158,4457,5.158,4458,5.158,4459,5.158,4460,6.138,4461,4.655,4462,5.158,4463,5.158,4464,5.158,4465,5.158,4466,5.158,4467,5.158,4468,5.158]],["title/modules/WalletModule.html",[146,1.754,179,3.968]],["body/modules/WalletModule.html",[3,0.047,4,0.042,5,0.047,19,0.004,29,0.209,30,1.197,34,0.047,35,0.286,50,0.003,51,0.003,95,2.462,146,3.181,148,3.182,149,3.182,150,3.285,151,3.285,152,3.232,153,4.394,154,3.285,179,7.863,180,4.052,181,3.232,182,3.285,4452,8.026,4460,7.863,4461,6.459,4469,6.459,4470,6.459,4471,7.158,4472,7.158]],["title/injectables/WalletService.html",[0,1.06,4460,3.968]],["body/injectables/WalletService.html",[0,1.496,2,1.807,3,0.036,4,0.032,5,0.036,10,0.249,11,1.765,16,0.737,18,2.103,19,0.004,20,1.254,21,0.417,22,0.985,28,2.339,29,0.185,30,0.92,34,0.036,35,0.22,44,2.197,50,0.003,51,0.003,85,2.58,92,1.917,112,0.598,251,5.237,285,1.731,287,3.077,290,2.988,543,3.8,544,3.311,549,4.322,551,3.534,554,3.661,560,2.755,562,2.807,610,2.692,614,3.961,615,3.68,616,3.961,1585,7.107,4235,7.873,4238,6.242,4450,7.469,4454,6.721,4460,5.6,4473,5.502,4474,5.502,4475,5.502,4476,5.502,4477,5.502,4478,5.502]],["title/dependencies.html",[149,2.826,4479,3.962]],["body/dependencies.html",[19,0.004,30,1.104,31,4.575,33,4.15,35,0.335,50,0.003,51,0.003,68,4.035,72,7.577,73,5.536,123,1.366,149,2.936,189,1.476,211,5.96,245,1.88,272,1.941,414,3.833,432,5.536,482,5.536,996,3.189,2140,5.536,2192,5.536,2274,5.96,2836,4.755,2872,5.96,2873,5.536,2874,7.577,4480,6.605,4481,6.605,4482,6.605,4483,6.605,4484,6.605,4485,9.23,4486,6.605,4487,6.605,4488,6.605,4489,6.605,4490,6.605,4491,6.605,4492,6.605,4493,6.605,4494,6.605,4495,6.605,4496,6.605,4497,6.605,4498,6.605,4499,6.605,4500,6.605,4501,6.605,4502,6.605,4503,6.605,4504,6.605,4505,6.605,4506,6.605,4507,6.605,4508,6.605,4509,6.605]],["title/miscellaneous/enumerations.html",[4510,2.936,4511,5.737]],["body/miscellaneous/enumerations.html",[10,0.133,19,0.004,50,0.002,51,0.002,74,1.422,98,4.226,127,2.538,257,3.52,483,3.371,484,2.463,744,3.52,746,7.457,772,3.371,792,4.794,1042,3.52,1055,3.52,1071,2.209,1115,2.463,1128,3.925,1158,3.371,1160,3.371,1165,3.131,1183,2.115,1185,2.115,1187,1.965,1196,3.925,1206,3.52,1228,3.52,1241,2.463,1292,3.52,1299,2.115,1303,3.925,1306,2.463,1324,3.032,1388,3.032,1391,4.389,1410,3.243,1426,3.52,1429,3.371,1444,2.209,1456,1.853,1476,3.52,1487,4.203,1491,3.689,1495,3.131,1524,3.925,1530,3.52,1535,3.243,1538,3.52,1541,3.243,1825,3.7,1845,3.131,1877,2.652,1960,5.261,2101,2.652,2308,4.226,2836,3.371,2911,3.925,3478,3.7,3612,3.371,3684,4.226,3687,6.009,3694,4.226,3989,2.652,4180,2.652,4510,1.965,4511,2.652,4512,2.938,4513,8.439,4514,2.938,4515,4.682,4516,2.938,4517,4.682,4518,2.938,4519,4.682,4520,2.938,4521,2.938,4522,2.938,4523,4.682,4524,4.226,4525,4.682,4526,5.837,4527,4.682,4528,4.682,4529,2.938,4530,4.682,4531,5.837,4532,4.682,4533,4.682,4534,2.938,4535,4.682,4536,2.938,4537,2.938,4538,2.938,4539,7.748,4540,5.268,4541,6.658,4542,4.682,4543,6.009,4544,4.682,4545,4.682,4546,2.652,4547,4.682,4548,4.682,4549,4.682,4550,4.682,4551,7.748,4552,4.682,4553,4.682,4554,4.682,4555,2.938,4556,2.938,4557,2.938,4558,2.938,4559,2.938,4560,2.938,4561,2.938,4562,2.938,4563,2.938,4564,2.938,4565,2.938,4566,2.652,4567,2.938,4568,2.938,4569,4.682,4570,4.682,4571,4.682,4572,6.658,4573,2.938,4574,4.682,4575,5.837,4576,7.748,4577,2.938,4578,4.682,4579,4.682,4580,4.682,4581,2.938,4582,2.938,4583,5.837,4584,4.682,4585,4.682,4586,4.682,4587,4.682,4588,4.682,4589,4.682,4590,4.682,4591,2.938,4592,2.938,4593,2.938,4594,2.938,4595,2.938,4596,2.938,4597,2.938,4598,2.938,4599,2.938,4600,2.938,4601,4.682,4602,2.938,4603,2.938,4604,2.938,4605,2.938,4606,2.938,4607,2.938,4608,4.682,4609,2.938,4610,4.682,4611,4.682,4612,6.009,4613,6.658,4614,4.682,4615,4.682,4616,4.682,4617,2.938,4618,2.938,4619,4.682,4620,4.682,4621,4.682,4622,4.682,4623,4.682,4624,4.682,4625,4.682,4626,4.682,4627,2.938,4628,4.682,4629,4.682,4630,4.682,4631,4.682]],["title/miscellaneous/functions.html",[4510,2.936,4632,5.737]],["body/miscellaneous/functions.html",[10,0.35,18,1.797,19,0.003,20,1.072,21,0.357,22,0.842,28,1.815,50,0.003,51,0.003,152,4.472,625,4.159,1407,5.172,4510,5.172,4632,6.979,4633,7.733,4634,9.254,4635,7.733,4636,7.733,4637,7.733,4638,7.733,4639,9.254,4640,9.254,4641,7.733]],["title/index.html",[10,0.199,4642,4.39,4643,4.39]],["body/index.html",[4,0.037,19,0.004,50,0.003,51,0.003,247,3.243,845,2.05,1102,5.046,1271,5.352,1280,5.352,2740,5.762,2873,5.352,3180,5.762,4612,5.762,4644,6.385,4645,6.385,4646,8.216,4647,6.385,4648,6.385,4649,6.385,4650,6.385,4651,9.085,4652,6.385,4653,6.385,4654,6.385,4655,6.385,4656,10.333,4657,6.385,4658,6.385,4659,10.159,4660,6.385,4661,6.385,4662,8.216,4663,6.385,4664,6.385,4665,6.385,4666,6.385,4667,8.216,4668,8.216,4669,6.385,4670,6.385,4671,6.385,4672,6.385,4673,8.216,4674,8.216,4675,6.385,4676,6.385,4677,6.385,4678,5.762,4679,6.385,4680,6.385,4681,6.385,4682,6.385,4683,6.385,4684,6.385,4685,6.385,4686,6.385,4687,5.762,4688,6.385,4689,6.385,4690,6.385,4691,6.385,4692,6.385,4693,6.385,4694,5.762]],["title/modules.html",[148,3.218]],["body/modules.html",[19,0.003,50,0.003,51,0.003,147,4.707,148,2.648,157,4.479,158,4.479,159,3.457,160,4.479,161,4.479,162,4.289,163,4.289,164,4.479,165,4.126,166,3.857,167,4.126,168,4.479,169,4.479,170,4.289,171,4.289,172,4.479,173,4.479,174,4.126,175,4.479,176,4.479,177,4.479,178,3.457,179,4.479,4678,10.007,4695,11.089,4696,11.089,4697,11.089]],["title/overview.html",[4698,6.533]],["body/overview.html",[2,0.784,19,0.004,50,0.001,51,0.001,52,3.999,59,3.596,95,0.665,131,3.505,146,0.793,147,8.431,148,1.06,149,1.06,150,1.095,151,1.095,152,1.077,153,1.095,154,1.095,155,2.153,156,2.153,157,6.425,158,6.691,159,5.395,160,4.905,161,4.905,162,5.819,163,6.513,164,4.905,165,6.697,166,5.394,167,5.396,168,4.905,169,6.076,170,6.152,171,7.264,172,6.9,173,4.905,174,5.77,175,7.378,176,5.599,177,6.425,178,5.732,179,4.905,180,1.814,181,1.077,182,1.095,230,0.362,313,3.805,338,0.957,423,2.153,425,2.153,426,3.805,558,3.805,573,2.153,575,2.153,576,3.805,577,3.805,645,4.322,660,2.153,661,2.153,662,2.153,720,3.805,730,2.153,731,2.153,754,3.805,760,4.679,804,3.805,813,2.153,814,2.153,879,5.361,892,2.153,893,2.153,894,2.153,1614,4.98,1650,5.361,1706,2.153,1707,2.153,1709,2.153,1801,3.936,1814,2.153,1815,2.153,1869,3.999,1882,3.999,1895,3.805,1914,4.431,1985,2.153,1986,2.153,1988,2.153,1989,3.805,2228,5.599,2232,2.153,2233,2.153,2234,2.153,2253,5.158,2256,2.153,2257,2.153,2258,2.153,2322,3.805,2332,2.153,2333,2.153,2348,2.153,2349,2.153,2351,3.999,2395,5.361,2407,2.153,2408,2.153,2410,2.153,2426,5.158,2477,3.999,2633,2.153,2634,2.153,2635,2.153,2637,3.999,2802,3.805,2805,3.811,2817,2.153,2819,2.153,3018,2.153,3020,2.153,3021,2.153,3113,5.599,3303,4.98,3345,3.805,3373,4.98,3453,3.644,3492,3.999,3538,2.153,3539,2.153,3540,2.153,3542,5.599,3733,3.805,3747,2.153,3749,2.153,3840,3.644,3860,2.153,3861,2.153,3863,3.805,4284,3.805,4308,2.153,4310,2.153,4311,2.153,4460,3.805,4469,2.153,4470,2.153,4566,2.153,4698,2.153,4699,2.385,4700,2.385,4701,2.385,4702,2.385]],["title/properties.html",[232,0.846,4479,3.962]],["body/properties.html",[19,0.004,50,0.003,51,0.003,232,1.107,845,2.671,4687,7.507,4694,7.507,4703,8.319,4704,8.319,4705,8.319]],["title/miscellaneous/typealiases.html",[4510,2.936,4706,6.358]],["body/miscellaneous/typealiases.html",[10,0.375,19,0.003,21,0.445,50,0.003,51,0.003,2267,7.618,3127,6.948,3150,6.948,4510,5.543,4707,8.289,4708,8.289,4709,9.641]],["title/miscellaneous/variables.html",[4510,2.936,4710,5.737]],["body/miscellaneous/variables.html",[10,0.159,19,0.004,21,0.162,45,0.856,50,0.002,51,0.002,74,1.632,112,0.222,124,3.377,127,3.973,250,3.163,281,4.505,282,3.163,412,3.723,581,2.635,582,4.505,584,2.77,586,2.524,587,4.505,588,2.77,589,4.061,591,2.524,592,4.505,593,2.77,596,4.505,618,3.163,628,4.505,629,3.163,741,3.163,745,5.915,746,7.297,752,4.505,753,3.163,831,2.938,836,4.505,837,2.938,847,4.247,848,2.938,854,3.163,865,4.247,866,3.163,1261,3.48,1263,3.119,1456,2.901,1588,3.163,1595,4.505,1596,3.163,1632,2.938,1633,4.85,1638,4.505,1639,3.163,1767,3.163,1768,4.505,1769,3.163,1820,3.163,1833,4.505,1834,3.163,1872,3.163,1880,4.505,1881,3.163,1945,3.163,1963,4.505,1964,3.163,1999,4.505,2001,4.505,2007,4.505,2008,4.85,2014,3.163,2017,4.85,2025,3.163,2082,5.166,2083,6.144,2087,5.166,2094,3.163,2102,4.85,2103,3.163,2173,3.163,2174,3.163,2366,3.163,2376,4.247,2377,3.163,2480,3.163,2512,4.505,2513,3.163,2537,4.247,2623,3.163,2624,4.85,2631,4.85,2632,3.163,2653,4.505,2766,3.163,2771,4.505,2772,3.163,2773,3.163,2787,4.505,2788,3.163,2964,3.163,2978,3.163,3105,3.163,3106,4.85,3111,4.505,3112,3.163,3198,4.85,3269,4.85,3276,3.163,3286,4.505,3287,3.163,3319,5.691,3320,4.85,3325,4.505,3326,3.163,3419,4.85,3424,4.505,3425,3.163,3484,4.85,3489,4.505,3490,3.163,3528,4.85,3536,4.505,3537,3.163,3546,4.505,3608,4.85,3617,3.163,3717,3.163,3721,4.505,3722,3.163,3791,3.163,3794,3.163,3809,3.163,3822,4.505,3823,3.163,3868,4.505,3903,3.163,3904,4.85,3909,3.163,4239,3.163,4253,4.505,4254,3.163,4316,4.505,4444,3.163,4445,4.85,4448,3.163,4510,2.344,4524,3.163,4540,7.134,4543,3.163,4546,5.899,4710,3.163,4711,3.505,4712,3.505,4713,3.505,4714,5.375,4715,3.505,4716,3.505,4717,3.505,4718,5.375,4719,3.505,4720,5.375,4721,3.505,4722,3.505,4723,3.505,4724,3.505,4725,3.505,4726,3.505,4727,3.505,4728,3.505,4729,3.505,4730,5.375,4731,3.505,4732,3.505,4733,3.505,4734,3.505,4735,3.505,4736,3.505,4737,3.505,4738,3.505,4739,3.505,4740,3.505,4741,3.505]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Cashier.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":958,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/ProductService.html":{},"injectables/StockService.html":{},"injectables/UsersService.html":{}}}],["0.0.1",{"_index":4704,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":4508,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":4495,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":4494,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":4502,"title":{},"body":{"dependencies.html":{}}}],["01",{"_index":1221,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["01'})@isdatestring()@isnotempty",{"_index":1233,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["01'})@isdatestring()@isoptional",{"_index":4055,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["0121asd014",{"_index":238,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["02",{"_index":1070,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{}}}],["03",{"_index":1111,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["0987654321",{"_index":1521,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["1",{"_index":968,"title":{"classes/CreateUserDto-1.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"injectables/PaypalService-1.html":{}},"body":{"injectables/CouponService.html":{},"classes/CreateProductDto.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/ResetPasswordService.html":{},"classes/UpdateProductDto.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["1.0.3",{"_index":4492,"title":{},"body":{"dependencies.html":{}}}],["1.1.23",{"_index":4481,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":4484,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":4505,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1115,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{},"miscellaneous/enumerations.html":{}}}],["10.0.0",{"_index":4485,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":4488,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":4489,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":4487,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1368,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/Order.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["10000000",{"_index":3154,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["11000",{"_index":3518,"title":{},"body":{"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/UsersService.html":{}}}],["123",{"_index":1240,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["123456789",{"_index":1257,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["123456789'})@isoptional()@isstring",{"_index":1215,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["1234567890",{"_index":1139,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["126",{"_index":4701,"title":{},"body":{"overview.html":{}}}],["134.0.0",{"_index":4496,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2499,"title":{},"body":{"classes/Order.html":{}}}],["15",{"_index":4558,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["17.1",{"_index":1081,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{}}}],["17.12.1",{"_index":4497,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":1265,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["1990",{"_index":1220,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["2.30.1",{"_index":4499,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1071,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"miscellaneous/enumerations.html":{}}}],["2020",{"_index":1069,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{}}}],["2023",{"_index":1232,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["2024",{"_index":1264,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["24",{"_index":4699,"title":{},"body":{"overview.html":{}}}],["25",{"_index":4561,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["250",{"_index":1320,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{}}}],["3.1.1",{"_index":4486,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1877,"title":{},"body":{"classes/DineinOrder.html":{},"miscellaneous/enumerations.html":{}}}],["34",{"_index":4702,"title":{},"body":{"overview.html":{}}}],["35",{"_index":4564,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3c",{"_index":1099,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["3th",{"_index":1101,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["4.0.1",{"_index":4503,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":4566,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["404",{"_index":2171,"title":{},"body":{"injectables/GoogleService.html":{}}}],["409",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["45",{"_index":1241,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"miscellaneous/enumerations.html":{}}}],["49",{"_index":4700,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1299,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/Product.html":{},"injectables/ResetPasswordService.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/enumerations.html":{}}}],["5.1.1",{"_index":4493,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":4180,"title":{},"body":{"classes/UpdateStockItemQuantityDto.html":{},"miscellaneous/enumerations.html":{}}}],["50000",{"_index":1254,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["50000})@isnumber()@isnotempty",{"_index":1218,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["50000})@isnumber()@isoptional",{"_index":4053,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860ea",{"_index":1251,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["507f191e810c19729de860ea'})@ismongoid()@isnotempty()@isstring",{"_index":1564,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["507f191e810c19729de860ea'})@ismongoid()@isoptional",{"_index":4066,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860ea'})@ismongoid()@isoptional()@isstring",{"_index":4188,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{}}}],["507f191e810c19729de860ea'})@isnotempty()@isstring()@ismongoid",{"_index":1277,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{}}}],["507f191e810c19729de860ea'})@isoptional()@ismongoid",{"_index":1244,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["507f191e810c19729de860ea'})@isoptional()@isstring()@ismongoid",{"_index":4070,"title":{},"body":{"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["507f191e810c19729de860eb",{"_index":1252,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860eb'})@ismongoid()@isoptional",{"_index":4068,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860eb'})@isnotempty()@ismongoid",{"_index":1247,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["507f1f77bcf86cd799439011",{"_index":1171,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemQuantityDto.html":{}}}],["507f1f77bcf86cd799439011'})@ismongoid()@isnotempty()@isstring",{"_index":1505,"title":{},"body":{"classes/CreateStockItemQuantityDto.html":{}}}],["507f1f77bcf86cd799439011'})@ismongoid()@isoptional()@isstring",{"_index":4182,"title":{},"body":{"classes/UpdateStockItemQuantityDto.html":{}}}],["507f1f77bcf86cd799439011'})@isnotempty()@isstring()@ismongoid",{"_index":1451,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["507f1f77bcf86cd799439011'})@isoptional()@isstring()@ismongoid",{"_index":4155,"title":{},"body":{"classes/UpdateStockDto.html":{}}}],["507f1f77bcf86cd799439012",{"_index":4145,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["59",{"_index":2522,"title":{},"body":{"classes/Order.html":{}}}],["6.9.12",{"_index":4501,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":3184,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["65d5b8076bf8d67aee25ccd2",{"_index":1374,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/UpdateOfferDto.html":{}}}],["65d5b8076bf8d67aee25ccd5",{"_index":1373,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/UpdateOfferDto.html":{}}}],["6789",{"_index":1256,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["6789'})@isoptional()@isstring",{"_index":1242,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["7.2.0",{"_index":4491,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":4509,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":4500,"title":{},"body":{"dependencies.html":{}}}],["8.5",{"_index":1283,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["999",{"_index":2523,"title":{},"body":{"classes/Order.html":{}}}],["99999999",{"_index":3156,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["_id",{"_index":700,"title":{},"body":{"injectables/BranchService.html":{},"injectables/CouponService.html":{},"injectables/OffersService.html":{},"injectables/ProductService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["a'})@isnotempty()@isstring",{"_index":1485,"title":{},"body":{"classes/CreateStockItemDto.html":{}}}],["abc",{"_index":1513,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["accept",{"_index":3697,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["access",{"_index":2288,"title":{},"body":{"injectables/MailService.html":{},"injectables/PaypalService.html":{}}}],["access_token",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"interfaces/Token.html":{}}}],["access_with_refresh",{"_index":2153,"title":{},"body":{"injectables/GoogleService.html":{}}}],["access_with_refresh).refresh_token",{"_index":2157,"title":{},"body":{"injectables/GoogleService.html":{}}}],["accesstoken",{"_index":2283,"title":{},"body":{"injectables/MailService.html":{},"injectables/PaypalService.html":{}}}],["acconting",{"_index":4627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["account",{"_index":1214,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["accounting",{"_index":4575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accountstatus",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["accountstatus.active",{"_index":4252,"title":{},"body":{"classes/User.html":{}}}],["accountstatus.block",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["action",{"_index":251,"title":{},"body":{"classes/Attendence.html":{},"interfaces/AttendenceInterface.html":{},"injectables/BillingService.html":{},"injectables/CartService.html":{},"injectables/CashierService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"controllers/EmpPdrActionController.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"injectables/WalletService.html":{}}}],["action.controller",{"_index":2003,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["action.controller.ts",{"_index":1886,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["action.controller.ts:23",{"_index":1887,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["action.controller.ts:32",{"_index":1888,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["action.controller.ts:37",{"_index":1890,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["action.controller.ts:42",{"_index":1889,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["action.controller.ts:47",{"_index":1894,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["action.controller.ts:52",{"_index":1891,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["action.dto",{"_index":1899,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.dto.ts",{"_index":1290,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.dto.ts:21",{"_index":1297,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{}}}],["action.dto.ts:23",{"_index":4081,"title":{},"body":{"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.dto.ts:30",{"_index":1300,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{}}}],["action.dto.ts:32",{"_index":4083,"title":{},"body":{"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.dto.ts:40",{"_index":1294,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{}}}],["action.dto.ts:42",{"_index":4078,"title":{},"body":{"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.dto.ts:48",{"_index":1305,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{}}}],["action.dto.ts:50",{"_index":4084,"title":{},"body":{"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.dto.ts:58",{"_index":1296,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{}}}],["action.dto.ts:59",{"_index":4079,"title":{},"body":{"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.dto.ts:69",{"_index":4080,"title":{},"body":{"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.enum",{"_index":1307,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["action.enum.ts",{"_index":4530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action.enums",{"_index":275,"title":{},"body":{"classes/Attendence.html":{},"interfaces/AttendenceInterface.html":{},"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["action.enums.ts",{"_index":4515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["action.service",{"_index":1897,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"modules/EmployeeModule.html":{}}}],["action.service.ts",{"_index":1912,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["action.service.ts:11",{"_index":1915,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["action.service.ts:19",{"_index":1917,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["action.service.ts:31",{"_index":1918,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["action.service.ts:39",{"_index":1920,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["action.service.ts:47",{"_index":1919,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["action.service.ts:57",{"_index":1925,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["action.service.ts:83",{"_index":1922,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["actions",{"_index":2744,"title":{},"body":{"injectables/OrderService.html":{}}}],["actions.interface",{"_index":1901,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{}}}],["actions.interface.ts",{"_index":2026,"title":{},"body":{"interfaces/EmployeePDRActionInterface.html":{}}}],["actions.model",{"_index":1930,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"modules/EmployeeModule.html":{}}}],["actions.model.ts",{"_index":2017,"title":{},"body":{"classes/EmployeePDRAction.html":{},"miscellaneous/variables.html":{}}}],["actions.model.ts:10",{"_index":2021,"title":{},"body":{"classes/EmployeePDRAction.html":{}}}],["actions.model.ts:13",{"_index":2022,"title":{},"body":{"classes/EmployeePDRAction.html":{}}}],["actions.model.ts:16",{"_index":2018,"title":{},"body":{"classes/EmployeePDRAction.html":{}}}],["actions.model.ts:19",{"_index":2023,"title":{},"body":{"classes/EmployeePDRAction.html":{}}}],["actions.model.ts:22",{"_index":2019,"title":{},"body":{"classes/EmployeePDRAction.html":{}}}],["actions.model.ts:25",{"_index":2020,"title":{},"body":{"classes/EmployeePDRAction.html":{}}}],["actions/create",{"_index":1289,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"controllers/EmpPdrActionController.html":{}}}],["actions/update",{"_index":1902,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["active",{"_index":4548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":3478,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["added",{"_index":3692,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["additional",{"_index":985,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["addoneroletouser",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["addoneroletouser(assignroledto",{"_index":460,"title":{},"body":{"injectables/AuthService.html":{}}}],["addoneroletouser(userid",{"_index":4336,"title":{},"body":{"injectables/UsersService.html":{}}}],["addrees",{"_index":1946,"title":{},"body":{"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{}}}],["address",{"_index":989,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeeDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeeDto.html":{}}}],["addroletouser",{"_index":100,"title":{},"body":{"controllers/AdminController.html":{}}}],["addroletouser(@body",{"_index":139,"title":{},"body":{"controllers/AdminController.html":{}}}],["addroletouser(asssignroledto",{"_index":103,"title":{},"body":{"controllers/AdminController.html":{}}}],["adds",{"_index":614,"title":{},"body":{"injectables/BillingService.html":{},"injectables/CartService.html":{},"injectables/CashierService.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"injectables/WalletService.html":{}}}],["addtransactiontostock",{"_index":3651,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["addtransactiontostock(transaction",{"_index":3657,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["admin",{"_index":98,"title":{},"body":{"controllers/AdminController.html":{},"miscellaneous/enumerations.html":{}}}],["admin/admin.controller",{"_index":439,"title":{},"body":{"modules/AuthModule.html":{}}}],["admincontroller",{"_index":94,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AuthModule.html":{}}}],["again",{"_index":3192,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["ahmed",{"_index":1574,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}}}],["ahmed@gmail.com",{"_index":1568,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}}}],["ali",{"_index":1097,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["aliases",{"_index":4707,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":1850,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OrderService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["amazing",{"_index":4679,"title":{},"body":{"index.html":{}}}],["amount",{"_index":1037,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/Payment.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"classes/SpendingAuthorization.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["any)._id",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"injectables/ResetPasswordService.html":{},"injectables/StockTransactionService.html":{}}}],["any).delivery_status",{"_index":1848,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["any).id",{"_index":2155,"title":{},"body":{"injectables/GoogleService.html":{}}}],["any).item.stock_item.name",{"_index":3598,"title":{},"body":{"injectables/StockService.html":{}}}],["any).user._id",{"_index":326,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PdrController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{}}}],["any).user.roles.includes(role",{"_index":2069,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["api",{"_index":2912,"title":{},"body":{"injectables/PaypalService.html":{}}}],["apibody",{"_index":3736,"title":{},"body":{"controllers/SupplierController.html":{}}}],["apiproperty",{"_index":241,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["apiproperty({description",{"_index":971,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["apiproperty({enum",{"_index":1224,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateTicketDto.html":{}}}],["apiproperty({example",{"_index":234,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{}}}],["apiproperty({type",{"_index":1061,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateLocationDto.html":{}}}],["apipropertyoptional",{"_index":999,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["apipropertyoptional({description",{"_index":984,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["apipropertyoptional({enum",{"_index":4057,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"classes/UpdateTicketDto.html":{}}}],["apipropertyoptional({example",{"_index":4086,"title":{},"body":{"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateProductDto.html":{}}}],["apitags",{"_index":122,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/NotificationsController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["apitags('auth",{"_index":133,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["apitags('billing",{"_index":563,"title":{},"body":{"controllers/BillingController.html":{}}}],["apitags('branch",{"_index":648,"title":{},"body":{"controllers/BranchController.html":{}}}],["apitags('cart",{"_index":723,"title":{},"body":{"controllers/CartController.html":{}}}],["apitags('coupon",{"_index":882,"title":{},"body":{"controllers/CouponController.html":{}}}],["apitags('customer",{"_index":1619,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{}}}],["apitags('delivery",{"_index":1772,"title":{},"body":{"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{}}}],["apitags('dinein",{"_index":1866,"title":{},"body":{"controllers/DineInController.html":{}}}],["apitags('employee",{"_index":321,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/PdrController.html":{}}}],["apitags('location",{"_index":2230,"title":{},"body":{"controllers/LocationController.html":{}}}],["apitags('material",{"_index":2325,"title":{},"body":{"controllers/MaterialController.html":{}}}],["apitags('notifications",{"_index":2346,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["apitags('offers",{"_index":2398,"title":{},"body":{"controllers/OffersController.html":{}}}],["apitags('order",{"_index":2599,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('payment",{"_index":2809,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apitags('product",{"_index":3003,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('spending",{"_index":3228,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["apitags('stock",{"_index":3308,"title":{},"body":{"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["apitags('supplier",{"_index":3738,"title":{},"body":{"controllers/SupplierController.html":{}}}],["apitags('takeaway",{"_index":3789,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["apitags('ticket",{"_index":3929,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["apitags('tickets",{"_index":3845,"title":{},"body":{"controllers/TicketController.html":{}}}],["apitags('user",{"_index":1761,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["apitags('users",{"_index":4290,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('wallet",{"_index":4462,"title":{},"body":{"controllers/WalletController.html":{}}}],["app",{"_index":4658,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":438,"title":{},"body":{"modules/AuthModule.html":{}}}],["applicable",{"_index":3096,"title":{},"body":{"injectables/ProductService.html":{}}}],["application/json",{"_index":2903,"title":{},"body":{"injectables/PaypalService.html":{}}}],["applications",{"_index":4650,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":147,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approvedby",{"_index":2481,"title":{},"body":{"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{}}}],["approveorder",{"_index":2559,"title":{},"body":{"controllers/OrderController.html":{}}}],["approveorder(@param('orderid",{"_index":2601,"title":{},"body":{"controllers/OrderController.html":{}}}],["approveorder(orderid",{"_index":2569,"title":{},"body":{"controllers/OrderController.html":{}}}],["approveorderbyorderid",{"_index":2659,"title":{},"body":{"injectables/OrderService.html":{}}}],["approveorderbyorderid(orderid",{"_index":2671,"title":{},"body":{"injectables/OrderService.html":{}}}],["area",{"_index":1095,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["areproductsavailableinbranch",{"_index":3026,"title":{},"body":{"injectables/ProductService.html":{}}}],["areproductsavailableinbranch(productids",{"_index":3042,"title":{},"body":{"injectables/ProductService.html":{}}}],["arestockitemsexist",{"_index":3495,"title":{},"body":{"injectables/StockItemService.html":{}}}],["arestockitemsexist(stockitems",{"_index":3501,"title":{},"body":{"injectables/StockItemService.html":{}}}],["array",{"_index":1560,"title":{},"body":{"classes/CreateTransactionDto.html":{},"injectables/CustomerService.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["arrayfilters",{"_index":3410,"title":{},"body":{"injectables/StockGardService.html":{}}}],["arraymaxsize",{"_index":1498,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{}}}],["arraymaxsize(1",{"_index":1500,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{}}}],["arrayminsize",{"_index":1026,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{}}}],["arrayminsize(1",{"_index":1032,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{}}}],["assignroledto",{"_index":104,"title":{"classes/AssignRoleDto.html":{}},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"injectables/AuthService.html":{}}}],["assignroledto.role",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["assignroledto.userid",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["associated",{"_index":1146,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{},"classes/UpdateCustomerLocationDto.html":{}}}],["asssignroledto",{"_index":110,"title":{},"body":{"controllers/AdminController.html":{}}}],["assuming",{"_index":82,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["async",{"_index":56,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"injectables/MailService.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["atguard",{"_index":1,"title":{"injectables/ATGuard.html":{}},"body":{"injectables/ATGuard.html":{}}}],["atstrategy",{"_index":52,"title":{"injectables/ATStrategy.html":{}},"body":{"injectables/ATStrategy.html":{},"modules/AuthModule.html":{},"overview.html":{}}}],["attend_id",{"_index":361,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["attendance",{"_index":973,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["attendance'})@isoptional()@isstring()@ismongoid",{"_index":3987,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["attendence",{"_index":249,"title":{"classes/Attendence.html":{}},"body":{"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"modules/EmployeeModule.html":{}}}],["attendence.dto",{"_index":319,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["attendence.dto.ts",{"_index":970,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["attendence.dto.ts:18",{"_index":3979,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["attendence.dto.ts:19",{"_index":979,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["attendence.dto.ts:26",{"_index":3977,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["attendence.dto.ts:27",{"_index":976,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["attendence.dto.ts:33",{"_index":983,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["attendence.dto.ts:35",{"_index":3981,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["attendence.dto.ts:39",{"_index":991,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["attendence.dto.ts:41",{"_index":3984,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["attendence.dto.ts:44",{"_index":987,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["attendence.dto.ts:49",{"_index":3988,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["attendence.dto.ts:54",{"_index":3982,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["attendence.interface",{"_index":317,"title":{},"body":{"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{}}}],["attendence.interface.ts",{"_index":340,"title":{},"body":{"interfaces/AttendenceInterface.html":{}}}],["attendence.name",{"_index":2004,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["attendenceactions",{"_index":257,"title":{},"body":{"classes/Attendence.html":{},"interfaces/AttendenceInterface.html":{},"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{},"miscellaneous/enumerations.html":{}}}],["attendenceactions})@isenum(attendenceactions)@isnotempty",{"_index":975,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["attendenceactions})@isenum(attendenceactions)@isoptional",{"_index":3976,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["attendencecontroller",{"_index":283,"title":{"controllers/AttendenceController.html":{}},"body":{"controllers/AttendenceController.html":{},"modules/EmployeeModule.html":{}}}],["attendenceid",{"_index":300,"title":{},"body":{"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{}}}],["attendenceinterface",{"_index":315,"title":{"interfaces/AttendenceInterface.html":{}},"body":{"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{}}}],["attendencerepo",{"_index":348,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["attendenceschema",{"_index":281,"title":{},"body":{"classes/Attendence.html":{},"modules/EmployeeModule.html":{},"miscellaneous/variables.html":{}}}],["attendenceservice",{"_index":313,"title":{"injectables/AttendenceService.html":{}},"body":{"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["attendservice",{"_index":323,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["auth",{"_index":99,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/GoogleService.html":{},"injectables/MailService.html":{},"injectables/PaypalService.html":{},"controllers/SpendingAuthController.html":{}}}],["auth.controller",{"_index":435,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{}}}],["auth.controller.ts",{"_index":3208,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["auth.controller.ts:29",{"_index":3213,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["auth.controller.ts:42",{"_index":3217,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["auth.controller.ts:55",{"_index":3218,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["auth.controller.ts:60",{"_index":3222,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["auth.controller.ts:69",{"_index":3219,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["auth.dto",{"_index":1327,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"controllers/SpendingAuthController.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["auth.dto.ts",{"_index":1313,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["auth.dto.ts:15",{"_index":1318,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{}}}],["auth.dto.ts:16",{"_index":4147,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["auth.dto.ts:17",{"_index":4088,"title":{},"body":{"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{}}}],["auth.dto.ts:18",{"_index":1442,"title":{},"body":{"classes/CreateSpendingAuthDto.html":{}}}],["auth.dto.ts:21",{"_index":4151,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["auth.dto.ts:26",{"_index":4143,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["auth.dto.ts:27",{"_index":1441,"title":{},"body":{"classes/CreateSpendingAuthDto.html":{}}}],["auth.dto.ts:36",{"_index":4150,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["auth.dto.ts:38",{"_index":1443,"title":{},"body":{"classes/CreateSpendingAuthDto.html":{}}}],["auth.dto.ts:42",{"_index":4148,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["auth.dto.ts:48",{"_index":4146,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["auth.interface",{"_index":3225,"title":{},"body":{"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{}}}],["auth.interface.ts",{"_index":2080,"title":{},"body":{"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{}}}],["auth.model",{"_index":590,"title":{},"body":{"modules/BillingModule.html":{},"controllers/SpendingAuthController.html":{},"classes/SpendingAuthorization.html":{}}}],["auth.model.ts",{"_index":2083,"title":{},"body":{"classes/EmployeeSpendingAuthorization.html":{},"classes/InvoiceSpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["auth.model.ts:10",{"_index":2084,"title":{},"body":{"classes/EmployeeSpendingAuthorization.html":{},"classes/InvoiceSpendingAuthorization.html":{}}}],["auth.model.ts:7",{"_index":2085,"title":{},"body":{"classes/EmployeeSpendingAuthorization.html":{},"classes/InvoiceSpendingAuthorization.html":{}}}],["auth.oauth2client",{"_index":2138,"title":{},"body":{"injectables/GoogleService.html":{}}}],["auth.service",{"_index":132,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"injectables/GoogleService.html":{},"controllers/SpendingAuthController.html":{}}}],["auth.service.ts",{"_index":3235,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:120",{"_index":3253,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:13",{"_index":3240,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:22",{"_index":3242,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:46",{"_index":3243,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:54",{"_index":3245,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:62",{"_index":3248,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:74",{"_index":3251,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:84",{"_index":3252,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth.service.ts:92",{"_index":3254,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["auth/auth.module",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/create",{"_index":1440,"title":{},"body":{"classes/CreateSpendingAuthDto.html":{}}}],["auth/employee/create",{"_index":1312,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"controllers/SpendingAuthController.html":{}}}],["auth/employee/update",{"_index":3227,"title":{},"body":{"controllers/SpendingAuthController.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{}}}],["auth/google",{"_index":2105,"title":{},"body":{"controllers/GoogleController.html":{}}}],["auth/invoice/create",{"_index":1329,"title":{},"body":{"classes/CreateInvoiceSpendingAuthDto.html":{},"controllers/SpendingAuthController.html":{}}}],["auth/invoice/update",{"_index":3226,"title":{},"body":{"controllers/SpendingAuthController.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{}}}],["auth/update",{"_index":4140,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["authcontroller",{"_index":388,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["authenticate",{"_index":2106,"title":{},"body":{"controllers/GoogleController.html":{},"injectables/GoogleService.html":{}}}],["authenticate(token",{"_index":2128,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authenticate(tokendata",{"_index":2107,"title":{},"body":{"controllers/GoogleController.html":{}}}],["authenticationservice",{"_index":2126,"title":{},"body":{"injectables/GoogleService.html":{}}}],["authguard",{"_index":32,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{}}}],["authguard('jwt",{"_index":9,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{}}}],["authmodule",{"_index":157,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":4687,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorization",{"_index":1316,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"injectables/PaypalService.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["authorization.model",{"_index":585,"title":{},"body":{"modules/BillingModule.html":{},"injectables/SpendingAuthService.html":{}}}],["authorization.model.ts",{"_index":3269,"title":{},"body":{"classes/SpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["authorization.model.ts:11",{"_index":3271,"title":{},"body":{"classes/SpendingAuthorization.html":{}}}],["authorization.model.ts:14",{"_index":3270,"title":{},"body":{"classes/SpendingAuthorization.html":{}}}],["authorization.model.ts:17",{"_index":3272,"title":{},"body":{"classes/SpendingAuthorization.html":{}}}],["authorization.model.ts:20",{"_index":3274,"title":{},"body":{"classes/SpendingAuthorization.html":{}}}],["authorization.model.ts:29",{"_index":3275,"title":{},"body":{"classes/SpendingAuthorization.html":{}}}],["authorization.model.ts:32",{"_index":3273,"title":{},"body":{"classes/SpendingAuthorization.html":{}}}],["authorization/emp",{"_index":588,"title":{},"body":{"modules/BillingModule.html":{},"classes/EmployeeSpendingAuthorization.html":{},"controllers/SpendingAuthController.html":{},"miscellaneous/variables.html":{}}}],["authorization/invoice",{"_index":593,"title":{},"body":{"modules/BillingModule.html":{},"classes/InvoiceSpendingAuthorization.html":{},"controllers/SpendingAuthController.html":{},"miscellaneous/variables.html":{}}}],["authorization/spending",{"_index":584,"title":{},"body":{"modules/BillingModule.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["authriztion/employee",{"_index":2079,"title":{},"body":{"interfaces/EmployeeSpendingAuthInteface.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{}}}],["authriztion/invoice",{"_index":2183,"title":{},"body":{"interfaces/InvoiceSpendingAuthInteface.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{}}}],["authservice",{"_index":131,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"overview.html":{}}}],["availability",{"_index":2709,"title":{},"body":{"injectables/OrderService.html":{}}}],["await",{"_index":86,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"injectables/MailService.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["away",{"_index":3784,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["away.controller",{"_index":2643,"title":{},"body":{"modules/OrderModule.html":{}}}],["away.controller.ts",{"_index":3782,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["away.controller.ts:14",{"_index":3787,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["away.service",{"_index":2649,"title":{},"body":{"modules/OrderModule.html":{}}}],["away.service.ts",{"_index":3796,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["away.service.ts:14",{"_index":3800,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["away.service.ts:9",{"_index":3798,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["ayani@gmail.com",{"_index":3204,"title":{},"body":{"classes/SignInByEmailDto.html":{}}}],["back",{"_index":3479,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["backers",{"_index":4680,"title":{},"body":{"index.html":{}}}],["banchservice",{"_index":3562,"title":{},"body":{"injectables/StockService.html":{}}}],["bank",{"_index":1213,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["bank_account",{"_index":1203,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{}}}],["base",{"_index":1035,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"controllers/PaymentController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{}}}],["base_salary",{"_index":1204,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{}}}],["basic",{"_index":2883,"title":{},"body":{"injectables/PaypalService.html":{}}}],["bcrypt",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(text",{"_index":4397,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.gensalt",{"_index":4374,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(text",{"_index":4375,"title":{},"body":{"injectables/UsersService.html":{}}}],["bearer",{"_index":2904,"title":{},"body":{"injectables/PaypalService.html":{}}}],["bike",{"_index":4554,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["billing",{"_index":539,"title":{"classes/Billing.html":{}},"body":{"classes/Billing.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{}}}],["billing.dto",{"_index":561,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/UpdateBillingDto.html":{}}}],["billing.dto.ts",{"_index":1057,"title":{},"body":{"classes/CreateBillingDto.html":{},"classes/UpdateBillingDto.html":{}}}],["billing/billing.module",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["billingcontroller",{"_index":541,"title":{"controllers/BillingController.html":{}},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{}}}],["billingmodule",{"_index":158,"title":{"modules/BillingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BillingModule.html":{},"modules.html":{},"overview.html":{}}}],["billingservice",{"_index":558,"title":{"injectables/BillingService.html":{}},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"overview.html":{}}}],["birthdate",{"_index":1205,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{}}}],["block",{"_index":4549,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blocked",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["blockuser",{"_index":101,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["blockuser(@param(':id",{"_index":144,"title":{},"body":{"controllers/AdminController.html":{}}}],["blockuser(id",{"_index":111,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["body",{"_index":118,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/GoogleController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"injectables/PaypalService.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"injectables/ResetPasswordService.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{}}}],["body('code",{"_index":4298,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('password",{"_index":4304,"title":{},"body":{"controllers/UsersController.html":{}}}],["body('status",{"_index":3642,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["bodydata",{"_index":3214,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["bonas",{"_index":4631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":1407,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/IsEmployeeGuard.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":617,"title":{"classes/Branch.html":{}},"body":{"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Coupon.html":{},"injectables/CouponService.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateTransactionDto.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"classes/Employee.html":{},"injectables/EmployeeService.html":{},"classes/IsWorkingInBranchGuard.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/Stock.html":{},"interfaces/StockInterface.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"controllers/TakeAwayController.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateTicketDto.html":{}}}],["branch'})@isoptional()@ismongoid()@isstring",{"_index":4202,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["branch.controller",{"_index":665,"title":{},"body":{"modules/BranchModule.html":{}}}],["branch.dto",{"_index":647,"title":{},"body":{"controllers/BranchController.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts",{"_index":1059,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:20",{"_index":1068,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:28",{"_index":1073,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:36",{"_index":1074,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:45",{"_index":1065,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:55",{"_index":1063,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.guard.ts",{"_index":2203,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["branch.guard.ts:14",{"_index":2206,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["branch.guard.ts:7",{"_index":2205,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["branch.name",{"_index":667,"title":{},"body":{"modules/BranchModule.html":{},"classes/CashPayment.html":{},"classes/Coupon.html":{},"classes/Employee.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/Ticket.html":{}}}],["branch.save",{"_index":695,"title":{},"body":{"injectables/BranchService.html":{}}}],["branch.service",{"_index":646,"title":{},"body":{"controllers/BranchController.html":{},"modules/BranchModule.html":{}}}],["branch/branch.module",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["branch1,branch2",{"_index":1107,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["branch_id",{"_index":682,"title":{},"body":{"injectables/BranchService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{}}}],["branch_id.length",{"_index":702,"title":{},"body":{"injectables/BranchService.html":{}}}],["branchcontroller",{"_index":630,"title":{"controllers/BranchController.html":{}},"body":{"controllers/BranchController.html":{},"modules/BranchModule.html":{}}}],["branches",{"_index":855,"title":{},"body":{"classes/Coupon.html":{},"interfaces/CouponInterface.html":{},"injectables/CouponService.html":{},"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"injectables/OffersService.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{}}}],["branchid",{"_index":928,"title":{},"body":{"injectables/CouponService.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{}}}],["branchinterface",{"_index":657,"title":{"interfaces/BranchInterface.html":{}},"body":{"interfaces/BranchInterface.html":{},"injectables/BranchService.html":{}}}],["branchmanager",{"_index":4608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["branchmodule",{"_index":159,"title":{"modules/BranchModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BranchModule.html":{},"modules/CouponModule.html":{},"modules/EmployeeModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/TicketModule.html":{},"modules.html":{},"overview.html":{}}}],["branchrepo",{"_index":675,"title":{},"body":{"injectables/BranchService.html":{}}}],["branchs",{"_index":698,"title":{},"body":{"injectables/BranchService.html":{},"injectables/OffersService.html":{}}}],["branchs.length",{"_index":701,"title":{},"body":{"injectables/BranchService.html":{}}}],["branchschema",{"_index":628,"title":{},"body":{"classes/Branch.html":{},"modules/BranchModule.html":{},"miscellaneous/variables.html":{}}}],["branchservice",{"_index":645,"title":{"injectables/BranchService.html":{}},"body":{"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/StockService.html":{},"injectables/TicketService.html":{},"overview.html":{}}}],["brief",{"_index":1479,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/UpdateStockItemDto.html":{}}}],["browse",{"_index":4697,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":4695,"title":{},"body":{"modules.html":{}}}],["buffer.from",{"_index":2878,"title":{},"body":{"injectables/PaypalService.html":{}}}],["building",{"_index":1102,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{},"index.html":{}}}],["building_number",{"_index":843,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["building_number'})@isstring()@isnotempty",{"_index":1330,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["building_number'})@isstring()@isoptional",{"_index":4091,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["call",{"_index":3685,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["can't",{"_index":3695,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["can_deliver",{"_index":1397,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{}}}],["canactivate",{"_index":12,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["canactivate(context",{"_index":24,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["cancel",{"_index":3698,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["canceled",{"_index":3694,"title":{},"body":{"injectables/StockTransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["cancelled",{"_index":4585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["capture",{"_index":2897,"title":{},"body":{"injectables/PaypalService.html":{}}}],["captureorder",{"_index":2855,"title":{},"body":{"injectables/PaypalService.html":{}}}],["captureorder(orderid",{"_index":2859,"title":{},"body":{"injectables/PaypalService.html":{}}}],["cart",{"_index":708,"title":{"classes/Cart.html":{}},"body":{"classes/Cart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["cart.controller",{"_index":733,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.dto",{"_index":722,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/UpdateCartDto.html":{}}}],["cart.dto.ts",{"_index":1076,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/UpdateCartDto.html":{}}}],["cart.service",{"_index":721,"title":{},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{}}}],["cart/cart.module",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["cartcontroller",{"_index":710,"title":{"controllers/CartController.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{}}}],["cartmodule",{"_index":160,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules.html":{},"overview.html":{}}}],["cartservice",{"_index":720,"title":{"injectables/CartService.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"overview.html":{}}}],["case",{"_index":89,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["cash",{"_index":772,"title":{},"body":{"injectables/CashService.html":{},"interfaces/CreateCashPaymentInterface.html":{},"controllers/PaymentController.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["cash.payment.model",{"_index":2782,"title":{},"body":{"classes/Payment.html":{}}}],["cashier",{"_index":792,"title":{"classes/Cashier.html":{}},"body":{"classes/Cashier.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"injectables/OrderService.html":{},"miscellaneous/enumerations.html":{}}}],["cashier.controller",{"_index":816,"title":{},"body":{"modules/CashierModule.html":{}}}],["cashier.dto",{"_index":806,"title":{},"body":{"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/UpdateCashierDto.html":{}}}],["cashier.dto.ts",{"_index":1079,"title":{},"body":{"classes/CreateCashierDto.html":{},"classes/UpdateCashierDto.html":{}}}],["cashier.service",{"_index":805,"title":{},"body":{"controllers/CashierController.html":{},"modules/CashierModule.html":{}}}],["cashier/cashier.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["cashier_senior",{"_index":4603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cashiercontroller",{"_index":794,"title":{"controllers/CashierController.html":{}},"body":{"controllers/CashierController.html":{},"modules/CashierModule.html":{}}}],["cashiermodule",{"_index":161,"title":{"modules/CashierModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CashierModule.html":{},"modules.html":{},"overview.html":{}}}],["cashiersenior",{"_index":4602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cashierservice",{"_index":804,"title":{"injectables/CashierService.html":{}},"body":{"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"overview.html":{}}}],["cashpayment",{"_index":740,"title":{"classes/CashPayment.html":{}},"body":{"classes/CashPayment.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{}}}],["cashpayment.name",{"_index":2784,"title":{},"body":{"classes/Payment.html":{},"modules/PaymentModule.html":{}}}],["cashpaymentschema",{"_index":752,"title":{},"body":{"classes/CashPayment.html":{},"modules/PaymentModule.html":{},"miscellaneous/variables.html":{}}}],["cashservice",{"_index":754,"title":{"injectables/CashService.html":{}},"body":{"injectables/CashService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"overview.html":{}}}],["catch",{"_index":47,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["category",{"_index":1163,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateTicketDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/StockItem.html":{},"interfaces/StockItemInterface.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateTicketDto.html":{}}}],["category.enum",{"_index":1488,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/CreateTicketDto.html":{},"classes/StockItem.html":{},"interfaces/StockItemInterface.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateTicketDto.html":{}}}],["category.enum.ts",{"_index":4541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["category.enums",{"_index":1434,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["category.enums.ts",{"_index":4532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["change",{"_index":3696,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["changeorderstatusbyorderid",{"_index":2660,"title":{},"body":{"injectables/OrderService.html":{}}}],["changeorderstatusbyorderid(orderid",{"_index":2673,"title":{},"body":{"injectables/OrderService.html":{}}}],["changeticketpoolbyemployeeid",{"_index":2028,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["changeticketpoolbyemployeeid(employee_id",{"_index":2035,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["changeticketpoolbyuserid",{"_index":2029,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["changeticketpoolbyuserid(user_id",{"_index":2037,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["changeticketstatus",{"_index":3876,"title":{},"body":{"injectables/TicketService.html":{}}}],["changeticketstatus(id",{"_index":3882,"title":{},"body":{"injectables/TicketService.html":{}}}],["changetransactionstatus",{"_index":3619,"title":{},"body":{"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{}}}],["changetransactionstatus(transaction_id",{"_index":3621,"title":{},"body":{"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{}}}],["changeuserstatus",{"_index":4322,"title":{},"body":{"injectables/UsersService.html":{}}}],["changeuserstatus(id",{"_index":4340,"title":{},"body":{"injectables/UsersService.html":{}}}],["changeuserstatusdto",{"_index":823,"title":{"classes/ChangeUserStatusDTO.html":{}},"body":{"classes/ChangeUserStatusDTO.html":{},"injectables/UsersService.html":{}}}],["check",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CashService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaypalService-1.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/StockTransactionService.html":{},"injectables/TakeAwayService.html":{}}}],["chicken",{"_index":4599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["city",{"_index":839,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["city'})@isstring()@isnotempty",{"_index":1332,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["city'})@isstring()@isoptional",{"_index":4092,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["class",{"_index":35,"title":{"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Billing.html":{},"classes/Branch.html":{},"classes/Cart.html":{},"classes/CashPayment.html":{},"classes/Cashier.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/Delivery.html":{},"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/Invoice.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"classes/Location.html":{},"classes/Material.html":{},"classes/Notification.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"classes/SignInByEmailDto.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{},"classes/Wallet.html":{}},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Cashier.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"injectables/EmployeeService.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["classes",{"_index":230,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Billing.html":{},"classes/Branch.html":{},"classes/Cart.html":{},"classes/CashPayment.html":{},"classes/Cashier.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/Delivery.html":{},"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/Invoice.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"classes/Location.html":{},"classes/Material.html":{},"classes/Notification.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"classes/SignInByEmailDto.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{},"classes/Wallet.html":{},"overview.html":{}}}],["client",{"_index":1129,"title":{},"body":{"classes/CreateCustomerDto.html":{},"injectables/PaypalService.html":{},"classes/UpdateCustomerDto.html":{}}}],["clientid",{"_index":2141,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MailService.html":{}}}],["clientsecret",{"_index":2143,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MailService.html":{}}}],["clientsession",{"_index":923,"title":{},"body":{"injectables/CouponService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["close",{"_index":4613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":423,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":424,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":425,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_billingmodule",{"_index":573,"title":{},"body":{"modules/BillingModule.html":{},"overview.html":{}}}],["cluster_billingmodule_imports",{"_index":574,"title":{},"body":{"modules/BillingModule.html":{}}}],["cluster_billingmodule_providers",{"_index":575,"title":{},"body":{"modules/BillingModule.html":{},"overview.html":{}}}],["cluster_branchmodule",{"_index":660,"title":{},"body":{"modules/BranchModule.html":{},"overview.html":{}}}],["cluster_branchmodule_exports",{"_index":662,"title":{},"body":{"modules/BranchModule.html":{},"overview.html":{}}}],["cluster_branchmodule_imports",{"_index":663,"title":{},"body":{"modules/BranchModule.html":{}}}],["cluster_branchmodule_providers",{"_index":661,"title":{},"body":{"modules/BranchModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":730,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_providers",{"_index":731,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cashiermodule",{"_index":813,"title":{},"body":{"modules/CashierModule.html":{},"overview.html":{}}}],["cluster_cashiermodule_providers",{"_index":814,"title":{},"body":{"modules/CashierModule.html":{},"overview.html":{}}}],["cluster_couponmodule",{"_index":892,"title":{},"body":{"modules/CouponModule.html":{},"overview.html":{}}}],["cluster_couponmodule_exports",{"_index":893,"title":{},"body":{"modules/CouponModule.html":{},"overview.html":{}}}],["cluster_couponmodule_imports",{"_index":895,"title":{},"body":{"modules/CouponModule.html":{}}}],["cluster_couponmodule_providers",{"_index":894,"title":{},"body":{"modules/CouponModule.html":{},"overview.html":{}}}],["cluster_customermodule",{"_index":1706,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_exports",{"_index":1707,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_imports",{"_index":1708,"title":{},"body":{"modules/CustomerModule.html":{}}}],["cluster_customermodule_providers",{"_index":1709,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_deliverymodule",{"_index":1814,"title":{},"body":{"modules/DeliveryModule.html":{},"overview.html":{}}}],["cluster_deliverymodule_providers",{"_index":1815,"title":{},"body":{"modules/DeliveryModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":1985,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_exports",{"_index":1988,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_imports",{"_index":1987,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["cluster_employeemodule_providers",{"_index":1986,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":2232,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_exports",{"_index":2234,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_providers",{"_index":2233,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mailmodule",{"_index":2256,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_exports",{"_index":2258,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_mailmodule_providers",{"_index":2257,"title":{},"body":{"modules/MailModule.html":{},"overview.html":{}}}],["cluster_materialmodule",{"_index":2332,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_materialmodule_providers",{"_index":2333,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":2348,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_imports",{"_index":2350,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_providers",{"_index":2349,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_offersmodule",{"_index":2407,"title":{},"body":{"modules/OffersModule.html":{},"overview.html":{}}}],["cluster_offersmodule_exports",{"_index":2408,"title":{},"body":{"modules/OffersModule.html":{},"overview.html":{}}}],["cluster_offersmodule_imports",{"_index":2409,"title":{},"body":{"modules/OffersModule.html":{}}}],["cluster_offersmodule_providers",{"_index":2410,"title":{},"body":{"modules/OffersModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":2633,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_exports",{"_index":2635,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":2636,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":2634,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":2817,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_imports",{"_index":2818,"title":{},"body":{"modules/PaymentModule.html":{}}}],["cluster_paymentmodule_providers",{"_index":2819,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paypalmodule",{"_index":2850,"title":{},"body":{"modules/PaypalModule.html":{}}}],["cluster_paypalmodule_providers",{"_index":2851,"title":{},"body":{"modules/PaypalModule.html":{}}}],["cluster_productmodule",{"_index":3018,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_exports",{"_index":3020,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":3019,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":3021,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_stockmodule",{"_index":3538,"title":{},"body":{"modules/StockModule.html":{},"overview.html":{}}}],["cluster_stockmodule_exports",{"_index":3540,"title":{},"body":{"modules/StockModule.html":{},"overview.html":{}}}],["cluster_stockmodule_imports",{"_index":3541,"title":{},"body":{"modules/StockModule.html":{}}}],["cluster_stockmodule_providers",{"_index":3539,"title":{},"body":{"modules/StockModule.html":{},"overview.html":{}}}],["cluster_suppliermodule",{"_index":3747,"title":{},"body":{"modules/SupplierModule.html":{},"overview.html":{}}}],["cluster_suppliermodule_imports",{"_index":3748,"title":{},"body":{"modules/SupplierModule.html":{}}}],["cluster_suppliermodule_providers",{"_index":3749,"title":{},"body":{"modules/SupplierModule.html":{},"overview.html":{}}}],["cluster_ticketmodule",{"_index":3860,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_ticketmodule_imports",{"_index":3862,"title":{},"body":{"modules/TicketModule.html":{}}}],["cluster_ticketmodule_providers",{"_index":3861,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":4308,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":4311,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":4309,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":4310,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":4469,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_providers",{"_index":4470,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["code",{"_index":3107,"title":{},"body":{"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"controllers/UsersController.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{}}}],["comparetextwithhash",{"_index":4323,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparetextwithhash(text",{"_index":4342,"title":{},"body":{"injectables/UsersService.html":{}}}],["compeleted",{"_index":4572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["compeleteorder",{"_index":1776,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["compeleteorder(@param('orderid",{"_index":1810,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["compeleteorder(orderid",{"_index":1780,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["completed",{"_index":3687,"title":{},"body":{"injectables/StockTransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["compodoc/compodoc",{"_index":4480,"title":{},"body":{"dependencies.html":{}}}],["components",{"_index":1398,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{}}}],["components.enum",{"_index":1392,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{}}}],["components.enum.ts",{"_index":4533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["configmodule",{"_index":187,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailModule.html":{},"modules/NotificationsModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":60,"title":{},"body":{"injectables/ATStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"injectables/MailService.html":{},"injectables/ResetPasswordService.html":{}}}],["configservice.get('jwt_secret",{"_index":81,"title":{},"body":{"injectables/ATStrategy.html":{},"modules/AuthModule.html":{}}}],["configservice.get('jwt_token_expirein",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mongocluster",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["confirmverifyemail",{"_index":4259,"title":{},"body":{"controllers/UsersController.html":{}}}],["confirmverifyemail(@req",{"_index":4297,"title":{},"body":{"controllers/UsersController.html":{}}}],["confirmverifyemail(req",{"_index":4262,"title":{},"body":{"controllers/UsersController.html":{}}}],["conflictexception",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DeliveryService-1.html":{},"injectables/OrderService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["conflictexception(\"can't",{"_index":3477,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/UsersService.html":{}}}],["conflictexception('item",{"_index":3519,"title":{},"body":{"injectables/StockItemService.html":{}}}],["conflictexception('order",{"_index":2761,"title":{},"body":{"injectables/OrderService.html":{}}}],["conflictexception('role",{"_index":4399,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflictexception('status",{"_index":1849,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["conflictexception('stock",{"_index":3582,"title":{},"body":{"injectables/StockService.html":{}}}],["conflictexception('user",{"_index":4428,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["conflictexception('you",{"_index":3683,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["conflictexception(err.response.message",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":2668,"title":{},"body":{"injectables/OrderService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["console.error('failed",{"_index":2886,"title":{},"body":{"injectables/PaypalService.html":{}}}],["console.log(access_token",{"_index":2116,"title":{},"body":{"controllers/GoogleController.html":{}}}],["console.log(err",{"_index":49,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/CouponService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{}}}],["console.log(err.message",{"_index":3678,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["const",{"_index":39,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"classes/Branch.html":{},"injectables/BranchService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"injectables/CouponService.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"classes/DineinOrder.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"injectables/EmployeeService.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"injectables/MailService.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"classes/StockItem.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"controllers/NotificationsController.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["constructor(@injectmodel(invoice.name",{"_index":2180,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":4372,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(branchrepo",{"_index":673,"title":{},"body":{"injectables/BranchService.html":{}}}],["constructor(configservice",{"_index":2264,"title":{},"body":{"injectables/MailService.html":{}}}],["constructor(couponrepo",{"_index":909,"title":{},"body":{"injectables/CouponService.html":{}}}],["constructor(customerlocationsrepo",{"_index":1671,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["constructor(customerrepo",{"_index":1724,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constructor(employeemothlypdrrepo",{"_index":2946,"title":{},"body":{"injectables/PdrService.html":{}}}],["constructor(employeepdractionrepo",{"_index":1913,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["constructor(employeerepo",{"_index":346,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/EmployeeService.html":{}}}],["constructor(employeeservice",{"_index":3797,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["constructor(invoicerepo",{"_index":2176,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["constructor(locationrepo",{"_index":2241,"title":{},"body":{"injectables/LocationService.html":{}}}],["constructor(offerrepo",{"_index":2425,"title":{},"body":{"injectables/OffersService.html":{}}}],["constructor(orderrepo",{"_index":1838,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{}}}],["constructor(paymentrepo",{"_index":758,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"injectables/ATGuard.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerUserController.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/GoogleController.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"controllers/MailController.html":{},"injectables/MailService.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaypalController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/WalletController.html":{}}}],["constructor(productrepo",{"_index":3039,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(reflactor",{"_index":3194,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["constructor(refleactor",{"_index":14,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsWorkingInBranchGuard.html":{}}}],["constructor(reflector",{"_index":2187,"title":{},"body":{"classes/IsEmployeeGuard.html":{},"injectables/JWTGuard.html":{}}}],["constructor(resetrepo",{"_index":3124,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["constructor(spendingauthrepo",{"_index":3239,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["constructor(stockgardrepo",{"_index":3371,"title":{},"body":{"injectables/StockGardService.html":{}}}],["constructor(stockitemlogrepo",{"_index":3465,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["constructor(stockitemrepo",{"_index":3498,"title":{},"body":{"injectables/StockItemService.html":{}}}],["constructor(stockrepo",{"_index":3561,"title":{},"body":{"injectables/StockService.html":{}}}],["constructor(stocktransactionrepo",{"_index":3653,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["constructor(supplierrepo",{"_index":3757,"title":{},"body":{"injectables/SupplierService.html":{}}}],["constructor(ticketrepo",{"_index":3879,"title":{},"body":{"injectables/TicketService.html":{}}}],["constructor(ticketupdatesrepo",{"_index":3944,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["constructor(userrepo",{"_index":4333,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":58,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AuthService.html":{}}}],["constructor(usersservice",{"_index":2125,"title":{},"body":{"injectables/GoogleService.html":{}}}],["constructor(verifyuseremailrepo",{"_index":4405,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["contact",{"_index":1516,"title":{},"body":{"classes/CreateSupplierDto.html":{},"injectables/ResetPasswordService.html":{},"classes/UpdateSupplierDto.html":{}}}],["content",{"_index":2902,"title":{},"body":{"injectables/PaypalService.html":{}}}],["context",{"_index":27,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["context.getclass",{"_index":42,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["context.gethandler",{"_index":43,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":2208,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":2193,"title":{},"body":{"classes/IsEmployeeGuard.html":{},"injectables/RolesGuard.html":{}}}],["context.switchtohttp().getrequest().user._id",{"_index":2200,"title":{},"body":{"classes/IsUserCustomerGuard.html":{}}}],["controller",{"_index":93,"title":{"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/GoogleController.html":{},"controllers/LocationController.html":{},"controllers/MailController.html":{},"controllers/MaterialController.html":{},"controllers/NotificationsController.html":{},"controllers/OffersController.html":{},"controllers/OnlineController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaypalController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/GoogleController.html":{},"controllers/LocationController.html":{},"controllers/MailController.html":{},"controllers/MaterialController.html":{},"controllers/NotificationsController.html":{},"controllers/OffersController.html":{},"controllers/OnlineController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaypalController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["controller('admin",{"_index":135,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":415,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('auth/google",{"_index":2113,"title":{},"body":{"controllers/GoogleController.html":{}}}],["controller('billing",{"_index":564,"title":{},"body":{"controllers/BillingController.html":{}}}],["controller('branch",{"_index":649,"title":{},"body":{"controllers/BranchController.html":{}}}],["controller('cart",{"_index":724,"title":{},"body":{"controllers/CartController.html":{}}}],["controller('cashier",{"_index":807,"title":{},"body":{"controllers/CashierController.html":{}}}],["controller('coupon",{"_index":883,"title":{},"body":{"controllers/CouponController.html":{}}}],["controller('customer",{"_index":1620,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{}}}],["controller('delivery",{"_index":1773,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["controller('emp",{"_index":1903,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["controller('employee",{"_index":322,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmployeeController.html":{}}}],["controller('location",{"_index":2231,"title":{},"body":{"controllers/LocationController.html":{}}}],["controller('mail",{"_index":2255,"title":{},"body":{"controllers/MailController.html":{}}}],["controller('material",{"_index":2326,"title":{},"body":{"controllers/MaterialController.html":{}}}],["controller('notifications",{"_index":2347,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["controller('offers",{"_index":2399,"title":{},"body":{"controllers/OffersController.html":{}}}],["controller('online",{"_index":2476,"title":{},"body":{"controllers/OnlineController.html":{}}}],["controller('order",{"_index":2600,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('order/delivery",{"_index":1803,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["controller('order/dine",{"_index":1867,"title":{},"body":{"controllers/DineInController.html":{}}}],["controller('order/take",{"_index":3790,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["controller('payment",{"_index":2810,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controller('paypal",{"_index":2844,"title":{},"body":{"controllers/PaypalController.html":{}}}],["controller('pdr",{"_index":2939,"title":{},"body":{"controllers/PdrController.html":{}}}],["controller('product",{"_index":3004,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('spending",{"_index":3229,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["controller('stock",{"_index":3309,"title":{},"body":{"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["controller('supplier",{"_index":3739,"title":{},"body":{"controllers/SupplierController.html":{}}}],["controller('ticket",{"_index":3846,"title":{},"body":{"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{}}}],["controller('user",{"_index":1762,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["controller('users",{"_index":4291,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller('wallet",{"_index":4463,"title":{},"body":{"controllers/WalletController.html":{}}}],["controller/attendence.controller",{"_index":1995,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["controller/billing.controller",{"_index":580,"title":{},"body":{"modules/BillingModule.html":{}}}],["controller/customer",{"_index":1715,"title":{},"body":{"modules/CustomerModule.html":{}}}],["controller/customer.controller",{"_index":1712,"title":{},"body":{"modules/CustomerModule.html":{}}}],["controller/delivery.controller",{"_index":2644,"title":{},"body":{"modules/OrderModule.html":{}}}],["controller/dine",{"_index":2645,"title":{},"body":{"modules/OrderModule.html":{}}}],["controller/emp",{"_index":2002,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["controller/employee",{"_index":1996,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["controller/employee.controller",{"_index":1992,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["controller/notifications.controller",{"_index":2354,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["controller/online.controller",{"_index":2647,"title":{},"body":{"modules/OrderModule.html":{}}}],["controller/order.controller",{"_index":2640,"title":{},"body":{"modules/OrderModule.html":{}}}],["controller/spending",{"_index":598,"title":{},"body":{"modules/BillingModule.html":{}}}],["controller/stock",{"_index":3548,"title":{},"body":{"modules/StockModule.html":{}}}],["controller/stock.controller",{"_index":3545,"title":{},"body":{"modules/StockModule.html":{}}}],["controller/take",{"_index":2642,"title":{},"body":{"modules/OrderModule.html":{}}}],["controller/ticket",{"_index":3871,"title":{},"body":{"modules/TicketModule.html":{}}}],["controller/ticket.controller",{"_index":3866,"title":{},"body":{"modules/TicketModule.html":{}}}],["controller/users.controller",{"_index":4313,"title":{},"body":{"modules/UsersModule.html":{}}}],["controllers",{"_index":95,"title":{},"body":{"controllers/AdminController.html":{},"modules/AppModule.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"modules/CustomerModule.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"controllers/GoogleController.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"controllers/OnlineController.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["cookie",{"_index":2118,"title":{},"body":{"controllers/GoogleController.html":{}}}],["cooking_equipment",{"_index":4615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cooking_material",{"_index":4614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["coordinates",{"_index":264,"title":{"classes/Coordinates.html":{}},"body":{"classes/Attendence.html":{},"classes/Coordinates.html":{},"classes/Location.html":{}}}],["coordinatesinteface",{"_index":341,"title":{"classes/CoordinatesInteface.html":{}},"body":{"interfaces/AttendenceInterface.html":{},"classes/CoordinatesInteface.html":{},"interfaces/LocationInterface.html":{}}}],["coordinatesschema",{"_index":836,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"miscellaneous/variables.html":{}}}],["coponservice",{"_index":2666,"title":{},"body":{"injectables/OrderService.html":{}}}],["copoun1",{"_index":1113,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["cordinates",{"_index":846,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["cordinates'})@validatenested()@type(undefined)@isoptional",{"_index":1334,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["count",{"_index":2525,"title":{},"body":{"classes/Order.html":{},"injectables/StockService.html":{}}}],["count/:stockid",{"_index":3297,"title":{},"body":{"controllers/StockController.html":{}}}],["countdocuments",{"_index":2526,"title":{},"body":{"classes/Order.html":{}}}],["country",{"_index":838,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["country'})@isstring()@isnotempty",{"_index":1336,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["country'})@isstring()@isoptional",{"_index":4094,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["coupon",{"_index":853,"title":{"classes/Coupon.html":{}},"body":{"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["coupon.controller",{"_index":897,"title":{},"body":{"modules/CouponModule.html":{}}}],["coupon.dto",{"_index":881,"title":{},"body":{"controllers/CouponController.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts",{"_index":1106,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:18",{"_index":4016,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:20",{"_index":1114,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["coupon.dto.ts:26",{"_index":4014,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:31",{"_index":1110,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["coupon.dto.ts:34",{"_index":4015,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:39",{"_index":1112,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["coupon.dto.ts:42",{"_index":4020,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:47",{"_index":1119,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["coupon.dto.ts:50",{"_index":4019,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:55",{"_index":1118,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["coupon.dto.ts:58",{"_index":4018,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:63",{"_index":1117,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["coupon.name",{"_index":900,"title":{},"body":{"modules/CouponModule.html":{},"classes/Order.html":{}}}],["coupon.percent_discount",{"_index":2551,"title":{},"body":{"classes/Order.html":{}}}],["coupon.save",{"_index":947,"title":{},"body":{"injectables/CouponService.html":{}}}],["coupon.service",{"_index":880,"title":{},"body":{"controllers/CouponController.html":{},"modules/CouponModule.html":{}}}],["coupon/coupon.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["coupon_id",{"_index":920,"title":{},"body":{"injectables/CouponService.html":{}}}],["couponcontroller",{"_index":867,"title":{"controllers/CouponController.html":{}},"body":{"controllers/CouponController.html":{},"modules/CouponModule.html":{}}}],["coupondiscount",{"_index":2550,"title":{},"body":{"classes/Order.html":{}}}],["couponid",{"_index":930,"title":{},"body":{"injectables/CouponService.html":{}}}],["couponinterface",{"_index":890,"title":{"interfaces/CouponInterface.html":{}},"body":{"interfaces/CouponInterface.html":{},"injectables/CouponService.html":{}}}],["couponmodel",{"_index":2533,"title":{},"body":{"classes/Order.html":{}}}],["couponmodel.findbyid(this.coupon).exec",{"_index":2549,"title":{},"body":{"classes/Order.html":{}}}],["couponmodule",{"_index":162,"title":{"modules/CouponModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CouponModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["couponname",{"_index":925,"title":{},"body":{"injectables/CouponService.html":{}}}],["couponrepo",{"_index":911,"title":{},"body":{"injectables/CouponService.html":{}}}],["couponschema",{"_index":865,"title":{},"body":{"classes/Coupon.html":{},"modules/CouponModule.html":{},"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["couponservice",{"_index":879,"title":{"injectables/CouponService.html":{}},"body":{"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"injectables/OrderService.html":{},"overview.html":{}}}],["coverage",{"_index":4671,"title":{},"body":{"index.html":{}}}],["create",{"_index":285,"title":{},"body":{"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/MailService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["create(@body",{"_index":324,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/SupplierController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["create(@req",{"_index":3639,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["create(branchid",{"_index":3827,"title":{},"body":{"controllers/TicketController.html":{}}}],["create(createbillingdto",{"_index":545,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{}}}],["create(createbranchdata",{"_index":676,"title":{},"body":{"injectables/BranchService.html":{}}}],["create(createbranchdto",{"_index":634,"title":{},"body":{"controllers/BranchController.html":{}}}],["create(createcartdto",{"_index":712,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["create(createcashierdto",{"_index":796,"title":{},"body":{"controllers/CashierController.html":{},"injectables/CashierService.html":{}}}],["create(createcoupondata",{"_index":912,"title":{},"body":{"injectables/CouponService.html":{}}}],["create(createcoupondto",{"_index":870,"title":{},"body":{"controllers/CouponController.html":{}}}],["create(createcustomerdto",{"_index":1602,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerUserController.html":{}}}],["create(createdata",{"_index":1674,"title":{},"body":{"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/UsersService.html":{}}}],["create(createdto",{"_index":291,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{}}}],["create(createemployeedata",{"_index":2039,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["create(createemployeedto",{"_index":1967,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["create(creatematerialdto",{"_index":2315,"title":{},"body":{"controllers/MaterialController.html":{},"injectables/MaterialService.html":{}}}],["create(createnotificationdto",{"_index":2358,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["create(createofferdto",{"_index":2383,"title":{},"body":{"controllers/OffersController.html":{}}}],["create(createproductdto",{"_index":2983,"title":{},"body":{"controllers/ProductController.html":{}}}],["create(createstockdto",{"_index":3291,"title":{},"body":{"controllers/StockController.html":{}}}],["create(createsupplierdata",{"_index":3760,"title":{},"body":{"injectables/SupplierService.html":{}}}],["create(createsupplierdto",{"_index":3725,"title":{},"body":{"controllers/SupplierController.html":{}}}],["create(createuserdto",{"_index":4266,"title":{},"body":{"controllers/UsersController.html":{}}}],["create(createwalletdto",{"_index":4454,"title":{},"body":{"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["create(data",{"_index":1643,"title":{},"body":{"controllers/CustomerLocationsController.html":{},"injectables/EmpPdrActionService.html":{},"injectables/OrderService.html":{},"injectables/PdrService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/VerifyEmailService.html":{}}}],["create(newdata",{"_index":351,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["create(newofferdata",{"_index":2429,"title":{},"body":{"injectables/OffersService.html":{}}}],["create(newproductdata",{"_index":3045,"title":{},"body":{"injectables/ProductService.html":{}}}],["create(req",{"_index":3625,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["create(stock_id",{"_index":3446,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["create(ticket_id",{"_index":3913,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["createattendencedto",{"_index":292,"title":{"classes/CreateAttendenceDTO.html":{}},"body":{"controllers/AttendenceController.html":{},"classes/CreateAttendenceDTO.html":{}}}],["createbaseorderdto",{"_index":1003,"title":{"classes/CreateBaseOrderDto.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["createbaseorderdto:18",{"_index":1178,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["createbaseorderdto:22",{"_index":1181,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["createbaseorderdto:29",{"_index":1180,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["createbaseorderdto:33",{"_index":1176,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["createbaseorderdto:37",{"_index":1179,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["createbaseorderdto:41",{"_index":1177,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["createbasepaymentdto",{"_index":1033,"title":{"classes/CreateBasePaymentDto.html":{}},"body":{"classes/CreateBasePaymentDto.html":{},"controllers/PaymentController.html":{},"classes/UpdatePaymentDto.html":{}}}],["createbasepaymentinterface",{"_index":1050,"title":{"interfaces/CreateBasePaymentInterface.html":{}},"body":{"interfaces/CreateBasePaymentInterface.html":{},"interfaces/CreateCashPaymentInterface.html":{},"controllers/PaymentController.html":{},"injectables/PaypalService-1.html":{}}}],["createbillingdto",{"_index":546,"title":{"classes/CreateBillingDto.html":{}},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/CreateBillingDto.html":{},"classes/UpdateBillingDto.html":{}}}],["createbranchdata",{"_index":678,"title":{},"body":{"injectables/BranchService.html":{}}}],["createbranchdata.manager",{"_index":692,"title":{},"body":{"injectables/BranchService.html":{}}}],["createbranchdto",{"_index":635,"title":{"classes/CreateBranchDto.html":{}},"body":{"controllers/BranchController.html":{},"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["createby",{"_index":1053,"title":{},"body":{"interfaces/CreateBasePaymentInterface.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"controllers/PdrController.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"controllers/TakeAwayController.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["createby_id",{"_index":3246,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["createcartdto",{"_index":713,"title":{"classes/CreateCartDto.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateCartDto.html":{},"classes/UpdateCartDto.html":{}}}],["createcash",{"_index":2791,"title":{},"body":{"controllers/PaymentController.html":{}}}],["createcash(branchid",{"_index":2793,"title":{},"body":{"controllers/PaymentController.html":{}}}],["createcashierdto",{"_index":797,"title":{"classes/CreateCashierDto.html":{}},"body":{"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/CreateCashierDto.html":{},"classes/UpdateCashierDto.html":{}}}],["createcashpayment",{"_index":756,"title":{},"body":{"injectables/CashService.html":{}}}],["createcashpayment(data",{"_index":763,"title":{},"body":{"injectables/CashService.html":{}}}],["createcashpaymentinterface",{"_index":764,"title":{"interfaces/CreateCashPaymentInterface.html":{}},"body":{"injectables/CashService.html":{},"interfaces/CreateCashPaymentInterface.html":{},"controllers/PaymentController.html":{}}}],["createcordinatesdto",{"_index":980,"title":{"classes/CreateCordinatesDto.html":{}},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateLocationDto.html":{}}}],["createcordinatesdto})@isnotempty()@validatenested()@type(undefined",{"_index":982,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["createcordinatesdto})@isoptional()@validatenested()@type(undefined",{"_index":3980,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["createcoupondata",{"_index":914,"title":{},"body":{"injectables/CouponService.html":{}}}],["createcoupondata.branches",{"_index":944,"title":{},"body":{"injectables/CouponService.html":{}}}],["createcoupondto",{"_index":871,"title":{"classes/CreateCouponDto.html":{}},"body":{"controllers/CouponController.html":{},"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["createcustomerdto",{"_index":1120,"title":{"classes/CreateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerUserController.html":{},"classes/UpdateCustomerDto.html":{}}}],["createcustomerlocationdto",{"_index":1140,"title":{"classes/CreateCustomerLocationDto.html":{}},"body":{"classes/CreateCustomerLocationDto.html":{},"controllers/CustomerLocationsController.html":{}}}],["created",{"_index":4206,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["createdat",{"_index":2528,"title":{},"body":{"classes/Order.html":{},"injectables/OrderService.html":{}}}],["createdata",{"_index":1676,"title":{},"body":{"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/UsersService.html":{}}}],["createdata.customer",{"_index":1696,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["createdata.user",{"_index":1740,"title":{},"body":{"injectables/CustomerService.html":{}}}],["createdeliveryorder",{"_index":1777,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["createdeliveryorder(createorderdto",{"_index":1784,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["createdeliveryorderdto",{"_index":1150,"title":{"classes/CreateDeliveryOrderDto.html":{}},"body":{"classes/CreateDeliveryOrderDto.html":{},"controllers/DeliveryController-1.html":{}}}],["createdineinorder",{"_index":1860,"title":{},"body":{"controllers/DineInController.html":{}}}],["createdineinorder(createorderdto",{"_index":1861,"title":{},"body":{"controllers/DineInController.html":{}}}],["createdineinorderdto",{"_index":1194,"title":{"classes/CreateDineInOrderDto.html":{}},"body":{"classes/CreateDineInOrderDto.html":{},"controllers/DineInController.html":{}}}],["createdto",{"_index":296,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["createemployeedata",{"_index":2041,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["createemployeedata.user",{"_index":2055,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["createemployeedata.working_in",{"_index":2057,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["createemployeedto",{"_index":1200,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{}}}],["createemployeemonthlypdrdto",{"_index":1258,"title":{"classes/CreateEmployeeMonthlyPdrDTO.html":{}},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"controllers/PdrController.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["createemployeepdractiondto",{"_index":1287,"title":{"classes/CreateEmployeePdrActionDto.html":{}},"body":{"classes/CreateEmployeePdrActionDto.html":{},"controllers/EmpPdrActionController.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["createemployeespendingauth",{"_index":3209,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["createemployeespendingauth(bodydata",{"_index":3211,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["createemployeespendingauthdto",{"_index":1310,"title":{"classes/CreateEmployeeSpendingAuthDto.html":{}},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"controllers/SpendingAuthController.html":{}}}],["createinvoicespendingauth",{"_index":3210,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["createinvoicespendingauth(bodydata",{"_index":3215,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["createinvoicespendingauthdto",{"_index":1328,"title":{"classes/CreateInvoiceSpendingAuthDto.html":{}},"body":{"classes/CreateInvoiceSpendingAuthDto.html":{},"controllers/SpendingAuthController.html":{}}}],["createlocationdto",{"_index":1060,"title":{"classes/CreateLocationDto.html":{}},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["createlocationdto})@isoptional()@validatenested()@type(undefined",{"_index":1511,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["creatematerialdto",{"_index":1350,"title":{"classes/CreateMaterialDto.html":{}},"body":{"classes/CreateMaterialDto.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/UpdateMaterialDto.html":{}}}],["createnotificationdto",{"_index":1353,"title":{"classes/CreateNotificationDto.html":{}},"body":{"classes/CreateNotificationDto.html":{},"injectables/NotificationsService.html":{},"classes/UpdateNotificationDto.html":{}}}],["createobject",{"_index":2240,"title":{},"body":{"injectables/LocationService.html":{}}}],["createobject(locationdata",{"_index":2244,"title":{},"body":{"injectables/LocationService.html":{}}}],["createofferdto",{"_index":1356,"title":{"classes/CreateOfferDto.html":{}},"body":{"classes/CreateOfferDto.html":{},"controllers/OffersController.html":{},"classes/UpdateOfferDto.html":{}}}],["createorderdata",{"_index":3801,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["createorderdata.approvedby",{"_index":3806,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["createorderdata.createby",{"_index":3803,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["createorderdata.order_status",{"_index":3808,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["createorderdto",{"_index":1787,"title":{},"body":{"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/TakeAwayController.html":{}}}],["createorderitemsdto",{"_index":1014,"title":{"classes/CreateOrderItemsDto.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["createpayment",{"_index":2856,"title":{},"body":{"injectables/PaypalService.html":{}}}],["createpayment(amount",{"_index":2861,"title":{},"body":{"injectables/PaypalService.html":{}}}],["createpaypal",{"_index":2792,"title":{},"body":{"controllers/PaymentController.html":{}}}],["createpaypal(branchid",{"_index":2796,"title":{},"body":{"controllers/PaymentController.html":{}}}],["createpaypalpayment",{"_index":2914,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["createpaypalpayment(data",{"_index":2917,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["createproductdto",{"_index":1394,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{}}}],["createspendingauthdto",{"_index":1314,"title":{"classes/CreateSpendingAuthDto.html":{}},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["createspendingauthdto:18",{"_index":1323,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{}}}],["createspendingauthdto:27",{"_index":1321,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{}}}],["createspendingauthdto:38",{"_index":1326,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{}}}],["createstock",{"_index":3559,"title":{},"body":{"injectables/StockService.html":{}}}],["createstock(createstockdata",{"_index":3564,"title":{},"body":{"injectables/StockService.html":{}}}],["createstockdata",{"_index":3566,"title":{},"body":{"injectables/StockService.html":{}}}],["createstockdata.branch",{"_index":3578,"title":{},"body":{"injectables/StockService.html":{}}}],["createstockdto",{"_index":1448,"title":{"classes/CreateStockDto.html":{}},"body":{"classes/CreateStockDto.html":{},"controllers/StockController.html":{},"classes/UpdateStockDto.html":{}}}],["createstockgarddto",{"_index":1463,"title":{"classes/CreateStockGardDto.html":{}},"body":{"classes/CreateStockGardDto.html":{},"controllers/StockGardController.html":{},"classes/UpdateStockGardDto.html":{}}}],["createstockitemdto",{"_index":1473,"title":{"classes/CreateStockItemDto.html":{}},"body":{"classes/CreateStockItemDto.html":{},"controllers/StockItemController.html":{},"classes/UpdateStockItemDto.html":{}}}],["createstockitemlog",{"_index":3560,"title":{},"body":{"injectables/StockService.html":{}}}],["createstockitemlog(data",{"_index":3567,"title":{},"body":{"injectables/StockService.html":{}}}],["createstockitemlogsdto",{"_index":1453,"title":{"classes/CreateStockItemLogsDto.html":{}},"body":{"classes/CreateStockDto.html":{},"classes/CreateStockItemLogsDto.html":{},"controllers/StockItemLogsController.html":{},"classes/UpdateStockItemLogsDto.html":{}}}],["createstockitemquantitydto",{"_index":1467,"title":{"classes/CreateStockItemQuantityDto.html":{}},"body":{"classes/CreateStockGardDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["createstockitemquantitydto})@isnotempty()@validatenested()@arrayminsize(1)@arraymaxsize(1)@type(undefined",{"_index":1493,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{}}}],["createstockitemquantitydto})@isoptional()@validatenested()@type(undefined",{"_index":4172,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["createsupplierdata",{"_index":3762,"title":{},"body":{"injectables/SupplierService.html":{}}}],["createsupplierdto",{"_index":1507,"title":{"classes/CreateSupplierDto.html":{}},"body":{"classes/CreateSupplierDto.html":{},"controllers/SupplierController.html":{},"classes/UpdateSupplierDto.html":{}}}],["createtakeawayorder",{"_index":3785,"title":{},"body":{"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{}}}],["createtakeawayorder(createorderdata",{"_index":3799,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["createtakeawayorder(createorderdto",{"_index":3786,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["createtakeawayorderdto",{"_index":1522,"title":{"classes/CreateTakeAwayOrderDto.html":{}},"body":{"classes/CreateTakeAwayOrderDto.html":{},"controllers/TakeAwayController.html":{}}}],["createticketdto",{"_index":1525,"title":{"classes/CreateTicketDto.html":{}},"body":{"classes/CreateTicketDto.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"classes/UpdateTicketDto.html":{}}}],["createticketupdatedto",{"_index":1552,"title":{"classes/CreateTicketUpdateDto.html":{}},"body":{"classes/CreateTicketUpdateDto.html":{},"controllers/TicketUpdatesController.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["createtransactiondto",{"_index":1556,"title":{"classes/CreateTransactionDto.html":{}},"body":{"classes/CreateTransactionDto.html":{},"controllers/StockTransactionController.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["createuserdata",{"_index":473,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto",{"_index":402,"title":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["createwalletdto",{"_index":1585,"title":{"classes/CreateWalletDto.html":{}},"body":{"classes/CreateWalletDto.html":{},"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["createwithgoogle",{"_index":4324,"title":{},"body":{"injectables/UsersService.html":{}}}],["createwithgoogle(email",{"_index":4346,"title":{},"body":{"injectables/UsersService.html":{}}}],["currency",{"_index":1038,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/Payment.html":{},"interfaces/UpdateBasePaymentInterface.html":{}}}],["currency.enum",{"_index":1048,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/Payment.html":{},"interfaces/UpdateBasePaymentInterface.html":{}}}],["currency.enum.ts",{"_index":4527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["currency_code",{"_index":2899,"title":{},"body":{"injectables/PaypalService.html":{}}}],["current",{"_index":964,"title":{},"body":{"injectables/CouponService.html":{},"classes/CreateDeliveryOrderDto.html":{},"injectables/OffersService.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["currentdate",{"_index":954,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["customer",{"_index":1006,"title":{"classes/Customer.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"injectables/ResetPasswordService.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["customer.dto",{"_index":1617,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerUserController.html":{},"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts",{"_index":1122,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts:12",{"_index":4024,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts:17",{"_index":1127,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:23",{"_index":4030,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts:29",{"_index":1137,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:32",{"_index":4025,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts:38",{"_index":1131,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:40",{"_index":4027,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts:46",{"_index":1134,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:49",{"_index":4026,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts:55",{"_index":1133,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.guard.ts",{"_index":2197,"title":{},"body":{"classes/IsUserCustomerGuard.html":{}}}],["customer.guard.ts:5",{"_index":2198,"title":{},"body":{"classes/IsUserCustomerGuard.html":{}}}],["customer.model",{"_index":1636,"title":{},"body":{"classes/CustomerLocations.html":{}}}],["customer.name",{"_index":1637,"title":{},"body":{"classes/CustomerLocations.html":{},"modules/CustomerModule.html":{},"classes/Order.html":{}}}],["customer.service",{"_index":1691,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["customer/:orderid",{"_index":1793,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["customer/customer.module",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["customer_id",{"_index":1680,"title":{},"body":{"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{}}}],["customer_location_id",{"_index":1683,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["customeradmincontroller",{"_index":1597,"title":{"controllers/CustomerAdminController.html":{}},"body":{"controllers/CustomerAdminController.html":{},"modules/CustomerModule.html":{}}}],["customerinterface",{"_index":1629,"title":{"interfaces/CustomerInterface.html":{}},"body":{"interfaces/CustomerInterface.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{}}}],["customerlocations",{"_index":1631,"title":{"classes/CustomerLocations.html":{}},"body":{"classes/CustomerLocations.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"classes/DeliveryOrder.html":{}}}],["customerlocations.name",{"_index":1718,"title":{},"body":{"modules/CustomerModule.html":{},"classes/DeliveryOrder.html":{}}}],["customerlocationscontroller",{"_index":1640,"title":{"controllers/CustomerLocationsController.html":{}},"body":{"controllers/CustomerLocationsController.html":{},"modules/CustomerModule.html":{}}}],["customerlocationservice",{"_index":1655,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["customerlocationsinterface",{"_index":1661,"title":{"interfaces/CustomerLocationsInterface.html":{}},"body":{"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{}}}],["customerlocationsrepo",{"_index":1673,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["customerlocationsschema",{"_index":1638,"title":{},"body":{"classes/CustomerLocations.html":{},"modules/CustomerModule.html":{},"miscellaneous/variables.html":{}}}],["customerlocationsservice",{"_index":1650,"title":{"injectables/CustomerLocationsService.html":{}},"body":{"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/OrderService.html":{},"overview.html":{}}}],["customerloction",{"_index":2706,"title":{},"body":{"injectables/OrderService.html":{}}}],["customermodule",{"_index":163,"title":{"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["customerrepo",{"_index":1726,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customers",{"_index":1748,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customerschema",{"_index":1595,"title":{},"body":{"classes/Customer.html":{},"modules/CustomerModule.html":{},"miscellaneous/variables.html":{}}}],["customerservice",{"_index":1614,"title":{"injectables/CustomerService.html":{}},"body":{"controllers/CustomerAdminController.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"injectables/OrderService.html":{},"overview.html":{}}}],["customerusercontroller",{"_index":1711,"title":{"controllers/CustomerUserController.html":{}},"body":{"modules/CustomerModule.html":{},"controllers/CustomerUserController.html":{}}}],["cutomerlocationservice",{"_index":2667,"title":{},"body":{"injectables/OrderService.html":{}}}],["daily",{"_index":2514,"title":{},"body":{"classes/Order.html":{}}}],["daily_orderid",{"_index":2482,"title":{},"body":{"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{}}}],["data",{"_index":325,"title":{},"body":{"controllers/AttendenceController.html":{},"injectables/CashService.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"injectables/ResetPasswordService.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"injectables/VerifyEmailService.html":{}}}],["data.access_token",{"_index":2885,"title":{},"body":{"injectables/PaypalService.html":{}}}],["data.branch",{"_index":788,"title":{},"body":{"injectables/CashService.html":{},"injectables/OrderService.html":{}}}],["data.coupon",{"_index":2723,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.createby",{"_index":790,"title":{},"body":{"injectables/CashService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockTransactionService.html":{}}}],["data.customer",{"_index":2703,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.end_location",{"_index":2705,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.items_quantity",{"_index":3673,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["data.offers",{"_index":2719,"title":{},"body":{"injectables/OrderService.html":{}}}],["data.order_id",{"_index":789,"title":{},"body":{"injectables/CashService.html":{}}}],["data.status",{"_index":3709,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["data.stock",{"_index":3706,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["data.stock_id",{"_index":3408,"title":{},"body":{"injectables/StockGardService.html":{}}}],["data.updated_user",{"_index":3707,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["data['branch",{"_index":2713,"title":{},"body":{"injectables/OrderService.html":{}}}],["data['createby",{"_index":2733,"title":{},"body":{"injectables/OrderService.html":{}}}],["data['items",{"_index":2702,"title":{},"body":{"injectables/OrderService.html":{}}}],["data['order_status",{"_index":2735,"title":{},"body":{"injectables/OrderService.html":{}}}],["date",{"_index":625,"title":{},"body":{"classes/Branch.html":{},"interfaces/BranchInterface.html":{},"classes/Coupon.html":{},"interfaces/CouponInterface.html":{},"injectables/CouponService.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateOfferDto.html":{},"miscellaneous/functions.html":{}}}],["date().gettime",{"_index":3183,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["date(new",{"_index":3182,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["dates",{"_index":963,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["datetocheck",{"_index":4641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["date})@isoptional()@isdatestring",{"_index":1266,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["declarations",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["decorator/roles.decorator",{"_index":125,"title":{},"body":{"controllers/AdminController.html":{},"injectables/RolesGuard.html":{}}}],["decorators",{"_index":105,"title":{},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"classes/CashPayment.html":{},"controllers/CashierController.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"controllers/DineInController.html":{},"classes/DineinOrder.html":{},"controllers/EmpPdrActionController.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Location.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"controllers/PaypalController.html":{},"controllers/PdrController.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/ResetPassword.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/VerifyUserEmail.html":{},"controllers/WalletController.html":{}}}],["decrease",{"_index":3605,"title":{},"body":{"injectables/StockService.html":{}}}],["defalt",{"_index":3814,"title":{},"body":{"classes/Ticket.html":{}}}],["default",{"_index":745,"title":{},"body":{"classes/CashPayment.html":{},"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/Order.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"injectables/PaypalService.html":{},"classes/Product.html":{},"classes/SpendingAuthorization.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TokenVerificationDto.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":443,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":16,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"classes/DineinOrder.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"injectables/EmployeeService.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["delete",{"_index":286,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["delete(':attendanceid",{"_index":298,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["delete(':gard_id/:stockid",{"_index":3343,"title":{},"body":{"controllers/StockGardController.html":{}}}],["delete(':id",{"_index":552,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["delete(':id')@role(roles.superuser",{"_index":2995,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete(':pdr_id",{"_index":2930,"title":{},"body":{"controllers/PdrController.html":{}}}],["delete(@param('attendanceid",{"_index":335,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["delete(attendenceid",{"_index":297,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["deletebyid",{"_index":3496,"title":{},"body":{"injectables/StockItemService.html":{}}}],["deletebyid(item_id",{"_index":3505,"title":{},"body":{"injectables/StockItemService.html":{}}}],["deleteonebyid",{"_index":3652,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["deleteonebyid(transaction_id",{"_index":3662,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["deleteonebyuserid",{"_index":3116,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["deleteonebyuserid(user_id",{"_index":3129,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["deleteoneuserrefreshbyuserid",{"_index":4325,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleteoneuserrefreshbyuserid(user_id",{"_index":4348,"title":{},"body":{"injectables/UsersService.html":{}}}],["deletestockgardbyid",{"_index":3367,"title":{},"body":{"injectables/StockGardService.html":{}}}],["deletestockgardbyid(id",{"_index":3377,"title":{},"body":{"injectables/StockGardService.html":{}}}],["deletestockitemlogbyid",{"_index":3464,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["deletestockitemlogbyid(log_id",{"_index":3469,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["deliverey",{"_index":4576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["deliverey_method",{"_index":1153,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["delivereymethod",{"_index":1158,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["delivereymethod.bike",{"_index":1189,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["delivery",{"_index":1152,"title":{"classes/Delivery.html":{}},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["delivery.controller",{"_index":1818,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["delivery.model",{"_index":2508,"title":{},"body":{"classes/Order.html":{}}}],["delivery.name",{"_index":1819,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["delivery.service",{"_index":1817,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["delivery/delivery.module",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["delivery_price",{"_index":1154,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["delivery_status",{"_index":1155,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["deliverycontroller",{"_index":1770,"title":{"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{}},"body":{"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"modules/OrderModule.html":{}}}],["deliverymodule",{"_index":164,"title":{"modules/DeliveryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveryModule.html":{},"modules.html":{},"overview.html":{}}}],["deliveryorder",{"_index":1797,"title":{"classes/DeliveryOrder.html":{}},"body":{"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"classes/Order.html":{},"modules/OrderModule.html":{}}}],["deliveryorder.dto.ts",{"_index":4039,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["deliveryorder.dto.ts:16",{"_index":4047,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["deliveryorder.dto.ts:25",{"_index":4049,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["deliveryorder.dto.ts:35",{"_index":4041,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["deliveryorder.dto.ts:45",{"_index":4043,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["deliveryorder.dto.ts:55",{"_index":4045,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["deliveryorder.name",{"_index":1806,"title":{},"body":{"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"classes/Order.html":{},"modules/OrderModule.html":{}}}],["deliveryorderschema",{"_index":1833,"title":{},"body":{"classes/DeliveryOrder.html":{},"modules/OrderModule.html":{},"miscellaneous/variables.html":{}}}],["deliveryprice",{"_index":1160,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["deliveryprice.fourty",{"_index":1191,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["deliveryprice.twenty",{"_index":1831,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["deliveryschema",{"_index":1768,"title":{},"body":{"classes/Delivery.html":{},"modules/DeliveryModule.html":{},"miscellaneous/variables.html":{}}}],["deliveryservice",{"_index":1801,"title":{"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{}},"body":{"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"modules/OrderModule.html":{},"overview.html":{}}}],["deliverystatus",{"_index":1165,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["deliverystatus.compeleted",{"_index":1811,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["deliverystatus.indeliver",{"_index":1193,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"controllers/DeliveryController-1.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["deliverystatus.waitingcustomer",{"_index":1813,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["deliverystatus.waitingorder",{"_index":1832,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["denied",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["department",{"_index":1206,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":149,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":845,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/StockItem.html":{},"interfaces/StockItemInterface.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/TicketUpdates.html":{},"interfaces/TicketUpdatesInterface.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"index.html":{},"properties.html":{}}}],["description'})@isstring()@isnotempty",{"_index":1338,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["description'})@isstring()@isoptional",{"_index":4095,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["details",{"_index":981,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["development",{"_index":1280,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"index.html":{}}}],["dinein",{"_index":1196,"title":{},"body":{"classes/CreateDineInOrderDto.html":{},"controllers/DineInController.html":{},"miscellaneous/enumerations.html":{}}}],["dinein.model",{"_index":2507,"title":{},"body":{"classes/Order.html":{}}}],["dineincontroller",{"_index":1856,"title":{"controllers/DineInController.html":{}},"body":{"controllers/DineInController.html":{},"modules/OrderModule.html":{}}}],["dineinorder",{"_index":1863,"title":{"classes/DineinOrder.html":{}},"body":{"controllers/DineInController.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"modules/OrderModule.html":{}}}],["dineinorder.name",{"_index":1868,"title":{},"body":{"controllers/DineInController.html":{},"classes/Order.html":{},"modules/OrderModule.html":{}}}],["dineinorderschema",{"_index":1880,"title":{},"body":{"classes/DineinOrder.html":{},"modules/OrderModule.html":{},"miscellaneous/variables.html":{}}}],["dineinservice",{"_index":1869,"title":{"injectables/DineInService.html":{}},"body":{"injectables/DineInService.html":{},"modules/OrderModule.html":{},"overview.html":{}}}],["discriminatorkey",{"_index":2509,"title":{},"body":{"classes/Order.html":{},"classes/Payment.html":{},"classes/SpendingAuthorization.html":{}}}],["discriminators",{"_index":603,"title":{},"body":{"modules/BillingModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{}}}],["district",{"_index":840,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["district'})@isstring()@isnotempty",{"_index":1340,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["district'})@isstring()@isoptional",{"_index":4096,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["doe",{"_index":1138,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["doe'})@isnotempty()@isstring",{"_index":1126,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["doe'})@isoptional()@isstring",{"_index":4023,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["doesn't",{"_index":2718,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto/assignrole.dto",{"_index":126,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{}}}],["dto/attendence/create",{"_index":318,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["dto/attendence/update",{"_index":320,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["dto/change",{"_index":4369,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":560,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["dto/customer",{"_index":1653,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["dto/customer/create",{"_index":1616,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerUserController.html":{}}}],["dto/customer/update",{"_index":1618,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerUserController.html":{}}}],["dto/delivery/create",{"_index":1799,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["dto/dinein/create",{"_index":1865,"title":{},"body":{"controllers/DineInController.html":{}}}],["dto/employee",{"_index":1898,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["dto/employee/create",{"_index":1975,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["dto/employee/update",{"_index":1977,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["dto/monthly",{"_index":2936,"title":{},"body":{"controllers/PdrController.html":{}}}],["dto/signin",{"_index":410,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/singup.dto",{"_index":406,"title":{},"body":{"controllers/AuthController.html":{}}}],["dto/spending",{"_index":3223,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["dto/stock",{"_index":3348,"title":{},"body":{"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["dto/stock/create",{"_index":3305,"title":{},"body":{"controllers/StockController.html":{}}}],["dto/stock/update",{"_index":3307,"title":{},"body":{"controllers/StockController.html":{}}}],["dto/takeaway/create",{"_index":3788,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["dto/tokenverificationdto",{"_index":2112,"title":{},"body":{"controllers/GoogleController.html":{}}}],["dto/update",{"_index":562,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"controllers/ProductController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["e2e",{"_index":4669,"title":{},"body":{"index.html":{}}}],["each",{"_index":1031,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["efficient",{"_index":4647,"title":{},"body":{"index.html":{}}}],["eg",{"_index":4584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["egypt",{"_index":1091,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["elem._id",{"_index":3411,"title":{},"body":{"injectables/StockGardService.html":{}}}],["elsewhere",{"_index":2748,"title":{},"body":{"injectables/OrderService.html":{}}}],["email",{"_index":399,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/GoogleService.html":{},"injectables/ResetPasswordService.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["email.dto",{"_index":411,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["email.dto.ts",{"_index":3203,"title":{},"body":{"classes/SignInByEmailDto.html":{}}}],["email.dto.ts:11",{"_index":3205,"title":{},"body":{"classes/SignInByEmailDto.html":{}}}],["email.dto.ts:19",{"_index":3206,"title":{},"body":{"classes/SignInByEmailDto.html":{}}}],["email.model",{"_index":4318,"title":{},"body":{"modules/UsersModule.html":{},"injectables/VerifyEmailService.html":{}}}],["email.model.ts",{"_index":4445,"title":{},"body":{"classes/VerifyUserEmail.html":{},"miscellaneous/variables.html":{}}}],["email.model.ts:13",{"_index":4447,"title":{},"body":{"classes/VerifyUserEmail.html":{}}}],["email.model.ts:16",{"_index":4446,"title":{},"body":{"classes/VerifyUserEmail.html":{}}}],["email.service",{"_index":4286,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["email.service.ts",{"_index":4403,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:105",{"_index":4414,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:123",{"_index":4417,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:15",{"_index":4406,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:23",{"_index":4412,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:29",{"_index":4408,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:38",{"_index":4410,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:46",{"_index":4411,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:54",{"_index":4415,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:64",{"_index":4409,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email.service.ts:74",{"_index":4419,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["email_password",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["email_service",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["email_user",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["emailbody",{"_index":3172,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["emailservice",{"_index":1882,"title":{"injectables/EmailService.html":{}},"body":{"injectables/EmailService.html":{},"modules/NotificationsModule.html":{},"overview.html":{}}}],["emp",{"_index":373,"title":{},"body":{"injectables/AttendenceService.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{},"controllers/SpendingAuthController.html":{},"classes/SpendingAuthorization.html":{},"injectables/TakeAwayService.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{}}}],["employee",{"_index":252,"title":{"classes/Employee.html":{}},"body":{"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"injectables/SpendingAuthService.html":{},"injectables/TakeAwayService.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{}}}],["employee'})@isenum(sex)@isnotempty",{"_index":1229,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee'})@isenum(sex)@isoptional",{"_index":4060,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee'})@ismongoid()@isnotempty",{"_index":978,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["employee'})@ismongoid()@isoptional",{"_index":3978,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["employee.dto",{"_index":1976,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employee.dto.ts",{"_index":1202,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:104",{"_index":4052,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:107",{"_index":1216,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:24",{"_index":4062,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:25",{"_index":1234,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:32",{"_index":4067,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:34",{"_index":1245,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:40",{"_index":4069,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:42",{"_index":1248,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:48",{"_index":4059,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:50",{"_index":1227,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:55",{"_index":1219,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:56",{"_index":4054,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:65",{"_index":1237,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:66",{"_index":4064,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:70",{"_index":1230,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:71",{"_index":4061,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:80",{"_index":1212,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:88",{"_index":4065,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:89",{"_index":1243,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:96",{"_index":4056,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:98",{"_index":1223,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.model",{"_index":276,"title":{},"body":{"classes/Attendence.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{}}}],["employee.name",{"_index":279,"title":{},"body":{"classes/Attendence.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{}}}],["employee.service",{"_index":1931,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{}}}],["employee.user",{"_index":2068,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["employee/employee.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["employee_id",{"_index":358,"title":{},"body":{"injectables/AttendenceService.html":{},"classes/CreateAttendenceDTO.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/PdrService.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["employeecontroller",{"_index":1965,"title":{"controllers/EmployeeController.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{}}}],["employeeinterface",{"_index":1983,"title":{"interfaces/EmployeeInterface.html":{}},"body":{"interfaces/EmployeeInterface.html":{},"injectables/EmployeeService.html":{}}}],["employeemodule",{"_index":165,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BillingModule.html":{},"modules/EmployeeModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["employeemonthlypdr",{"_index":1998,"title":{"classes/EmployeeMonthlyPDR.html":{}},"body":{"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"injectables/PdrService.html":{}}}],["employeemonthlypdr.name",{"_index":2005,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeemonthlypdrinterface",{"_index":1924,"title":{"interfaces/EmployeeMonthlyPDRInterface.html":{}},"body":{"injectables/EmpPdrActionService.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{}}}],["employeemonthlypdrschema",{"_index":1999,"title":{},"body":{"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"miscellaneous/variables.html":{}}}],["employeemothlypdrrepo",{"_index":2948,"title":{},"body":{"injectables/PdrService.html":{}}}],["employeepdraction",{"_index":1928,"title":{"classes/EmployeePDRAction.html":{}},"body":{"injectables/EmpPdrActionService.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDRAction.html":{}}}],["employeepdraction.name",{"_index":2006,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeepdractioninterface",{"_index":1900,"title":{"interfaces/EmployeePDRActionInterface.html":{}},"body":{"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"interfaces/EmployeePDRActionInterface.html":{}}}],["employeepdractionrepo",{"_index":1916,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["employeepdractionschema",{"_index":2001,"title":{},"body":{"modules/EmployeeModule.html":{},"classes/EmployeePDRAction.html":{},"miscellaneous/variables.html":{}}}],["employeerepo",{"_index":350,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/EmployeeService.html":{}}}],["employeeschema",{"_index":1963,"title":{},"body":{"classes/Employee.html":{},"modules/EmployeeModule.html":{},"miscellaneous/variables.html":{}}}],["employeeservice",{"_index":1914,"title":{"injectables/EmployeeService.html":{}},"body":{"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OrderService.html":{},"injectables/PdrService.html":{},"injectables/SpendingAuthService.html":{},"injectables/TakeAwayService.html":{},"overview.html":{}}}],["employeespendingauthinteface",{"_index":2077,"title":{"interfaces/EmployeeSpendingAuthInteface.html":{}},"body":{"interfaces/EmployeeSpendingAuthInteface.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{}}}],["employeespendingauthorization",{"_index":586,"title":{"classes/EmployeeSpendingAuthorization.html":{}},"body":{"modules/BillingModule.html":{},"classes/EmployeeSpendingAuthorization.html":{},"controllers/SpendingAuthController.html":{},"classes/SpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["employeespendingauthorization.name",{"_index":604,"title":{},"body":{"modules/BillingModule.html":{},"controllers/SpendingAuthController.html":{},"classes/SpendingAuthorization.html":{}}}],["employeespendingauthorizationschema",{"_index":587,"title":{},"body":{"modules/BillingModule.html":{},"classes/EmployeeSpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["employeesservice",{"_index":2204,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["employeetransactioninterface",{"_index":2088,"title":{"interfaces/EmployeeTransactionInterface.html":{}},"body":{"interfaces/EmployeeTransactionInterface.html":{}}}],["employeetransactions",{"_index":2093,"title":{"classes/EmployeeTransactions.html":{}},"body":{"classes/EmployeeTransactions.html":{}}}],["employeetransactionsschema",{"_index":2102,"title":{},"body":{"classes/EmployeeTransactions.html":{},"miscellaneous/variables.html":{}}}],["emplpyee",{"_index":2095,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["emppdractioncontroller",{"_index":1884,"title":{"controllers/EmpPdrActionController.html":{}},"body":{"controllers/EmpPdrActionController.html":{},"modules/EmployeeModule.html":{}}}],["emppdractionservice",{"_index":1895,"title":{"injectables/EmpPdrActionService.html":{}},"body":{"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"modules/EmployeeModule.html":{},"overview.html":{}}}],["emppdrservice",{"_index":1904,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{}}}],["empservice",{"_index":2188,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["end",{"_index":1170,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["end_location",{"_index":1156,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["enddate",{"_index":4640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ended",{"_index":2753,"title":{},"body":{"injectables/OrderService.html":{}}}],["ensure",{"_index":2752,"title":{},"body":{"injectables/OrderService.html":{}}}],["enum",{"_index":974,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateTicketDto.html":{},"classes/Order.html":{},"classes/Payment.html":{},"classes/SpendingAuthorization.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateTicketDto.html":{}}}],["enum/emp",{"_index":2091,"title":{},"body":{"interfaces/EmployeeTransactionInterface.html":{}}}],["enum/spendingauthorization",{"_index":3256,"title":{},"body":{"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{}}}],["enumerations",{"_index":4511,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/account",{"_index":829,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{},"interfaces/UserInterface.html":{},"injectables/UsersService.html":{}}}],["enums/attendence",{"_index":274,"title":{},"body":{"classes/Attendence.html":{},"interfaces/AttendenceInterface.html":{},"classes/CreateAttendenceDTO.html":{}}}],["enums/department.enums",{"_index":1250,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{}}}],["enums/measure",{"_index":2311,"title":{},"body":{"classes/Material.html":{}}}],["enums/order",{"_index":1829,"title":{},"body":{"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{}}}],["enums/payment",{"_index":749,"title":{},"body":{"classes/CashPayment.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"interfaces/UpdateBasePaymentInterface.html":{}}}],["enums/pdr",{"_index":2024,"title":{},"body":{"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{}}}],["enums/product",{"_index":1433,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["enums/roles.enums",{"_index":128,"title":{},"body":{"controllers/AdminController.html":{},"injectables/RolesGuard.html":{}}}],["enums/size.enum",{"_index":1436,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{}}}],["enums/stock",{"_index":3423,"title":{},"body":{"classes/StockItem.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{}}}],["enums/ticket",{"_index":1544,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{}}}],["enumvalues",{"_index":3710,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["enumvalues.includes(data.status",{"_index":3712,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["err",{"_index":48,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["err.code",{"_index":3517,"title":{},"body":{"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/UsersService.html":{}}}],["err.status",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["error",{"_index":2169,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/OrderService.html":{},"injectables/PaypalService.html":{}}}],["error('missing_api_credentials",{"_index":2877,"title":{},"body":{"injectables/PaypalService.html":{}}}],["error('product",{"_index":3086,"title":{},"body":{"injectables/ProductService.html":{}}}],["error('stock",{"_index":3594,"title":{},"body":{"injectables/StockService.html":{}}}],["error(errormessage",{"_index":2892,"title":{},"body":{"injectables/PaypalService.html":{}}}],["error.status",{"_index":2170,"title":{},"body":{"injectables/GoogleService.html":{}}}],["errormessage",{"_index":2890,"title":{},"body":{"injectables/PaypalService.html":{}}}],["example",{"_index":247,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"controllers/PaypalController.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"index.html":{}}}],["exceeded",{"_index":1269,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["exec",{"_index":383,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["execute",{"_index":2910,"title":{},"body":{"injectables/PaypalService.html":{},"injectables/ProductService.html":{}}}],["executepayment(paymentid",{"_index":2908,"title":{},"body":{"injectables/PaypalService.html":{}}}],["executioncontext",{"_index":25,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["exist",{"_index":376,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ResetPasswordService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/UsersService.html":{}}}],["exists",{"_index":962,"title":{},"body":{"injectables/CouponService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/ProductService.html":{}}}],["expectations",{"_index":1270,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["expire",{"_index":4619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresin",{"_index":447,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":34,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Cashier.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["exports",{"_index":154,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["express",{"_index":414,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CustomerUserController.html":{},"controllers/GoogleController.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":8,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{}}}],["extra",{"_index":1377,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{}}}],["extractjwt",{"_index":71,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":79,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["false",{"_index":703,"title":{},"body":{"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"injectables/EmployeeService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OffersService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemService.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["false})@isdatestring()@isoptional",{"_index":1222,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{}}}],["false})@ismongoid()@isstring()@isoptional",{"_index":4089,"title":{},"body":{"classes/UpdateInvoiceSpendingAuthDto.html":{}}}],["false})@isnotempty()@arrayminsize(1)@isstring({each",{"_index":1108,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["false})@isnotempty()@isstring",{"_index":1067,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{}}}],["false})@isnumber()@isoptional",{"_index":4116,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["false})@isoptional()@isarray",{"_index":4013,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["false})@isoptional()@isarray()@isstring",{"_index":1416,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["false})@isoptional()@isarray()@isstring()@ismongoid",{"_index":4112,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["false})@isoptional()@isboolean",{"_index":1408,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["false})@isoptional()@isdatestring",{"_index":1072,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{}}}],["false})@isoptional()@isenum(productcomponents",{"_index":1413,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["false})@isoptional()@ismongoid()@isstring",{"_index":3997,"title":{},"body":{"classes/UpdateBranchDto.html":{}}}],["false})@isoptional()@isnumber",{"_index":1423,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{}}}],["false})@isoptional()@isstring",{"_index":1130,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["false})@isoptional()@isstring()@ismongoid",{"_index":1064,"title":{},"body":{"classes/CreateBranchDto.html":{}}}],["false})@isoptional()@validatenested()@type(undefined",{"_index":1062,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/UpdateBranchDto.html":{}}}],["false})@isoptional()@validatenested({each",{"_index":1458,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["false})@isstring()@isarray()@isoptional",{"_index":4109,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["false})@isstring()@isoptional",{"_index":4114,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["family",{"_index":1365,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/UpdateOfferDto.html":{}}}],["female",{"_index":4611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fetch(`${this.base}/v1/oauth2/token",{"_index":2880,"title":{},"body":{"injectables/PaypalService.html":{}}}],["fetch(url",{"_index":2901,"title":{},"body":{"injectables/PaypalService.html":{}}}],["fifteen",{"_index":4557,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fifty",{"_index":4568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Cashier.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["finally",{"_index":2750,"title":{},"body":{"injectables/OrderService.html":{}}}],["find",{"_index":84,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/OrderService.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/SpendingAuthService.html":{}}}],["findall",{"_index":287,"title":{},"body":{"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["findallcompeletedorder",{"_index":2661,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallcompeletedorderbybranchid",{"_index":2560,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findallcompeletedorderbybranchid(@param('branch_id",{"_index":2610,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallcompeletedorderbybranchid(branch_id",{"_index":2574,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findallcustomers",{"_index":1720,"title":{},"body":{"injectables/CustomerService.html":{}}}],["findallcustomersbyphone",{"_index":1599,"title":{},"body":{"controllers/CustomerAdminController.html":{},"injectables/CustomerService.html":{}}}],["findallcustomersbyphone(@param('number",{"_index":1623,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["findallcustomersbyphone(number",{"_index":1605,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["findallcustomersbyphone(phonenumber",{"_index":1729,"title":{},"body":{"injectables/CustomerService.html":{}}}],["findallforonebranch",{"_index":3330,"title":{},"body":{"controllers/StockGardController.html":{}}}],["findallforonebranch(@param('stockid",{"_index":3353,"title":{},"body":{"controllers/StockGardController.html":{}}}],["findallforonebranch(stockid",{"_index":3335,"title":{},"body":{"controllers/StockGardController.html":{}}}],["findallforonestock",{"_index":3368,"title":{},"body":{"injectables/StockGardService.html":{}}}],["findallforonestock(stock_id",{"_index":3379,"title":{},"body":{"injectables/StockGardService.html":{}}}],["findalllocations",{"_index":1666,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["findalloffers",{"_index":2417,"title":{},"body":{"injectables/OffersService.html":{}}}],["findallorderinbranch",{"_index":2561,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findallorderinbranch(@param('branch_id",{"_index":2608,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallorderinbranch(branch_id",{"_index":2577,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallorderinbranch(branchid",{"_index":2679,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallordersapprovedbyuserid",{"_index":2562,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findallordersapprovedbyuserid(@param('user_id",{"_index":2615,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallordersapprovedbyuserid(user_id",{"_index":2580,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallordersapprovedbyuserid(userid",{"_index":2681,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallordersapprovedbyuseridinspecifictime",{"_index":2662,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallordersapprovedbyuseridinspecifictime(userid",{"_index":2683,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallpendingorder",{"_index":2563,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findallpendingorderbybranchid",{"_index":2564,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findallpendingorderbybranchid(@param('branch_id",{"_index":2604,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallpendingorderbybranchid(branch_id",{"_index":2585,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallpendingorderbybranchid(branchid",{"_index":2686,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallpendingorderbyuserid",{"_index":2565,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findallpendingorderbyuserid(@param('user_id",{"_index":2606,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallpendingorderbyuserid(user_id",{"_index":2588,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallpendingorderbyuserid(userid",{"_index":2688,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallpreparingdorderbybranchid",{"_index":2566,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallpreparingdorderbybranchid(@param('branch_id",{"_index":2613,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallpreparingdorderbybranchid(branch_id",{"_index":2591,"title":{},"body":{"controllers/OrderController.html":{}}}],["findallpreparingorder",{"_index":2567,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["findallpreparingorderbybranchid",{"_index":2663,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallpreparingorderbybranchid(branchid",{"_index":2691,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallproducts",{"_index":3027,"title":{},"body":{"injectables/ProductService.html":{}}}],["findallspecificcustomerlocations",{"_index":1667,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["findallspecificcustomerlocations(customer_id",{"_index":1678,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["findalltransactionforspecificbranch",{"_index":3620,"title":{},"body":{"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{}}}],["findalltransactionforspecificbranch(@param('branch_id",{"_index":3645,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["findalltransactionforspecificbranch(branch_id",{"_index":3628,"title":{},"body":{"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{}}}],["findbycouponname",{"_index":902,"title":{},"body":{"injectables/CouponService.html":{}}}],["findbycouponname(name",{"_index":916,"title":{},"body":{"injectables/CouponService.html":{}}}],["findbycreateby",{"_index":3236,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["findbycreateby(createby_id",{"_index":3244,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["findbyemployeeid",{"_index":288,"title":{},"body":{"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{}}}],["findbyemployeeid(@param('id",{"_index":331,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{}}}],["findbyemployeeid(employee_id",{"_index":356,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{}}}],["findbyemployeeid(id",{"_index":302,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{}}}],["findbyid",{"_index":289,"title":{},"body":{"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/PdrController.html":{}}}],["findbyid(@param('id",{"_index":329,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/PdrController.html":{}}}],["findbyid(attend_id",{"_index":359,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["findbyid(customer_location_id",{"_index":1703,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["findbyid(id",{"_index":305,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"injectables/OrderService.html":{},"controllers/PdrController.html":{}}}],["findbyid(product_id",{"_index":3085,"title":{},"body":{"injectables/ProductService.html":{}}}],["findbyidanddelete(transaction_id",{"_index":3716,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["findbyidandupdate",{"_index":2763,"title":{},"body":{"injectables/OrderService.html":{}}}],["findbyidandupdate(couponid",{"_index":966,"title":{},"body":{"injectables/CouponService.html":{}}}],["findbyidandupdate(item_id",{"_index":3526,"title":{},"body":{"injectables/StockItemService.html":{}}}],["findbyidandupdate(offer_id",{"_index":2464,"title":{},"body":{"injectables/OffersService.html":{}}}],["findbyname",{"_index":2382,"title":{},"body":{"controllers/OffersController.html":{}}}],["findbyname(@query('name",{"_index":2403,"title":{},"body":{"controllers/OffersController.html":{}}}],["findbyname(offername",{"_index":2386,"title":{},"body":{"controllers/OffersController.html":{}}}],["findbyreleasedby",{"_index":3237,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["findbyreleasedby(releasedby_id",{"_index":3247,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["findbystatus",{"_index":3238,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["findbystatus(status",{"_index":3250,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["findbyticketid",{"_index":3912,"title":{},"body":{"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{}}}],["findbyticketid(@param('id",{"_index":3934,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["findbyticketid(id",{"_index":3918,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["findbyticketid(ticket_id",{"_index":3949,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["findempbyuserid",{"_index":2030,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["findempbyuserid(id",{"_index":2043,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["findofferbyname",{"_index":2418,"title":{},"body":{"injectables/OffersService.html":{}}}],["findofferbyname(offername",{"_index":2433,"title":{},"body":{"injectables/OffersService.html":{}}}],["findone",{"_index":543,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"injectables/CouponService.html":{},"injectables/EmployeeService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["findone(@param('id",{"_index":567,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/MaterialController.html":{},"controllers/OrderController.html":{},"controllers/WalletController.html":{}}}],["findone(id",{"_index":549,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OrderController.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["findoneanddelete",{"_index":4425,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["findoneandupdate",{"_index":3164,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["findonebranchbyid",{"_index":669,"title":{},"body":{"injectables/BranchService.html":{}}}],["findonebranchbyid(branch_id",{"_index":680,"title":{},"body":{"injectables/BranchService.html":{}}}],["findonebranchgardbyid",{"_index":3331,"title":{},"body":{"controllers/StockGardController.html":{}}}],["findonebranchgardbyid(gard_id",{"_index":3338,"title":{},"body":{"controllers/StockGardController.html":{}}}],["findonebycode",{"_index":3117,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["findonebycode(code",{"_index":3131,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["findonebyemail",{"_index":4326,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":4351,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid",{"_index":869,"title":{},"body":{"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/InvoiceService.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["findonebyid(@param('id",{"_index":886,"title":{},"body":{"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{}}}],["findonebyid(@req",{"_index":1764,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["findonebyid(coupon_id",{"_index":918,"title":{},"body":{"injectables/CouponService.html":{}}}],["findonebyid(id",{"_index":874,"title":{},"body":{"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/InvoiceService.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["findonebyid(item_id",{"_index":3509,"title":{},"body":{"injectables/StockItemService.html":{}}}],["findonebyid(req",{"_index":1757,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["findonebyid(supplier_id",{"_index":3764,"title":{},"body":{"injectables/SupplierService.html":{}}}],["findonebyuserid",{"_index":3118,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["findonebyuserid(user_id",{"_index":3134,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["findonecustomerbyid",{"_index":1721,"title":{},"body":{"injectables/CustomerService.html":{}}}],["findonecustomerbyid(customer_id",{"_index":1732,"title":{},"body":{"injectables/CustomerService.html":{}}}],["findonecustomerlocationbyid",{"_index":1668,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["findonecustomerlocationbyid(customer_location_id",{"_index":1681,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["findoneofferbyid",{"_index":2419,"title":{},"body":{"injectables/OffersService.html":{}}}],["findoneofferbyid(offer_id",{"_index":2435,"title":{},"body":{"injectables/OffersService.html":{}}}],["findoneorderbyid",{"_index":2664,"title":{},"body":{"injectables/OrderService.html":{}}}],["findoneorderbyid(id",{"_index":2693,"title":{},"body":{"injectables/OrderService.html":{}}}],["findoneproductbyid",{"_index":3028,"title":{},"body":{"injectables/ProductService.html":{}}}],["findoneproductbyid(product_id",{"_index":3049,"title":{},"body":{"injectables/ProductService.html":{}}}],["findonestockgardbyid",{"_index":3369,"title":{},"body":{"injectables/StockGardService.html":{}}}],["findonestockgardbyid(id",{"_index":3381,"title":{},"body":{"injectables/StockGardService.html":{}}}],["findonestocktransactionbyid",{"_index":3445,"title":{},"body":{"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockTransactionService.html":{}}}],["findonestocktransactionbyid(item_log_id",{"_index":3448,"title":{},"body":{"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{}}}],["findonestocktransactionbyid(stock_id",{"_index":3666,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["findproductbybranchid",{"_index":2981,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbybranchid(@param('branchid",{"_index":3006,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbybranchid(branchid",{"_index":2989,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbybranchidandcategory",{"_index":2982,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbybranchidandcategory(branchid",{"_index":2992,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductsbybranchid",{"_index":3029,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchid(branchid",{"_index":3052,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchidandcategory",{"_index":3030,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchidandcategory(branchid",{"_index":3054,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchidandcategoryandsubcategory",{"_index":3031,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchidandcategoryandsubcategory(branchid",{"_index":3056,"title":{},"body":{"injectables/ProductService.html":{}}}],["five",{"_index":4555,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fiveminutesago",{"_index":3181,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["floor",{"_index":844,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["floor'})@isstring()@isnotempty",{"_index":1342,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["floor'})@isstring()@isoptional",{"_index":4097,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["forbiddenexception",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('access",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('accesss",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["forget",{"_index":4279,"title":{},"body":{"controllers/UsersController.html":{}}}],["found",{"_index":90,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/VerifyEmailService.html":{}}}],["fourty",{"_index":4565,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fourtyfive",{"_index":4567,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["framework",{"_index":4646,"title":{},"body":{"index.html":{}}}],["function",{"_index":2516,"title":{},"body":{"classes/Order.html":{}}}],["functions",{"_index":4632,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gard",{"_index":3277,"title":{},"body":{"classes/Stock.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{}}}],["gard.$[elem",{"_index":3409,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard._id",{"_index":3405,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard.controller",{"_index":3552,"title":{},"body":{"modules/StockModule.html":{}}}],["gard.controller.ts",{"_index":3329,"title":{},"body":{"controllers/StockGardController.html":{}}}],["gard.controller.ts:26",{"_index":3334,"title":{},"body":{"controllers/StockGardController.html":{}}}],["gard.controller.ts:43",{"_index":3337,"title":{},"body":{"controllers/StockGardController.html":{}}}],["gard.controller.ts:48",{"_index":3340,"title":{},"body":{"controllers/StockGardController.html":{}}}],["gard.controller.ts:58",{"_index":3344,"title":{},"body":{"controllers/StockGardController.html":{}}}],["gard.dto",{"_index":3349,"title":{},"body":{"controllers/StockGardController.html":{},"classes/UpdateStockGardDto.html":{}}}],["gard.dto.ts",{"_index":1466,"title":{},"body":{"classes/CreateStockGardDto.html":{},"classes/UpdateStockGardDto.html":{}}}],["gard.dto.ts:15",{"_index":4161,"title":{},"body":{"classes/UpdateStockGardDto.html":{}}}],["gard.dto.ts:16",{"_index":1470,"title":{},"body":{"classes/CreateStockGardDto.html":{}}}],["gard.interface",{"_index":3387,"title":{},"body":{"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{}}}],["gard.interface.ts",{"_index":3362,"title":{},"body":{"interfaces/StockGardInterface.html":{}}}],["gard.model",{"_index":3284,"title":{},"body":{"classes/Stock.html":{},"injectables/StockGardService.html":{},"modules/StockModule.html":{}}}],["gard.model.ts",{"_index":3320,"title":{},"body":{"classes/StockGard.html":{},"miscellaneous/variables.html":{}}}],["gard.model.ts:11",{"_index":3323,"title":{},"body":{"classes/StockGard.html":{}}}],["gard.model.ts:14",{"_index":3321,"title":{},"body":{"classes/StockGard.html":{}}}],["gard.service",{"_index":3347,"title":{},"body":{"controllers/StockGardController.html":{},"modules/StockModule.html":{}}}],["gard.service.ts",{"_index":3366,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard.service.ts:10",{"_index":3374,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard.service.ts:19",{"_index":3376,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard.service.ts:46",{"_index":3380,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard.service.ts:54",{"_index":3382,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard.service.ts:65",{"_index":3384,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard.service.ts:79",{"_index":3378,"title":{},"body":{"injectables/StockGardService.html":{}}}],["gard/create",{"_index":1465,"title":{},"body":{"classes/CreateStockGardDto.html":{},"controllers/StockGardController.html":{}}}],["gard/update",{"_index":4158,"title":{},"body":{"classes/UpdateStockGardDto.html":{}}}],["gard_id",{"_index":3341,"title":{},"body":{"controllers/StockGardController.html":{}}}],["gender",{"_index":1207,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{}}}],["generate",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PaypalService.html":{}}}],["generateaccesstoken",{"_index":2857,"title":{},"body":{"injectables/PaypalService.html":{}}}],["generatecode",{"_index":3119,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["generatedcode",{"_index":4430,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["generatetokenandrefresh",{"_index":453,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokenandrefresh(userid",{"_index":462,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':branchid",{"_index":3005,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':branchid')@public",{"_index":2990,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':branchid/:category",{"_index":3008,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':branchid/:category')@public",{"_index":2993,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':gard_id/:stockid",{"_index":3339,"title":{},"body":{"controllers/StockGardController.html":{}}}],["get(':id",{"_index":306,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["get(':id')@role(roles.superuser",{"_index":2987,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':orderid",{"_index":2847,"title":{},"body":{"controllers/PaypalController.html":{}}}],["get(':stockid",{"_index":3336,"title":{},"body":{"controllers/StockGardController.html":{}}}],["get('all/:branch_id",{"_index":2578,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('approveby/:user_id",{"_index":2581,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('branch/:branch_id",{"_index":3629,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["get('compeleted/:branch_id",{"_index":2575,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('employee/:id",{"_index":303,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{}}}],["get('item",{"_index":3296,"title":{},"body":{"controllers/StockController.html":{}}}],["get('pay",{"_index":2845,"title":{},"body":{"controllers/PaypalController.html":{}}}],["get('pending",{"_index":2583,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('pending/:branch_id",{"_index":2586,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('pending/:user_id",{"_index":2589,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('phone/:number",{"_index":1606,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["get('preparing",{"_index":2594,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('preparing/:branch_id",{"_index":2592,"title":{},"body":{"controllers/OrderController.html":{}}}],["get('search",{"_index":2387,"title":{},"body":{"controllers/OffersController.html":{}}}],["get('ticket/:id",{"_index":3919,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["get()@role(roles.superuser",{"_index":2985,"title":{},"body":{"controllers/ProductController.html":{}}}],["getcookiesforuser",{"_index":2121,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getcookiesforuser(user",{"_index":2130,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getitemscountatstock",{"_index":3290,"title":{},"body":{"controllers/StockController.html":{},"injectables/StockService.html":{}}}],["getitemscountatstock(@param('stockid",{"_index":3313,"title":{},"body":{"controllers/StockController.html":{}}}],["getitemscountatstock(stockid",{"_index":3295,"title":{},"body":{"controllers/StockController.html":{},"injectables/StockService.html":{}}}],["getting",{"_index":4642,"title":{"index.html":{}},"body":{}}],["getuserdata",{"_index":2122,"title":{},"body":{"injectables/GoogleService.html":{}}}],["getuserdata(token",{"_index":2132,"title":{},"body":{"injectables/GoogleService.html":{}}}],["given",{"_index":1749,"title":{},"body":{"injectables/CustomerService.html":{},"injectables/StockService.html":{}}}],["gmail",{"_index":2292,"title":{},"body":{"injectables/MailService.html":{}}}],["google",{"_index":2139,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MailService.html":{}}}],["google.auth.oauth2",{"_index":2278,"title":{},"body":{"injectables/MailService.html":{}}}],["google.auth.oauth2(clientid",{"_index":2146,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google.oauth2('v2').userinfo",{"_index":2148,"title":{},"body":{"injectables/GoogleService.html":{}}}],["google.service",{"_index":2111,"title":{},"body":{"controllers/GoogleController.html":{}}}],["google/google.controller",{"_index":441,"title":{},"body":{"modules/AuthModule.html":{}}}],["google/google.service",{"_index":440,"title":{},"body":{"modules/AuthModule.html":{}}}],["google_auth_client_id",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["google_auth_client_secret",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["google_redirect_url",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["google_refresh",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["googleapis",{"_index":2140,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MailService.html":{},"dependencies.html":{}}}],["googleauthservice",{"_index":2114,"title":{},"body":{"controllers/GoogleController.html":{}}}],["googlecontroller",{"_index":428,"title":{"controllers/GoogleController.html":{}},"body":{"modules/AuthModule.html":{},"controllers/GoogleController.html":{}}}],["googleservice",{"_index":426,"title":{"injectables/GoogleService.html":{}},"body":{"modules/AuthModule.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"overview.html":{}}}],["grade",{"_index":1291,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["grant_type=client_credentials",{"_index":2881,"title":{},"body":{"injectables/PaypalService.html":{}}}],["grow",{"_index":4675,"title":{},"body":{"index.html":{}}}],["gt",{"_index":957,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{},"injectables/ProductService.html":{}}}],["gte",{"_index":960,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["guards/jwt.guard",{"_index":437,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/roles.guard",{"_index":130,"title":{},"body":{"controllers/AdminController.html":{}}}],["handle",{"_index":88,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["handled",{"_index":2747,"title":{},"body":{"injectables/OrderService.html":{}}}],["handleregistereduser",{"_index":2123,"title":{},"body":{"injectables/GoogleService.html":{}}}],["handleregistereduser(user",{"_index":2134,"title":{},"body":{"injectables/GoogleService.html":{}}}],["handleresponse",{"_index":2858,"title":{},"body":{"injectables/PaypalService.html":{}}}],["handleresponse(response",{"_index":2864,"title":{},"body":{"injectables/PaypalService.html":{}}}],["handling",{"_index":1173,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"injectables/OrderService.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["hashedvalue",{"_index":4343,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashfunction",{"_index":4327,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashfunction(text",{"_index":4354,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashrefresh",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{}}}],["headers",{"_index":2882,"title":{},"body":{"injectables/PaypalService.html":{}}}],["hello",{"_index":4434,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["here",{"_index":2740,"title":{},"body":{"injectables/OrderService.html":{},"index.html":{}}}],["high",{"_index":1480,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/UpdateStockItemDto.html":{}}}],["home",{"_index":1090,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["hr",{"_index":4626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["http://example.com",{"_index":1415,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["httpcode",{"_index":405,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":420,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://api",{"_index":2867,"title":{},"body":{"injectables/PaypalService.html":{}}}],["https://nestjs.com",{"_index":4691,"title":{},"body":{"index.html":{}}}],["httpstatuscode",{"_index":2888,"title":{},"body":{"injectables/PaypalService.html":{}}}],["id",{"_index":85,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"injectables/InvoiceService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["id'})@isoptional()@isstring()@ismongoid",{"_index":4176,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["identifier",{"_index":977,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["ids",{"_index":945,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["images",{"_index":1399,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{}}}],["import",{"_index":29,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBranchDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["important",{"_index":1128,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"miscellaneous/enumerations.html":{}}}],["imports",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{}}}],["improve",{"_index":1303,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"miscellaneous/enumerations.html":{}}}],["in'})@isenum(department)@isoptional",{"_index":4058,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["in'})@isnotempty()@isenum(department",{"_index":1226,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["in.controller",{"_index":2646,"title":{},"body":{"modules/OrderModule.html":{}}}],["in.controller.ts",{"_index":1858,"title":{},"body":{"controllers/DineInController.html":{}}}],["in.controller.ts:14",{"_index":1862,"title":{},"body":{"controllers/DineInController.html":{}}}],["in.service",{"_index":2651,"title":{},"body":{"modules/OrderModule.html":{}}}],["in.service.ts",{"_index":1871,"title":{},"body":{"injectables/DineInService.html":{}}}],["in_progress",{"_index":4618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["inc",{"_index":967,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["increase",{"_index":3603,"title":{},"body":{"injectables/StockService.html":{}}}],["indeliver",{"_index":4570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBranchDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"classes/DineinOrder.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Cashier.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{}}}],["inherited",{"_index":1175,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdatePayPalPaymentDto.html":{}}}],["inject",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/BranchService.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"injectables/CashierService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"injectables/DineInService.html":{},"injectables/EmailService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"injectables/WalletService.html":{}},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/BranchService.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"injectables/CashierService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"injectables/DineInService.html":{},"injectables/EmailService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"injectables/WalletService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/BranchService.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"injectables/CashierService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"injectables/DineInService.html":{},"injectables/EmailService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"injectables/WalletService.html":{},"overview.html":{}}}],["injectconnection",{"_index":2696,"title":{},"body":{"injectables/OrderService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["injectmodel",{"_index":368,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/InvoiceService.html":{},"injectables/LocationService.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["injectmodel(attendence.name",{"_index":372,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["injectmodel(branch.name",{"_index":691,"title":{},"body":{"injectables/BranchService.html":{}}}],["injectmodel(coupon.name",{"_index":941,"title":{},"body":{"injectables/CouponService.html":{}}}],["injectmodel(customer.name",{"_index":1739,"title":{},"body":{"injectables/CustomerService.html":{}}}],["injectmodel(customerlocations.name",{"_index":1694,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["injectmodel(employee.name",{"_index":371,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/EmployeeService.html":{}}}],["injectmodel(employeemonthlypdr.name",{"_index":2955,"title":{},"body":{"injectables/PdrService.html":{}}}],["injectmodel(employeepdraction.name",{"_index":1932,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["injectmodel(location.name",{"_index":2248,"title":{},"body":{"injectables/LocationService.html":{}}}],["injectmodel(offer.name",{"_index":2452,"title":{},"body":{"injectables/OffersService.html":{}}}],["injectmodel(order.name",{"_index":1846,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{},"injectables/TakeAwayService.html":{}}}],["injectmodel(payment.name",{"_index":777,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{}}}],["injectmodel(product.name",{"_index":3074,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectmodel(resetpassword.name",{"_index":3152,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["injectmodel(spendingauthorization.name",{"_index":3257,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["injectmodel(stock.name",{"_index":3391,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{}}}],["injectmodel(stockgard.name",{"_index":3390,"title":{},"body":{"injectables/StockGardService.html":{}}}],["injectmodel(stockitem.name",{"_index":3514,"title":{},"body":{"injectables/StockItemService.html":{}}}],["injectmodel(stockitemslogs.name",{"_index":3473,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{}}}],["injectmodel(stocktransaction.name",{"_index":3671,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["injectmodel(supplier.name",{"_index":3773,"title":{},"body":{"injectables/SupplierService.html":{}}}],["injectmodel(ticket.name",{"_index":3892,"title":{},"body":{"injectables/TicketService.html":{}}}],["injectmodel(ticketupdates.name",{"_index":3958,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["injectmodel(verifyuseremail.name",{"_index":4420,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["inprogress",{"_index":4617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["installation",{"_index":4655,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":4657,"title":{},"body":{"index.html":{}}}],["intent",{"_index":2896,"title":{},"body":{"injectables/PaypalService.html":{}}}],["interface",{"_index":337,"title":{"interfaces/AttendenceInterface.html":{},"interfaces/BranchInterface.html":{},"interfaces/CouponInterface.html":{},"interfaces/CreateBasePaymentInterface.html":{},"interfaces/CreateCashPaymentInterface.html":{},"interfaces/CustomerInterface.html":{},"interfaces/CustomerLocationsInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"interfaces/EmployeePDRActionInterface.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"interfaces/LocationInterface.html":{},"interfaces/OfferInterface.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{},"interfaces/SupplierInterface.html":{},"interfaces/TicketInterface.html":{},"interfaces/TicketUpdatesInterface.html":{},"interfaces/Token.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{}},"body":{"interfaces/AttendenceInterface.html":{},"interfaces/BranchInterface.html":{},"classes/CoordinatesInteface.html":{},"interfaces/CouponInterface.html":{},"interfaces/CreateBasePaymentInterface.html":{},"interfaces/CreateCashPaymentInterface.html":{},"interfaces/CustomerInterface.html":{},"interfaces/CustomerLocationsInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"interfaces/EmployeePDRActionInterface.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"interfaces/LocationInterface.html":{},"interfaces/OfferInterface.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{},"interfaces/SupplierInterface.html":{},"interfaces/TicketInterface.html":{},"interfaces/TicketUpdatesInterface.html":{},"interfaces/Token.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{}}}],["interface/branch.interface",{"_index":690,"title":{},"body":{"injectables/BranchService.html":{}}}],["interface/cash/create",{"_index":771,"title":{},"body":{"injectables/CashService.html":{},"controllers/PaymentController.html":{}}}],["interface/cash/update",{"_index":774,"title":{},"body":{"injectables/CashService.html":{}}}],["interface/coupon.interface",{"_index":940,"title":{},"body":{"injectables/CouponService.html":{}}}],["interface/create",{"_index":2808,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaypalService-1.html":{}}}],["interface/customer",{"_index":1692,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["interface/customer.interface",{"_index":1738,"title":{},"body":{"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{}}}],["interface/location.interface",{"_index":2247,"title":{},"body":{"injectables/LocationService.html":{}}}],["interface/offer.interface",{"_index":2451,"title":{},"body":{"injectables/OffersService.html":{}}}],["interface/order.interface",{"_index":1796,"title":{},"body":{"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"injectables/OrderService.html":{},"controllers/TakeAwayController.html":{}}}],["interface/paypal/update",{"_index":2922,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["interface/product.interface",{"_index":3073,"title":{},"body":{"injectables/ProductService.html":{}}}],["interface/spending",{"_index":3224,"title":{},"body":{"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{}}}],["interface/supplier.interface",{"_index":3772,"title":{},"body":{"injectables/SupplierService.html":{}}}],["interface/ticket",{"_index":3927,"title":{},"body":{"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{}}}],["interface/ticket.interface",{"_index":3844,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["interface/token",{"_index":408,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["interface/verifyandgeneraterefreshtoken.interface",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["interfaces",{"_index":338,"title":{},"body":{"interfaces/AttendenceInterface.html":{},"interfaces/BranchInterface.html":{},"interfaces/CouponInterface.html":{},"interfaces/CreateBasePaymentInterface.html":{},"interfaces/CreateCashPaymentInterface.html":{},"interfaces/CustomerInterface.html":{},"interfaces/CustomerLocationsInterface.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"interfaces/EmployeePDRActionInterface.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"interfaces/LocationInterface.html":{},"interfaces/OfferInterface.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"interfaces/ProductInterface.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{},"interfaces/SupplierInterface.html":{},"interfaces/TicketInterface.html":{},"interfaces/TicketUpdatesInterface.html":{},"interfaces/Token.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"overview.html":{}}}],["interfaces/emp",{"_index":316,"title":{},"body":{"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{}}}],["interfaces/employee",{"_index":1926,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{}}}],["interfaces/employee.interface",{"_index":2054,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["interfaces/stock",{"_index":3386,"title":{},"body":{"injectables/StockGardService.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{}}}],["interfaces/stock.interface",{"_index":3576,"title":{},"body":{"injectables/StockService.html":{}}}],["interfaces/user.interface",{"_index":4371,"title":{},"body":{"injectables/UsersService.html":{}}}],["invoice",{"_index":595,"title":{"classes/Invoice.html":{}},"body":{"modules/BillingModule.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{}}}],["invoice.model",{"_index":2184,"title":{},"body":{"classes/InvoiceSpendingAuthorization.html":{}}}],["invoice.name",{"_index":606,"title":{},"body":{"modules/BillingModule.html":{},"classes/InvoiceSpendingAuthorization.html":{}}}],["invoice.service",{"_index":3255,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["invoicerepo",{"_index":2178,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["invoiceschema",{"_index":596,"title":{},"body":{"modules/BillingModule.html":{},"classes/Invoice.html":{},"miscellaneous/variables.html":{}}}],["invoiceservice",{"_index":576,"title":{"injectables/InvoiceService.html":{}},"body":{"modules/BillingModule.html":{},"injectables/InvoiceService.html":{},"injectables/SpendingAuthService.html":{},"overview.html":{}}}],["invoicespendingauthinteface",{"_index":2182,"title":{"interfaces/InvoiceSpendingAuthInteface.html":{}},"body":{"interfaces/InvoiceSpendingAuthInteface.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{}}}],["invoicespendingauthorization",{"_index":591,"title":{"classes/InvoiceSpendingAuthorization.html":{}},"body":{"modules/BillingModule.html":{},"classes/InvoiceSpendingAuthorization.html":{},"controllers/SpendingAuthController.html":{},"classes/SpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["invoicespendingauthorization.name",{"_index":605,"title":{},"body":{"modules/BillingModule.html":{},"controllers/SpendingAuthController.html":{},"classes/SpendingAuthorization.html":{}}}],["invoicespendingauthorizationschema",{"_index":592,"title":{},"body":{"modules/BillingModule.html":{},"classes/InvoiceSpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["involved",{"_index":1492,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["ip",{"_index":988,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["is:\\n",{"_index":3175,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["is_branchavailable",{"_index":942,"title":{},"body":{"injectables/CouponService.html":{}}}],["is_branchs_available",{"_index":2453,"title":{},"body":{"injectables/OffersService.html":{}}}],["is_extra",{"_index":1400,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["is_item_available",{"_index":3674,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["is_products_available",{"_index":2456,"title":{},"body":{"injectables/OffersService.html":{}}}],["is_public",{"_index":2214,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["is_reset",{"_index":3168,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["is_sensetive",{"_index":1401,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{}}}],["is_valid",{"_index":4439,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["is_valid_email",{"_index":3186,"title":{},"body":{"injectables/ResetPasswordService.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"injectables/VerifyEmailService.html":{}}}],["is_validcoupon",{"_index":2724,"title":{},"body":{"injectables/OrderService.html":{}}}],["is_validoffer",{"_index":2720,"title":{},"body":{"injectables/OrderService.html":{}}}],["is_verified",{"_index":4240,"title":{},"body":{"classes/User.html":{},"interfaces/UserInterface.html":{}}}],["isarray",{"_index":1027,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["isboolean",{"_index":1432,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isbranchsavaliables",{"_index":670,"title":{},"body":{"injectables/BranchService.html":{}}}],["isbranchsavaliables(branch_id",{"_index":683,"title":{},"body":{"injectables/BranchService.html":{}}}],["isdatestring",{"_index":1028,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateOfferDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateOfferDto.html":{}}}],["isdatewithinrange",{"_index":4634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isdatewithinrange(datetocheck",{"_index":4638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isemail",{"_index":1576,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isoptional",{"_index":4225,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isemployeeguard",{"_index":2185,"title":{"classes/IsEmployeeGuard.html":{}},"body":{"classes/IsEmployeeGuard.html":{}}}],["isenum",{"_index":242,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateTicketDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{}}}],["isenum(accountstatus",{"_index":830,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{}}}],["isenum(attendenceactions",{"_index":1000,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["isenum(delivereymethod",{"_index":1188,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["isenum(deliveryprice",{"_index":1190,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["isenum(deliverystatus",{"_index":1192,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["isenum(department",{"_index":1253,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isenum(paymentcurrency",{"_index":1049,"title":{},"body":{"classes/CreateBasePaymentDto.html":{}}}],["isenum(pdractions",{"_index":1308,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["isenum(productcategory",{"_index":1437,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(productcomponents",{"_index":1393,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(productsize",{"_index":1439,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(productsubcategory",{"_index":1438,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(roles",{"_index":248,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/UpdateUserDto.html":{}}}],["isenum(roles)@arrayminsize(1)@isstring()@isoptional",{"_index":4229,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isenum(sex",{"_index":1255,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isenum(spendingauthorizationstatus",{"_index":1446,"title":{},"body":{"classes/CreateSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["isenum(stockitemcategory",{"_index":1489,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/UpdateStockItemDto.html":{}}}],["isenum(stocktransactionstatus",{"_index":4191,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{}}}],["isenum(stocktransactiontype",{"_index":1501,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{},"classes/UpdateStockItemLogsDto.html":{}}}],["isenum(ticketcategory",{"_index":1549,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["isenum(ticketsegment",{"_index":1551,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["isenum(ticketspool",{"_index":1550,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["isenum(ticketstatus",{"_index":1548,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["isexist",{"_index":2070,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/UsersService.html":{}}}],["isexist.length",{"_index":4401,"title":{},"body":{"injectables/UsersService.html":{}}}],["isextraproducts",{"_index":3032,"title":{},"body":{"injectables/ProductService.html":{}}}],["isextraproducts(products",{"_index":3058,"title":{},"body":{"injectables/ProductService.html":{}}}],["isinbrnch",{"_index":2731,"title":{},"body":{"injectables/OrderService.html":{}}}],["isip",{"_index":992,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["islatitude",{"_index":1086,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["islongitude",{"_index":1087,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["ismatchpassword",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["ismongoid",{"_index":993,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["ismongoid()@isnotempty()@isstring",{"_index":1143,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{}}}],["ismongoid()@isoptional()@isstring",{"_index":4031,"title":{},"body":{"classes/UpdateCustomerLocationDto.html":{}}}],["isnotempty",{"_index":243,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateRefreshDto.html":{}}}],["isnotempty()@isenum(accountstatus",{"_index":827,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{}}}],["isnotempty()@isenum(deliveryprice)@apiproperty({description",{"_index":1161,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{}}}],["isnotempty()@ismongoid()@isstring",{"_index":1045,"title":{},"body":{"classes/CreateBasePaymentDto.html":{}}}],["isnotempty()@ismongoid()@isstring()@apiproperty({description",{"_index":1168,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeePdrActionDto.html":{}}}],["isnotempty()@isnumber",{"_index":1040,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"classes/CreateOrderItemsDto.html":{}}}],["isnotempty()@isnumber()@apiproperty({description",{"_index":1298,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{}}}],["isnotempty()@isnumber()@apiproperty({example",{"_index":1319,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{}}}],["isnotempty()@isstring",{"_index":1554,"title":{},"body":{"classes/CreateTicketUpdateDto.html":{},"classes/UpdateRefreshDto.html":{}}}],["isnotempty()@isstring()@apiproperty({description",{"_index":1301,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{}}}],["isnotempty()@isstring()@isenum(pdractions)@apiproperty({description",{"_index":1293,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{}}}],["isnotempty()@isstring()@isenum(spendingauthorizationstatus)@apiproperty({example",{"_index":1325,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{}}}],["isnotempty()@isstring()@ismongoid",{"_index":1384,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["isnumber",{"_index":1047,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockItemQuantityDto.html":{}}}],["isoptional",{"_index":994,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isarray()@arrayminsize(1)@ismongoid({each",{"_index":1381,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["isoptional()@isdatestring",{"_index":1024,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["isoptional()@isdatestring()@apipropertyoptional({description",{"_index":1295,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["isoptional()@isenum(delivereymethod)@apiproperty({description",{"_index":1159,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{}}}],["isoptional()@isenum(delivereymethod)@apipropertyoptional({description",{"_index":4040,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["isoptional()@isenum(deliveryprice)@apipropertyoptional({description",{"_index":4042,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["isoptional()@isenum(deliverystatus)@apiproperty({description",{"_index":1166,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{}}}],["isoptional()@isenum(deliverystatus)@apipropertyoptional({description",{"_index":4044,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["isoptional()@isenum(productcomponents)@isarray",{"_index":1389,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["isoptional()@ismongoid",{"_index":1011,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["isoptional()@ismongoid()@isstring",{"_index":4006,"title":{},"body":{"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{}}}],["isoptional()@ismongoid()@isstring()@apipropertyoptional({description",{"_index":4046,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["isoptional()@isnumber",{"_index":4004,"title":{},"body":{"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{}}}],["isoptional()@isnumber()@apiproperty({example",{"_index":4142,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["isoptional()@isnumber()@apipropertyoptional({description",{"_index":4082,"title":{},"body":{"classes/UpdateEmployeePdrActionDto.html":{}}}],["isoptional()@isstring",{"_index":1018,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["isoptional()@isstring()@apiproperty({description",{"_index":1172,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{}}}],["isoptional()@isstring()@apiproperty({example",{"_index":1322,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["isoptional()@isstring()@apipropertyoptional({description",{"_index":4048,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["isoptional()@isstring()@isenum(paymentcurrency",{"_index":1043,"title":{},"body":{"classes/CreateBasePaymentDto.html":{}}}],["isoptional()@isstring()@isenum(pdractions)@apipropertyoptional({description",{"_index":4077,"title":{},"body":{"classes/UpdateEmployeePdrActionDto.html":{}}}],["isoptional()@isstring()@isenum(spendingauthorizationstatus)@apiproperty({example",{"_index":4149,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["isoptional()@isstring()@ismongoid()@apiproperty({example",{"_index":4144,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["isoptional()@isstring({each",{"_index":1020,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["isproductavailable",{"_index":2710,"title":{},"body":{"injectables/OrderService.html":{}}}],["isproductavailableinbranch",{"_index":3033,"title":{},"body":{"injectables/ProductService.html":{}}}],["isproductavailableinbranch(product_id",{"_index":3060,"title":{},"body":{"injectables/ProductService.html":{}}}],["isproductavailableinbranchwithquantity",{"_index":3034,"title":{},"body":{"injectables/ProductService.html":{}}}],["isproductavailableinbranchwithquantity(product_id",{"_index":3062,"title":{},"body":{"injectables/ProductService.html":{}}}],["isproductsavailable",{"_index":3035,"title":{},"body":{"injectables/ProductService.html":{}}}],["isproductsavailable(products_id",{"_index":3064,"title":{},"body":{"injectables/ProductService.html":{}}}],["ispublic",{"_index":40,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/RolesGuard.html":{}}}],["ispublic.includes(role",{"_index":3201,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["isrefreshmatched",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["isregisteredwithgoogle",{"_index":4241,"title":{},"body":{"classes/User.html":{},"interfaces/UserInterface.html":{},"injectables/UsersService.html":{}}}],["isstring",{"_index":244,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":1198,"title":{},"body":{"classes/CreateDineInOrderDto.html":{},"classes/TokenVerificationDto.html":{}}}],["isstring()@isoptional",{"_index":4227,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isusercustomerguard",{"_index":2195,"title":{"classes/IsUserCustomerGuard.html":{}},"body":{"classes/IsUserCustomerGuard.html":{}}}],["isuseremployee",{"_index":2031,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["isuseremployee(userid",{"_index":2046,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["isuserhaveonerole",{"_index":4328,"title":{},"body":{"injectables/UsersService.html":{}}}],["isuserhaveonerole(id",{"_index":4356,"title":{},"body":{"injectables/UsersService.html":{}}}],["isuserworkinginbranch",{"_index":2032,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["isuserworkinginbranch(userid",{"_index":2048,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["isuserworkinginbranchandhaverole",{"_index":2033,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["isuserworkinginbranchandhaverole(userid",{"_index":2050,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["isvalidcode",{"_index":3120,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["isvalidcode(code",{"_index":3137,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["isvalidcode(user_id",{"_index":4413,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["isvalidcouponbyid",{"_index":2420,"title":{},"body":{"injectables/OffersService.html":{}}}],["isvalidcouponbyid(offerid",{"_index":2438,"title":{},"body":{"injectables/OffersService.html":{}}}],["isvalidcouponbyname",{"_index":903,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidcouponbyname(couponname",{"_index":921,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidcouponinbranchbycouponid",{"_index":904,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidcouponinbranchbycouponid(couponid",{"_index":927,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidcouponinbranchbycouponname",{"_index":905,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidcouponinbranchbycouponname(couponname",{"_index":931,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidextra",{"_index":2715,"title":{},"body":{"injectables/OrderService.html":{}}}],["isvalidofferinbranchbyid",{"_index":2421,"title":{},"body":{"injectables/OffersService.html":{}}}],["isvalidofferinbranchbyid(offerid",{"_index":2441,"title":{},"body":{"injectables/OffersService.html":{}}}],["isworkinginbranchguard",{"_index":2201,"title":{"classes/IsWorkingInBranchGuard.html":{}},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["item",{"_index":1456,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateTransactionDto.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemQuantityService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["item.controller",{"_index":3549,"title":{},"body":{"modules/StockModule.html":{}}}],["item.controller.ts",{"_index":3427,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:21",{"_index":3428,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:26",{"_index":3429,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:31",{"_index":3430,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:36",{"_index":3433,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:41",{"_index":3431,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.dto",{"_index":3434,"title":{},"body":{"controllers/StockItemController.html":{},"classes/UpdateStockItemDto.html":{}}}],["item.dto.ts",{"_index":1475,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/UpdateStockItemDto.html":{}}}],["item.dto.ts:12",{"_index":1486,"title":{},"body":{"classes/CreateStockItemDto.html":{}}}],["item.dto.ts:13",{"_index":4167,"title":{},"body":{"classes/UpdateStockItemDto.html":{}}}],["item.dto.ts:22",{"_index":1478,"title":{},"body":{"classes/CreateStockItemDto.html":{}}}],["item.dto.ts:23",{"_index":4164,"title":{},"body":{"classes/UpdateStockItemDto.html":{}}}],["item.dto.ts:30",{"_index":1484,"title":{},"body":{"classes/CreateStockItemDto.html":{}}}],["item.dto.ts:31",{"_index":4165,"title":{},"body":{"classes/UpdateStockItemDto.html":{}}}],["item.extra",{"_index":2714,"title":{},"body":{"injectables/OrderService.html":{}}}],["item.interface",{"_index":3513,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.interface.ts",{"_index":3442,"title":{},"body":{"interfaces/StockItemInterface.html":{}}}],["item.model",{"_index":3487,"title":{},"body":{"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{}}}],["item.model.ts",{"_index":3419,"title":{},"body":{"classes/StockItem.html":{},"miscellaneous/variables.html":{}}}],["item.model.ts:10",{"_index":3420,"title":{},"body":{"classes/StockItem.html":{}}}],["item.model.ts:13",{"_index":3421,"title":{},"body":{"classes/StockItem.html":{}}}],["item.model.ts:7",{"_index":3422,"title":{},"body":{"classes/StockItem.html":{}}}],["item.product",{"_index":2712,"title":{},"body":{"injectables/OrderService.html":{}}}],["item.quantity",{"_index":2544,"title":{},"body":{"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/StockTransactionService.html":{}}}],["item.service",{"_index":3389,"title":{},"body":{"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"injectables/StockItemLogsService.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{}}}],["item.service.ts",{"_index":3494,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:14",{"_index":3504,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:26",{"_index":3508,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:34",{"_index":3502,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:46",{"_index":3510,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:54",{"_index":3512,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:64",{"_index":3506,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:8",{"_index":3499,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.stock_item",{"_index":3397,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockTransactionService.html":{}}}],["item/create",{"_index":1474,"title":{},"body":{"classes/CreateStockItemDto.html":{},"controllers/StockItemController.html":{}}}],["item/update",{"_index":3435,"title":{},"body":{"controllers/StockItemController.html":{},"classes/UpdateStockItemDto.html":{}}}],["item_id",{"_index":3507,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item_log_id",{"_index":3450,"title":{},"body":{"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{}}}],["item_price",{"_index":2542,"title":{},"body":{"classes/Order.html":{}}}],["itemcounts",{"_index":3595,"title":{},"body":{"injectables/StockService.html":{}}}],["itemcounts[itemname",{"_index":3602,"title":{},"body":{"injectables/StockService.html":{}}}],["itemname",{"_index":3597,"title":{},"body":{"injectables/StockService.html":{}}}],["itemobject",{"_index":3395,"title":{},"body":{"injectables/StockGardService.html":{}}}],["items",{"_index":1007,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateStockGardDto.html":{}}}],["items._id",{"_index":3482,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["items.dto",{"_index":1030,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["items.dto.ts",{"_index":1376,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:17",{"_index":1385,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:21",{"_index":1387,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:25",{"_index":1386,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:29",{"_index":1383,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:36",{"_index":1382,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:41",{"_index":1390,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.length",{"_index":3522,"title":{},"body":{"injectables/StockItemService.html":{}}}],["items.model",{"_index":2504,"title":{},"body":{"classes/Order.html":{}}}],["items.model.ts",{"_index":2624,"title":{},"body":{"classes/OrderItems.html":{},"miscellaneous/variables.html":{}}}],["items.model.ts:12",{"_index":2627,"title":{},"body":{"classes/OrderItems.html":{}}}],["items.model.ts:15",{"_index":2628,"title":{},"body":{"classes/OrderItems.html":{}}}],["items.model.ts:18",{"_index":2626,"title":{},"body":{"classes/OrderItems.html":{}}}],["items.model.ts:21",{"_index":2625,"title":{},"body":{"classes/OrderItems.html":{}}}],["items.model.ts:24",{"_index":2630,"title":{},"body":{"classes/OrderItems.html":{}}}],["items.model.ts:9",{"_index":2629,"title":{},"body":{"classes/OrderItems.html":{}}}],["items.product",{"_index":2758,"title":{},"body":{"injectables/OrderService.html":{}}}],["items/create",{"_index":1029,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateOrderItemsDto.html":{}}}],["items_quantity",{"_index":1559,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["john",{"_index":1125,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["joi",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.object",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":4682,"title":{},"body":{"index.html":{}}}],["join_at",{"_index":1208,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{}}}],["joined",{"_index":1231,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["json.stringify(payload",{"_index":2905,"title":{},"body":{"injectables/PaypalService.html":{}}}],["jsonresponse",{"_index":2887,"title":{},"body":{"injectables/PaypalService.html":{}}}],["jwt",{"_index":73,"title":{},"body":{"injectables/ATStrategy.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":78,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["jwtguard",{"_index":436,"title":{"injectables/JWTGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JWTGuard.html":{}}}],["jwtmodule",{"_index":431,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":444,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":458,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":4688,"title":{},"body":{"index.html":{}}}],["kilo",{"_index":4578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchen",{"_index":4574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchen_assistance",{"_index":4605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchen_chief",{"_index":4607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchen_notes",{"_index":1008,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["kitchenassistance",{"_index":4604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchenchief",{"_index":4606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["l",{"_index":4595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["large",{"_index":4594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lat",{"_index":832,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["latitude",{"_index":1089,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{}}}],["latitude'})@isnotempty()@islatitude",{"_index":1082,"title":{},"body":{"classes/CreateCordinatesDto.html":{}}}],["leadership",{"_index":1273,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["legend",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["license",{"_index":4694,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":4674,"title":{},"body":{"index.html":{}}}],["link",{"_index":3174,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["list",{"_index":1454,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"injectables/MailService.html":{}}}],["literal",{"_index":3127,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/typealiases.html":{}}}],["litre",{"_index":4579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loan",{"_index":4630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["location",{"_index":253,"title":{"classes/Location.html":{}},"body":{"classes/Attendence.html":{},"interfaces/AttendenceInterface.html":{},"classes/Branch.html":{},"interfaces/BranchInterface.html":{},"classes/Coordinates.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CustomerLocations.html":{},"interfaces/CustomerLocationsInterface.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/Supplier.html":{},"interfaces/SupplierInterface.html":{},"injectables/TakeAwayService.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["location.controller",{"_index":2236,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.dto",{"_index":998,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"controllers/CustomerLocationsController.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["location.dto.ts",{"_index":1080,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:101",{"_index":1339,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:102",{"_index":4093,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:110",{"_index":1335,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:17",{"_index":1144,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{}}}],["location.dto.ts:18",{"_index":4032,"title":{},"body":{"classes/UpdateCustomerLocationDto.html":{}}}],["location.dto.ts:19",{"_index":1085,"title":{},"body":{"classes/CreateCordinatesDto.html":{}}}],["location.dto.ts:27",{"_index":1083,"title":{},"body":{"classes/CreateCordinatesDto.html":{}}}],["location.dto.ts:29",{"_index":1149,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:30",{"_index":4035,"title":{},"body":{"classes/UpdateCustomerLocationDto.html":{}}}],["location.dto.ts:37",{"_index":1345,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:45",{"_index":1337,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:53",{"_index":1333,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:61",{"_index":1341,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:69",{"_index":1347,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:77",{"_index":1349,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:85",{"_index":1331,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:93",{"_index":1343,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.name",{"_index":2238,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.service",{"_index":2229,"title":{},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{}}}],["location/location.module",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["locationcontroller",{"_index":2226,"title":{"controllers/LocationController.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{}}}],["locationdata",{"_index":2246,"title":{},"body":{"injectables/LocationService.html":{}}}],["locationinterface",{"_index":852,"title":{"interfaces/LocationInterface.html":{}},"body":{"classes/CoordinatesInteface.html":{},"interfaces/CustomerLocationsInterface.html":{},"interfaces/LocationInterface.html":{},"injectables/LocationService.html":{},"interfaces/SupplierInterface.html":{}}}],["locationmodule",{"_index":166,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/SupplierModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["locationrepo",{"_index":2243,"title":{},"body":{"injectables/LocationService.html":{}}}],["locations",{"_index":1145,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{},"controllers/CustomerLocationsController.html":{},"classes/UpdateCustomerLocationDto.html":{}}}],["locations.controller",{"_index":1717,"title":{},"body":{"modules/CustomerModule.html":{}}}],["locations.controller.ts",{"_index":1642,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["locations.controller.ts:23",{"_index":1644,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["locations.controller.ts:28",{"_index":1645,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["locations.controller.ts:33",{"_index":1646,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["locations.controller.ts:38",{"_index":1649,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["locations.controller.ts:49",{"_index":1647,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["locations.interface",{"_index":1693,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations.interface.ts",{"_index":1663,"title":{},"body":{"interfaces/CustomerLocationsInterface.html":{}}}],["locations.model",{"_index":1690,"title":{},"body":{"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"classes/DeliveryOrder.html":{}}}],["locations.model.ts",{"_index":1633,"title":{},"body":{"classes/CustomerLocations.html":{},"miscellaneous/variables.html":{}}}],["locations.model.ts:12",{"_index":1635,"title":{},"body":{"classes/CustomerLocations.html":{}}}],["locations.model.ts:9",{"_index":1634,"title":{},"body":{"classes/CustomerLocations.html":{}}}],["locations.service",{"_index":1652,"title":{},"body":{"controllers/CustomerLocationsController.html":{},"modules/CustomerModule.html":{},"injectables/OrderService.html":{}}}],["locations.service.ts",{"_index":1665,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations.service.ts:16",{"_index":1675,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations.service.ts:30",{"_index":1677,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations.service.ts:38",{"_index":1679,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations.service.ts:48",{"_index":1682,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations.service.ts:58",{"_index":1688,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations.service.ts:75",{"_index":1685,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations.service.ts:9",{"_index":1672,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["locations/create",{"_index":1142,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{},"controllers/CustomerLocationsController.html":{}}}],["locations/update",{"_index":1654,"title":{},"body":{"controllers/CustomerLocationsController.html":{},"classes/UpdateCustomerLocationDto.html":{}}}],["locationschema",{"_index":847,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"modules/LocationModule.html":{},"miscellaneous/variables.html":{}}}],["locationservice",{"_index":2228,"title":{"injectables/LocationService.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"overview.html":{}}}],["location})@isoptional()@validatenested()@type(undefined",{"_index":4051,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["locked",{"_index":4550,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["log",{"_index":3457,"title":{},"body":{"controllers/StockItemLogsController.html":{},"injectables/StockService.html":{}}}],["log.item.quantity",{"_index":3599,"title":{},"body":{"injectables/StockService.html":{}}}],["log.transaction",{"_index":3601,"title":{},"body":{"injectables/StockService.html":{}}}],["log_id",{"_index":3471,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logged",{"_index":2749,"title":{},"body":{"injectables/OrderService.html":{}}}],["logic",{"_index":2742,"title":{},"body":{"injectables/OrderService.html":{},"injectables/PaypalService.html":{}}}],["logout",{"_index":390,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@req",{"_index":421,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(req",{"_index":393,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(user_id",{"_index":464,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":1457,"title":{},"body":{"classes/CreateStockDto.html":{},"controllers/StockItemLogsController.html":{}}}],["logs.controller",{"_index":3551,"title":{},"body":{"modules/StockModule.html":{}}}],["logs.controller.ts",{"_index":3444,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.controller.ts:27",{"_index":3447,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.controller.ts:41",{"_index":3449,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.controller.ts:52",{"_index":3452,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.dto",{"_index":1462,"title":{},"body":{"classes/CreateStockDto.html":{},"controllers/StockItemLogsController.html":{},"classes/UpdateStockItemLogsDto.html":{}}}],["logs.dto.ts",{"_index":1490,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{},"classes/UpdateStockItemLogsDto.html":{}}}],["logs.dto.ts:24",{"_index":1494,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{}}}],["logs.dto.ts:25",{"_index":4173,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["logs.dto.ts:33",{"_index":1497,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{}}}],["logs.dto.ts:34",{"_index":4175,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["logs.dto.ts:42",{"_index":4171,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["logs.dto.ts:50",{"_index":4177,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["logs.interface",{"_index":3417,"title":{},"body":{"interfaces/StockInterface.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["logs.interface.ts",{"_index":3461,"title":{},"body":{"interfaces/StockItemLogsInterface.html":{}}}],["logs.model",{"_index":3283,"title":{},"body":{"classes/Stock.html":{},"injectables/StockItemLogsService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{}}}],["logs.model.ts",{"_index":3528,"title":{},"body":{"classes/StockItemslogs.html":{},"miscellaneous/variables.html":{}}}],["logs.model.ts:11",{"_index":3530,"title":{},"body":{"classes/StockItemslogs.html":{}}}],["logs.model.ts:14",{"_index":3529,"title":{},"body":{"classes/StockItemslogs.html":{}}}],["logs.model.ts:17",{"_index":3531,"title":{},"body":{"classes/StockItemslogs.html":{}}}],["logs.model.ts:20",{"_index":3532,"title":{},"body":{"classes/StockItemslogs.html":{}}}],["logs.service",{"_index":3454,"title":{},"body":{"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{}}}],["logs.service.ts",{"_index":3463,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:15",{"_index":3466,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:24",{"_index":3468,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:51",{"_index":3472,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:65",{"_index":3470,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs/create",{"_index":1461,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/CreateStockItemLogsDto.html":{},"controllers/StockItemLogsController.html":{}}}],["logs/update",{"_index":4169,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["long",{"_index":833,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["longitude",{"_index":1088,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{}}}],["longitude'})@islongitude()@isnotempty",{"_index":1084,"title":{},"body":{"classes/CreateCordinatesDto.html":{}}}],["lt",{"_index":2529,"title":{},"body":{"classes/Order.html":{}}}],["lte",{"_index":959,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{}}}],["m",{"_index":4597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m.sandbox.paypal.com",{"_index":2868,"title":{},"body":{"injectables/PaypalService.html":{}}}],["madient",{"_index":1092,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["mail",{"_index":2252,"title":{},"body":{"controllers/MailController.html":{},"injectables/ResetPasswordService.html":{}}}],["mail.controller",{"_index":2260,"title":{},"body":{"modules/MailModule.html":{}}}],["mail.service",{"_index":2254,"title":{},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mail/mail.module",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["mailcontroller",{"_index":2250,"title":{"controllers/MailController.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{}}}],["mailmodule",{"_index":167,"title":{"modules/MailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MailModule.html":{},"modules/NotificationsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mailoption",{"_index":2269,"title":{},"body":{"injectables/MailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["mailoption.body",{"_index":2303,"title":{},"body":{"injectables/MailService.html":{}}}],["mailoption.subject",{"_index":2301,"title":{},"body":{"injectables/MailService.html":{}}}],["mailoption.to",{"_index":2297,"title":{},"body":{"injectables/MailService.html":{}}}],["mailservice",{"_index":2253,"title":{"injectables/MailService.html":{}},"body":{"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{},"overview.html":{}}}],["make",{"_index":3590,"title":{},"body":{"injectables/StockService.html":{}}}],["male",{"_index":4610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["management",{"_index":1272,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["manager",{"_index":619,"title":{},"body":{"classes/Branch.html":{},"interfaces/BranchInterface.html":{},"injectables/BranchService.html":{},"classes/CreateBranchDto.html":{},"injectables/StockItemLogsService.html":{},"classes/UpdateBranchDto.html":{}}}],["market",{"_index":1104,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["matches",{"_index":3592,"title":{},"body":{"injectables/StockService.html":{}}}],["matching",{"_index":51,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Cashier.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":2305,"title":{"classes/Material.html":{}},"body":{"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{}}}],["material.controller",{"_index":2335,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.dto",{"_index":2324,"title":{},"body":{"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/UpdateMaterialDto.html":{}}}],["material.dto.ts",{"_index":1352,"title":{},"body":{"classes/CreateMaterialDto.html":{},"classes/UpdateMaterialDto.html":{}}}],["material.service",{"_index":2323,"title":{},"body":{"controllers/MaterialController.html":{},"modules/MaterialModule.html":{}}}],["material/material.module",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["materialcontroller",{"_index":2313,"title":{"controllers/MaterialController.html":{}},"body":{"controllers/MaterialController.html":{},"modules/MaterialModule.html":{}}}],["materialmodule",{"_index":168,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["materialservice",{"_index":2322,"title":{"injectables/MaterialService.html":{}},"body":{"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"overview.html":{}}}],["math.floor(math.random",{"_index":3157,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["max",{"_index":3155,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["measure_by",{"_index":2307,"title":{},"body":{"classes/Material.html":{}}}],["measureunits",{"_index":2308,"title":{},"body":{"classes/Material.html":{},"miscellaneous/enumerations.html":{}}}],["meat",{"_index":4598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["meduim",{"_index":4596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["message",{"_index":3179,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["metadata",{"_index":4507,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":83,"title":{},"body":{"injectables/ATStrategy.html":{},"classes/CreateDeliveryOrderDto.html":{},"injectables/PaypalService.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["method.enums",{"_index":1186,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["method.enums.ts",{"_index":4517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["min",{"_index":3153,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["minlength",{"_index":1577,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":1578,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mintue",{"_index":4438,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["miscellaneous",{"_index":4510,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":4673,"title":{},"body":{"index.html":{}}}],["mode",{"_index":4662,"title":{},"body":{"index.html":{}}}],["model",{"_index":347,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/InvoiceService.html":{},"injectables/LocationService.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["model/attendence.model",{"_index":370,"title":{},"body":{"injectables/AttendenceService.html":{},"modules/EmployeeModule.html":{}}}],["model/branch.model",{"_index":666,"title":{},"body":{"modules/BranchModule.html":{},"injectables/BranchService.html":{}}}],["model/cash.payment.model",{"_index":2823,"title":{},"body":{"modules/PaymentModule.html":{}}}],["model/coupon.model",{"_index":898,"title":{},"body":{"modules/CouponModule.html":{},"injectables/CouponService.html":{}}}],["model/customer",{"_index":1689,"title":{},"body":{"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{}}}],["model/customer.model",{"_index":1713,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{}}}],["model/delivery.model",{"_index":1798,"title":{},"body":{"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService-1.html":{},"modules/OrderModule.html":{}}}],["model/dinein.model",{"_index":1864,"title":{},"body":{"controllers/DineInController.html":{},"modules/OrderModule.html":{}}}],["model/emp",{"_index":1929,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"modules/EmployeeModule.html":{},"injectables/PdrService.html":{}}}],["model/employee.model",{"_index":369,"title":{},"body":{"injectables/AttendenceService.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"injectables/PdrService.html":{}}}],["model/invoice.model",{"_index":597,"title":{},"body":{"modules/BillingModule.html":{},"injectables/InvoiceService.html":{}}}],["model/location.model",{"_index":2237,"title":{},"body":{"modules/LocationModule.html":{},"injectables/LocationService.html":{}}}],["model/offer.model",{"_index":2413,"title":{},"body":{"modules/OffersModule.html":{},"injectables/OffersService.html":{}}}],["model/order.model",{"_index":1844,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OnlineService.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"injectables/TakeAwayService.html":{}}}],["model/payment.model",{"_index":770,"title":{},"body":{"injectables/CashService.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{}}}],["model/paypal.payment.model",{"_index":2822,"title":{},"body":{"modules/PaymentModule.html":{}}}],["model/product.model",{"_index":3024,"title":{},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["model/reset",{"_index":3147,"title":{},"body":{"injectables/ResetPasswordService.html":{},"modules/UsersModule.html":{}}}],["model/spending",{"_index":583,"title":{},"body":{"modules/BillingModule.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{}}}],["model/stock",{"_index":3385,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["model/stock.model",{"_index":3388,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{}}}],["model/supplier.model",{"_index":3752,"title":{},"body":{"modules/SupplierModule.html":{},"injectables/SupplierService.html":{}}}],["model/takeaway.model",{"_index":2654,"title":{},"body":{"modules/OrderModule.html":{},"controllers/TakeAwayController.html":{}}}],["model/user.model",{"_index":4314,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["model/verify",{"_index":4317,"title":{},"body":{"modules/UsersModule.html":{},"injectables/VerifyEmailService.html":{}}}],["models/ticket",{"_index":3858,"title":{},"body":{"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketUpdatesService.html":{}}}],["models/ticket.model",{"_index":3867,"title":{},"body":{"modules/TicketModule.html":{},"injectables/TicketService.html":{}}}],["module",{"_index":146,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["modules",{"_index":148,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/mailer",{"_index":4483,"title":{},"body":{"dependencies.html":{}}}],["mohamed",{"_index":1096,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateLocationDto.html":{}}}],["moment",{"_index":4498,"title":{},"body":{"dependencies.html":{}}}],["mongo",{"_index":4201,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["mongocluster",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb",{"_index":1169,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["mongoose",{"_index":272,"title":{},"body":{"classes/Attendence.html":{},"injectables/AttendenceService.html":{},"classes/Branch.html":{},"injectables/BranchService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Coupon.html":{},"injectables/CouponService.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"injectables/EmployeeService.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"injectables/InvoiceService.html":{},"classes/InvoiceSpendingAuthorization.html":{},"injectables/LocationService.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"dependencies.html":{}}}],["mongoose.connection",{"_index":2669,"title":{},"body":{"injectables/OrderService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["mongoose.model(coupon.name",{"_index":2534,"title":{},"body":{"classes/Order.html":{}}}],["mongoose.model(offer.name",{"_index":2532,"title":{},"body":{"classes/Order.html":{}}}],["mongoose.model(product.name",{"_index":2536,"title":{},"body":{"classes/Order.html":{}}}],["mongoose.schema.types.objectid",{"_index":3285,"title":{},"body":{"classes/Stock.html":{},"classes/StockTransaction.html":{}}}],["mongoose.types.objectid",{"_index":278,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/CashPayment.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/VerifyUserEmail.html":{}}}],["mongoose.types.objectid(createorderdata.branch",{"_index":3805,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["mongoose.types.objectid(emp.working_in",{"_index":3804,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["mongoosemodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":601,"title":{},"body":{"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["monthly",{"_index":1261,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"injectables/EmpPdrActionService.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":4684,"title":{},"body":{"index.html":{}}}],["msg",{"_index":3691,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["mypassword",{"_index":1571,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{}}}],["myśliwiec",{"_index":4689,"title":{},"body":{"index.html":{}}}],["n",{"_index":4437,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["name",{"_index":20,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateSupplierDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"miscellaneous/functions.html":{}}}],["name'})@isstring()@isnotempty",{"_index":1344,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["name'})@isstring()@isoptional",{"_index":4098,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["nasr",{"_index":1093,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["ne",{"_index":3900,"title":{},"body":{"injectables/TicketService.html":{}}}],["need",{"_index":3684,"title":{},"body":{"injectables/StockTransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["needed",{"_index":2745,"title":{},"body":{"injectables/OrderService.html":{}}}],["needs",{"_index":1302,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateStockItemDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateStockItemDto.html":{}}}],["needs'})@isoptional()@isstring",{"_index":1483,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/UpdateStockItemDto.html":{}}}],["negative",{"_index":4587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["neighborhood",{"_index":841,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["neighborhood'})@isstring()@isnotempty",{"_index":1346,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["neighborhood'})@isstring()@isoptional",{"_index":4099,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["nest",{"_index":4651,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":4693,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":4482,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":68,"title":{},"body":{"injectables/ATStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"modules/NotificationsModule.html":{},"injectables/ResetPasswordService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":31,"title":{},"body":{"injectables/ATGuard.html":{},"modules/AuthModule.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":432,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":4232,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["nestjs/mongoose",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"classes/Attendence.html":{},"injectables/AttendenceService.html":{},"modules/BillingModule.html":{},"classes/Branch.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"classes/DineinOrder.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"injectables/EmployeeService.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Location.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/Material.html":{},"classes/Offer.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"injectables/StockGardService.html":{},"classes/StockItem.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"injectables/TicketUpdatesService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":33,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"modules/AuthModule.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":4490,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":123,"title":{},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/NotificationsController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateWalletDto.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{},"dependencies.html":{}}}],["new",{"_index":92,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/BranchService.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"injectables/CashierService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"injectables/WalletService.html":{}}}],["new_record",{"_index":377,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["new_record.save",{"_index":379,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["newbranchdata",{"_index":688,"title":{},"body":{"injectables/BranchService.html":{}}}],["newbranchdata.manager",{"_index":704,"title":{},"body":{"injectables/BranchService.html":{}}}],["newcustomer",{"_index":1742,"title":{},"body":{"injectables/CustomerService.html":{}}}],["newcustomer.save",{"_index":1744,"title":{},"body":{"injectables/CustomerService.html":{}}}],["newcustomerlocation",{"_index":1698,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["newcustomerlocation.save",{"_index":1700,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["newdata",{"_index":353,"title":{},"body":{"injectables/AttendenceService.html":{},"controllers/PaymentController.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/UsersService.html":{}}}],["newdata.item[0].stock_item",{"_index":3474,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["newdata.items",{"_index":3394,"title":{},"body":{"injectables/StockGardService.html":{}}}],["newdata.password",{"_index":4389,"title":{},"body":{"injectables/UsersService.html":{}}}],["newdata.transaction",{"_index":3475,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["newemployee",{"_index":2058,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newemployee.save",{"_index":2060,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["newgard",{"_index":3399,"title":{},"body":{"injectables/StockGardService.html":{}}}],["newitem",{"_index":3480,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{}}}],["newitem.save",{"_index":3516,"title":{},"body":{"injectables/StockItemService.html":{}}}],["newlogdata",{"_index":3700,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["newmonthlypdr",{"_index":2956,"title":{},"body":{"injectables/PdrService.html":{}}}],["newmonthlypdr.save",{"_index":2958,"title":{},"body":{"injectables/PdrService.html":{}}}],["newoffer",{"_index":2458,"title":{},"body":{"injectables/OffersService.html":{}}}],["newoffer.save",{"_index":2460,"title":{},"body":{"injectables/OffersService.html":{}}}],["newofferdata",{"_index":2431,"title":{},"body":{"injectables/OffersService.html":{}}}],["newofferdata.branches",{"_index":2454,"title":{},"body":{"injectables/OffersService.html":{}}}],["neworder",{"_index":2737,"title":{},"body":{"injectables/OrderService.html":{}}}],["neworder.save",{"_index":2741,"title":{},"body":{"injectables/OrderService.html":{}}}],["newpassword",{"_index":3145,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["newpayment",{"_index":785,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaypalService-1.html":{}}}],["newpayment.save",{"_index":787,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaypalService-1.html":{}}}],["newpdraction",{"_index":1934,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["newpdraction.save",{"_index":1936,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["newproductdata",{"_index":3047,"title":{},"body":{"injectables/ProductService.html":{}}}],["newproductdata.branch",{"_index":3075,"title":{},"body":{"injectables/ProductService.html":{}}}],["newrefresh",{"_index":4367,"title":{},"body":{"injectables/UsersService.html":{}}}],["newrole",{"_index":4337,"title":{},"body":{"injectables/UsersService.html":{}}}],["newrow",{"_index":3158,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["newrow.save",{"_index":3160,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["newstatus",{"_index":1842,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OrderService.html":{},"controllers/TicketController.html":{}}}],["newstckitemlog",{"_index":3584,"title":{},"body":{"injectables/StockService.html":{}}}],["newstock",{"_index":3579,"title":{},"body":{"injectables/StockService.html":{}}}],["newstock.save",{"_index":3581,"title":{},"body":{"injectables/StockService.html":{}}}],["newsupplier",{"_index":3774,"title":{},"body":{"injectables/SupplierService.html":{}}}],["newsupplier.save",{"_index":3776,"title":{},"body":{"injectables/SupplierService.html":{}}}],["newticket",{"_index":3260,"title":{},"body":{"injectables/SpendingAuthService.html":{},"injectables/TicketService.html":{}}}],["newticket.save",{"_index":3262,"title":{},"body":{"injectables/SpendingAuthService.html":{},"injectables/TicketService.html":{}}}],["newticketupdate",{"_index":3890,"title":{},"body":{"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{}}}],["newticketupdate.branch",{"_index":3896,"title":{},"body":{"injectables/TicketService.html":{}}}],["newticketupdate.createby",{"_index":3897,"title":{},"body":{"injectables/TicketService.html":{}}}],["newticketupdate.save",{"_index":3961,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["newtransactin",{"_index":3675,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["newtransactin.save",{"_index":3677,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["newupdatedata",{"_index":1687,"title":{},"body":{"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{}}}],["newupdatedata.user",{"_index":1751,"title":{},"body":{"injectables/CustomerService.html":{}}}],["newupdateddata",{"_index":2448,"title":{},"body":{"injectables/OffersService.html":{}}}],["newupdateddata.branches",{"_index":2466,"title":{},"body":{"injectables/OffersService.html":{}}}],["newupdateddata.items",{"_index":2468,"title":{},"body":{"injectables/OffersService.html":{}}}],["newuser",{"_index":4383,"title":{},"body":{"injectables/UsersService.html":{}}}],["newuser.save",{"_index":4387,"title":{},"body":{"injectables/UsersService.html":{}}}],["next",{"_index":1103,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Order.html":{},"classes/UpdateLocationDto.html":{}}}],["node.js",{"_index":4645,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":2274,"title":{},"body":{"injectables/MailService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":2290,"title":{},"body":{"injectables/MailService.html":{}}}],["nodemailer/lib/smtp",{"_index":2272,"title":{},"body":{"injectables/MailService.html":{}}}],["normal",{"_index":4624,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":254,"title":{},"body":{"classes/Attendence.html":{},"interfaces/AttendenceInterface.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"classes/SpendingAuthorization.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["notes",{"_index":1002,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateCustomerDto.html":{},"classes/Customer.html":{},"interfaces/CustomerInterface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateCustomerDto.html":{}}}],["notes'})@isoptional()@isstring",{"_index":986,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["notfoundexception",{"_index":367,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/VerifyEmailService.html":{}}}],["notfoundexception('branch",{"_index":779,"title":{},"body":{"injectables/CashService.html":{},"injectables/EmployeeService.html":{},"injectables/OrderService.html":{},"injectables/StockService.html":{}}}],["notfoundexception('cudstomer",{"_index":2704,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception('customer",{"_index":1697,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["notfoundexception('email",{"_index":3166,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["notfoundexception('employee",{"_index":375,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{}}}],["notfoundexception('item",{"_index":3398,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockTransactionService.html":{}}}],["notfoundexception('location",{"_index":2708,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception('no",{"_index":3315,"title":{},"body":{"controllers/StockController.html":{},"controllers/StockGardController.html":{}}}],["notfoundexception('not",{"_index":2722,"title":{},"body":{"injectables/OrderService.html":{},"injectables/StockTransactionService.html":{}}}],["notfoundexception('order",{"_index":782,"title":{},"body":{"injectables/CashService.html":{},"injectables/DeliveryService-1.html":{},"injectables/PaypalService-1.html":{}}}],["notfoundexception('products",{"_index":2717,"title":{},"body":{"injectables/OrderService.html":{}}}],["notfoundexception('status",{"_index":3713,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["notfoundexception('stock",{"_index":3393,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockTransactionService.html":{}}}],["notfoundexception('user",{"_index":784,"title":{},"body":{"injectables/CashService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/StockTransactionService.html":{},"injectables/VerifyEmailService.html":{}}}],["notfoundexception('wrong",{"_index":693,"title":{},"body":{"injectables/BranchService.html":{},"injectables/CouponService.html":{},"injectables/CustomerService.html":{},"injectables/OffersService.html":{},"injectables/ProductService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockItemLogsService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{}}}],["notification",{"_index":1132,"title":{"classes/Notification.html":{}},"body":{"classes/CreateCustomerDto.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/UpdateCustomerDto.html":{}}}],["notification.dto",{"_index":2365,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/UpdateNotificationDto.html":{}}}],["notification.dto.ts",{"_index":1355,"title":{},"body":{"classes/CreateNotificationDto.html":{},"classes/UpdateNotificationDto.html":{}}}],["notification_email",{"_index":1123,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/Customer.html":{},"interfaces/CustomerInterface.html":{},"classes/UpdateCustomerDto.html":{}}}],["notification_phone",{"_index":1124,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/Customer.html":{},"interfaces/CustomerInterface.html":{},"classes/UpdateCustomerDto.html":{}}}],["notifications",{"_index":2345,"title":{},"body":{"controllers/NotificationsController.html":{},"injectables/NotificationsService.html":{}}}],["notifications/notifications.module",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["notificationscontroller",{"_index":2343,"title":{"controllers/NotificationsController.html":{}},"body":{"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{}}}],["notificationsmodule",{"_index":169,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/NotificationsModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":2351,"title":{"injectables/NotificationsService.html":{}},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"overview.html":{}}}],["now",{"_index":3094,"title":{},"body":{"injectables/ProductService.html":{}}}],["npm",{"_index":4656,"title":{},"body":{"index.html":{}}}],["null",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":610,"title":{},"body":{"injectables/BillingService.html":{},"injectables/CartService.html":{},"injectables/CashierService.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"interfaces/CouponInterface.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"controllers/CustomerAdminController.html":{},"injectables/CustomerService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"classes/Payment.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"classes/SpendingAuthorization.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"controllers/UsersController.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"injectables/WalletService.html":{}}}],["numbers",{"_index":1135,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["number})@isnotempty()@isnumber",{"_index":1284,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateStockItemQuantityDto.html":{}}}],["number})@isoptional()@isnumber",{"_index":4075,"title":{},"body":{"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateStockItemQuantityDto.html":{}}}],["oauth2",{"_index":2277,"title":{},"body":{"injectables/MailService.html":{}}}],["oauth2client",{"_index":2279,"title":{},"body":{"injectables/MailService.html":{}}}],["oauth2client.getaccesstoken((err",{"_index":2286,"title":{},"body":{"injectables/MailService.html":{}}}],["oauth2client.setcredentials",{"_index":2281,"title":{},"body":{"injectables/MailService.html":{}}}],["oauthclient",{"_index":2120,"title":{},"body":{"injectables/GoogleService.html":{}}}],["object",{"_index":3142,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["object.values(stocktransactionstatus",{"_index":3711,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["objectid",{"_index":1276,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["obour",{"_index":1094,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["observable",{"_index":2191,"title":{},"body":{"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{}}}],["offer",{"_index":1366,"title":{"classes/Offer.html":{}},"body":{"classes/CreateOfferDto.html":{},"classes/Offer.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/UpdateOfferDto.html":{}}}],["offer.dto",{"_index":2397,"title":{},"body":{"controllers/OffersController.html":{},"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts",{"_index":1358,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:19",{"_index":4115,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:20",{"_index":1367,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:28",{"_index":4110,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:31",{"_index":1360,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:36",{"_index":4111,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:39",{"_index":1362,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:44",{"_index":4119,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:47",{"_index":1372,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:52",{"_index":4118,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:55",{"_index":1371,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:62",{"_index":4113,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:66",{"_index":1364,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:70",{"_index":4117,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:74",{"_index":1370,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.name",{"_index":2415,"title":{},"body":{"modules/OffersModule.html":{},"classes/Order.html":{}}}],["offer.price",{"_index":2547,"title":{},"body":{"classes/Order.html":{}}}],["offer_id",{"_index":2437,"title":{},"body":{"injectables/OffersService.html":{}}}],["offerid",{"_index":2440,"title":{},"body":{"injectables/OffersService.html":{},"classes/Order.html":{}}}],["offerinterface",{"_index":2378,"title":{"interfaces/OfferInterface.html":{}},"body":{"interfaces/OfferInterface.html":{},"injectables/OffersService.html":{}}}],["offermodel",{"_index":2531,"title":{},"body":{"classes/Order.html":{}}}],["offermodel.findbyid(offerid).exec",{"_index":2546,"title":{},"body":{"classes/Order.html":{}}}],["offername",{"_index":2389,"title":{},"body":{"controllers/OffersController.html":{},"injectables/OffersService.html":{}}}],["offerrepo",{"_index":2428,"title":{},"body":{"injectables/OffersService.html":{}}}],["offers",{"_index":1009,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"controllers/OffersController.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["offers.controller",{"_index":2412,"title":{},"body":{"modules/OffersModule.html":{}}}],["offers.service",{"_index":2396,"title":{},"body":{"controllers/OffersController.html":{},"modules/OffersModule.html":{}}}],["offers/offers.module",{"_index":200,"title":{},"body":{"modules/AppModule.html":{}}}],["offerschema",{"_index":2376,"title":{},"body":{"classes/Offer.html":{},"modules/OffersModule.html":{},"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["offerscontroller",{"_index":2380,"title":{"controllers/OffersController.html":{}},"body":{"controllers/OffersController.html":{},"modules/OffersModule.html":{}}}],["offerservice",{"_index":2665,"title":{},"body":{"injectables/OrderService.html":{}}}],["offersmodule",{"_index":170,"title":{"modules/OffersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["offersservice",{"_index":2395,"title":{"injectables/OffersService.html":{}},"body":{"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"overview.html":{}}}],["one",{"_index":107,"title":{},"body":{"controllers/AdminController.html":{}}}],["online",{"_index":2475,"title":{},"body":{"controllers/OnlineController.html":{}}}],["onlinecontroller",{"_index":2473,"title":{"controllers/OnlineController.html":{}},"body":{"controllers/OnlineController.html":{},"modules/OrderModule.html":{}}}],["onlineservice",{"_index":2477,"title":{"injectables/OnlineService.html":{}},"body":{"injectables/OnlineService.html":{},"modules/OrderModule.html":{},"overview.html":{}}}],["open",{"_index":4612,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["operation",{"_index":3089,"title":{},"body":{"injectables/ProductService.html":{}}}],["option",{"_index":2296,"title":{},"body":{"injectables/MailService.html":{}}}],["option.type",{"_index":2276,"title":{},"body":{"injectables/MailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["option.type.ts",{"_index":4709,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["optional",{"_index":22,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/CoordinatesInteface.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"interfaces/LocationInterface.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":2271,"title":{},"body":{"injectables/MailService.html":{}}}],["order",{"_index":780,"title":{"classes/Order.html":{}},"body":{"injectables/CashService.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateOrderItemsDto.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"injectables/PaypalService-1.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{}}}],["order.branch",{"_index":2762,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.dto",{"_index":1182,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/TakeAwayController.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["order.dto.ts",{"_index":1005,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["order.dto.ts:18",{"_index":1017,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:22",{"_index":1025,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{}}}],["order.dto.ts:29",{"_index":1023,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:31",{"_index":1174,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{}}}],["order.dto.ts:33",{"_index":1012,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:37",{"_index":1019,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:41",{"_index":1013,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{}}}],["order.dto.ts:51",{"_index":1164,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{}}}],["order.dto.ts:61",{"_index":1167,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{}}}],["order.dto.ts:7",{"_index":1199,"title":{},"body":{"classes/CreateDineInOrderDto.html":{}}}],["order.name",{"_index":2657,"title":{},"body":{"modules/OrderModule.html":{},"classes/Payment.html":{}}}],["order.order_status",{"_index":1852,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OrderService.html":{}}}],["order.order_type",{"_index":1854,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["order.save",{"_index":1855,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OrderService.html":{},"injectables/TakeAwayService.html":{}}}],["order/:orderid",{"_index":2571,"title":{},"body":{"controllers/OrderController.html":{}}}],["order/delivery",{"_index":1775,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["order/dine",{"_index":1859,"title":{},"body":{"controllers/DineInController.html":{}}}],["order/order.module",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["order/take",{"_index":3783,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["order_id",{"_index":1039,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"injectables/DeliveryService-1.html":{},"classes/Payment.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{}}}],["order_status",{"_index":2483,"title":{},"body":{"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{}}}],["order_type",{"_index":1805,"title":{},"body":{"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"controllers/DineInController.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{}}}],["ordercontroller",{"_index":2557,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["orderid",{"_index":1783,"title":{},"body":{"controllers/DeliveryController-1.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{}}}],["orderinterface",{"_index":1795,"title":{"interfaces/OrderInterface.html":{}},"body":{"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"controllers/TakeAwayController.html":{}}}],["orderitems",{"_index":2491,"title":{"classes/OrderItems.html":{}},"body":{"classes/Order.html":{},"classes/OrderItems.html":{}}}],["orderitemsinterface",{"_index":2622,"title":{"interfaces/OrderItemsInterface.html":{}},"body":{"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{}}}],["orderitemsschema",{"_index":2631,"title":{},"body":{"classes/OrderItems.html":{},"miscellaneous/variables.html":{}}}],["ordermodule",{"_index":171,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["orderrepo",{"_index":1840,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{},"injectables/TakeAwayService.html":{}}}],["orderschema",{"_index":2512,"title":{},"body":{"classes/Order.html":{},"modules/OrderModule.html":{},"miscellaneous/variables.html":{}}}],["orderschema.pre('save",{"_index":2515,"title":{},"body":{"classes/Order.html":{}}}],["orderschema.set('tojson",{"_index":2554,"title":{},"body":{"classes/Order.html":{}}}],["orderschema.set('toobject",{"_index":2556,"title":{},"body":{"classes/Order.html":{}}}],["orderschema.virtual('total').get(async",{"_index":2538,"title":{},"body":{"classes/Order.html":{}}}],["orderservice",{"_index":760,"title":{"injectables/OrderService.html":{}},"body":{"injectables/CashService.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"injectables/PaypalService-1.html":{},"controllers/TakeAwayController.html":{},"overview.html":{}}}],["orderstatus",{"_index":1845,"title":{},"body":{"injectables/DeliveryService-1.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"injectables/TakeAwayService.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.compeleted",{"_index":1853,"title":{},"body":{"injectables/DeliveryService-1.html":{},"injectables/OrderService.html":{}}}],["orderstatus.pending",{"_index":2736,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TakeAwayService.html":{}}}],["orderstatus.preparing",{"_index":2511,"title":{},"body":{"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["ordertype",{"_index":1825,"title":{},"body":{"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/enumerations.html":{}}}],["ordertype.deliverey",{"_index":1826,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["ordertype.dinein",{"_index":1874,"title":{},"body":{"classes/DineinOrder.html":{}}}],["ordertype.takeaway",{"_index":3792,"title":{},"body":{"classes/TakeAwayOrder.html":{}}}],["ordeserivce",{"_index":759,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaypalService-1.html":{}}}],["otherwise",{"_index":3604,"title":{},"body":{"injectables/StockService.html":{}}}],["out",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["out_of_stock",{"_index":4622,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overview",{"_index":4698,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":4479,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":119,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaypalController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["param('attendanceid",{"_index":333,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["param('branchid",{"_index":1804,"title":{},"body":{"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{}}}],["param('category",{"_index":3009,"title":{},"body":{"controllers/ProductController.html":{}}}],["param('gard_id",{"_index":3355,"title":{},"body":{"controllers/StockGardController.html":{}}}],["param('id",{"_index":653,"title":{},"body":{"controllers/BranchController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/EmployeeController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketUpdatesController.html":{}}}],["param('newstatus",{"_index":3852,"title":{},"body":{"controllers/TicketController.html":{}}}],["param('pdr_id",{"_index":2940,"title":{},"body":{"controllers/PdrController.html":{}}}],["param('stock_id",{"_index":3350,"title":{},"body":{"controllers/StockGardController.html":{},"controllers/StockItemLogsController.html":{}}}],["param('stockid",{"_index":3356,"title":{},"body":{"controllers/StockGardController.html":{}}}],["param('ticket_id",{"_index":3930,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["param('ticketid",{"_index":3851,"title":{},"body":{"controllers/TicketController.html":{}}}],["param('transaction_id",{"_index":3641,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":3994,"title":{},"body":{"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{}}}],["partialtype(createbasepaymentdto",{"_index":4126,"title":{},"body":{"classes/UpdatePaymentDto.html":{}}}],["partialtype(createbillingdto",{"_index":3993,"title":{},"body":{"classes/UpdateBillingDto.html":{}}}],["partialtype(createbranchdto",{"_index":3996,"title":{},"body":{"classes/UpdateBranchDto.html":{}}}],["partialtype(createcartdto",{"_index":3999,"title":{},"body":{"classes/UpdateCartDto.html":{}}}],["partialtype(createcashierdto",{"_index":4010,"title":{},"body":{"classes/UpdateCashierDto.html":{}}}],["partialtype(createcordinatesdto",{"_index":4102,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["partialtype(createcoupondto",{"_index":4012,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["partialtype(createcustomerdto",{"_index":4022,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["partialtype(createlocationdto",{"_index":4090,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["partialtype(creatematerialdto",{"_index":4104,"title":{},"body":{"classes/UpdateMaterialDto.html":{}}}],["partialtype(createnotificationdto",{"_index":4106,"title":{},"body":{"classes/UpdateNotificationDto.html":{}}}],["partialtype(createofferdto",{"_index":4108,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["partialtype(createproductdto",{"_index":4130,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createspendingauthdto",{"_index":4141,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["partialtype(createstockdto",{"_index":4154,"title":{},"body":{"classes/UpdateStockDto.html":{}}}],["partialtype(createstockgarddto",{"_index":4159,"title":{},"body":{"classes/UpdateStockGardDto.html":{}}}],["partialtype(createstockitemdto",{"_index":4162,"title":{},"body":{"classes/UpdateStockItemDto.html":{}}}],["partialtype(createsupplierdto",{"_index":4193,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["partialtype(createticketdto",{"_index":4200,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["partialtype(createticketupdatedto",{"_index":4217,"title":{},"body":{"classes/UpdateTicketUpdatesDto.html":{}}}],["partialtype(createuserdto",{"_index":4224,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createwalletdto",{"_index":4237,"title":{},"body":{"classes/UpdateWalletDto.html":{}}}],["pass",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":72,"title":{},"body":{"injectables/ATStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":429,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":442,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":69,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["passportstrategy(strategy",{"_index":55,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["password",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"injectables/ResetPasswordService.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{}}}],["password.model",{"_index":3148,"title":{},"body":{"injectables/ResetPasswordService.html":{},"modules/UsersModule.html":{}}}],["password.model.ts",{"_index":3106,"title":{},"body":{"classes/ResetPassword.html":{},"miscellaneous/variables.html":{}}}],["password.model.ts:13",{"_index":3109,"title":{},"body":{"classes/ResetPassword.html":{}}}],["password.model.ts:16",{"_index":3108,"title":{},"body":{"classes/ResetPassword.html":{}}}],["password.service",{"_index":4289,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["password.service.ts",{"_index":3115,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:112",{"_index":3138,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:126",{"_index":3146,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:15",{"_index":3125,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:22",{"_index":3136,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:28",{"_index":3128,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:37",{"_index":3133,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:45",{"_index":3132,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:53",{"_index":3135,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:61",{"_index":3143,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:71",{"_index":3130,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["password.service.ts:79",{"_index":3140,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["pasta",{"_index":4589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patch",{"_index":312,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/DeliveryController-1.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["patch(':attendanceid",{"_index":310,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["patch(':id",{"_index":556,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["patch(':id')@role(roles.superuser",{"_index":2998,"title":{},"body":{"controllers/ProductController.html":{}}}],["patch(':pdr_id",{"_index":2934,"title":{},"body":{"controllers/PdrController.html":{}}}],["patch('aprove",{"_index":2570,"title":{},"body":{"controllers/OrderController.html":{}}}],["patch('status/:ticketid/:newstatus",{"_index":3850,"title":{},"body":{"controllers/TicketController.html":{}}}],["patch('status/compelete/:orderid",{"_index":1781,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["patch('status/receive/:orderid",{"_index":1789,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["patch('status/waiting",{"_index":1792,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["path",{"_index":3589,"title":{},"body":{"injectables/StockService.html":{}}}],["pay",{"_index":2837,"title":{},"body":{"controllers/PaypalController.html":{}}}],["payerid",{"_index":2909,"title":{},"body":{"injectables/PaypalService.html":{}}}],["payload",{"_index":65,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/PaypalService.html":{}}}],["payload.interface",{"_index":409,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["payload.interface.ts",{"_index":3972,"title":{},"body":{"interfaces/Token.html":{}}}],["payment",{"_index":769,"title":{"classes/Payment.html":{}},"body":{"injectables/CashService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{}}}],["payment.controller",{"_index":2821,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.dto",{"_index":2807,"title":{},"body":{"controllers/PaymentController.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{}}}],["payment.dto.ts",{"_index":1036,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePaymentDto.html":{}}}],["payment.dto.ts:13",{"_index":4128,"title":{},"body":{"classes/UpdatePaymentDto.html":{}}}],["payment.dto.ts:14",{"_index":1041,"title":{},"body":{"classes/CreateBasePaymentDto.html":{}}}],["payment.dto.ts:19",{"_index":1046,"title":{},"body":{"classes/CreateBasePaymentDto.html":{}}}],["payment.dto.ts:24",{"_index":1044,"title":{},"body":{"classes/CreateBasePaymentDto.html":{}}}],["payment.dto.ts:4",{"_index":4003,"title":{},"body":{"classes/UpdateCashPaymentDto.html":{}}}],["payment.dto.ts:8",{"_index":4127,"title":{},"body":{"classes/UpdatePaymentDto.html":{}}}],["payment.interface",{"_index":773,"title":{},"body":{"injectables/CashService.html":{},"interfaces/CreateCashPaymentInterface.html":{},"controllers/PaymentController.html":{},"injectables/PaypalService-1.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{}}}],["payment.interface.ts",{"_index":1052,"title":{},"body":{"interfaces/CreateBasePaymentInterface.html":{},"interfaces/CreateCashPaymentInterface.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{}}}],["payment.name",{"_index":2825,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment/payment.module",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["payment_id",{"_index":2767,"title":{},"body":{"classes/PayPalPayment.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{}}}],["payment_status",{"_index":1054,"title":{},"body":{"interfaces/CreateBasePaymentInterface.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"interfaces/UpdateBasePaymentInterface.html":{}}}],["payment_type",{"_index":742,"title":{},"body":{"classes/CashPayment.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"interfaces/UpdateBasePaymentInterface.html":{}}}],["paymentcontroller",{"_index":2789,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["paymentcurrency",{"_index":1042,"title":{},"body":{"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/Payment.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["paymentcurrency.eg",{"_index":2786,"title":{},"body":{"classes/Payment.html":{}}}],["paymentmodule",{"_index":172,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentrepo",{"_index":762,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{}}}],["paymentschema",{"_index":2787,"title":{},"body":{"classes/Payment.html":{},"modules/PaymentModule.html":{},"miscellaneous/variables.html":{}}}],["paymentservice",{"_index":2802,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"overview.html":{}}}],["paymentstatus",{"_index":1055,"title":{},"body":{"interfaces/CreateBasePaymentInterface.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.compeleted",{"_index":2811,"title":{},"body":{"controllers/PaymentController.html":{}}}],["paymentstatus.pending",{"_index":2785,"title":{},"body":{"classes/Payment.html":{}}}],["paymenttype",{"_index":744,"title":{},"body":{"classes/CashPayment.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"miscellaneous/enumerations.html":{}}}],["paymenttype.cash",{"_index":747,"title":{},"body":{"classes/CashPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{}}}],["paymenttype.paypal",{"_index":2769,"title":{},"body":{"classes/PayPalPayment.html":{},"controllers/PaymentController.html":{}}}],["paypal",{"_index":2836,"title":{},"body":{"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["paypal.controller",{"_index":2853,"title":{},"body":{"modules/PaypalModule.html":{}}}],["paypal.payment.dto.ts",{"_index":4122,"title":{},"body":{"classes/UpdatePayPalPaymentDto.html":{}}}],["paypal.payment.dto.ts:4",{"_index":4123,"title":{},"body":{"classes/UpdatePayPalPaymentDto.html":{}}}],["paypal.payment.model",{"_index":2780,"title":{},"body":{"classes/Payment.html":{}}}],["paypal.service",{"_index":2843,"title":{},"body":{"controllers/PaypalController.html":{},"modules/PaypalModule.html":{}}}],["paypal/checkout",{"_index":2872,"title":{},"body":{"injectables/PaypalService.html":{},"dependencies.html":{}}}],["paypal/paypal.module",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["paypalcontroller",{"_index":2834,"title":{"controllers/PaypalController.html":{}},"body":{"controllers/PaypalController.html":{},"modules/PaypalModule.html":{}}}],["paypalenvironment",{"_index":2870,"title":{},"body":{"injectables/PaypalService.html":{}}}],["paypalhttpclient",{"_index":2871,"title":{},"body":{"injectables/PaypalService.html":{}}}],["paypalmodule",{"_index":173,"title":{"modules/PaypalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaypalModule.html":{},"modules.html":{},"overview.html":{}}}],["paypalpayment",{"_index":2765,"title":{"classes/PayPalPayment.html":{}},"body":{"classes/PayPalPayment.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{}}}],["paypalpayment.name",{"_index":2783,"title":{},"body":{"classes/Payment.html":{},"modules/PaymentModule.html":{}}}],["paypalpaymentschema",{"_index":2771,"title":{},"body":{"classes/PayPalPayment.html":{},"modules/PaymentModule.html":{},"miscellaneous/variables.html":{}}}],["paypalservice",{"_index":2805,"title":{"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"overview.html":{}}}],["pdr",{"_index":1263,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"controllers/PdrController.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"miscellaneous/variables.html":{}}}],["pdr.controller",{"_index":1997,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["pdr.controller.ts",{"_index":2924,"title":{},"body":{"controllers/PdrController.html":{}}}],["pdr.controller.ts:22",{"_index":2925,"title":{},"body":{"controllers/PdrController.html":{}}}],["pdr.controller.ts:31",{"_index":2926,"title":{},"body":{"controllers/PdrController.html":{}}}],["pdr.controller.ts:36",{"_index":2928,"title":{},"body":{"controllers/PdrController.html":{}}}],["pdr.controller.ts:41",{"_index":2927,"title":{},"body":{"controllers/PdrController.html":{}}}],["pdr.controller.ts:46",{"_index":2935,"title":{},"body":{"controllers/PdrController.html":{}}}],["pdr.controller.ts:54",{"_index":2931,"title":{},"body":{"controllers/PdrController.html":{}}}],["pdr.dto",{"_index":2937,"title":{},"body":{"controllers/PdrController.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["pdr.dto.ts",{"_index":1262,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["pdr.dto.ts:20",{"_index":1278,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{}}}],["pdr.dto.ts:22",{"_index":4074,"title":{},"body":{"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["pdr.dto.ts:29",{"_index":1285,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{}}}],["pdr.dto.ts:32",{"_index":4071,"title":{},"body":{"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["pdr.dto.ts:38",{"_index":1275,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{}}}],["pdr.dto.ts:41",{"_index":4076,"title":{},"body":{"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["pdr.dto.ts:47",{"_index":1267,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{}}}],["pdr.dto.ts:50",{"_index":4073,"title":{},"body":{"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["pdr.dto.ts:59",{"_index":4072,"title":{},"body":{"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["pdr.interface",{"_index":1927,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{}}}],["pdr.interface.ts",{"_index":2016,"title":{},"body":{"interfaces/EmployeeMonthlyPDRInterface.html":{}}}],["pdr.model",{"_index":2000,"title":{},"body":{"modules/EmployeeModule.html":{},"injectables/PdrService.html":{}}}],["pdr.model.ts",{"_index":2008,"title":{},"body":{"classes/EmployeeMonthlyPDR.html":{},"miscellaneous/variables.html":{}}}],["pdr.model.ts:12",{"_index":2013,"title":{},"body":{"classes/EmployeeMonthlyPDR.html":{}}}],["pdr.model.ts:15",{"_index":2011,"title":{},"body":{"classes/EmployeeMonthlyPDR.html":{}}}],["pdr.model.ts:18",{"_index":2009,"title":{},"body":{"classes/EmployeeMonthlyPDR.html":{}}}],["pdr.model.ts:21",{"_index":2010,"title":{},"body":{"classes/EmployeeMonthlyPDR.html":{}}}],["pdr.model.ts:9",{"_index":2012,"title":{},"body":{"classes/EmployeeMonthlyPDR.html":{}}}],["pdr.service",{"_index":1994,"title":{},"body":{"modules/EmployeeModule.html":{},"controllers/PdrController.html":{}}}],["pdr.service.ts",{"_index":2945,"title":{},"body":{"injectables/PdrService.html":{}}}],["pdr.service.ts:11",{"_index":2947,"title":{},"body":{"injectables/PdrService.html":{}}}],["pdr.service.ts:19",{"_index":2949,"title":{},"body":{"injectables/PdrService.html":{}}}],["pdr.service.ts:31",{"_index":2950,"title":{},"body":{"injectables/PdrService.html":{}}}],["pdr.service.ts:39",{"_index":2952,"title":{},"body":{"injectables/PdrService.html":{}}}],["pdr.service.ts:47",{"_index":2951,"title":{},"body":{"injectables/PdrService.html":{}}}],["pdr.service.ts:57",{"_index":2954,"title":{},"body":{"injectables/PdrService.html":{}}}],["pdr.service.ts:83",{"_index":2953,"title":{},"body":{"injectables/PdrService.html":{}}}],["pdr/create",{"_index":1260,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"controllers/PdrController.html":{}}}],["pdr/update",{"_index":2938,"title":{},"body":{"controllers/PdrController.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["pdr_id",{"_index":1923,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{}}}],["pdractions",{"_index":1292,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"miscellaneous/enumerations.html":{}}}],["pdractions.positive",{"_index":1309,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["pdrcontroller",{"_index":1991,"title":{"controllers/PdrController.html":{}},"body":{"modules/EmployeeModule.html":{},"controllers/PdrController.html":{}}}],["pdrservice",{"_index":1989,"title":{"injectables/PdrService.html":{}},"body":{"modules/EmployeeModule.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"overview.html":{}}}],["pending",{"_index":4551,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["percent",{"_index":2553,"title":{},"body":{"classes/Order.html":{}}}],["percent_discount",{"_index":856,"title":{},"body":{"classes/Coupon.html":{},"interfaces/CouponInterface.html":{},"classes/CreateCouponDto.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateCouponDto.html":{}}}],["performance",{"_index":1279,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["perparing",{"_index":4582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["person",{"_index":3985,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["phone",{"_index":1001,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Customer.html":{},"interfaces/CustomerInterface.html":{},"injectables/CustomerService.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["phone'})@isnotempty()@isip()@isstring",{"_index":990,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["phone'})@isoptional()@isip()@isstring",{"_index":3983,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["phone_ip",{"_index":255,"title":{},"body":{"classes/Attendence.html":{},"interfaces/AttendenceInterface.html":{},"classes/CreateAttendenceDTO.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["phonenumber",{"_index":1731,"title":{},"body":{"injectables/CustomerService.html":{}}}],["phones",{"_index":1209,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/Supplier.html":{},"interfaces/SupplierInterface.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["pilot",{"_index":1157,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["pizza",{"_index":4588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":3180,"title":{},"body":{"injectables/ResetPasswordService.html":{},"index.html":{}}}],["pool",{"_index":1528,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["pool.enum",{"_index":1546,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeService.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{}}}],["pool.enum.ts",{"_index":4545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["populate",{"_index":2757,"title":{},"body":{"injectables/OrderService.html":{},"injectables/StockService.html":{}}}],["populate('items.item",{"_index":2759,"title":{},"body":{"injectables/OrderService.html":{}}}],["populate('user",{"_index":2065,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["populated",{"_index":2066,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["port",{"_index":1066,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateLocationDto.html":{}}}],["positive",{"_index":4586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["post",{"_index":120,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/GoogleController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"injectables/PaypalService.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["post(':branchid",{"_index":1785,"title":{},"body":{"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{}}}],["post(':stock_id",{"_index":3333,"title":{},"body":{"controllers/StockGardController.html":{},"controllers/StockItemLogsController.html":{}}}],["post(':ticket_id",{"_index":3914,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["post('assign",{"_index":106,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('block/:id",{"_index":143,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('block/:id')@role(roles.superuser",{"_index":113,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('cash/:branchid",{"_index":2794,"title":{},"body":{"controllers/PaymentController.html":{}}}],["post('change",{"_index":3622,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["post('confirm",{"_index":4263,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('employee",{"_index":3212,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["post('forget",{"_index":4300,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('invoice",{"_index":3216,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["post('logout",{"_index":419,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@httpcode(200",{"_index":394,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('paypal",{"_index":2797,"title":{},"body":{"controllers/PaymentController.html":{}}}],["post('signin",{"_index":398,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":403,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('unassign",{"_index":116,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('update",{"_index":4303,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('verify",{"_index":4282,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@apibody({type",{"_index":3726,"title":{},"body":{"controllers/SupplierController.html":{}}}],["post()@public",{"_index":636,"title":{},"body":{"controllers/BranchController.html":{},"controllers/ProductController.html":{}}}],["prefix",{"_index":97,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/GoogleController.html":{},"controllers/LocationController.html":{},"controllers/MailController.html":{},"controllers/MaterialController.html":{},"controllers/NotificationsController.html":{},"controllers/OffersController.html":{},"controllers/OnlineController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PaypalController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["preparing",{"_index":4581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["price",{"_index":1162,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{}}}],["price.enums",{"_index":1184,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["price.enums.ts",{"_index":4519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":77,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["process.env.paypal_client_id",{"_index":2875,"title":{},"body":{"injectables/PaypalService.html":{}}}],["process.env.paypal_client_secret",{"_index":2876,"title":{},"body":{"injectables/PaypalService.html":{}}}],["product",{"_index":1378,"title":{"classes/Product.html":{}},"body":{"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/Offer.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.controller",{"_index":3023,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":3001,"title":{},"body":{"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":1396,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:106",{"_index":1409,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:114",{"_index":1419,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:122",{"_index":1418,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:24",{"_index":1421,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:32",{"_index":1422,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:40",{"_index":1425,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:48",{"_index":1424,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:57",{"_index":1406,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:65",{"_index":1412,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:73",{"_index":1431,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:81",{"_index":1428,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:89",{"_index":1414,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:98",{"_index":1417,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.length",{"_index":3084,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.name",{"_index":2375,"title":{},"body":{"classes/Offer.html":{},"classes/OrderItems.html":{},"modules/ProductModule.html":{}}}],["product.price",{"_index":2543,"title":{},"body":{"classes/Order.html":{}}}],["product.quantity",{"_index":3083,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.save",{"_index":3077,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.service",{"_index":3000,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["product_id",{"_index":3051,"title":{},"body":{"injectables/ProductService.html":{}}}],["productcategory",{"_index":1410,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["productcomponents",{"_index":1388,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["productcontroller",{"_index":2979,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["productids",{"_index":3044,"title":{},"body":{"injectables/ProductService.html":{}}}],["productids.length",{"_index":3090,"title":{},"body":{"injectables/ProductService.html":{}}}],["productinterface",{"_index":3016,"title":{"interfaces/ProductInterface.html":{}},"body":{"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{}}}],["production",{"_index":4664,"title":{},"body":{"index.html":{}}}],["production_price",{"_index":1402,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{}}}],["productmodel",{"_index":2535,"title":{},"body":{"classes/Order.html":{}}}],["productmodel.findbyid(item.product).exec",{"_index":2541,"title":{},"body":{"classes/Order.html":{}}}],["productmodule",{"_index":174,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productrepo",{"_index":3041,"title":{},"body":{"injectables/ProductService.html":{}}}],["products",{"_index":2455,"title":{},"body":{"injectables/OffersService.html":{},"injectables/ProductService.html":{}}}],["products.length",{"_index":3080,"title":{},"body":{"injectables/ProductService.html":{}}}],["products_id",{"_index":3066,"title":{},"body":{"injectables/ProductService.html":{}}}],["products_id.length",{"_index":3081,"title":{},"body":{"injectables/ProductService.html":{}}}],["productschema",{"_index":2537,"title":{},"body":{"classes/Order.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":2426,"title":{"injectables/ProductService.html":{}},"body":{"injectables/OffersService.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"overview.html":{}}}],["productsize",{"_index":1426,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["productsubcategory",{"_index":1429,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["progressive",{"_index":4644,"title":{},"body":{"index.html":{}}}],["project",{"_index":1271,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"index.html":{}}}],["promise",{"_index":66,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CustomerService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"injectables/OrderService.html":{},"injectables/PaypalService.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["promise((resolve",{"_index":2284,"title":{},"body":{"injectables/MailService.html":{}}}],["promise.all",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{}}}],["prop",{"_index":266,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/CashPayment.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Location.html":{},"classes/Material.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{}}}],["prop({default",{"_index":1876,"title":{},"body":{"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/Order.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["prop({required",{"_index":258,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/CashPayment.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/Ticket.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{}}}],["prop({type",{"_index":260,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Location.html":{},"classes/Material.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/VerifyUserEmail.html":{}}}],["properly",{"_index":2754,"title":{},"body":{"injectables/OrderService.html":{}}}],["properties",{"_index":232,"title":{"properties.html":{}},"body":{"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"interfaces/AttendenceInterface.html":{},"classes/Branch.html":{},"interfaces/BranchInterface.html":{},"classes/CashPayment.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"interfaces/CouponInterface.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBranchDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"interfaces/CustomerLocationsInterface.html":{},"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"injectables/GoogleService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/Material.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"injectables/PaypalService.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/ResetPassword.html":{},"classes/SignInByEmailDto.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"classes/Supplier.html":{},"interfaces/SupplierInterface.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/TicketUpdates.html":{},"interfaces/TicketUpdatesInterface.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"properties.html":{}}}],["provide",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{}}}],["provided",{"_index":3092,"title":{},"body":{"injectables/ProductService.html":{}}}],["providers",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["public",{"_index":412,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BranchController.html":{},"injectables/MailService.html":{},"controllers/PaypalController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["public()@get(':orderid",{"_index":2841,"title":{},"body":{"controllers/PaypalController.html":{}}}],["public()@get('pay",{"_index":2838,"title":{},"body":{"controllers/PaypalController.html":{}}}],["public()@post('forget",{"_index":4273,"title":{},"body":{"controllers/UsersController.html":{}}}],["public()@post('update",{"_index":4278,"title":{},"body":{"controllers/UsersController.html":{}}}],["pull",{"_index":3413,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/UsersService.html":{}}}],["purchase_units",{"_index":2898,"title":{},"body":{"injectables/PaypalService.html":{}}}],["push",{"_index":3402,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/UsersService.html":{}}}],["quality",{"_index":1481,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/UpdateStockItemDto.html":{}}}],["quantities",{"_index":1468,"title":{},"body":{"classes/CreateStockGardDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["quantity",{"_index":857,"title":{},"body":{"classes/Coupon.html":{},"interfaces/CouponInterface.html":{},"injectables/CouponService.html":{},"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"injectables/OffersService.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockItemQuantityDto.html":{}}}],["quantity.dto",{"_index":1472,"title":{},"body":{"classes/CreateStockGardDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["quantity.dto.ts",{"_index":1502,"title":{},"body":{"classes/CreateStockItemQuantityDto.html":{},"classes/UpdateStockItemQuantityDto.html":{}}}],["quantity.dto.ts:12",{"_index":1506,"title":{},"body":{"classes/CreateStockItemQuantityDto.html":{}}}],["quantity.dto.ts:15",{"_index":4183,"title":{},"body":{"classes/UpdateStockItemQuantityDto.html":{}}}],["quantity.dto.ts:21",{"_index":1504,"title":{},"body":{"classes/CreateStockItemQuantityDto.html":{}}}],["quantity.dto.ts:24",{"_index":4181,"title":{},"body":{"classes/UpdateStockItemQuantityDto.html":{}}}],["quantity.interface",{"_index":3364,"title":{},"body":{"interfaces/StockGardInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockTransactionInterface.html":{}}}],["quantity.interface.ts",{"_index":3491,"title":{},"body":{"interfaces/StockItemQuantityInterface.html":{}}}],["quantity.model",{"_index":3324,"title":{},"body":{"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"classes/StockTransaction.html":{}}}],["quantity.model.ts",{"_index":3484,"title":{},"body":{"classes/StockItemQuantity.html":{},"miscellaneous/variables.html":{}}}],["quantity.model.ts:12",{"_index":3486,"title":{},"body":{"classes/StockItemQuantity.html":{}}}],["quantity.model.ts:15",{"_index":3485,"title":{},"body":{"classes/StockItemQuantity.html":{}}}],["quantity.service",{"_index":3553,"title":{},"body":{"modules/StockModule.html":{}}}],["quantity.service.ts",{"_index":3493,"title":{},"body":{"injectables/StockItemQuantityService.html":{}}}],["quantity/create",{"_index":1471,"title":{},"body":{"classes/CreateStockGardDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["quantity/update",{"_index":4179,"title":{},"body":{"classes/UpdateStockItemQuantityDto.html":{}}}],["query",{"_index":2394,"title":{},"body":{"controllers/OffersController.html":{},"injectables/ProductService.html":{},"controllers/StockItemLogsController.html":{}}}],["query('item",{"_index":3456,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["query('stock",{"_index":3458,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["query.exec",{"_index":3097,"title":{},"body":{"injectables/ProductService.html":{}}}],["query.session(session",{"_index":3093,"title":{},"body":{"injectables/ProductService.html":{}}}],["rating",{"_index":1282,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["read",{"_index":4683,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":136,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"controllers/MailController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["readyat",{"_index":1010,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["receivers",{"_index":2298,"title":{},"body":{"injectables/MailService.html":{}}}],["reciveorder",{"_index":1778,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["reciveorder(@param('orderid",{"_index":1808,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["reciveorder(orderid",{"_index":1788,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["ref",{"_index":262,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/CashPayment.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/VerifyUserEmail.html":{}}}],["reflactor",{"_index":3196,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["refleactor",{"_index":23,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsWorkingInBranchGuard.html":{}}}],["reflect",{"_index":4506,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":15,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["refresh",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{},"classes/RTGuard.html":{}}}],["refresh.dto.ts",{"_index":4138,"title":{},"body":{"classes/UpdateRefreshDto.html":{}}}],["refresh.dto.ts:6",{"_index":4139,"title":{},"body":{"classes/UpdateRefreshDto.html":{}}}],["refresh_token",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/MailService.html":{},"interfaces/Token.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{}}}],["refreshtoken",{"_index":2294,"title":{},"body":{"injectables/MailService.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"injectables/UsersService.html":{}}}],["regarding",{"_index":1268,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["registeruser",{"_index":2124,"title":{},"body":{"injectables/GoogleService.html":{}}}],["registeruser(token",{"_index":2136,"title":{},"body":{"injectables/GoogleService.html":{}}}],["reject",{"_index":2285,"title":{},"body":{"injectables/MailService.html":{}}}],["reject('failed",{"_index":2287,"title":{},"body":{"injectables/MailService.html":{}}}],["related",{"_index":1315,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{}}}],["releasedby",{"_index":2081,"title":{},"body":{"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["releasedby_id",{"_index":3249,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["remove",{"_index":544,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["remove(@param('gard_id",{"_index":3358,"title":{},"body":{"controllers/StockGardController.html":{}}}],["remove(@param('id",{"_index":571,"title":{},"body":{"controllers/BillingController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockItemController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["remove(@param('pdr_id",{"_index":2942,"title":{},"body":{"controllers/PdrController.html":{}}}],["remove(gard_id",{"_index":3342,"title":{},"body":{"controllers/StockGardController.html":{}}}],["remove(id",{"_index":551,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"controllers/StockItemController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["remove(item_log_id",{"_index":3451,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["remove(pdr_id",{"_index":2929,"title":{},"body":{"controllers/PdrController.html":{},"injectables/PdrService.html":{}}}],["removebranch",{"_index":632,"title":{},"body":{"controllers/BranchController.html":{}}}],["removebranch(@param('id",{"_index":655,"title":{},"body":{"controllers/BranchController.html":{}}}],["removebranch(id",{"_index":640,"title":{},"body":{"controllers/BranchController.html":{}}}],["removed",{"_index":2739,"title":{},"body":{"injectables/OrderService.html":{}}}],["removedrole",{"_index":4361,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeemployeeattend",{"_index":344,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["removeemployeeattend(attendenceid",{"_index":362,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["removeonebranchbyid",{"_index":671,"title":{},"body":{"injectables/BranchService.html":{}}}],["removeonebranchbyid(branch_id",{"_index":685,"title":{},"body":{"injectables/BranchService.html":{}}}],["removeonebyid",{"_index":1600,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{}}}],["removeonebyid(@param('id",{"_index":1627,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockController.html":{},"controllers/StockTransactionController.html":{}}}],["removeonebyid(id",{"_index":1609,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/EmployeeService.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{}}}],["removeonebyid(pdr_id",{"_index":1921,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["removeonecouponbyid",{"_index":906,"title":{},"body":{"injectables/CouponService.html":{}}}],["removeonecouponbyid(coupon_id",{"_index":933,"title":{},"body":{"injectables/CouponService.html":{}}}],["removeonecustomerbyid",{"_index":1722,"title":{},"body":{"injectables/CustomerService.html":{}}}],["removeonecustomerbyid(customer_id",{"_index":1734,"title":{},"body":{"injectables/CustomerService.html":{}}}],["removeonecustomerlocationbyid",{"_index":1669,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["removeonecustomerlocationbyid(customer_location_id",{"_index":1684,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["removeoneofferbyid",{"_index":2422,"title":{},"body":{"injectables/OffersService.html":{}}}],["removeoneofferbyid(offer_id",{"_index":2443,"title":{},"body":{"injectables/OffersService.html":{}}}],["removeoneorderbyid",{"_index":2568,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["removeoneorderbyid(@param('id",{"_index":2619,"title":{},"body":{"controllers/OrderController.html":{}}}],["removeoneorderbyid(id",{"_index":2597,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["removeoneproductbyid",{"_index":3036,"title":{},"body":{"injectables/ProductService.html":{}}}],["removeoneproductbyid(product_id",{"_index":3067,"title":{},"body":{"injectables/ProductService.html":{}}}],["removeonerolefromuser",{"_index":454,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeonerolefromuser(assignroledto",{"_index":467,"title":{},"body":{"injectables/AuthService.html":{}}}],["removeonesupplierbyid",{"_index":3755,"title":{},"body":{"injectables/SupplierService.html":{}}}],["removeonesupplierbyid(supplier_id",{"_index":3767,"title":{},"body":{"injectables/SupplierService.html":{}}}],["removeoneticketbyid",{"_index":3877,"title":{},"body":{"injectables/TicketService.html":{}}}],["removeoneticketbyid(id",{"_index":3887,"title":{},"body":{"injectables/TicketService.html":{}}}],["removeoneticketupdatebyid",{"_index":3942,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["removeoneticketupdatebyid(id",{"_index":3952,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["removeoneuserbyid",{"_index":4329,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeoneuserbyid(user_id",{"_index":4358,"title":{},"body":{"injectables/UsersService.html":{}}}],["removerolefromuser",{"_index":102,"title":{},"body":{"controllers/AdminController.html":{}}}],["removerolefromuser(@body",{"_index":141,"title":{},"body":{"controllers/AdminController.html":{}}}],["removerolefromuser(asssignroledto",{"_index":115,"title":{},"body":{"controllers/AdminController.html":{}}}],["removes",{"_index":616,"title":{},"body":{"injectables/BillingService.html":{},"injectables/CartService.html":{},"injectables/CashierService.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"injectables/WalletService.html":{}}}],["replace",{"_index":4623,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["reply",{"_index":2299,"title":{},"body":{"injectables/MailService.html":{}}}],["repository",{"_index":4654,"title":{},"body":{"index.html":{}}}],["req",{"_index":293,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/GoogleController.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PdrController.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{}}}],["req.params.branchid",{"_index":2209,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["request",{"_index":294,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/AuthController.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/GoogleController.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/PdrController.html":{},"injectables/ResetPasswordService.html":{},"controllers/SpendingAuthController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/TakeAwayController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{}}}],["request.res.setheader('set",{"_index":2117,"title":{},"body":{"controllers/GoogleController.html":{}}}],["requesteduser",{"_index":2199,"title":{},"body":{"classes/IsUserCustomerGuard.html":{}}}],["requestresetpassword",{"_index":3121,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["requestresetpassword(email",{"_index":3139,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["required",{"_index":235,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Branch.html":{},"classes/CashPayment.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/ResetPassword.html":{},"classes/SignInByEmailDto.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/Ticket.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{}}}],["reset",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"injectables/ResetPasswordService.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["reset_password_link",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["resetpassword",{"_index":3104,"title":{"classes/ResetPassword.html":{}},"body":{"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["resetpassword(@body('email",{"_index":4301,"title":{},"body":{"controllers/UsersController.html":{}}}],["resetpassword(email",{"_index":4272,"title":{},"body":{"controllers/UsersController.html":{}}}],["resetpassword.name",{"_index":4320,"title":{},"body":{"modules/UsersModule.html":{}}}],["resetpasswordschema",{"_index":3111,"title":{},"body":{"classes/ResetPassword.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["resetpasswordservice",{"_index":3113,"title":{"injectables/ResetPasswordService.html":{}},"body":{"injectables/ResetPasswordService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resetrepo",{"_index":3126,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["resolve(token",{"_index":2289,"title":{},"body":{"injectables/MailService.html":{}}}],["response",{"_index":2866,"title":{},"body":{"injectables/PaypalService.html":{}}}],["response.json",{"_index":2884,"title":{},"body":{"injectables/PaypalService.html":{}}}],["response.status",{"_index":2889,"title":{},"body":{"injectables/PaypalService.html":{}}}],["response.text",{"_index":2891,"title":{},"body":{"injectables/PaypalService.html":{}}}],["rest",{"_index":4504,"title":{},"body":{"dependencies.html":{}}}],["results",{"_index":50,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Cashier.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["rethrow",{"_index":2746,"title":{},"body":{"injectables/OrderService.html":{}}}],["return",{"_index":44,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["returns",{"_index":28,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AttendenceController.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"controllers/EmployeeController.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"miscellaneous/functions.html":{}}}],["review",{"_index":1281,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["role",{"_index":124,"title":{},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"injectables/EmployeeService.html":{},"controllers/ProductController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["role')@role(roles.superuser",{"_index":108,"title":{},"body":{"controllers/AdminController.html":{}}}],["role(roles.superuser",{"_index":138,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{}}}],["role(roles.superuser)@delete(':id",{"_index":3831,"title":{},"body":{"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{}}}],["role(roles.superuser)@patch(':id",{"_index":3834,"title":{},"body":{"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{}}}],["role(roles.superuser)@patch('status/:ticketid/:newstatus",{"_index":3837,"title":{},"body":{"controllers/TicketController.html":{}}}],["roles",{"_index":127,"title":{},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"injectables/EmployeeService.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/RolesGuard.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.cashier",{"_index":2734,"title":{},"body":{"injectables/OrderService.html":{}}}],["roles.user",{"_index":4251,"title":{},"body":{"classes/User.html":{}}}],["roles_keys",{"_index":3198,"title":{},"body":{"injectables/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":129,"title":{"injectables/RolesGuard.html":{}},"body":{"controllers/AdminController.html":{},"injectables/RolesGuard.html":{},"controllers/SupplierController.html":{},"controllers/UsersController.html":{}}}],["rtguard",{"_index":3100,"title":{"classes/RTGuard.html":{}},"body":{"classes/RTGuard.html":{}}}],["run",{"_index":4659,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":2192,"title":{},"body":{"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"dependencies.html":{}}}],["salary",{"_index":1217,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["sales",{"_index":4628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["salt",{"_index":4373,"title":{},"body":{"injectables/UsersService.html":{}}}],["same",{"_index":3681,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["sasuage",{"_index":4590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["save",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["scalable",{"_index":4648,"title":{},"body":{"index.html":{}}}],["schema",{"_index":270,"title":{},"body":{"classes/Attendence.html":{},"modules/BillingModule.html":{},"classes/Branch.html":{},"modules/BranchModule.html":{},"classes/CashPayment.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"modules/CouponModule.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"modules/CustomerModule.html":{},"classes/Delivery.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/Invoice.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Location.html":{},"modules/LocationModule.html":{},"classes/Material.html":{},"classes/Offer.html":{},"modules/OffersModule.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"modules/SupplierModule.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"classes/VerifyUserEmail.html":{}}}],["schemafactory",{"_index":271,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/CashPayment.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/Delivery.html":{},"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/Invoice.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Location.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{}}}],["schemafactory.createforclass",{"_index":2087,"title":{},"body":{"classes/EmployeeSpendingAuthorization.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/SpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(attendence",{"_index":282,"title":{},"body":{"classes/Attendence.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(branch",{"_index":629,"title":{},"body":{"classes/Branch.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(cashpayment",{"_index":753,"title":{},"body":{"classes/CashPayment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(coordinates",{"_index":837,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(coupon",{"_index":866,"title":{},"body":{"classes/Coupon.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(customer",{"_index":1596,"title":{},"body":{"classes/Customer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(customerlocations",{"_index":1639,"title":{},"body":{"classes/CustomerLocations.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(delivery",{"_index":1769,"title":{},"body":{"classes/Delivery.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(deliveryorder",{"_index":1834,"title":{},"body":{"classes/DeliveryOrder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(dineinorder",{"_index":1881,"title":{},"body":{"classes/DineinOrder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employee",{"_index":1964,"title":{},"body":{"classes/Employee.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employeemonthlypdr",{"_index":2014,"title":{},"body":{"classes/EmployeeMonthlyPDR.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employeepdraction",{"_index":2025,"title":{},"body":{"classes/EmployeePDRAction.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employeetransactions",{"_index":2103,"title":{},"body":{"classes/EmployeeTransactions.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(invoice",{"_index":2174,"title":{},"body":{"classes/Invoice.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(location",{"_index":848,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(offer",{"_index":2377,"title":{},"body":{"classes/Offer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(order",{"_index":2513,"title":{},"body":{"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(orderitems",{"_index":2632,"title":{},"body":{"classes/OrderItems.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(payment",{"_index":2788,"title":{},"body":{"classes/Payment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(paypalpayment",{"_index":2772,"title":{},"body":{"classes/PayPalPayment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":2978,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(resetpassword",{"_index":3112,"title":{},"body":{"classes/ResetPassword.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stock",{"_index":3287,"title":{},"body":{"classes/Stock.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stockgard",{"_index":3326,"title":{},"body":{"classes/StockGard.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stockitem",{"_index":3425,"title":{},"body":{"classes/StockItem.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stockitemquantity",{"_index":3490,"title":{},"body":{"classes/StockItemQuantity.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stockitemslogs",{"_index":3537,"title":{},"body":{"classes/StockItemslogs.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stocktransaction",{"_index":3617,"title":{},"body":{"classes/StockTransaction.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(supplier",{"_index":3722,"title":{},"body":{"classes/Supplier.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(takeawayorder",{"_index":3794,"title":{},"body":{"classes/TakeAwayOrder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(ticket",{"_index":3823,"title":{},"body":{"classes/Ticket.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(ticketupdates",{"_index":3909,"title":{},"body":{"classes/TicketUpdates.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":4254,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(verifyuseremail",{"_index":4448,"title":{},"body":{"classes/VerifyUserEmail.html":{},"miscellaneous/variables.html":{}}}],["sdk",{"_index":2874,"title":{},"body":{"injectables/PaypalService.html":{},"dependencies.html":{}}}],["searches",{"_index":1747,"title":{},"body":{"injectables/CustomerService.html":{}}}],["secret",{"_index":445,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":80,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["security",{"_index":1239,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["segment",{"_index":1529,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/UpdateTicketDto.html":{}}}],["segment.enum",{"_index":1545,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/UpdateTicketDto.html":{}}}],["segment.enum.ts",{"_index":4544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sendmail",{"_index":2262,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmail(mailoption",{"_index":2266,"title":{},"body":{"injectables/MailService.html":{}}}],["sendmailoption",{"_index":2267,"title":{},"body":{"injectables/MailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/typealiases.html":{}}}],["server",{"_index":2873,"title":{},"body":{"injectables/PaypalService.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":2291,"title":{},"body":{"injectables/MailService.html":{},"injectables/ResetPasswordService.html":{}}}],["service/attendence.service",{"_index":314,"title":{},"body":{"controllers/AttendenceController.html":{},"modules/EmployeeModule.html":{}}}],["service/billing.service",{"_index":559,"title":{},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{}}}],["service/cash.service",{"_index":2804,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["service/customer",{"_index":1651,"title":{},"body":{"controllers/CustomerLocationsController.html":{},"modules/CustomerModule.html":{}}}],["service/customer.service",{"_index":1615,"title":{},"body":{"controllers/CustomerAdminController.html":{},"modules/CustomerModule.html":{},"controllers/CustomerUserController.html":{}}}],["service/delivery.service",{"_index":1802,"title":{},"body":{"controllers/DeliveryController-1.html":{},"modules/OrderModule.html":{}}}],["service/dine",{"_index":2650,"title":{},"body":{"modules/OrderModule.html":{}}}],["service/email.service",{"_index":2355,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["service/employee",{"_index":1896,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"modules/EmployeeModule.html":{}}}],["service/employee.service",{"_index":1974,"title":{},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/IsEmployeeGuard.html":{}}}],["service/invoice.service",{"_index":600,"title":{},"body":{"modules/BillingModule.html":{}}}],["service/monthly",{"_index":1993,"title":{},"body":{"modules/EmployeeModule.html":{},"controllers/PdrController.html":{}}}],["service/notifications.service",{"_index":2353,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["service/online.service",{"_index":2652,"title":{},"body":{"modules/OrderModule.html":{}}}],["service/order.service",{"_index":1800,"title":{},"body":{"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/TakeAwayController.html":{}}}],["service/payment.service",{"_index":2803,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["service/paypal.service",{"_index":2806,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["service/reset",{"_index":4288,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["service/spending",{"_index":599,"title":{},"body":{"modules/BillingModule.html":{},"controllers/SpendingAuthController.html":{}}}],["service/stock",{"_index":3346,"title":{},"body":{"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{},"controllers/StockTransactionController.html":{}}}],["service/stock.service",{"_index":3304,"title":{},"body":{"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{}}}],["service/take",{"_index":2648,"title":{},"body":{"modules/OrderModule.html":{}}}],["service/ticket",{"_index":3869,"title":{},"body":{"modules/TicketModule.html":{},"controllers/TicketUpdatesController.html":{}}}],["service/ticket.service",{"_index":3841,"title":{},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{}}}],["service/users.service",{"_index":4287,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["service/verify",{"_index":4285,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["service_equipment",{"_index":4616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["service_price",{"_index":1873,"title":{},"body":{"classes/DineinOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{}}}],["session",{"_index":922,"title":{},"body":{"injectables/CouponService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/StockTransactionService.html":{}}}],["session(session",{"_index":961,"title":{},"body":{"injectables/CouponService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["session.endsession",{"_index":2751,"title":{},"body":{"injectables/OrderService.html":{},"injectables/StockTransactionService.html":{}}}],["session.withtransaction(async",{"_index":2701,"title":{},"body":{"injectables/OrderService.html":{},"injectables/StockTransactionService.html":{}}}],["set",{"_index":1851,"title":{},"body":{"injectables/DeliveryService-1.html":{},"classes/Order.html":{},"injectables/StockGardService.html":{},"injectables/TicketService.html":{}}}],["setmetadata('ispublic",{"_index":4739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_keys",{"_index":4741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settransport",{"_index":2263,"title":{},"body":{"injectables/MailService.html":{}}}],["sex",{"_index":1228,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{},"miscellaneous/enumerations.html":{}}}],["sex.male",{"_index":1961,"title":{},"body":{"classes/Employee.html":{}}}],["side",{"_index":4649,"title":{},"body":{"index.html":{}}}],["signby",{"_index":256,"title":{},"body":{"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["signin",{"_index":4552,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["signinbyemail",{"_index":391,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinbyemail(signinbyemaildto",{"_index":396,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinbyemaildto",{"_index":397,"title":{"classes/SignInByEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInByEmailDto.html":{}}}],["signinbyemaildto.email",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinbyemaildto.password",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["signing",{"_index":3986,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["signoptions",{"_index":446,"title":{},"body":{"modules/AuthModule.html":{}}}],["signout",{"_index":4553,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["signup",{"_index":392,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(@body",{"_index":416,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createuserdto",{"_index":401,"title":{},"body":{"controllers/AuthController.html":{}}}],["simplified",{"_index":3087,"title":{},"body":{"injectables/ProductService.html":{}}}],["size",{"_index":1403,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"classes/UpdateProductDto.html":{}}}],["skills",{"_index":1286,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["skills.'})@isoptional()@isstring",{"_index":1274,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["social",{"_index":1238,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"classes/Cashier.html":{},"controllers/CashierController.html":{},"modules/CashierModule.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCashierDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateNotificationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/CreateWalletDto.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/Delivery.html":{},"controllers/DeliveryController.html":{},"controllers/DeliveryController-1.html":{},"modules/DeliveryModule.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"injectables/DineInService.html":{},"classes/DineinOrder.html":{},"injectables/EmailService.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"modules/EmployeeModule.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/Invoice.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"interfaces/LocationInterface.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MailController.html":{},"modules/MailModule.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Notification.html":{},"controllers/NotificationsController.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OnlineController.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"modules/PaypalModule.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCashierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateNotificationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/UpdateWalletDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"classes/Wallet.html":{},"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"index.html":{}}}],["specific",{"_index":2743,"title":{},"body":{"injectables/OrderService.html":{}}}],["specified",{"_index":2067,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["spending",{"_index":589,"title":{},"body":{"modules/BillingModule.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"miscellaneous/variables.html":{}}}],["spendingauthcontroller",{"_index":579,"title":{"controllers/SpendingAuthController.html":{}},"body":{"modules/BillingModule.html":{},"controllers/SpendingAuthController.html":{}}}],["spendingauthorization",{"_index":581,"title":{"classes/SpendingAuthorization.html":{}},"body":{"modules/BillingModule.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["spendingauthorization.name",{"_index":602,"title":{},"body":{"modules/BillingModule.html":{}}}],["spendingauthorizationschema",{"_index":582,"title":{},"body":{"modules/BillingModule.html":{},"classes/SpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["spendingauthorizationstatus",{"_index":1324,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/UpdateSpendingAuthDto.html":{},"miscellaneous/enumerations.html":{}}}],["spendingauthorizationstatus.close",{"_index":1447,"title":{},"body":{"classes/CreateSpendingAuthDto.html":{},"classes/SpendingAuthorization.html":{}}}],["spendingauthorizationstatus.open",{"_index":4152,"title":{},"body":{"classes/UpdateSpendingAuthDto.html":{}}}],["spendingauthrepo",{"_index":3241,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["spendingauthservice",{"_index":577,"title":{"injectables/SpendingAuthService.html":{}},"body":{"modules/BillingModule.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"overview.html":{}}}],["sponsors",{"_index":4677,"title":{},"body":{"index.html":{}}}],["src/.../account",{"_index":4512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../attendence",{"_index":4514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../attendence.model.ts",{"_index":4711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../branch.model.ts",{"_index":4712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cash.payment.model.ts",{"_index":4713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../coupon.model.ts",{"_index":4715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../customer",{"_index":4716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../customer.model.ts",{"_index":4717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dates.ts",{"_index":4635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../deliver",{"_index":4518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../deliverey",{"_index":4516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../delivery",{"_index":4520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../delivery.model.ts",{"_index":4718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../department.enums.ts",{"_index":4521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../dinein.model.ts",{"_index":4719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../emp",{"_index":4546,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../employee.model.ts",{"_index":4720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../invoice",{"_index":4722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../invoice.model.ts",{"_index":4721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ispuplic.decorator.ts",{"_index":4728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location.model.ts",{"_index":4714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":4633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../measure",{"_index":4522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../offer.model.ts",{"_index":4723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../order",{"_index":4524,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../order.model.ts",{"_index":4724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../payment",{"_index":4526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../payment.model.ts",{"_index":4725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../paypal.payment.model.ts",{"_index":4726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pdr",{"_index":4529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../product",{"_index":4531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../product.model.ts",{"_index":4727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reset",{"_index":4729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":4730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enums.ts",{"_index":4536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sendmail",{"_index":4708,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../sex.enum.ts",{"_index":4537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../size.enum.ts",{"_index":4534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../spending",{"_index":4731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../spendingauthorization",{"_index":4538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../stock",{"_index":4540,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../stock.model.ts",{"_index":4732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../supplier.model.ts",{"_index":4733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../takeaway.model.ts",{"_index":4734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ticket",{"_index":4543,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../ticket.model.ts",{"_index":4735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":4736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../verify",{"_index":4737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/admin/admin.controller.ts",{"_index":96,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/auth/admin/admin.controller.ts:22",{"_index":109,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/auth/admin/admin.controller.ts:28",{"_index":117,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/auth/admin/admin.controller.ts:34",{"_index":114,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/auth/auth.controller.ts",{"_index":389,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:17",{"_index":404,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:22",{"_index":400,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:30",{"_index":395,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":427,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:114",{"_index":465,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:122",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:153",{"_index":461,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:164",{"_index":468,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:18",{"_index":459,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:25",{"_index":463,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:52",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:64",{"_index":472,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:82",{"_index":469,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/ispuplic.decorator",{"_index":413,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BranchController.html":{},"controllers/PaypalController.html":{},"controllers/ProductController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorator/ispuplic.decorator.ts",{"_index":4738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/decorator/roles.decorator",{"_index":3002,"title":{},"body":{"controllers/ProductController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{}}}],["src/auth/decorator/roles.decorator.ts",{"_index":4740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth/dto/assignrole.dto.ts",{"_index":231,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["src/auth/dto/assignrole.dto.ts:12",{"_index":240,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["src/auth/dto/assignrole.dto.ts:20",{"_index":237,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["src/auth/dto/signin",{"_index":3202,"title":{},"body":{"classes/SignInByEmailDto.html":{}}}],["src/auth/dto/singup.dto.ts",{"_index":1566,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/auth/dto/singup.dto.ts:11",{"_index":1570,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/auth/dto/singup.dto.ts:19",{"_index":1575,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/auth/dto/singup.dto.ts:27",{"_index":1573,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/auth/dto/tokenverificationdto.ts",{"_index":3973,"title":{},"body":{"classes/TokenVerificationDto.html":{}}}],["src/auth/dto/tokenverificationdto.ts:6",{"_index":3974,"title":{},"body":{"classes/TokenVerificationDto.html":{}}}],["src/auth/enums/roles.enums",{"_index":246,"title":{},"body":{"classes/AssignRoleDto.html":{},"injectables/EmployeeService.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["src/auth/enums/roles.enums.ts",{"_index":4600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/google/google.controller.ts",{"_index":2104,"title":{},"body":{"controllers/GoogleController.html":{}}}],["src/auth/google/google.controller.ts:11",{"_index":2109,"title":{},"body":{"controllers/GoogleController.html":{}}}],["src/auth/google/google.service.ts",{"_index":2119,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/auth/google/google.service.ts:10",{"_index":2127,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/auth/google/google.service.ts:22",{"_index":2133,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/auth/google/google.service.ts:36",{"_index":2131,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/auth/google/google.service.ts:50",{"_index":2135,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/auth/google/google.service.ts:64",{"_index":2137,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/auth/google/google.service.ts:73",{"_index":2129,"title":{},"body":{"injectables/GoogleService.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"injectables/ATGuard.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":2211,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["src/auth/guards/jwt.guard.ts:11",{"_index":2213,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["src/auth/guards/jwt.guard.ts:6",{"_index":2212,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["src/auth/guards/refresh",{"_index":3101,"title":{},"body":{"classes/RTGuard.html":{}}}],["src/auth/guards/roles.guard",{"_index":3737,"title":{},"body":{"controllers/SupplierController.html":{},"controllers/UsersController.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":3193,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:12",{"_index":3197,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:8",{"_index":3195,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["src/auth/interface/token",{"_index":3971,"title":{},"body":{"interfaces/Token.html":{}}}],["src/auth/interface/verifyandgeneraterefreshtoken.interface.ts",{"_index":4449,"title":{},"body":{"interfaces/VerifyandGenerateRefreshToken.html":{}}}],["src/auth/strategy/access",{"_index":53,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["src/billing/billing.module.ts",{"_index":578,"title":{},"body":{"modules/BillingModule.html":{}}}],["src/billing/controller/billing.controller.ts",{"_index":542,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/controller/billing.controller.ts:21",{"_index":547,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/controller/billing.controller.ts:26",{"_index":548,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/controller/billing.controller.ts:31",{"_index":550,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/controller/billing.controller.ts:36",{"_index":557,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/controller/billing.controller.ts:41",{"_index":553,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/controller/spending",{"_index":3207,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["src/billing/dto/create",{"_index":1056,"title":{},"body":{"classes/CreateBillingDto.html":{}}}],["src/billing/dto/spending",{"_index":1311,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["src/billing/dto/update",{"_index":3992,"title":{},"body":{"classes/UpdateBillingDto.html":{}}}],["src/billing/enum/emp",{"_index":2101,"title":{},"body":{"classes/EmployeeTransactions.html":{},"miscellaneous/enumerations.html":{}}}],["src/billing/enum/spendingauthorization",{"_index":1444,"title":{},"body":{"classes/CreateSpendingAuthDto.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/UpdateSpendingAuthDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/billing/interface/emp",{"_index":2089,"title":{},"body":{"interfaces/EmployeeTransactionInterface.html":{}}}],["src/billing/interface/spending",{"_index":2078,"title":{},"body":{"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{}}}],["src/billing/model/billing.model.ts",{"_index":540,"title":{},"body":{"classes/Billing.html":{}}}],["src/billing/model/employee.model.ts",{"_index":2094,"title":{},"body":{"classes/EmployeeTransactions.html":{},"miscellaneous/variables.html":{}}}],["src/billing/model/employee.model.ts:10",{"_index":2098,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/billing/model/employee.model.ts:13",{"_index":2096,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/billing/model/employee.model.ts:16",{"_index":2097,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/billing/model/employee.model.ts:19",{"_index":2100,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/billing/model/employee.model.ts:22",{"_index":2099,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/billing/model/invoice.model.ts",{"_index":2173,"title":{},"body":{"classes/Invoice.html":{},"miscellaneous/variables.html":{}}}],["src/billing/model/spending",{"_index":2082,"title":{},"body":{"classes/EmployeeSpendingAuthorization.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/SpendingAuthorization.html":{},"miscellaneous/variables.html":{}}}],["src/billing/service/billing.service.ts",{"_index":607,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/service/billing.service.ts:11",{"_index":609,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/service/billing.service.ts:15",{"_index":611,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/service/billing.service.ts:19",{"_index":613,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/service/billing.service.ts:23",{"_index":612,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/service/billing.service.ts:7",{"_index":608,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/service/invoice.service.ts",{"_index":2175,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/billing/service/invoice.service.ts:7",{"_index":2177,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/billing/service/invoice.service.ts:9",{"_index":2179,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["src/billing/service/spending",{"_index":3234,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["src/branch/branch.controller.ts",{"_index":631,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:23",{"_index":637,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:28",{"_index":638,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:33",{"_index":639,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:38",{"_index":644,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:46",{"_index":641,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.module",{"_index":899,"title":{},"body":{"modules/CouponModule.html":{},"modules/EmployeeModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/TicketModule.html":{}}}],["src/branch/branch.module.ts",{"_index":664,"title":{},"body":{"modules/BranchModule.html":{}}}],["src/branch/branch.service",{"_index":776,"title":{},"body":{"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/StockService.html":{},"injectables/TicketService.html":{}}}],["src/branch/branch.service.ts",{"_index":668,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:15",{"_index":677,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:31",{"_index":679,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:39",{"_index":681,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:47",{"_index":684,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:59",{"_index":689,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:71",{"_index":686,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:9",{"_index":674,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/dto/create",{"_index":1058,"title":{},"body":{"classes/CreateBranchDto.html":{}}}],["src/branch/dto/update",{"_index":3995,"title":{},"body":{"classes/UpdateBranchDto.html":{}}}],["src/branch/interface/branch.interface.ts",{"_index":658,"title":{},"body":{"interfaces/BranchInterface.html":{}}}],["src/branch/model/branch.model",{"_index":751,"title":{},"body":{"classes/CashPayment.html":{},"classes/Coupon.html":{},"classes/Employee.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/Ticket.html":{}}}],["src/branch/model/branch.model.ts",{"_index":618,"title":{},"body":{"classes/Branch.html":{},"miscellaneous/variables.html":{}}}],["src/branch/model/branch.model.ts:12",{"_index":626,"title":{},"body":{"classes/Branch.html":{}}}],["src/branch/model/branch.model.ts:15",{"_index":627,"title":{},"body":{"classes/Branch.html":{}}}],["src/branch/model/branch.model.ts:18",{"_index":623,"title":{},"body":{"classes/Branch.html":{}}}],["src/branch/model/branch.model.ts:21",{"_index":622,"title":{},"body":{"classes/Branch.html":{}}}],["src/branch/model/branch.model.ts:9",{"_index":624,"title":{},"body":{"classes/Branch.html":{}}}],["src/cart/cart.controller.ts",{"_index":711,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:21",{"_index":714,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:26",{"_index":715,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:31",{"_index":716,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:36",{"_index":719,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:41",{"_index":717,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.module.ts",{"_index":732,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":734,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:11",{"_index":736,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:15",{"_index":737,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:19",{"_index":739,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:23",{"_index":738,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:7",{"_index":735,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/dto/create",{"_index":1075,"title":{},"body":{"classes/CreateCartDto.html":{}}}],["src/cart/dto/update",{"_index":3998,"title":{},"body":{"classes/UpdateCartDto.html":{}}}],["src/cart/entities/cart.entity.ts",{"_index":709,"title":{},"body":{"classes/Cart.html":{}}}],["src/cashier/cashier.controller.ts",{"_index":795,"title":{},"body":{"controllers/CashierController.html":{}}}],["src/cashier/cashier.controller.ts:11",{"_index":798,"title":{},"body":{"controllers/CashierController.html":{}}}],["src/cashier/cashier.controller.ts:16",{"_index":799,"title":{},"body":{"controllers/CashierController.html":{}}}],["src/cashier/cashier.controller.ts:21",{"_index":800,"title":{},"body":{"controllers/CashierController.html":{}}}],["src/cashier/cashier.controller.ts:26",{"_index":803,"title":{},"body":{"controllers/CashierController.html":{}}}],["src/cashier/cashier.controller.ts:31",{"_index":801,"title":{},"body":{"controllers/CashierController.html":{}}}],["src/cashier/cashier.module.ts",{"_index":815,"title":{},"body":{"modules/CashierModule.html":{}}}],["src/cashier/cashier.service.ts",{"_index":817,"title":{},"body":{"injectables/CashierService.html":{}}}],["src/cashier/cashier.service.ts:11",{"_index":819,"title":{},"body":{"injectables/CashierService.html":{}}}],["src/cashier/cashier.service.ts:15",{"_index":820,"title":{},"body":{"injectables/CashierService.html":{}}}],["src/cashier/cashier.service.ts:19",{"_index":822,"title":{},"body":{"injectables/CashierService.html":{}}}],["src/cashier/cashier.service.ts:23",{"_index":821,"title":{},"body":{"injectables/CashierService.html":{}}}],["src/cashier/cashier.service.ts:7",{"_index":818,"title":{},"body":{"injectables/CashierService.html":{}}}],["src/cashier/dto/create",{"_index":1078,"title":{},"body":{"classes/CreateCashierDto.html":{}}}],["src/cashier/dto/update",{"_index":4009,"title":{},"body":{"classes/UpdateCashierDto.html":{}}}],["src/cashier/entities/cashier.entity.ts",{"_index":793,"title":{},"body":{"classes/Cashier.html":{}}}],["src/common/functions/dates.ts",{"_index":4637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/common/interfaces/location.interface",{"_index":659,"title":{},"body":{"interfaces/BranchInterface.html":{}}}],["src/coupon/coupon.controller.ts",{"_index":868,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:21",{"_index":872,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:26",{"_index":873,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:31",{"_index":875,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:36",{"_index":878,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:41",{"_index":876,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.module",{"_index":2655,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/coupon/coupon.module.ts",{"_index":896,"title":{},"body":{"modules/CouponModule.html":{}}}],["src/coupon/coupon.service",{"_index":2698,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/coupon/coupon.service.ts",{"_index":901,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:104",{"_index":932,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:129",{"_index":929,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:15",{"_index":913,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:156",{"_index":936,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:31",{"_index":917,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:38",{"_index":915,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:46",{"_index":919,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:54",{"_index":939,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:76",{"_index":934,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:84",{"_index":924,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:9",{"_index":910,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/dto/create",{"_index":1105,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["src/coupon/dto/update",{"_index":4011,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["src/coupon/interface/coupon.interface.ts",{"_index":891,"title":{},"body":{"interfaces/CouponInterface.html":{}}}],["src/coupon/model/coupon.model",{"_index":2502,"title":{},"body":{"classes/Order.html":{}}}],["src/coupon/model/coupon.model.ts",{"_index":854,"title":{},"body":{"classes/Coupon.html":{},"miscellaneous/variables.html":{}}}],["src/coupon/model/coupon.model.ts:11",{"_index":858,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:14",{"_index":859,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:17",{"_index":864,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:20",{"_index":863,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:23",{"_index":862,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:8",{"_index":861,"title":{},"body":{"classes/Coupon.html":{}}}],["src/customer/controller/customer",{"_index":1641,"title":{},"body":{"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{}}}],["src/customer/controller/customer.controller.ts",{"_index":1598,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["src/customer/controller/customer.controller.ts:21",{"_index":1603,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["src/customer/controller/customer.controller.ts:26",{"_index":1604,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["src/customer/controller/customer.controller.ts:31",{"_index":1607,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["src/customer/controller/customer.controller.ts:36",{"_index":1608,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["src/customer/controller/customer.controller.ts:41",{"_index":1613,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["src/customer/controller/customer.controller.ts:49",{"_index":1610,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["src/customer/customer.module",{"_index":2656,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/customer/customer.module.ts",{"_index":1710,"title":{},"body":{"modules/CustomerModule.html":{}}}],["src/customer/dto/customer",{"_index":1141,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{},"classes/UpdateCustomerLocationDto.html":{}}}],["src/customer/dto/customer/create",{"_index":1121,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["src/customer/dto/customer/update",{"_index":4021,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["src/customer/guards/is",{"_index":2196,"title":{},"body":{"classes/IsUserCustomerGuard.html":{}}}],["src/customer/interface/customer",{"_index":1662,"title":{},"body":{"interfaces/CustomerLocationsInterface.html":{}}}],["src/customer/interface/customer.interface.ts",{"_index":1630,"title":{},"body":{"interfaces/CustomerInterface.html":{}}}],["src/customer/model/customer",{"_index":1632,"title":{},"body":{"classes/CustomerLocations.html":{},"classes/DeliveryOrder.html":{},"miscellaneous/variables.html":{}}}],["src/customer/model/customer.model",{"_index":2501,"title":{},"body":{"classes/Order.html":{}}}],["src/customer/model/customer.model.ts",{"_index":1588,"title":{},"body":{"classes/Customer.html":{},"miscellaneous/variables.html":{}}}],["src/customer/model/customer.model.ts:11",{"_index":1594,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/model/customer.model.ts:14",{"_index":1593,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/model/customer.model.ts:17",{"_index":1590,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/model/customer.model.ts:20",{"_index":1592,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/model/customer.model.ts:23",{"_index":1591,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/model/customer.model.ts:8",{"_index":1589,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/service/customer",{"_index":1664,"title":{},"body":{"injectables/CustomerLocationsService.html":{},"injectables/OrderService.html":{}}}],["src/customer/service/customer.service",{"_index":2699,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/customer/service/customer.service.ts",{"_index":1719,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/service/customer.service.ts:15",{"_index":1727,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/service/customer.service.ts:28",{"_index":1728,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/service/customer.service.ts:36",{"_index":1730,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/service/customer.service.ts:46",{"_index":1733,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/service/customer.service.ts:54",{"_index":1737,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/service/customer.service.ts:75",{"_index":1735,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/service/customer.service.ts:9",{"_index":1725,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/delivery/delivery.controller.ts",{"_index":1771,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.module.ts",{"_index":1816,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["src/delivery/delivery.service.ts",{"_index":1835,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/enums/deliver",{"_index":1183,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/delivery/enums/deliverey",{"_index":1185,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"classes/DeliveryOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/delivery/enums/delivery",{"_index":1187,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/delivery/model/delivery.model.ts",{"_index":1767,"title":{},"body":{"classes/Delivery.html":{},"miscellaneous/variables.html":{}}}],["src/employee/controller/attendence.controller.ts",{"_index":284,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["src/employee/controller/attendence.controller.ts:23",{"_index":295,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["src/employee/controller/attendence.controller.ts:32",{"_index":301,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["src/employee/controller/attendence.controller.ts:37",{"_index":307,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["src/employee/controller/attendence.controller.ts:42",{"_index":304,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["src/employee/controller/attendence.controller.ts:47",{"_index":311,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["src/employee/controller/attendence.controller.ts:58",{"_index":299,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["src/employee/controller/emp",{"_index":1885,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["src/employee/controller/employee",{"_index":2923,"title":{},"body":{"controllers/PdrController.html":{}}}],["src/employee/controller/employee.controller.ts",{"_index":1966,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/controller/employee.controller.ts:21",{"_index":1968,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/controller/employee.controller.ts:26",{"_index":1969,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/controller/employee.controller.ts:31",{"_index":1970,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/controller/employee.controller.ts:36",{"_index":1973,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/controller/employee.controller.ts:44",{"_index":1971,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/dto/attendence/create",{"_index":969,"title":{},"body":{"classes/CreateAttendenceDTO.html":{}}}],["src/employee/dto/attendence/update",{"_index":3975,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{}}}],["src/employee/dto/employee",{"_index":1288,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["src/employee/dto/employee/create",{"_index":1201,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["src/employee/dto/employee/update",{"_index":4050,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["src/employee/dto/monthly",{"_index":1259,"title":{},"body":{"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["src/employee/employee.module",{"_index":594,"title":{},"body":{"modules/BillingModule.html":{},"modules/OrderModule.html":{}}}],["src/employee/employee.module.ts",{"_index":1990,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/employee/enums/attendence",{"_index":3989,"title":{},"body":{"classes/UpdateAttendenceDTO.html":{},"miscellaneous/enumerations.html":{}}}],["src/employee/enums/department.enums.ts",{"_index":4573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/employee/enums/pdr",{"_index":1306,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/employee/guards/isemployee.guard.ts",{"_index":2186,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["src/employee/guards/isemployee.guard.ts:14",{"_index":2190,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["src/employee/guards/isemployee.guard.ts:7",{"_index":2189,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["src/employee/interfaces/emp",{"_index":339,"title":{},"body":{"interfaces/AttendenceInterface.html":{},"interfaces/EmployeePDRActionInterface.html":{}}}],["src/employee/interfaces/employee",{"_index":2015,"title":{},"body":{"interfaces/EmployeeMonthlyPDRInterface.html":{}}}],["src/employee/interfaces/employee.interface.ts",{"_index":1984,"title":{},"body":{"interfaces/EmployeeInterface.html":{}}}],["src/employee/model/attendence.model.ts",{"_index":250,"title":{},"body":{"classes/Attendence.html":{},"miscellaneous/variables.html":{}}}],["src/employee/model/attendence.model.ts:11",{"_index":263,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/attendence.model.ts:14",{"_index":259,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/attendence.model.ts:17",{"_index":265,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/attendence.model.ts:20",{"_index":269,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/attendence.model.ts:23",{"_index":268,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/attendence.model.ts:26",{"_index":267,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/emp",{"_index":2007,"title":{},"body":{"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"miscellaneous/variables.html":{}}}],["src/employee/model/employee.model",{"_index":2086,"title":{},"body":{"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{}}}],["src/employee/model/employee.model.ts",{"_index":1945,"title":{},"body":{"classes/Employee.html":{},"miscellaneous/variables.html":{}}}],["src/employee/model/employee.model.ts:13",{"_index":1954,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:16",{"_index":1958,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:19",{"_index":1959,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:22",{"_index":1952,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:25",{"_index":1950,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:28",{"_index":1955,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:31",{"_index":1953,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:34",{"_index":1948,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:37",{"_index":1956,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:40",{"_index":1951,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:43",{"_index":1949,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:46",{"_index":1957,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/service/attendence.service.ts",{"_index":343,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["src/employee/service/attendence.service.ts:16",{"_index":352,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["src/employee/service/attendence.service.ts:30",{"_index":355,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["src/employee/service/attendence.service.ts:38",{"_index":360,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["src/employee/service/attendence.service.ts:46",{"_index":357,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["src/employee/service/attendence.service.ts:54",{"_index":366,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["src/employee/service/attendence.service.ts:72",{"_index":363,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["src/employee/service/attendence.service.ts:9",{"_index":349,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["src/employee/service/employee",{"_index":1911,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["src/employee/service/employee.service",{"_index":2207,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{},"injectables/OrderService.html":{},"injectables/SpendingAuthService.html":{},"injectables/TakeAwayService.html":{}}}],["src/employee/service/employee.service.ts",{"_index":2027,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:101",{"_index":2049,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:12",{"_index":2034,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:121",{"_index":2053,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:141",{"_index":2036,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:154",{"_index":2038,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:167",{"_index":2052,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:19",{"_index":2040,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:40",{"_index":2042,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:48",{"_index":2045,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:56",{"_index":2044,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:64",{"_index":2047,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/employee.service.ts:74",{"_index":2051,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["src/employee/service/monthly",{"_index":2944,"title":{},"body":{"injectables/PdrService.html":{}}}],["src/location/dto/create",{"_index":997,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["src/location/dto/update",{"_index":4036,"title":{},"body":{"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["src/location/interface/location.interface",{"_index":342,"title":{},"body":{"interfaces/AttendenceInterface.html":{},"interfaces/CustomerLocationsInterface.html":{},"interfaces/SupplierInterface.html":{}}}],["src/location/interface/location.interface.ts",{"_index":849,"title":{},"body":{"classes/CoordinatesInteface.html":{},"interfaces/LocationInterface.html":{}}}],["src/location/interface/location.interface.ts:2",{"_index":851,"title":{},"body":{"classes/CoordinatesInteface.html":{}}}],["src/location/interface/location.interface.ts:4",{"_index":850,"title":{},"body":{"classes/CoordinatesInteface.html":{}}}],["src/location/location.controller.ts",{"_index":2227,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.module",{"_index":1714,"title":{},"body":{"modules/CustomerModule.html":{},"modules/EmployeeModule.html":{},"modules/SupplierModule.html":{},"modules/UsersModule.html":{}}}],["src/location/location.module.ts",{"_index":2235,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/location/location.service.ts",{"_index":2239,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:12",{"_index":2245,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:8",{"_index":2242,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/model/location.model",{"_index":273,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/CustomerLocations.html":{},"classes/Employee.html":{},"classes/Supplier.html":{},"classes/UpdateEmployeeDto.html":{}}}],["src/location/model/location.model.ts",{"_index":831,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"miscellaneous/variables.html":{}}}],["src/location/model/location.model.ts:15",{"_index":2223,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:18",{"_index":2219,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:21",{"_index":2217,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:24",{"_index":2221,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:27",{"_index":2224,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:30",{"_index":2225,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:33",{"_index":2216,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:36",{"_index":2222,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:39",{"_index":2220,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:4",{"_index":835,"title":{},"body":{"classes/Coordinates.html":{}}}],["src/location/model/location.model.ts:42",{"_index":2218,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:7",{"_index":834,"title":{},"body":{"classes/Coordinates.html":{}}}],["src/mail/mail.controller.ts",{"_index":2251,"title":{},"body":{"controllers/MailController.html":{}}}],["src/mail/mail.module",{"_index":2356,"title":{},"body":{"modules/NotificationsModule.html":{},"modules/UsersModule.html":{}}}],["src/mail/mail.module.ts",{"_index":2259,"title":{},"body":{"modules/MailModule.html":{}}}],["src/mail/mail.service",{"_index":3151,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["src/mail/mail.service.ts",{"_index":2261,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:11",{"_index":2270,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:46",{"_index":2268,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/mail.service.ts:9",{"_index":2265,"title":{},"body":{"injectables/MailService.html":{}}}],["src/mail/type/sendmail",{"_index":3150,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{},"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":4636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/material/dto/create",{"_index":1351,"title":{},"body":{"classes/CreateMaterialDto.html":{}}}],["src/material/dto/update",{"_index":4103,"title":{},"body":{"classes/UpdateMaterialDto.html":{}}}],["src/material/enums/measure",{"_index":4577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/material/material.controller.ts",{"_index":2314,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:13",{"_index":2316,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:18",{"_index":2317,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:23",{"_index":2318,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:28",{"_index":2321,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:33",{"_index":2319,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.module.ts",{"_index":2334,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/material/material.service.ts",{"_index":2336,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:11",{"_index":2338,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:15",{"_index":2339,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:19",{"_index":2341,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:23",{"_index":2340,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:7",{"_index":2337,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/model/material.model.ts",{"_index":2306,"title":{},"body":{"classes/Material.html":{}}}],["src/material/model/material.model.ts:10",{"_index":2309,"title":{},"body":{"classes/Material.html":{}}}],["src/material/model/material.model.ts:7",{"_index":2310,"title":{},"body":{"classes/Material.html":{}}}],["src/notifications/controller/notifications.controller.ts",{"_index":2344,"title":{},"body":{"controllers/NotificationsController.html":{}}}],["src/notifications/dto/create",{"_index":1354,"title":{},"body":{"classes/CreateNotificationDto.html":{}}}],["src/notifications/dto/update",{"_index":4105,"title":{},"body":{"classes/UpdateNotificationDto.html":{}}}],["src/notifications/model/notification.entity.ts",{"_index":2342,"title":{},"body":{"classes/Notification.html":{}}}],["src/notifications/notifications.module.ts",{"_index":2352,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["src/notifications/service/email.service.ts",{"_index":1883,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/notifications/service/notifications.service.ts",{"_index":2357,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/service/notifications.service.ts:11",{"_index":2360,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/service/notifications.service.ts:15",{"_index":2361,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/service/notifications.service.ts:19",{"_index":2364,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/service/notifications.service.ts:23",{"_index":2362,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/notifications/service/notifications.service.ts:7",{"_index":2359,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["src/offers/dto/create",{"_index":1357,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["src/offers/dto/update",{"_index":4107,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["src/offers/interface/offer.interface.ts",{"_index":2379,"title":{},"body":{"interfaces/OfferInterface.html":{}}}],["src/offers/model/offer.model",{"_index":2503,"title":{},"body":{"classes/Order.html":{}}}],["src/offers/model/offer.model.ts",{"_index":2366,"title":{},"body":{"classes/Offer.html":{},"miscellaneous/variables.html":{}}}],["src/offers/model/offer.model.ts:12",{"_index":2367,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:15",{"_index":2368,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:18",{"_index":2373,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:21",{"_index":2372,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:24",{"_index":2369,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:27",{"_index":2371,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:9",{"_index":2370,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/offers.controller.ts",{"_index":2381,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:22",{"_index":2384,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:27",{"_index":2385,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:32",{"_index":2390,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:37",{"_index":2388,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:42",{"_index":2393,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:47",{"_index":2391,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.module",{"_index":2641,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/offers/offers.module.ts",{"_index":2411,"title":{},"body":{"modules/OffersModule.html":{}}}],["src/offers/offers.service",{"_index":2697,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/offers/offers.service.ts",{"_index":2416,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:10",{"_index":2427,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:104",{"_index":2439,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:124",{"_index":2442,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:16",{"_index":2430,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:38",{"_index":2432,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:46",{"_index":2436,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:54",{"_index":2446,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:67",{"_index":2434,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:75",{"_index":2449,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:96",{"_index":2444,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/order/controller/delivery.controller.ts",{"_index":1774,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["src/order/controller/delivery.controller.ts:19",{"_index":1786,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["src/order/controller/delivery.controller.ts:35",{"_index":1790,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["src/order/controller/delivery.controller.ts:43",{"_index":1782,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["src/order/controller/delivery.controller.ts:51",{"_index":1794,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["src/order/controller/dine",{"_index":1857,"title":{},"body":{"controllers/DineInController.html":{}}}],["src/order/controller/online.controller.ts",{"_index":2474,"title":{},"body":{"controllers/OnlineController.html":{}}}],["src/order/controller/order.controller.ts",{"_index":2558,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:13",{"_index":2572,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:22",{"_index":2584,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:27",{"_index":2587,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:32",{"_index":2590,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:37",{"_index":2579,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:42",{"_index":2576,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:47",{"_index":2595,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:52",{"_index":2593,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:57",{"_index":2582,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:62",{"_index":2573,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:67",{"_index":2596,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/order.controller.ts:72",{"_index":2598,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/controller/take",{"_index":3781,"title":{},"body":{"controllers/TakeAwayController.html":{}}}],["src/order/dto/base",{"_index":1004,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["src/order/dto/delivery/create",{"_index":1151,"title":{},"body":{"classes/CreateDeliveryOrderDto.html":{}}}],["src/order/dto/delivery/update",{"_index":4038,"title":{},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["src/order/dto/dinein/create",{"_index":1195,"title":{},"body":{"classes/CreateDineInOrderDto.html":{}}}],["src/order/dto/order",{"_index":1375,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["src/order/dto/takeaway/create",{"_index":1523,"title":{},"body":{"classes/CreateTakeAwayOrderDto.html":{}}}],["src/order/enums/order",{"_index":4580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/order/guards/is",{"_index":2202,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["src/order/interface/order.interface.ts",{"_index":2621,"title":{},"body":{"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{}}}],["src/order/model/delivery.model.ts",{"_index":1820,"title":{},"body":{"classes/DeliveryOrder.html":{},"miscellaneous/variables.html":{}}}],["src/order/model/delivery.model.ts:12",{"_index":1827,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["src/order/model/delivery.model.ts:15",{"_index":1822,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["src/order/model/delivery.model.ts:18",{"_index":1823,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["src/order/model/delivery.model.ts:25",{"_index":1824,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["src/order/model/delivery.model.ts:28",{"_index":1828,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["src/order/model/delivery.model.ts:31",{"_index":1821,"title":{},"body":{"classes/DeliveryOrder.html":{}}}],["src/order/model/dinein.model.ts",{"_index":1872,"title":{},"body":{"classes/DineinOrder.html":{},"miscellaneous/variables.html":{}}}],["src/order/model/dinein.model.ts:12",{"_index":1879,"title":{},"body":{"classes/DineinOrder.html":{}}}],["src/order/model/dinein.model.ts:6",{"_index":1875,"title":{},"body":{"classes/DineinOrder.html":{}}}],["src/order/model/dinein.model.ts:9",{"_index":1878,"title":{},"body":{"classes/DineinOrder.html":{}}}],["src/order/model/order",{"_index":2623,"title":{},"body":{"classes/OrderItems.html":{},"miscellaneous/variables.html":{}}}],["src/order/model/order.model",{"_index":2781,"title":{},"body":{"classes/Payment.html":{}}}],["src/order/model/order.model.ts",{"_index":2480,"title":{},"body":{"classes/Order.html":{},"miscellaneous/variables.html":{}}}],["src/order/model/order.model.ts:18",{"_index":2490,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:21",{"_index":2492,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:24",{"_index":2486,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:30",{"_index":2496,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:33",{"_index":2498,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:36",{"_index":2500,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:39",{"_index":2497,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:42",{"_index":2494,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:45",{"_index":2487,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:48",{"_index":2485,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:51",{"_index":2488,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:54",{"_index":2495,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:57",{"_index":2493,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:60",{"_index":2489,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/takeaway.model.ts",{"_index":3791,"title":{},"body":{"classes/TakeAwayOrder.html":{},"miscellaneous/variables.html":{}}}],["src/order/model/takeaway.model.ts:6",{"_index":3793,"title":{},"body":{"classes/TakeAwayOrder.html":{}}}],["src/order/order.module",{"_index":2824,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/order/order.module.ts",{"_index":2638,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/service/delivery.service.ts",{"_index":1836,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["src/order/service/delivery.service.ts:15",{"_index":1839,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["src/order/service/delivery.service.ts:20",{"_index":1843,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["src/order/service/dine",{"_index":1870,"title":{},"body":{"injectables/DineInService.html":{}}}],["src/order/service/online.service.ts",{"_index":2478,"title":{},"body":{"injectables/OnlineService.html":{}}}],["src/order/service/online.service.ts:7",{"_index":2479,"title":{},"body":{"injectables/OnlineService.html":{}}}],["src/order/service/order.service",{"_index":775,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaypalService-1.html":{}}}],["src/order/service/order.service.ts",{"_index":2658,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:152",{"_index":2676,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:160",{"_index":2694,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:180",{"_index":2685,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:191",{"_index":2690,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:202",{"_index":2677,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:21",{"_index":2670,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:213",{"_index":2678,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:224",{"_index":2680,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:235",{"_index":2687,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:246",{"_index":2689,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:257",{"_index":2692,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:268",{"_index":2682,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:279",{"_index":2684,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:300",{"_index":2672,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:327",{"_index":2674,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:34",{"_index":2675,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/order.service.ts:348",{"_index":2695,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/service/take",{"_index":3795,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["src/payment/dto/cash/update",{"_index":4001,"title":{},"body":{"classes/UpdateCashPaymentDto.html":{}}}],["src/payment/dto/create",{"_index":1034,"title":{},"body":{"classes/CreateBasePaymentDto.html":{}}}],["src/payment/dto/paypal/update",{"_index":4121,"title":{},"body":{"classes/UpdatePayPalPaymentDto.html":{}}}],["src/payment/dto/update",{"_index":4125,"title":{},"body":{"classes/UpdatePaymentDto.html":{}}}],["src/payment/enums/payment",{"_index":4583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/payment/interface/cash/create",{"_index":1077,"title":{},"body":{"interfaces/CreateCashPaymentInterface.html":{}}}],["src/payment/interface/cash/update",{"_index":4008,"title":{},"body":{"interfaces/UpdateCashPaymentInterface.html":{}}}],["src/payment/interface/create",{"_index":1051,"title":{},"body":{"interfaces/CreateBasePaymentInterface.html":{}}}],["src/payment/interface/paypal/update",{"_index":4124,"title":{},"body":{"interfaces/UpdatePayPalPaymentInterface.html":{}}}],["src/payment/interface/update",{"_index":3991,"title":{},"body":{"interfaces/UpdateBasePaymentInterface.html":{}}}],["src/payment/model/cash.payment.model.ts",{"_index":741,"title":{},"body":{"classes/CashPayment.html":{},"miscellaneous/variables.html":{}}}],["src/payment/model/cash.payment.model.ts:11",{"_index":743,"title":{},"body":{"classes/CashPayment.html":{}}}],["src/payment/model/cash.payment.model.ts:8",{"_index":748,"title":{},"body":{"classes/CashPayment.html":{}}}],["src/payment/model/payment.model.ts",{"_index":2773,"title":{},"body":{"classes/Payment.html":{},"miscellaneous/variables.html":{}}}],["src/payment/model/payment.model.ts:18",{"_index":2779,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:21",{"_index":2778,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:24",{"_index":2774,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:32",{"_index":2777,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:35",{"_index":2775,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:38",{"_index":2776,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/paypal.payment.model.ts",{"_index":2766,"title":{},"body":{"classes/PayPalPayment.html":{},"miscellaneous/variables.html":{}}}],["src/payment/model/paypal.payment.model.ts:6",{"_index":2770,"title":{},"body":{"classes/PayPalPayment.html":{}}}],["src/payment/model/paypal.payment.model.ts:9",{"_index":2768,"title":{},"body":{"classes/PayPalPayment.html":{}}}],["src/payment/payment.controller.ts",{"_index":2790,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:31",{"_index":2795,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:47",{"_index":2798,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:62",{"_index":2799,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:67",{"_index":2800,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:72",{"_index":2801,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.module.ts",{"_index":2820,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/payment/service/cash.service.ts",{"_index":755,"title":{},"body":{"injectables/CashService.html":{}}}],["src/payment/service/cash.service.ts:12",{"_index":761,"title":{},"body":{"injectables/CashService.html":{}}}],["src/payment/service/cash.service.ts:19",{"_index":765,"title":{},"body":{"injectables/CashService.html":{}}}],["src/payment/service/cash.service.ts:38",{"_index":768,"title":{},"body":{"injectables/CashService.html":{}}}],["src/payment/service/payment.service.ts",{"_index":2826,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/service/payment.service.ts:12",{"_index":2828,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/service/payment.service.ts:20",{"_index":2829,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/service/payment.service.ts:28",{"_index":2830,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/service/payment.service.ts:7",{"_index":2827,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/service/paypal.service.ts",{"_index":2913,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["src/payment/service/paypal.service.ts:11",{"_index":2916,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["src/payment/service/paypal.service.ts:18",{"_index":2918,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["src/payment/service/paypal.service.ts:35",{"_index":2921,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["src/paypal/paypal.controller.ts",{"_index":2835,"title":{},"body":{"controllers/PaypalController.html":{}}}],["src/paypal/paypal.controller.ts:11",{"_index":2839,"title":{},"body":{"controllers/PaypalController.html":{}}}],["src/paypal/paypal.controller.ts:17",{"_index":2842,"title":{},"body":{"controllers/PaypalController.html":{}}}],["src/paypal/paypal.module.ts",{"_index":2852,"title":{},"body":{"modules/PaypalModule.html":{}}}],["src/paypal/paypal.service.ts",{"_index":2854,"title":{},"body":{"injectables/PaypalService.html":{}}}],["src/paypal/paypal.service.ts:11",{"_index":2863,"title":{},"body":{"injectables/PaypalService.html":{}}}],["src/paypal/paypal.service.ts:34",{"_index":2865,"title":{},"body":{"injectables/PaypalService.html":{}}}],["src/paypal/paypal.service.ts:47",{"_index":2862,"title":{},"body":{"injectables/PaypalService.html":{}}}],["src/paypal/paypal.service.ts:73",{"_index":2860,"title":{},"body":{"injectables/PaypalService.html":{}}}],["src/paypal/paypal.service.ts:9",{"_index":2869,"title":{},"body":{"injectables/PaypalService.html":{}}}],["src/product/dto/create",{"_index":1395,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/product/dto/update",{"_index":4129,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["src/product/enums/product",{"_index":1391,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"miscellaneous/enumerations.html":{}}}],["src/product/enums/size.enum.ts",{"_index":4591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/product/interface/product.interface.ts",{"_index":3017,"title":{},"body":{"interfaces/ProductInterface.html":{}}}],["src/product/model/product.model",{"_index":2374,"title":{},"body":{"classes/Offer.html":{},"classes/OrderItems.html":{}}}],["src/product/model/product.model.ts",{"_index":2964,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["src/product/model/product.model.ts:12",{"_index":2972,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:15",{"_index":2973,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:18",{"_index":2974,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:21",{"_index":2965,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:24",{"_index":2967,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:27",{"_index":2977,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:30",{"_index":2976,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:33",{"_index":2968,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:36",{"_index":2969,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:39",{"_index":2975,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:42",{"_index":2966,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:45",{"_index":2971,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:48",{"_index":2970,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":2980,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:26",{"_index":2991,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:32",{"_index":2994,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:45",{"_index":2984,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:51",{"_index":2986,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:57",{"_index":2988,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:63",{"_index":2999,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:69",{"_index":2996,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module",{"_index":2414,"title":{},"body":{"modules/OffersModule.html":{},"modules/OrderModule.html":{}}}],["src/product/product.module.ts",{"_index":3022,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service",{"_index":2450,"title":{},"body":{"injectables/OffersService.html":{},"injectables/OrderService.html":{}}}],["src/product/product.service.ts",{"_index":3025,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:103",{"_index":3059,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:11",{"_index":3040,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:122",{"_index":3063,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:143",{"_index":3070,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:167",{"_index":3043,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:17",{"_index":3046,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:188",{"_index":3050,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:207",{"_index":3072,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:229",{"_index":3068,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:30",{"_index":3048,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:38",{"_index":3065,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:50",{"_index":3053,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:58",{"_index":3055,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:69",{"_index":3057,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:83",{"_index":3061,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/stock/controller/stock",{"_index":3328,"title":{},"body":{"controllers/StockGardController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["src/stock/controller/stock.controller.ts",{"_index":3289,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:22",{"_index":3292,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:27",{"_index":3293,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:32",{"_index":3294,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:37",{"_index":3298,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:44",{"_index":3302,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:54",{"_index":3300,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/dto/stock",{"_index":1464,"title":{},"body":{"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["src/stock/dto/stock/create",{"_index":1449,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["src/stock/dto/stock/update",{"_index":4153,"title":{},"body":{"classes/UpdateStockDto.html":{}}}],["src/stock/enums/stock",{"_index":1487,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"miscellaneous/enumerations.html":{}}}],["src/stock/interfaces/stock",{"_index":3361,"title":{},"body":{"interfaces/StockGardInterface.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{}}}],["src/stock/interfaces/stock.interface.ts",{"_index":3415,"title":{},"body":{"interfaces/StockInterface.html":{}}}],["src/stock/model/stock",{"_index":3319,"title":{},"body":{"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"miscellaneous/variables.html":{}}}],["src/stock/model/stock.model.ts",{"_index":3276,"title":{},"body":{"classes/Stock.html":{},"miscellaneous/variables.html":{}}}],["src/stock/model/stock.model.ts:15",{"_index":3278,"title":{},"body":{"classes/Stock.html":{}}}],["src/stock/model/stock.model.ts:18",{"_index":3282,"title":{},"body":{"classes/Stock.html":{}}}],["src/stock/model/stock.model.ts:21",{"_index":3280,"title":{},"body":{"classes/Stock.html":{}}}],["src/stock/service/stock",{"_index":3365,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemQuantityService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{}}}],["src/stock/service/stock.service.ts",{"_index":3558,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:111",{"_index":3575,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:125",{"_index":3572,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:17",{"_index":3563,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:26",{"_index":3565,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:42",{"_index":3568,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:54",{"_index":3569,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:62",{"_index":3570,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:70",{"_index":3571,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/stock.module.ts",{"_index":3543,"title":{},"body":{"modules/StockModule.html":{}}}],["src/supplier/dto/create",{"_index":1508,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["src/supplier/dto/update",{"_index":4192,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["src/supplier/interface/supplier.interface.ts",{"_index":3746,"title":{},"body":{"interfaces/SupplierInterface.html":{}}}],["src/supplier/model/supplier.model.ts",{"_index":3717,"title":{},"body":{"classes/Supplier.html":{},"miscellaneous/variables.html":{}}}],["src/supplier/model/supplier.model.ts:10",{"_index":3720,"title":{},"body":{"classes/Supplier.html":{}}}],["src/supplier/model/supplier.model.ts:13",{"_index":3718,"title":{},"body":{"classes/Supplier.html":{}}}],["src/supplier/model/supplier.model.ts:7",{"_index":3719,"title":{},"body":{"classes/Supplier.html":{}}}],["src/supplier/supplier.controller.ts",{"_index":3724,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:28",{"_index":3727,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:33",{"_index":3728,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:38",{"_index":3729,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:43",{"_index":3732,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:51",{"_index":3730,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.module.ts",{"_index":3750,"title":{},"body":{"modules/SupplierModule.html":{}}}],["src/supplier/supplier.service.ts",{"_index":3754,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:13",{"_index":3761,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:22",{"_index":3763,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:30",{"_index":3765,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:38",{"_index":3771,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:52",{"_index":3768,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:8",{"_index":3758,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/ticket/controller/ticket",{"_index":3910,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["src/ticket/controller/ticket.controller.ts",{"_index":3825,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/controller/ticket.controller.ts:27",{"_index":3828,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/controller/ticket.controller.ts:41",{"_index":3829,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/controller/ticket.controller.ts:46",{"_index":3830,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/controller/ticket.controller.ts:52",{"_index":3838,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/controller/ticket.controller.ts:65",{"_index":3835,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/controller/ticket.controller.ts:71",{"_index":3832,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/dto/create",{"_index":1526,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{}}}],["src/ticket/dto/update",{"_index":4199,"title":{},"body":{"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["src/ticket/enums/ticket",{"_index":1960,"title":{},"body":{"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeService.html":{},"miscellaneous/enumerations.html":{}}}],["src/ticket/interface/ticket",{"_index":3938,"title":{},"body":{"interfaces/TicketUpdatesInterface.html":{}}}],["src/ticket/interface/ticket.interface.ts",{"_index":3856,"title":{},"body":{"interfaces/TicketInterface.html":{}}}],["src/ticket/models/ticket",{"_index":3903,"title":{},"body":{"classes/TicketUpdates.html":{},"miscellaneous/variables.html":{}}}],["src/ticket/models/ticket.model.ts",{"_index":3809,"title":{},"body":{"classes/Ticket.html":{},"miscellaneous/variables.html":{}}}],["src/ticket/models/ticket.model.ts:13",{"_index":3817,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:16",{"_index":3812,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:19",{"_index":3810,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:22",{"_index":3815,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:25",{"_index":3811,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:28",{"_index":3816,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:31",{"_index":3813,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/service/ticket",{"_index":3940,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["src/ticket/service/ticket.service.ts",{"_index":3875,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/service/ticket.service.ts:11",{"_index":3880,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/service/ticket.service.ts:18",{"_index":3884,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/service/ticket.service.ts:33",{"_index":3885,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/service/ticket.service.ts:41",{"_index":3886,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/service/ticket.service.ts:49",{"_index":3891,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/service/ticket.service.ts:74",{"_index":3883,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/service/ticket.service.ts:85",{"_index":3888,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.module.ts",{"_index":3864,"title":{},"body":{"modules/TicketModule.html":{}}}],["src/users/controller/users.controller.ts",{"_index":4257,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:35",{"_index":4267,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:40",{"_index":4268,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:45",{"_index":4269,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:50",{"_index":4283,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:55",{"_index":4265,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:61",{"_index":4274,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:66",{"_index":4280,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:76",{"_index":4276,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/controller/users.controller.ts:83",{"_index":4271,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/dto/change",{"_index":824,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{}}}],["src/users/dto/create",{"_index":1579,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["src/users/dto/update",{"_index":4137,"title":{},"body":{"classes/UpdateRefreshDto.html":{},"classes/UpdateUserDto.html":{}}}],["src/users/enums/account",{"_index":484,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/enums/sex.enum",{"_index":1249,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{}}}],["src/users/enums/sex.enum.ts",{"_index":4609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/interfaces/user.interface",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":4255,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["src/users/model/reset",{"_index":3105,"title":{},"body":{"classes/ResetPassword.html":{},"miscellaneous/variables.html":{}}}],["src/users/model/user.model",{"_index":75,"title":{},"body":{"injectables/ATStrategy.html":{},"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Customer.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeTransactions.html":{},"injectables/GoogleService.html":{},"classes/Order.html":{},"classes/Payment.html":{},"classes/SpendingAuthorization.html":{},"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{}}}],["src/users/model/user.model.ts",{"_index":4239,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["src/users/model/user.model.ts:10",{"_index":4250,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:13",{"_index":4242,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:16",{"_index":4246,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:19",{"_index":4248,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:22",{"_index":4247,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:25",{"_index":4249,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:28",{"_index":4243,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:31",{"_index":4244,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:34",{"_index":4245,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/verify",{"_index":4444,"title":{},"body":{"classes/VerifyUserEmail.html":{},"miscellaneous/variables.html":{}}}],["src/users/service/reset",{"_index":3114,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["src/users/service/users.service",{"_index":76,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CustomerService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockTransactionService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{}}}],["src/users/service/users.service.ts",{"_index":4321,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:104",{"_index":4349,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:116",{"_index":4359,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:12",{"_index":4334,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:124",{"_index":4344,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:135",{"_index":4338,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:15",{"_index":4355,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:150",{"_index":4362,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:165",{"_index":4357,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:178",{"_index":4339,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:188",{"_index":4341,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:24",{"_index":4345,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:37",{"_index":4350,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:45",{"_index":4353,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:53",{"_index":4347,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:65",{"_index":4352,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:72",{"_index":4365,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:83",{"_index":4364,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/users.service.ts:91",{"_index":4368,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/service/verify",{"_index":4402,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["src/users/users.module",{"_index":430,"title":{},"body":{"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CustomerModule.html":{},"modules/EmployeeModule.html":{},"modules/PaymentModule.html":{},"modules/StockModule.html":{},"modules/TicketModule.html":{}}}],["src/users/users.module.ts",{"_index":4312,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/wallet/dto/create",{"_index":1586,"title":{},"body":{"classes/CreateWalletDto.html":{}}}],["src/wallet/dto/update",{"_index":4236,"title":{},"body":{"classes/UpdateWalletDto.html":{}}}],["src/wallet/model/wallet.entity.ts",{"_index":4451,"title":{},"body":{"classes/Wallet.html":{}}}],["src/wallet/wallet.controller.ts",{"_index":4453,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:21",{"_index":4455,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:26",{"_index":4456,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:31",{"_index":4457,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:36",{"_index":4459,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.controller.ts:41",{"_index":4458,"title":{},"body":{"controllers/WalletController.html":{}}}],["src/wallet/wallet.module.ts",{"_index":4471,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/wallet/wallet.service.ts",{"_index":4473,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:11",{"_index":4475,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:15",{"_index":4476,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:19",{"_index":4478,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:23",{"_index":4477,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/wallet/wallet.service.ts:7",{"_index":4474,"title":{},"body":{"injectables/WalletService.html":{}}}],["ssid",{"_index":1210,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/UpdateEmployeeDto.html":{}}}],["staff",{"_index":4629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["staff_use",{"_index":4621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":4660,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":4663,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":4665,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":4639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["started",{"_index":4643,"title":{"index.html":{}},"body":{}}],["starter",{"_index":4653,"title":{},"body":{"index.html":{}}}],["status",{"_index":826,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"injectables/OrderService.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateTicketDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"injectables/UsersService.html":{}}}],["status.dto",{"_index":4370,"title":{},"body":{"injectables/UsersService.html":{}}}],["status.dto.ts",{"_index":825,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{}}}],["status.dto.ts:7",{"_index":828,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{}}}],["status.enum",{"_index":1445,"title":{},"body":{"classes/CreateSpendingAuthDto.html":{},"classes/CreateTicketDto.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateTicketDto.html":{}}}],["status.enum.ts",{"_index":4539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status.enums",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangeUserStatusDTO.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateDeliveryOrderDto.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/TakeAwayService.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"injectables/UsersService.html":{}}}],["status.enums.ts",{"_index":4513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status/:transaction_id",{"_index":3623,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["stay",{"_index":4685,"title":{},"body":{"index.html":{}}}],["stock",{"_index":1455,"title":{"classes/Stock.html":{}},"body":{"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateTransactionDto.html":{},"injectables/OrderService.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["stock.dto",{"_index":3306,"title":{},"body":{"controllers/StockController.html":{},"classes/UpdateStockDto.html":{}}}],["stock.dto.ts",{"_index":1450,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/UpdateStockDto.html":{}}}],["stock.dto.ts:13",{"_index":4156,"title":{},"body":{"classes/UpdateStockDto.html":{}}}],["stock.dto.ts:20",{"_index":1452,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["stock.dto.ts:31",{"_index":1460,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["stock.items.foreach((log",{"_index":3596,"title":{},"body":{"injectables/StockService.html":{}}}],["stock.name",{"_index":3554,"title":{},"body":{"modules/StockModule.html":{}}}],["stock.service",{"_index":3670,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["stock/stock.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["stock_id",{"_index":3332,"title":{},"body":{"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["stock_item",{"_index":1503,"title":{},"body":{"classes/CreateStockItemQuantityDto.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockItemQuantityDto.html":{}}}],["stockcontroller",{"_index":3288,"title":{"controllers/StockController.html":{}},"body":{"controllers/StockController.html":{},"modules/StockModule.html":{}}}],["stockgard",{"_index":3279,"title":{"classes/StockGard.html":{}},"body":{"classes/Stock.html":{},"classes/StockGard.html":{},"injectables/StockGardService.html":{},"modules/StockModule.html":{}}}],["stockgard.name",{"_index":3557,"title":{},"body":{"modules/StockModule.html":{}}}],["stockgardcontroller",{"_index":3327,"title":{"controllers/StockGardController.html":{}},"body":{"controllers/StockGardController.html":{},"modules/StockModule.html":{}}}],["stockgardinterface",{"_index":3360,"title":{"interfaces/StockGardInterface.html":{}},"body":{"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{}}}],["stockgardrepo",{"_index":3375,"title":{},"body":{"injectables/StockGardService.html":{}}}],["stockgardschema",{"_index":3325,"title":{},"body":{"classes/StockGard.html":{},"modules/StockModule.html":{},"miscellaneous/variables.html":{}}}],["stockgardservice",{"_index":3345,"title":{"injectables/StockGardService.html":{}},"body":{"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"modules/StockModule.html":{},"overview.html":{}}}],["stockid",{"_index":3299,"title":{},"body":{"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockService.html":{}}}],["stockinterface",{"_index":3414,"title":{"interfaces/StockInterface.html":{}},"body":{"interfaces/StockInterface.html":{},"injectables/StockService.html":{}}}],["stockitem",{"_index":3418,"title":{"classes/StockItem.html":{}},"body":{"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{}}}],["stockitem.name",{"_index":3488,"title":{},"body":{"classes/StockItemQuantity.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{}}}],["stockitemcategory",{"_index":1476,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/StockItem.html":{},"interfaces/StockItemInterface.html":{},"classes/UpdateStockItemDto.html":{},"miscellaneous/enumerations.html":{}}}],["stockitemcategory})@isnotempty()@isenum(stockitemcategory)@isstring",{"_index":1477,"title":{},"body":{"classes/CreateStockItemDto.html":{}}}],["stockitemcategory})@isoptional()@isenum(stockitemcategory)@isstring",{"_index":4163,"title":{},"body":{"classes/UpdateStockItemDto.html":{}}}],["stockitemcontroller",{"_index":3426,"title":{"controllers/StockItemController.html":{}},"body":{"controllers/StockItemController.html":{},"modules/StockModule.html":{}}}],["stockiteminterface",{"_index":3441,"title":{"interfaces/StockItemInterface.html":{}},"body":{"interfaces/StockItemInterface.html":{},"injectables/StockItemService.html":{}}}],["stockitemlogrepo",{"_index":3467,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{}}}],["stockitemlogscontroller",{"_index":3443,"title":{"controllers/StockItemLogsController.html":{}},"body":{"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{}}}],["stockitemlogserivce",{"_index":3654,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["stockitemlogsinterface",{"_index":3416,"title":{"interfaces/StockItemLogsInterface.html":{}},"body":{"interfaces/StockInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["stockitemlogsservice",{"_index":3453,"title":{"injectables/StockItemLogsService.html":{}},"body":{"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{},"overview.html":{}}}],["stockitemquantity",{"_index":3322,"title":{"classes/StockItemQuantity.html":{}},"body":{"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"classes/StockTransaction.html":{}}}],["stockitemquantity.name",{"_index":3555,"title":{},"body":{"modules/StockModule.html":{}}}],["stockitemquantityinterface",{"_index":3363,"title":{"interfaces/StockItemQuantityInterface.html":{}},"body":{"interfaces/StockGardInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{}}}],["stockitemquantityschema",{"_index":3489,"title":{},"body":{"classes/StockItemQuantity.html":{},"modules/StockModule.html":{},"miscellaneous/variables.html":{}}}],["stockitemquantityservice",{"_index":3492,"title":{"injectables/StockItemQuantityService.html":{}},"body":{"injectables/StockItemQuantityService.html":{},"modules/StockModule.html":{},"overview.html":{}}}],["stockitemrepo",{"_index":3500,"title":{},"body":{"injectables/StockItemService.html":{}}}],["stockitems",{"_index":3503,"title":{},"body":{"injectables/StockItemService.html":{}}}],["stockitems.length",{"_index":3523,"title":{},"body":{"injectables/StockItemService.html":{}}}],["stockitemschema",{"_index":3424,"title":{},"body":{"classes/StockItem.html":{},"modules/StockModule.html":{},"miscellaneous/variables.html":{}}}],["stockitemservice",{"_index":3373,"title":{"injectables/StockItemService.html":{}},"body":{"injectables/StockGardService.html":{},"controllers/StockItemController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{},"overview.html":{}}}],["stockitemslogs",{"_index":3281,"title":{"classes/StockItemslogs.html":{}},"body":{"classes/Stock.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{}}}],["stockitemslogs.name",{"_index":3556,"title":{},"body":{"modules/StockModule.html":{}}}],["stockitemslogsschema",{"_index":3536,"title":{},"body":{"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"miscellaneous/variables.html":{}}}],["stocklogdata",{"_index":3583,"title":{},"body":{"injectables/StockService.html":{}}}],["stockmodule",{"_index":175,"title":{"modules/StockModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StockModule.html":{},"modules.html":{},"overview.html":{}}}],["stockrepo",{"_index":3372,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{}}}],["stockschema",{"_index":3286,"title":{},"body":{"classes/Stock.html":{},"modules/StockModule.html":{},"miscellaneous/variables.html":{}}}],["stockservice",{"_index":3303,"title":{"injectables/StockService.html":{}},"body":{"controllers/StockController.html":{},"controllers/StockGardController.html":{},"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"overview.html":{}}}],["stocktransaction",{"_index":3533,"title":{"classes/StockTransaction.html":{}},"body":{"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{}}}],["stocktransaction.name",{"_index":3535,"title":{},"body":{"classes/StockItemslogs.html":{},"modules/StockModule.html":{}}}],["stocktransactioncontroller",{"_index":3544,"title":{"controllers/StockTransactionController.html":{}},"body":{"modules/StockModule.html":{},"controllers/StockTransactionController.html":{}}}],["stocktransactioninterface",{"_index":3637,"title":{"interfaces/StockTransactionInterface.html":{}},"body":{"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{}}}],["stocktransactionrepo",{"_index":3656,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["stocktransactionschema",{"_index":3546,"title":{},"body":{"modules/StockModule.html":{},"classes/StockTransaction.html":{},"miscellaneous/variables.html":{}}}],["stocktransactionservice",{"_index":3542,"title":{"injectables/StockTransactionService.html":{}},"body":{"modules/StockModule.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"overview.html":{}}}],["stocktransactionstatus",{"_index":3612,"title":{},"body":{"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockTransactionDto.html":{},"miscellaneous/enumerations.html":{}}}],["stocktransactionstatus.compeleted",{"_index":3688,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["stocktransactionstatus.inprogress",{"_index":3616,"title":{},"body":{"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{}}}],["stocktransactiontype",{"_index":1495,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockItemLogsDto.html":{},"miscellaneous/enumerations.html":{}}}],["stocktransactiontype.add",{"_index":3476,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["stocktransactiontype})@isnotempty()@isstring()@isenum(stocktransactiontype",{"_index":1496,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{}}}],["stocktransactiontype})@isoptional()@isstring()@isenum(stocktransactiontype",{"_index":4174,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["strategy",{"_index":70,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["strategy/access",{"_index":433,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":1098,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["street_address",{"_index":842,"title":{},"body":{"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"classes/UpdateLocationDto.html":{}}}],["street_address'})@isstring()@isnotempty",{"_index":1348,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["street_address'})@isstring()@isoptional",{"_index":4100,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["string",{"_index":112,"title":{},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBranchDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"classes/DineinOrder.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"miscellaneous/variables.html":{}}}],["stripecustomer",{"_index":4381,"title":{},"body":{"injectables/UsersService.html":{}}}],["stripecustomer.id",{"_index":4386,"title":{},"body":{"injectables/UsersService.html":{}}}],["stripecustomerid",{"_index":4385,"title":{},"body":{"injectables/UsersService.html":{}}}],["subcategory",{"_index":1404,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["subcategory.enum",{"_index":1435,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["subcategory.enum.ts",{"_index":4535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["subject",{"_index":2300,"title":{},"body":{"injectables/MailService.html":{},"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["subtract",{"_index":2726,"title":{},"body":{"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["subtraction",{"_index":3088,"title":{},"body":{"injectables/ProductService.html":{}}}],["subtractonefromcouponquantity",{"_index":907,"title":{},"body":{"injectables/CouponService.html":{}}}],["subtractonefromcouponquantity(couponid",{"_index":935,"title":{},"body":{"injectables/CouponService.html":{}}}],["subtractonefromofferquantity",{"_index":2423,"title":{},"body":{"injectables/OffersService.html":{}}}],["subtractonefromofferquantity(offer_id",{"_index":2445,"title":{},"body":{"injectables/OffersService.html":{}}}],["subtractproductquantity",{"_index":3037,"title":{},"body":{"injectables/ProductService.html":{}}}],["subtractproductquantity(product_id",{"_index":3069,"title":{},"body":{"injectables/ProductService.html":{}}}],["success",{"_index":3190,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["successfully",{"_index":3693,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["super",{"_index":37,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{}}}],["super.canactivate(context",{"_index":46,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/JWTGuard.html":{}}}],["superuser",{"_index":4601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supervisor",{"_index":3686,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["supplier",{"_index":1510,"title":{"classes/Supplier.html":{}},"body":{"classes/CreateSupplierDto.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/UpdateSupplierDto.html":{}}}],["supplier.controller",{"_index":3751,"title":{},"body":{"modules/SupplierModule.html":{}}}],["supplier.dto",{"_index":3735,"title":{},"body":{"controllers/SupplierController.html":{},"classes/UpdateSupplierDto.html":{}}}],["supplier.dto.ts",{"_index":1509,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["supplier.dto.ts:17",{"_index":1515,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["supplier.dto.ts:20",{"_index":4196,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["supplier.dto.ts:28",{"_index":1519,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["supplier.dto.ts:31",{"_index":4198,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["supplier.dto.ts:37",{"_index":1512,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["supplier.dto.ts:40",{"_index":4194,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["supplier.name",{"_index":3753,"title":{},"body":{"modules/SupplierModule.html":{}}}],["supplier.service",{"_index":3734,"title":{},"body":{"controllers/SupplierController.html":{},"modules/SupplierModule.html":{}}}],["supplier/supplier.module",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["supplier_id",{"_index":3766,"title":{},"body":{"injectables/SupplierService.html":{}}}],["suppliercontroller",{"_index":3723,"title":{"controllers/SupplierController.html":{}},"body":{"controllers/SupplierController.html":{},"modules/SupplierModule.html":{}}}],["supplierinterface",{"_index":3745,"title":{"interfaces/SupplierInterface.html":{}},"body":{"interfaces/SupplierInterface.html":{},"injectables/SupplierService.html":{}}}],["suppliermodule",{"_index":176,"title":{"modules/SupplierModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SupplierModule.html":{},"modules.html":{},"overview.html":{}}}],["supplierrepo",{"_index":3759,"title":{},"body":{"injectables/SupplierService.html":{}}}],["supplierschema",{"_index":3721,"title":{},"body":{"classes/Supplier.html":{},"modules/SupplierModule.html":{},"miscellaneous/variables.html":{}}}],["supplierservice",{"_index":3733,"title":{"injectables/SupplierService.html":{}},"body":{"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"overview.html":{}}}],["supplies",{"_index":1520,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["supplies'})@isnotempty()@isstring",{"_index":1514,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["supplies'})@isoptional()@isstring",{"_index":4195,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["support",{"_index":4678,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":3591,"title":{},"body":{"injectables/StockService.html":{}}}],["svg",{"_index":4696,"title":{},"body":{"modules.html":{}}}],["table_number",{"_index":1197,"title":{},"body":{"classes/CreateDineInOrderDto.html":{},"classes/DineinOrder.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{}}}],["takeaway",{"_index":1524,"title":{},"body":{"classes/CreateTakeAwayOrderDto.html":{},"controllers/TakeAwayController.html":{},"miscellaneous/enumerations.html":{}}}],["takeaway.model",{"_index":2506,"title":{},"body":{"classes/Order.html":{}}}],["takeawaycontroller",{"_index":2639,"title":{"controllers/TakeAwayController.html":{}},"body":{"modules/OrderModule.html":{},"controllers/TakeAwayController.html":{}}}],["takeawayorder",{"_index":2505,"title":{"classes/TakeAwayOrder.html":{}},"body":{"classes/Order.html":{},"modules/OrderModule.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{}}}],["takeawayorder.name",{"_index":2510,"title":{},"body":{"classes/Order.html":{},"modules/OrderModule.html":{},"controllers/TakeAwayController.html":{}}}],["takeawayorderschema",{"_index":2653,"title":{},"body":{"modules/OrderModule.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/variables.html":{}}}],["takeawayservice",{"_index":2637,"title":{"injectables/TakeAwayService.html":{}},"body":{"modules/OrderModule.html":{},"injectables/TakeAwayService.html":{},"overview.html":{}}}],["taken",{"_index":972,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["tax_percent",{"_index":2484,"title":{},"body":{"classes/Order.html":{},"interfaces/OrderInterface.html":{},"interfaces/OrderItemsInterface.html":{}}}],["ten",{"_index":4556,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":4668,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":4672,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":4670,"title":{},"body":{"index.html":{}}}],["tests",{"_index":4667,"title":{},"body":{"index.html":{}}}],["text",{"_index":2302,"title":{},"body":{"injectables/MailService.html":{},"injectables/UsersService.html":{}}}],["thanks",{"_index":4676,"title":{},"body":{"index.html":{}}}],["third",{"_index":1100,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["thirty",{"_index":4562,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["thirtyfive",{"_index":4563,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.addtransactiontostock(transactionobject",{"_index":3689,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.attendencerepo",{"_index":378,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["this.attendencerepo.find",{"_index":382,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["this.attendencerepo.find().exec",{"_index":380,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["this.attendencerepo.findbyid(attend_id).exec",{"_index":381,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["this.attendencerepo.findbyidanddelete(attendenceid",{"_index":387,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["this.attendencerepo.findbyidandupdate",{"_index":386,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["this.attendservice.create(data",{"_index":327,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["this.attendservice.findall",{"_index":328,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["this.attendservice.findbyemployeeid(id",{"_index":332,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["this.attendservice.findbyid(id",{"_index":330,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["this.attendservice.removeemployeeattend(attendenceid",{"_index":336,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["this.attendservice.updateemployeeattend",{"_index":334,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["this.authenticationservice.generatetokenandrefresh",{"_index":2154,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.authservice.addoneroletouser(asssignroledto",{"_index":140,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authservice.logout((req",{"_index":422,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.removeonerolefromuser(asssignroledto",{"_index":142,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authservice.signinbyemail(signinbyemaildto",{"_index":418,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.usersignup(createuserdto",{"_index":417,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.banchservice.findonebranchbyid",{"_index":3577,"title":{},"body":{"injectables/StockService.html":{}}}],["this.base}/v2/checkout/orders",{"_index":2895,"title":{},"body":{"injectables/PaypalService.html":{}}}],["this.base}/v2/checkout/orders/${orderid}/capture",{"_index":2907,"title":{},"body":{"injectables/PaypalService.html":{}}}],["this.billingservice.create(createbillingdto",{"_index":565,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.findall",{"_index":566,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.findone(+id",{"_index":568,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.remove(+id",{"_index":572,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.update(+id",{"_index":570,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.branch",{"_index":2527,"title":{},"body":{"classes/Order.html":{}}}],["this.branchrepo(createbranchdata",{"_index":694,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.find",{"_index":699,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.find().exec",{"_index":696,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.findbyid(branch_id",{"_index":697,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.findbyidanddelete(branch_id",{"_index":707,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.findbyidandupdate(branch_id",{"_index":706,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchservice.create(createbranchdto",{"_index":650,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.branchservice.findall",{"_index":651,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.branchservice.findonebranchbyid",{"_index":2056,"title":{},"body":{"injectables/EmployeeService.html":{},"injectables/ProductService.html":{},"injectables/TicketService.html":{}}}],["this.branchservice.findonebranchbyid(data.branch",{"_index":778,"title":{},"body":{"injectables/CashService.html":{},"injectables/OrderService.html":{},"injectables/TicketService.html":{}}}],["this.branchservice.findonebranchbyid(id",{"_index":652,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.branchservice.isbranchsavaliables",{"_index":943,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["this.branchservice.isbranchsavaliables(newupdateddata.branches",{"_index":2467,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.branchservice.removeonebranchbyid(id",{"_index":656,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.branchservice.updateonebranchbyid(id",{"_index":654,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.cartservice.create(createcartdto",{"_index":725,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findall",{"_index":726,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findone(+id",{"_index":727,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.remove(+id",{"_index":729,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.update(+id",{"_index":728,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cashierservice.create(createcashierdto",{"_index":808,"title":{},"body":{"controllers/CashierController.html":{}}}],["this.cashierservice.findall",{"_index":809,"title":{},"body":{"controllers/CashierController.html":{}}}],["this.cashierservice.findone(+id",{"_index":810,"title":{},"body":{"controllers/CashierController.html":{}}}],["this.cashierservice.remove(+id",{"_index":812,"title":{},"body":{"controllers/CashierController.html":{}}}],["this.cashierservice.update(+id",{"_index":811,"title":{},"body":{"controllers/CashierController.html":{}}}],["this.cashservice.createcashpayment(newdata",{"_index":2812,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.configservice.get('email_user",{"_index":2293,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('google_auth_client_id",{"_index":2142,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MailService.html":{}}}],["this.configservice.get('google_auth_client_secret",{"_index":2144,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/MailService.html":{}}}],["this.configservice.get('google_redirect_url",{"_index":2280,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('google_refresh",{"_index":2282,"title":{},"body":{"injectables/MailService.html":{}}}],["this.configservice.get('jwt_refresh_expirein",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_token_expirein",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('reset_password_link')}${code",{"_index":3176,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.connection.startsession",{"_index":2700,"title":{},"body":{"injectables/OrderService.html":{},"injectables/StockTransactionService.html":{}}}],["this.constructor",{"_index":2524,"title":{},"body":{"classes/Order.html":{}}}],["this.coponservice.isvalidcouponinbranchbycouponid",{"_index":2725,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.coponservice.subtractonefromcouponquantity",{"_index":2728,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.coupon",{"_index":2548,"title":{},"body":{"classes/Order.html":{}}}],["this.couponrepo",{"_index":956,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo(createcoupondata",{"_index":946,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.find().exec",{"_index":949,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.findbyid(coupon_id",{"_index":950,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.findbyidanddelete(coupon_id",{"_index":953,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.findbyidandupdate",{"_index":952,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.findone",{"_index":948,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponservice.create(createcoupondto",{"_index":884,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.couponservice.findall",{"_index":885,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.couponservice.findonebyid(id",{"_index":887,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.couponservice.removeonecouponbyid(id",{"_index":889,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.couponservice.updateonecouponbyid(id",{"_index":888,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.create",{"_index":3171,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["this.customerlocationservice.create(data",{"_index":1656,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["this.customerlocationservice.findalllocations",{"_index":1657,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["this.customerlocationservice.findonecustomerlocationbyid(id",{"_index":1658,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["this.customerlocationservice.removeonecustomerlocationbyid(id",{"_index":1660,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["this.customerlocationservice.updateonecustomerlocationbyid",{"_index":1659,"title":{},"body":{"controllers/CustomerLocationsController.html":{}}}],["this.customerlocationsrepo",{"_index":1702,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["this.customerlocationsrepo(createdata",{"_index":1699,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["this.customerlocationsrepo.find().exec",{"_index":1701,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["this.customerlocationsrepo.findbyidanddelete",{"_index":1705,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["this.customerlocationsrepo.findbyidandupdate",{"_index":1704,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["this.customerrepo",{"_index":1746,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepo(createdata",{"_index":1743,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepo.find().exec",{"_index":1745,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepo.findbyid(customer_id).exec",{"_index":1750,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepo.findbyidanddelete(customer_id",{"_index":1754,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerrepo.findbyidandupdate",{"_index":1753,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.customerservice.create(createcustomerdto",{"_index":1621,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["this.customerservice.create(data",{"_index":1763,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["this.customerservice.findallcustomers",{"_index":1622,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["this.customerservice.findallcustomersbyphone(number",{"_index":1624,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["this.customerservice.findonecustomerbyid",{"_index":1695,"title":{},"body":{"injectables/CustomerLocationsService.html":{},"injectables/OrderService.html":{}}}],["this.customerservice.findonecustomerbyid((req",{"_index":1765,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["this.customerservice.findonecustomerbyid(id",{"_index":1625,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["this.customerservice.removeonecustomerbyid(id",{"_index":1628,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["this.customerservice.updateonecustomerbyid",{"_index":1766,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["this.customerservice.updateonecustomerbyid(id",{"_index":1626,"title":{},"body":{"controllers/CustomerAdminController.html":{}}}],["this.cutomerlocationservice.findonecustomerlocationbyid",{"_index":2707,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.daily_orderid",{"_index":2530,"title":{},"body":{"classes/Order.html":{}}}],["this.deleteonebyuserid(is_valid_email.user",{"_index":3189,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.deleteonebyuserid(user_id",{"_index":4442,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.deliveryservice.updatedeliveryorderstatus",{"_index":1809,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["this.employeemothlypdrrepo",{"_index":2961,"title":{},"body":{"injectables/PdrService.html":{}}}],["this.employeemothlypdrrepo(data",{"_index":2957,"title":{},"body":{"injectables/PdrService.html":{}}}],["this.employeemothlypdrrepo.find().exec",{"_index":2959,"title":{},"body":{"injectables/PdrService.html":{}}}],["this.employeemothlypdrrepo.findbyid(id).exec",{"_index":2960,"title":{},"body":{"injectables/PdrService.html":{}}}],["this.employeemothlypdrrepo.findbyidanddelete(pdr_id",{"_index":2963,"title":{},"body":{"injectables/PdrService.html":{}}}],["this.employeemothlypdrrepo.findbyidandupdate",{"_index":2962,"title":{},"body":{"injectables/PdrService.html":{}}}],["this.employeepdractionrepo",{"_index":1939,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["this.employeepdractionrepo(data",{"_index":1935,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["this.employeepdractionrepo.find().exec",{"_index":1937,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["this.employeepdractionrepo.findbyid(id).exec",{"_index":1938,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["this.employeepdractionrepo.findbyidanddelete(pdr_id",{"_index":1944,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["this.employeepdractionrepo.findbyidandupdate",{"_index":1943,"title":{},"body":{"injectables/EmpPdrActionService.html":{}}}],["this.employeerepo",{"_index":2064,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeerepo(createemployeedata",{"_index":2059,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeerepo.find().exec",{"_index":2061,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeerepo.findbyid(id).exec",{"_index":2062,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeerepo.findbyid(newdata.employee",{"_index":374,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["this.employeerepo.findbyid(updateddata.employee",{"_index":385,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["this.employeerepo.findbyidanddelete(id",{"_index":2076,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeerepo.findbyidandupdate(employee_id",{"_index":2075,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeerepo.findbyidandupdate(id",{"_index":2074,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeerepo.findone",{"_index":2063,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.employeeservice.create(createemployeedto",{"_index":1978,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.findall",{"_index":1979,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.findempbyuserid",{"_index":3802,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["this.employeeservice.findonebyid",{"_index":1940,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{}}}],["this.employeeservice.findonebyid(data.employee",{"_index":1933,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{},"injectables/SpendingAuthService.html":{}}}],["this.employeeservice.findonebyid(id",{"_index":1980,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.isuserworkinginbranchandhaverole",{"_index":2732,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.employeeservice.removeonebyid(id",{"_index":1982,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.updateonebyid(id",{"_index":1981,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeesservice.isuserworkinginbranch(user_id",{"_index":2210,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["this.emppdrservice.create(data",{"_index":1905,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{}}}],["this.emppdrservice.findall",{"_index":1906,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{}}}],["this.emppdrservice.findbyemployeeid(id",{"_index":1908,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{}}}],["this.emppdrservice.findonebyid(id",{"_index":1907,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{}}}],["this.emppdrservice.remove(pdr_id",{"_index":2943,"title":{},"body":{"controllers/PdrController.html":{}}}],["this.emppdrservice.removeonebyid(id",{"_index":1910,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["this.emppdrservice.updateonebyid(id",{"_index":1909,"title":{},"body":{"controllers/EmpPdrActionController.html":{}}}],["this.emppdrservice.updateonebyid(pdr_id",{"_index":2941,"title":{},"body":{"controllers/PdrController.html":{}}}],["this.empservice.isuseremployee(user._id",{"_index":2194,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["this.findonebyuserid((user",{"_index":3169,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.findonebyuserid(user_id",{"_index":4432,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.findonestocktransactionbyid(transaction_id",{"_index":3680,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.generateaccesstoken",{"_index":2893,"title":{},"body":{"injectables/PaypalService.html":{}}}],["this.generatecode",{"_index":3167,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["this.generatetokenandrefresh((user",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcookiesforuser(user",{"_index":2159,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.getuserdata(token",{"_index":2161,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.googleauthservice.authenticate(tokendata.token",{"_index":2115,"title":{},"body":{"controllers/GoogleController.html":{}}}],["this.handleregistereduser(user",{"_index":2164,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.handleresponse(response",{"_index":2906,"title":{},"body":{"injectables/PaypalService.html":{}}}],["this.hashfunction(createdata.password",{"_index":4377,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.hashfunction(newdata.password",{"_index":4390,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.invoicerepo.findbyid(id",{"_index":2181,"title":{},"body":{"injectables/InvoiceService.html":{}}}],["this.invoiceservice.findonebyid(data.invoice",{"_index":3258,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["this.isnew",{"_index":2517,"title":{},"body":{"classes/Order.html":{}}}],["this.isvalidcode(code",{"_index":3187,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.isvalidcode(user_id",{"_index":4440,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.items",{"_index":2540,"title":{},"body":{"classes/Order.html":{}}}],["this.jwtservice.signasync",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.locationrepo(locationdata",{"_index":2249,"title":{},"body":{"injectables/LocationService.html":{}}}],["this.mailservice.sendmail(mailoption",{"_index":3178,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["this.materialservice.create(creatematerialdto",{"_index":2327,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.materialservice.findall",{"_index":2328,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.materialservice.findone(+id",{"_index":2329,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.materialservice.remove(+id",{"_index":2331,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.materialservice.update(+id",{"_index":2330,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.oauthclient",{"_index":2145,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.oauthclient.gettokeninfo(token",{"_index":2166,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.oauthclient.setcredentials",{"_index":2149,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.offerrepo",{"_index":2463,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo(newofferdata",{"_index":2459,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.find",{"_index":2465,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.find().exec",{"_index":2461,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.findbyid(offer_id",{"_index":2462,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.findbyidanddelete(offer_id",{"_index":2471,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.findbyidandupdate(offer_id",{"_index":2470,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offers",{"_index":2545,"title":{},"body":{"classes/Order.html":{}}}],["this.offerservice.isvalidofferinbranchbyid",{"_index":2721,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.offerservice.subtractonefromofferquantity",{"_index":2727,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.offersservice.create(createofferdto",{"_index":2400,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.findalloffers",{"_index":2401,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.findofferbyname(offername",{"_index":2404,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.findoneofferbyid(id",{"_index":2402,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.removeoneofferbyid(id",{"_index":2406,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.updateoneofferbyid(id",{"_index":2405,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.orderrepo",{"_index":2756,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo(createorderdata",{"_index":3807,"title":{},"body":{"injectables/TakeAwayService.html":{}}}],["this.orderrepo(data",{"_index":2738,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo.find().populate('items.item').exec",{"_index":2755,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo.findbyid(order_id",{"_index":1847,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["this.orderrepo.findbyid(orderid",{"_index":2760,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo.findbyidanddelete(id",{"_index":2764,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderservice.approveorderbyorderid",{"_index":2602,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.create(data",{"_index":1807,"title":{},"body":{"controllers/DeliveryController-1.html":{},"controllers/DineInController.html":{},"controllers/TakeAwayController.html":{}}}],["this.orderservice.findall",{"_index":2617,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallcompeletedorderbybranchid(branch_id",{"_index":2611,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallorderinbranch(branch_id",{"_index":2609,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallordersapprovedbyuserid(user_id",{"_index":2616,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallpendingorder",{"_index":2603,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallpendingorderbybranchid(branch_id",{"_index":2605,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallpendingorderbyuserid(user_id",{"_index":2607,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallpreparingorder",{"_index":2612,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findallpreparingorderbybranchid(branch_id",{"_index":2614,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findoneorderbyid(id",{"_index":2618,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.removeoneorderbyid(id",{"_index":2620,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.ordeserivce.findoneorderbyid(data.order_id",{"_index":781,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaypalService-1.html":{}}}],["this.paymentrepo(data",{"_index":786,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaypalService-1.html":{}}}],["this.paymentrepo.find().exec",{"_index":2831,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepo.findbyid(id).exec",{"_index":2832,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepo.findbyidanddelete(id",{"_index":2833,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepo.findbyidandupdate(id",{"_index":791,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaypalService-1.html":{}}}],["this.paymentservice.findall",{"_index":2814,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.findonebyid(id",{"_index":2815,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.remove(id",{"_index":2816,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paypalservice.captureorder(orderid",{"_index":2849,"title":{},"body":{"controllers/PaypalController.html":{}}}],["this.paypalservice.createpayment('10.00",{"_index":2846,"title":{},"body":{"controllers/PaypalController.html":{}}}],["this.paypalservice.createpaypalpayment(newdata",{"_index":2813,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.percent_discount",{"_index":2552,"title":{},"body":{"classes/Order.html":{}}}],["this.productrepo",{"_index":3082,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo(newproductdata",{"_index":3076,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.find",{"_index":3079,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.find().exec",{"_index":3078,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.findbyid(product_id",{"_index":3091,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.findbyidanddelete(product_id",{"_index":3099,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.findbyidandupdate",{"_index":3098,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.create(createproductdto",{"_index":3011,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findallproducts",{"_index":3012,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findoneproductbyid(id",{"_index":3013,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductsbybranchid(branchid",{"_index":3007,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductsbybranchidandcategory",{"_index":3010,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.isextraproducts",{"_index":2716,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.productservice.isproductavailableinbranchwithquantity",{"_index":2711,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.productservice.isproductsavailable(newofferdata.items",{"_index":2457,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.productservice.isproductsavailable(newupdateddata.items",{"_index":2469,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.productservice.removeoneproductbyid(id",{"_index":3015,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.subtractproductquantity",{"_index":2729,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.productservice.updateoneproductbyid(id",{"_index":3014,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.reflactor.getallandoverride(roles_keys",{"_index":3199,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["this.refleactor.getallandoverride('ispublic",{"_index":41,"title":{},"body":{"injectables/ATGuard.html":{}}}],["this.reflector.getallandoverride('ispublic",{"_index":2215,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["this.registeruser(token",{"_index":2172,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.resetpasswordservice.requestresetpassword(email",{"_index":4302,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.resetpasswordservice.verifyandupdate(code",{"_index":4305,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.resetrepo",{"_index":3163,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.resetrepo(data",{"_index":3159,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.resetrepo.findbyid(id).exec",{"_index":3161,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.resetrepo.findone",{"_index":3162,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.resetrepo.findoneanddelete",{"_index":3165,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.settransport",{"_index":2295,"title":{},"body":{"injectables/MailService.html":{}}}],["this.spendingauthrepo",{"_index":3265,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["this.spendingauthrepo(data",{"_index":3261,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["this.spendingauthrepo.find",{"_index":3264,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["this.spendingauthrepo.find().exec",{"_index":3263,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["this.spendingauthrepo.findbyid(id",{"_index":3266,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["this.spendingauthrepo.findbyidanddelete(id",{"_index":3268,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["this.spendingauthrepo.findbyidandupdate(id",{"_index":3267,"title":{},"body":{"injectables/SpendingAuthService.html":{}}}],["this.spendingauthservice.create(data",{"_index":3230,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["this.spendingauthservice.findall",{"_index":3231,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["this.spendingauthservice.removeonebyid(id",{"_index":3233,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["this.spendingauthservice.updateonebyid(id",{"_index":3232,"title":{},"body":{"controllers/SpendingAuthController.html":{}}}],["this.stockgardrepo(newdata",{"_index":3400,"title":{},"body":{"injectables/StockGardService.html":{}}}],["this.stockgardservice.create(data",{"_index":3352,"title":{},"body":{"controllers/StockGardController.html":{}}}],["this.stockgardservice.deletestockgardbyid(gard_id",{"_index":3359,"title":{},"body":{"controllers/StockGardController.html":{}}}],["this.stockgardservice.findallforonestock(stockid",{"_index":3354,"title":{},"body":{"controllers/StockGardController.html":{}}}],["this.stockgardservice.findonestockgardbyid(gard_id",{"_index":3357,"title":{},"body":{"controllers/StockGardController.html":{}}}],["this.stockitemlogrepo(newdata",{"_index":3481,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["this.stockitemlogrepo(stocklogdata",{"_index":3585,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockitemlogserivce.create(newlogdata",{"_index":3702,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stockitemlogsservice.create(data",{"_index":3455,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["this.stockitemlogsservice.deletestockitemlogbyid",{"_index":3460,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["this.stockitemlogsservice.findonestocktransactionbyid",{"_index":3459,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["this.stockitemrepo",{"_index":3525,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo(data",{"_index":3515,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo.find",{"_index":3521,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo.find().exec",{"_index":3520,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo.findbyid(item_id).exec",{"_index":3524,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo.findbyidanddelete(item_id).exec",{"_index":3527,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemservice.create(createdto",{"_index":3436,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockitemservice.deletebyid(id",{"_index":3440,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockitemservice.findall",{"_index":3437,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockitemservice.findonebyid",{"_index":3396,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockTransactionService.html":{}}}],["this.stockitemservice.findonebyid(id",{"_index":3438,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockitemservice.updatebyid(id",{"_index":3439,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockrepo",{"_index":3406,"title":{},"body":{"injectables/StockGardService.html":{}}}],["this.stockrepo(createstockdata",{"_index":3580,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.find",{"_index":3403,"title":{},"body":{"injectables/StockGardService.html":{}}}],["this.stockrepo.find().exec",{"_index":3586,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.findbyid(id).exec",{"_index":3587,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.findbyid(stock_id",{"_index":3392,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{}}}],["this.stockrepo.findbyid(stockid).populate",{"_index":3588,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.findbyidanddelete(id",{"_index":3607,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.findbyidandupdate",{"_index":3401,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{}}}],["this.stockrepo.findbyidandupdate(stock_id",{"_index":3483,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{}}}],["this.stockrepo.findone",{"_index":3404,"title":{},"body":{"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{}}}],["this.stockrepo.updateone",{"_index":3412,"title":{},"body":{"injectables/StockGardService.html":{}}}],["this.stockservice.createstock(createstockdto",{"_index":3310,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.findall",{"_index":3311,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.findonebyid(data.stock",{"_index":3672,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stockservice.findonebyid(id",{"_index":3312,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.findonebyid(stock_id",{"_index":3351,"title":{},"body":{"controllers/StockGardController.html":{}}}],["this.stockservice.findonebyid(stockid",{"_index":3314,"title":{},"body":{"controllers/StockController.html":{},"controllers/StockGardController.html":{}}}],["this.stockservice.getitemscountatstock(stockid",{"_index":3316,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.removeonebyid(id",{"_index":3318,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.updateonebyid(id",{"_index":3317,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stocktransactionrepo",{"_index":3715,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo(data",{"_index":3676,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo.find",{"_index":3705,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo.find().exec",{"_index":3704,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo.findbyid(stock_id",{"_index":3703,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo.findbyidandupdate",{"_index":3714,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionservice.changetransactionstatus",{"_index":3643,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.create(data",{"_index":3640,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.deleteonebyid(id",{"_index":3649,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.findall",{"_index":3644,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.findalltransactionforspecificbranch",{"_index":3646,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.findonestocktransactionbyid(id",{"_index":3647,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.updateonebyid(id",{"_index":3648,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stripeservice.createcustomer(name",{"_index":4382,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.supplierrepo(createsupplierdata",{"_index":3775,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierrepo.find().exec",{"_index":3777,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierrepo.findbyid(supplier_id",{"_index":3778,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierrepo.findbyidanddelete(supplier_id",{"_index":3780,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierrepo.findbyidandupdate",{"_index":3779,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierservice.create(createsupplierdto",{"_index":3740,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.supplierservice.findall",{"_index":3741,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.supplierservice.findonebyid(id",{"_index":3742,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.supplierservice.removeonesupplierbyid(id",{"_index":3744,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.supplierservice.updateonesupplierbyid(id",{"_index":3743,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.ticketrepo(data",{"_index":3893,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.find().exec",{"_index":3894,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.findbyid(id",{"_index":3895,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.findbyidanddelete(id",{"_index":3902,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.findbyidandupdate(id",{"_index":3898,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.findoneandupdate",{"_index":3899,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketservice.changeticketstatus(ticketid",{"_index":3853,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.create(data",{"_index":3847,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findall",{"_index":3848,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findonebyid",{"_index":3966,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.ticketservice.findonebyid(data.ticket",{"_index":3959,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.ticketservice.findonebyid(id",{"_index":3849,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.removeoneticketbyid(id",{"_index":3855,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.updateoneticketbyid(id",{"_index":3854,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketupdatesrepo(data",{"_index":3960,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.ticketupdatesrepo.find",{"_index":3964,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.ticketupdatesrepo.find().exec",{"_index":3962,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.ticketupdatesrepo.findbyid(id).exec",{"_index":3963,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.ticketupdatesrepo.findbyidanddelete(id",{"_index":3970,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.ticketupdatesrepo.findbyidandupdate(id",{"_index":3969,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.ticketupdatesservice.create(data",{"_index":3931,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["this.ticketupdatesservice.findall",{"_index":3932,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["this.ticketupdatesservice.findbyticketid(id",{"_index":3935,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["this.ticketupdatesservice.findonebyid(id",{"_index":3933,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["this.ticketupdatesservice.removeoneticketupdatebyid(id",{"_index":3937,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["this.ticketupdatesservice.updateoneticketupdatebyid",{"_index":3936,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["this.updateonebyid(transaction_id",{"_index":3690,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.updateonebyuserid((user",{"_index":3170,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.updateonebyuserid(user_id",{"_index":4433,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.userrepo(createdata",{"_index":4376,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.create",{"_index":4384,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.find",{"_index":4400,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.find().exec",{"_index":4379,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyid(id).exec",{"_index":4380,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyidanddelete(user_id",{"_index":4396,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyidandupdate",{"_index":4398,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyidandupdate(id",{"_index":4391,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyidandupdate(user_id",{"_index":4394,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findone",{"_index":4388,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findoneandupdate",{"_index":4392,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.updateone",{"_index":4393,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userserivce.blockuser(id",{"_index":145,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.userservice.addoneroletouser",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.comparetextwithhash",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.create(createuserdata",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.deleteoneuserrefreshbyuserid(user_id",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyemail",{"_index":510,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyemail(email",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyid",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/EmployeeService.html":{},"injectables/TicketService.html":{}}}],["this.userservice.findonebyid(createdata.user",{"_index":1741,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.userservice.findonebyid(data.createby",{"_index":3259,"title":{},"body":{"injectables/SpendingAuthService.html":{},"injectables/StockTransactionService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{}}}],["this.userservice.findonebyid(data.updated_user",{"_index":3708,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.userservice.findonebyid(newbranchdata.manager",{"_index":705,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.userservice.findonebyid(newupdatedata.user",{"_index":1752,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.userservice.findonebyid(payload.userid",{"_index":87,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["this.userservice.findonebyid(ticketupdate.createby",{"_index":3968,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["this.userservice.findonebyid(updateddata.createby",{"_index":1942,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{}}}],["this.userservice.findonebyid(updateddata.user",{"_index":2072,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["this.userservice.hashfunction",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.unassignonerolefromuser",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updaterefresh",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updaterefresh((user",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":4292,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.createwithgoogle(email",{"_index":2163,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.usersservice.findall",{"_index":4293,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyemail(email",{"_index":2168,"title":{},"body":{"injectables/GoogleService.html":{},"injectables/ResetPasswordService.html":{}}}],["this.usersservice.findonebyid(data.createby",{"_index":783,"title":{},"body":{"injectables/CashService.html":{},"injectables/PaypalService-1.html":{}}}],["this.usersservice.findonebyid(id",{"_index":4294,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid(user_id",{"_index":4426,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.usersservice.removeoneuserbyid(id",{"_index":4307,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateonebyid(id",{"_index":4306,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateonebyid(is_valid_email.user",{"_index":3188,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["this.usersservice.updateonebyid(user_id",{"_index":4441,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.usersservice.updaterefresh",{"_index":2156,"title":{},"body":{"injectables/GoogleService.html":{}}}],["this.verifyemailservice.verifyandupdate((req",{"_index":4299,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.verifyemailservice.verifyrequest((req",{"_index":4296,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.verifyuseremailrepo",{"_index":4424,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.verifyuseremailrepo(data",{"_index":4421,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.verifyuseremailrepo.findbyid(id).exec",{"_index":4422,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.verifyuseremailrepo.findone",{"_index":4423,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["this.walletservice.create(createwalletdto",{"_index":4464,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.findall",{"_index":4465,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.findone(+id",{"_index":4466,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.remove(+id",{"_index":4468,"title":{},"body":{"controllers/WalletController.html":{}}}],["this.walletservice.update(+id",{"_index":4467,"title":{},"body":{"controllers/WalletController.html":{}}}],["throw",{"_index":91,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["ticket",{"_index":1547,"title":{"classes/Ticket.html":{}},"body":{"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["ticket'})@isnotempty()@isenum(ticketcategory",{"_index":1531,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket'})@isnotempty()@isenum(ticketsegment",{"_index":1539,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket'})@isnotempty()@isenum(ticketspool",{"_index":1536,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket'})@isnotempty()@isenum(ticketstatus",{"_index":1542,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket'})@isoptional()@isenum(ticketcategory",{"_index":4204,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket'})@isoptional()@isenum(ticketsegment",{"_index":4213,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket'})@isoptional()@isenum(ticketspool",{"_index":4211,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket'})@isoptional()@isenum(ticketstatus",{"_index":4215,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket'})@isoptional()@ismongoid()@isstring",{"_index":4207,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket'})@isoptional()@isstring()@ismongoid",{"_index":4221,"title":{},"body":{"classes/UpdateTicketUpdatesDto.html":{}}}],["ticket'})@isstring()@isnotempty",{"_index":1533,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket'})@isstring()@isoptional",{"_index":4209,"title":{},"body":{"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["ticket.dto",{"_index":3842,"title":{},"body":{"controllers/TicketController.html":{},"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts",{"_index":1527,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:12",{"_index":1543,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:16",{"_index":4216,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:20",{"_index":1532,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:24",{"_index":4205,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:28",{"_index":1537,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:32",{"_index":4214,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:36",{"_index":1540,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:40",{"_index":4212,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:41",{"_index":1534,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:48",{"_index":4208,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:54",{"_index":4203,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts:59",{"_index":4210,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["ticket.model",{"_index":3908,"title":{},"body":{"classes/TicketUpdates.html":{}}}],["ticket.name",{"_index":3873,"title":{},"body":{"modules/TicketModule.html":{},"classes/TicketUpdates.html":{}}}],["ticket.service",{"_index":3957,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["ticket/ticket.module",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["ticket_id",{"_index":3916,"title":{},"body":{"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{}}}],["ticket_pool",{"_index":1947,"title":{},"body":{"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeService.html":{}}}],["ticketcategory",{"_index":1530,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/enumerations.html":{}}}],["ticketcategory.improve",{"_index":3820,"title":{},"body":{"classes/Ticket.html":{}}}],["ticketcontroller",{"_index":3824,"title":{"controllers/TicketController.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{}}}],["ticketid",{"_index":3839,"title":{},"body":{"controllers/TicketController.html":{}}}],["ticketinterface",{"_index":3843,"title":{"interfaces/TicketInterface.html":{}},"body":{"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{}}}],["ticketmodule",{"_index":177,"title":{"modules/TicketModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TicketModule.html":{},"modules.html":{},"overview.html":{}}}],["ticketrepo",{"_index":3881,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketschema",{"_index":3822,"title":{},"body":{"classes/Ticket.html":{},"modules/TicketModule.html":{},"miscellaneous/variables.html":{}}}],["ticketsegment",{"_index":1538,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/enumerations.html":{}}}],["ticketsegment.normal",{"_index":3821,"title":{},"body":{"classes/Ticket.html":{}}}],["ticketservice",{"_index":3840,"title":{"injectables/TicketService.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"overview.html":{}}}],["ticketspool",{"_index":1535,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeService.html":{},"classes/Ticket.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/enumerations.html":{}}}],["ticketspool.hr",{"_index":3819,"title":{},"body":{"classes/Ticket.html":{}}}],["ticketspool.staff",{"_index":1962,"title":{},"body":{"classes/Employee.html":{}}}],["ticketstatus",{"_index":1541,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"miscellaneous/enumerations.html":{}}}],["ticketstatus.close",{"_index":3901,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketstatus.open",{"_index":3818,"title":{},"body":{"classes/Ticket.html":{}}}],["ticketupdate",{"_index":3955,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["ticketupdate.createby",{"_index":3967,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["ticketupdate.ticket",{"_index":3965,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["ticketupdates",{"_index":3857,"title":{"classes/TicketUpdates.html":{}},"body":{"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"classes/TicketUpdates.html":{},"injectables/TicketUpdatesService.html":{}}}],["ticketupdates.name",{"_index":3874,"title":{},"body":{"modules/TicketModule.html":{}}}],["ticketupdatescontroller",{"_index":3865,"title":{"controllers/TicketUpdatesController.html":{}},"body":{"modules/TicketModule.html":{},"controllers/TicketUpdatesController.html":{}}}],["ticketupdatesinterface",{"_index":3926,"title":{"interfaces/TicketUpdatesInterface.html":{}},"body":{"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{}}}],["ticketupdatesrepo",{"_index":3946,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["ticketupdatesschema",{"_index":3868,"title":{},"body":{"modules/TicketModule.html":{},"classes/TicketUpdates.html":{},"miscellaneous/variables.html":{}}}],["ticketupdatesservice",{"_index":3863,"title":{"injectables/TicketUpdatesService.html":{}},"body":{"modules/TicketModule.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"overview.html":{}}}],["time",{"_index":1304,"title":{},"body":{"classes/CreateEmployeePdrActionDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["timestamps",{"_index":277,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Delivery.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeTransactions.html":{},"classes/Order.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{}}}],["todayend",{"_index":2520,"title":{},"body":{"classes/Order.html":{}}}],["todayend.sethours(23",{"_index":2521,"title":{},"body":{"classes/Order.html":{}}}],["todaystart",{"_index":2518,"title":{},"body":{"classes/Order.html":{}}}],["todaystart.sethours(0",{"_index":2519,"title":{},"body":{"classes/Order.html":{}}}],["token",{"_index":407,"title":{"interfaces/Token.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GoogleService.html":{},"injectables/MailService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{}}}],["token(@param('orderid",{"_index":2848,"title":{},"body":{"controllers/PaypalController.html":{}}}],["token(orderid",{"_index":2840,"title":{},"body":{"controllers/PaypalController.html":{}}}],["token.guard.ts",{"_index":7,"title":{},"body":{"injectables/ATGuard.html":{}}}],["token.guard.ts:10",{"_index":26,"title":{},"body":{"injectables/ATGuard.html":{}}}],["token.guard.ts:6",{"_index":17,"title":{},"body":{"injectables/ATGuard.html":{}}}],["token.refresh_token",{"_index":505,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.strategy",{"_index":434,"title":{},"body":{"modules/AuthModule.html":{}}}],["token.strategy.ts",{"_index":54,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["token.strategy.ts:20",{"_index":64,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["token.strategy.ts:9",{"_index":61,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["tokendata",{"_index":2110,"title":{},"body":{"controllers/GoogleController.html":{}}}],["tokeninfo",{"_index":2165,"title":{},"body":{"injectables/GoogleService.html":{}}}],["tokeninfo.email",{"_index":2167,"title":{},"body":{"injectables/GoogleService.html":{}}}],["tokens",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens.refresh_token",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenverificationdto",{"_index":2108,"title":{"classes/TokenVerificationDto.html":{}},"body":{"controllers/GoogleController.html":{},"classes/TokenVerificationDto.html":{}}}],["tostring('base64",{"_index":2879,"title":{},"body":{"injectables/PaypalService.html":{}}}],["total",{"_index":2539,"title":{},"body":{"classes/Order.html":{}}}],["touch",{"_index":4686,"title":{},"body":{"index.html":{}}}],["tpken.guard.ts",{"_index":3102,"title":{},"body":{"classes/RTGuard.html":{}}}],["tpken.guard.ts:3",{"_index":3103,"title":{},"body":{"classes/RTGuard.html":{}}}],["transacetion",{"_index":4190,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{}}}],["transacetion'})@isenum(stocktransactionstatus)@isoptional()@isstring",{"_index":4186,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{}}}],["transaction",{"_index":1491,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{},"classes/CreateTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"interfaces/StockInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"miscellaneous/enumerations.html":{}}}],["transaction).items_quantity.foreach(async",{"_index":3699,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.controller",{"_index":3550,"title":{},"body":{"modules/StockModule.html":{}}}],["transaction.controller.ts",{"_index":3618,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:27",{"_index":3626,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:36",{"_index":3624,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:50",{"_index":3627,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:55",{"_index":3630,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:62",{"_index":3631,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:67",{"_index":3634,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:75",{"_index":3632,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.dto",{"_index":3635,"title":{},"body":{"controllers/StockTransactionController.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["transaction.dto.ts",{"_index":1558,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["transaction.dto.ts:21",{"_index":1562,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:24",{"_index":4185,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{}}}],["transaction.dto.ts:30",{"_index":1565,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["transaction.dto.ts:33",{"_index":4189,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{}}}],["transaction.dto.ts:41",{"_index":4187,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{}}}],["transaction.enum",{"_index":2092,"title":{},"body":{"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{}}}],["transaction.enum.ts",{"_index":4547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transaction.interface",{"_index":3638,"title":{},"body":{"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{}}}],["transaction.interface.ts",{"_index":2090,"title":{},"body":{"interfaces/EmployeeTransactionInterface.html":{},"interfaces/StockTransactionInterface.html":{}}}],["transaction.model",{"_index":3534,"title":{},"body":{"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{}}}],["transaction.model.ts",{"_index":3608,"title":{},"body":{"classes/StockTransaction.html":{},"miscellaneous/variables.html":{}}}],["transaction.model.ts:14",{"_index":3611,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.model.ts:17",{"_index":3614,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.model.ts:24",{"_index":3610,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.model.ts:27",{"_index":3615,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.model.ts:30",{"_index":3613,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.service",{"_index":3547,"title":{},"body":{"modules/StockModule.html":{},"controllers/StockTransactionController.html":{}}}],["transaction.service.ts",{"_index":3650,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:105",{"_index":3658,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:129",{"_index":3667,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:139",{"_index":3664,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:147",{"_index":3665,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:157",{"_index":3669,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:19",{"_index":3655,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:195",{"_index":3663,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:30",{"_index":3661,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:58",{"_index":3660,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.stock",{"_index":3701,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction/create",{"_index":1557,"title":{},"body":{"classes/CreateTransactionDto.html":{},"controllers/StockTransactionController.html":{}}}],["transaction/update",{"_index":3636,"title":{},"body":{"controllers/StockTransactionController.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["transaction_id",{"_index":3462,"title":{},"body":{"interfaces/StockItemLogsInterface.html":{},"classes/StockItemslogs.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockItemLogsDto.html":{}}}],["transactionobject",{"_index":3679,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transactionobject.status",{"_index":3682,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transactions.enum",{"_index":1499,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockItemLogsDto.html":{}}}],["transactions.enum.ts",{"_index":4542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transactiontype",{"_index":3600,"title":{},"body":{"injectables/StockService.html":{}}}],["transfer",{"_index":4620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transferring",{"_index":1563,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["transformer",{"_index":996,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"dependencies.html":{}}}],["transport",{"_index":2273,"title":{},"body":{"injectables/MailService.html":{}}}],["transport.sendmail(option",{"_index":2304,"title":{},"body":{"injectables/MailService.html":{}}}],["true",{"_index":45,"title":{},"body":{"injectables/ATGuard.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Branch.html":{},"injectables/BranchService.html":{},"classes/CashPayment.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"injectables/CouponService.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"classes/Delivery.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"injectables/EmployeeService.html":{},"classes/EmployeeTransactions.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"classes/SignInByEmailDto.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"injectables/StockGardService.html":{},"classes/StockItem.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"miscellaneous/variables.html":{}}}],["true})@arrayminsize(1",{"_index":4029,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["true})@arrayminsize(1)@isarray",{"_index":1022,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["true})@isarray",{"_index":1109,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["true})@isarray()@arrayminsize(1",{"_index":1518,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["true})@isarray()@arrayminsize(1)@isnotempty",{"_index":1359,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["true})@isarray()@isnotempty",{"_index":1236,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["true})@isarray()@isoptional",{"_index":4063,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["true})@isdatestring()@isoptional",{"_index":1361,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["true})@isemail()@isnotempty",{"_index":1581,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["true})@ismongoid()@isstring()@isnotempty",{"_index":1317,"title":{},"body":{"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{}}}],["true})@ismongoid()@isstring()@isoptional",{"_index":4087,"title":{},"body":{"classes/UpdateEmployeeSpendingAuthDto.html":{}}}],["true})@ismongoid({each",{"_index":1021,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["true})@isnotempty()@arrayminsize(1)@validatenested()@type(undefined",{"_index":1469,"title":{},"body":{"classes/CreateStockGardDto.html":{}}}],["true})@isnotempty()@isarray()@arrayminsize(1)@isstring({each",{"_index":1363,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["true})@isnotempty()@isemail",{"_index":1569,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInByEmailDto.html":{}}}],["true})@isnotempty()@isenum(productcategory",{"_index":1411,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isenum(productsize",{"_index":1427,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isenum(productsubcategory",{"_index":1430,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isenum(roles",{"_index":236,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["true})@isnotempty()@isnumber",{"_index":1116,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isstring",{"_index":1420,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInByEmailDto.html":{}}}],["true})@isnotempty()@isstring()@ismongoid",{"_index":1405,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isstring({each",{"_index":1136,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":1572,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["true})@isnumber()@isnotempty",{"_index":1369,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["true})@isoptional()@isenum(productcategory",{"_index":4132,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isoptional()@isenum(productsize",{"_index":4134,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isoptional()@isenum(productsubcategory",{"_index":4135,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isoptional()@isnumber",{"_index":4017,"title":{},"body":{"classes/UpdateCouponDto.html":{},"classes/UpdateProductDto.html":{}}}],["true})@isoptional()@isstring",{"_index":4133,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isoptional()@isstring()@ismongoid",{"_index":4131,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["true})@isoptional()@isstring({each",{"_index":4028,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["true})@isstring()@isnotempty",{"_index":239,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateUserDto-1.html":{}}}],["true})@isstring({each",{"_index":1235,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["true})@type(undefined",{"_index":1459,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["true})@type(undefined)@isarray()@arrayminsize(1",{"_index":1016,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["true})@type(undefined)@isnotempty()@arrayminsize(1)@isarray",{"_index":1148,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{}}}],["true})@type(undefined)@isoptional()@arrayminsize(1)@isarray",{"_index":4034,"title":{},"body":{"classes/UpdateCustomerLocationDto.html":{}}}],["true})@validatenested({each",{"_index":1147,"title":{},"body":{"classes/CreateCustomerLocationDto.html":{},"classes/UpdateCustomerLocationDto.html":{}}}],["try",{"_index":38,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ProductService.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockGardService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["twenty",{"_index":4559,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["twentyfive",{"_index":4560,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["twitter",{"_index":4692,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AttendenceController.html":{},"interfaces/AttendenceInterface.html":{},"injectables/AttendenceService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"interfaces/BranchInterface.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CashPayment.html":{},"injectables/CashService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/CoordinatesInteface.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"interfaces/CouponInterface.html":{},"injectables/CouponService.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"interfaces/CreateBasePaymentInterface.html":{},"classes/CreateBranchDto.html":{},"interfaces/CreateCashPaymentInterface.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerAdminController.html":{},"interfaces/CustomerInterface.html":{},"classes/CustomerLocations.html":{},"controllers/CustomerLocationsController.html":{},"interfaces/CustomerLocationsInterface.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"controllers/DeliveryController-1.html":{},"classes/DeliveryOrder.html":{},"injectables/DeliveryService-1.html":{},"controllers/DineInController.html":{},"classes/DineinOrder.html":{},"controllers/EmpPdrActionController.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeeMonthlyPDR.html":{},"interfaces/EmployeeMonthlyPDRInterface.html":{},"classes/EmployeePDRAction.html":{},"interfaces/EmployeePDRActionInterface.html":{},"injectables/EmployeeService.html":{},"interfaces/EmployeeSpendingAuthInteface.html":{},"classes/EmployeeSpendingAuthorization.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/InvoiceService.html":{},"interfaces/InvoiceSpendingAuthInteface.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"interfaces/LocationInterface.html":{},"injectables/LocationService.html":{},"injectables/MailService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"classes/Offer.html":{},"interfaces/OfferInterface.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"injectables/OnlineService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{},"injectables/OrderService.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"controllers/PdrController.html":{},"injectables/PdrService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"interfaces/ProductInterface.html":{},"injectables/ProductService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockGardController.html":{},"interfaces/StockGardInterface.html":{},"injectables/StockGardService.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"interfaces/SupplierInterface.html":{},"injectables/SupplierService.html":{},"controllers/TakeAwayController.html":{},"classes/TakeAwayOrder.html":{},"injectables/TakeAwayService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"controllers/TicketUpdatesController.html":{},"interfaces/TicketUpdatesInterface.html":{},"injectables/TicketUpdatesService.html":{},"interfaces/Token.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"interfaces/UpdateBasePaymentInterface.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enums",{"_index":750,"title":{},"body":{"classes/CashPayment.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{}}}],["type.enums.ts",{"_index":4528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["type/sendmail",{"_index":2275,"title":{},"body":{"injectables/MailService.html":{}}}],["typealiases",{"_index":4706,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":4233,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["types.enums",{"_index":1830,"title":{},"body":{"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/TakeAwayOrder.html":{}}}],["types.enums.ts",{"_index":4525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":4652,"title":{},"body":{"index.html":{}}}],["unassignonerolefromuser",{"_index":4330,"title":{},"body":{"injectables/UsersService.html":{}}}],["unassignonerolefromuser(userid",{"_index":4360,"title":{},"body":{"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":67,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/GoogleService.html":{},"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["unauthorizedexception('code",{"_index":4443,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["undefined",{"_index":261,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/CashPayment.html":{},"classes/Coupon.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Customer.html":{},"classes/CustomerLocations.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeSpendingAuthorization.html":{},"classes/EmployeeTransactions.html":{},"classes/InvoiceSpendingAuthorization.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{}}}],["undefined})@isnotempty()@arrayminsize(1)@validatenested({each",{"_index":1561,"title":{},"body":{"classes/CreateTransactionDto.html":{}}}],["undefined})@isnotempty()@isstring({each",{"_index":1517,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["undefined})@isoptional()@isstring({each",{"_index":4197,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["undefined})@isoptional()@validatenested()@type(undefined",{"_index":4160,"title":{},"body":{"classes/UpdateStockGardDto.html":{}}}],["undefined})@isoptional()@validatenested({each",{"_index":4184,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{}}}],["unique",{"_index":860,"title":{},"body":{"classes/Coupon.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/Customer.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/Offer.html":{},"classes/PayPalPayment.html":{},"classes/Payment.html":{},"classes/ResetPassword.html":{},"classes/Stock.html":{},"classes/StockItem.html":{},"classes/Supplier.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/User.html":{},"classes/VerifyUserEmail.html":{}}}],["unit",{"_index":4666,"title":{},"body":{"index.html":{}}}],["units.enum",{"_index":2312,"title":{},"body":{"classes/Material.html":{}}}],["units.enum.ts",{"_index":4523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":354,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CouponService.html":{},"injectables/CustomerLocationsService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService-1.html":{},"injectables/EmployeeService.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"injectables/MailService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"controllers/PaypalController.html":{},"injectables/PaypalService.html":{},"injectables/PaypalService-1.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockGardController.html":{},"injectables/StockGardService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/TakeAwayService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["unlicensed",{"_index":4705,"title":{},"body":{"properties.html":{}}}],["unset",{"_index":4395,"title":{},"body":{"injectables/UsersService.html":{}}}],["update",{"_index":290,"title":{},"body":{"controllers/AttendenceController.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"controllers/PdrController.html":{},"controllers/ProductController.html":{},"controllers/StockItemController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"classes/UpdateCashPaymentDto.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["update'})@isoptional()@ismongoid()@isstring",{"_index":4218,"title":{},"body":{"classes/UpdateTicketUpdatesDto.html":{}}}],["update(@param('id",{"_index":569,"title":{},"body":{"controllers/BillingController.html":{},"controllers/CartController.html":{},"controllers/CashierController.html":{},"controllers/CouponController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/ProductController.html":{},"controllers/StockItemController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{}}}],["update(attendenceid",{"_index":308,"title":{},"body":{"controllers/AttendenceController.html":{}}}],["update(id",{"_index":554,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CashierController.html":{},"injectables/CashierService.html":{},"controllers/CouponController.html":{},"controllers/EmpPdrActionController.html":{},"controllers/EmployeeController.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"controllers/OffersController.html":{},"controllers/ProductController.html":{},"controllers/StockItemController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"controllers/UsersController.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["update(pdr_id",{"_index":2932,"title":{},"body":{"controllers/PdrController.html":{}}}],["updateattendencedto",{"_index":309,"title":{"classes/UpdateAttendenceDTO.html":{}},"body":{"controllers/AttendenceController.html":{},"classes/UpdateAttendenceDTO.html":{}}}],["updatebasepaymentinterface",{"_index":3990,"title":{"interfaces/UpdateBasePaymentInterface.html":{}},"body":{"interfaces/UpdateBasePaymentInterface.html":{},"interfaces/UpdateCashPaymentInterface.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{}}}],["updatebillingdto",{"_index":555,"title":{"classes/UpdateBillingDto.html":{}},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/UpdateBillingDto.html":{}}}],["updatebranch",{"_index":633,"title":{},"body":{"controllers/BranchController.html":{}}}],["updatebranch(id",{"_index":642,"title":{},"body":{"controllers/BranchController.html":{}}}],["updatebranchdto",{"_index":643,"title":{"classes/UpdateBranchDto.html":{}},"body":{"controllers/BranchController.html":{},"classes/UpdateBranchDto.html":{}}}],["updateby",{"_index":3659,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["updatebyid",{"_index":3497,"title":{},"body":{"injectables/StockItemService.html":{}}}],["updatebyid(item_id",{"_index":3511,"title":{},"body":{"injectables/StockItemService.html":{}}}],["updatecartdto",{"_index":718,"title":{"classes/UpdateCartDto.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/UpdateCartDto.html":{}}}],["updatecash",{"_index":757,"title":{},"body":{"injectables/CashService.html":{}}}],["updatecash(id",{"_index":766,"title":{},"body":{"injectables/CashService.html":{}}}],["updatecashierdto",{"_index":802,"title":{"classes/UpdateCashierDto.html":{}},"body":{"controllers/CashierController.html":{},"injectables/CashierService.html":{},"classes/UpdateCashierDto.html":{}}}],["updatecashpaymentdto",{"_index":4000,"title":{"classes/UpdateCashPaymentDto.html":{}},"body":{"classes/UpdateCashPaymentDto.html":{}}}],["updatecashpaymentinterface",{"_index":767,"title":{"interfaces/UpdateCashPaymentInterface.html":{}},"body":{"injectables/CashService.html":{},"interfaces/UpdateCashPaymentInterface.html":{}}}],["updatecordinatesdto",{"_index":4101,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["updatecoupondto",{"_index":877,"title":{"classes/UpdateCouponDto.html":{}},"body":{"controllers/CouponController.html":{},"classes/UpdateCouponDto.html":{}}}],["updatecustomerdto",{"_index":1612,"title":{"classes/UpdateCustomerDto.html":{}},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"classes/UpdateCustomerDto.html":{}}}],["updatecustomerlocationdto",{"_index":1648,"title":{"classes/UpdateCustomerLocationDto.html":{}},"body":{"controllers/CustomerLocationsController.html":{},"classes/UpdateCustomerLocationDto.html":{}}}],["updated",{"_index":3191,"title":{},"body":{"injectables/ResetPasswordService.html":{},"classes/UpdateStockItemDto.html":{}}}],["updated'})@isoptional()@isstring",{"_index":4166,"title":{},"body":{"classes/UpdateStockItemDto.html":{}}}],["updated_user",{"_index":3609,"title":{},"body":{"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{}}}],["updatedat",{"_index":3185,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["updatedcoupondata",{"_index":938,"title":{},"body":{"injectables/CouponService.html":{}}}],["updatedcoupondata.branches",{"_index":951,"title":{},"body":{"injectables/CouponService.html":{}}}],["updateddata",{"_index":365,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/PdrService.html":{},"controllers/SpendingAuthController.html":{}}}],["updateddata.createby",{"_index":1941,"title":{},"body":{"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{}}}],["updateddata.employee",{"_index":384,"title":{},"body":{"injectables/AttendenceService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/PdrService.html":{}}}],["updateddata.user",{"_index":2071,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["updateddata.working_in",{"_index":2073,"title":{},"body":{"injectables/EmployeeService.html":{}}}],["updatedeliveryorderdto",{"_index":4037,"title":{"classes/UpdateDeliveryOrderDto.html":{}},"body":{"classes/UpdateDeliveryOrderDto.html":{}}}],["updatedeliveryorderstatus",{"_index":1837,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["updatedeliveryorderstatus(order_id",{"_index":1841,"title":{},"body":{"injectables/DeliveryService-1.html":{}}}],["updatedstockdata",{"_index":3574,"title":{},"body":{"injectables/StockService.html":{}}}],["updatedstockdata.branch",{"_index":3606,"title":{},"body":{"injectables/StockService.html":{}}}],["updatedsupplierdata",{"_index":3770,"title":{},"body":{"injectables/SupplierService.html":{}}}],["updatedto",{"_index":1892,"title":{},"body":{"controllers/EmpPdrActionController.html":{},"controllers/PdrController.html":{},"controllers/StockItemController.html":{},"controllers/StockTransactionController.html":{}}}],["updateemployeeattend",{"_index":345,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["updateemployeeattend(attendenceid",{"_index":364,"title":{},"body":{"injectables/AttendenceService.html":{}}}],["updateemployeedto",{"_index":1972,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"controllers/EmployeeController.html":{},"classes/UpdateEmployeeDto.html":{}}}],["updateemployeemonthlypdrdto",{"_index":2933,"title":{"classes/UpdateEmployeeMonthlyPDRDTO.html":{}},"body":{"controllers/PdrController.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{}}}],["updateemployeepdractiondto",{"_index":1893,"title":{"classes/UpdateEmployeePdrActionDto.html":{}},"body":{"controllers/EmpPdrActionController.html":{},"classes/UpdateEmployeePdrActionDto.html":{}}}],["updateemployeespendingauthdto",{"_index":3221,"title":{"classes/UpdateEmployeeSpendingAuthDto.html":{}},"body":{"controllers/SpendingAuthController.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{}}}],["updateinvoicespendingauthdto",{"_index":3220,"title":{"classes/UpdateInvoiceSpendingAuthDto.html":{}},"body":{"controllers/SpendingAuthController.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{}}}],["updatelocationdto",{"_index":4033,"title":{"classes/UpdateLocationDto.html":{}},"body":{"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["updatematerialdto",{"_index":2320,"title":{"classes/UpdateMaterialDto.html":{}},"body":{"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/UpdateMaterialDto.html":{}}}],["updatenotificationdto",{"_index":2363,"title":{"classes/UpdateNotificationDto.html":{}},"body":{"injectables/NotificationsService.html":{},"classes/UpdateNotificationDto.html":{}}}],["updateofferdto",{"_index":2392,"title":{"classes/UpdateOfferDto.html":{}},"body":{"controllers/OffersController.html":{},"classes/UpdateOfferDto.html":{}}}],["updateone",{"_index":3407,"title":{},"body":{"injectables/StockGardService.html":{}}}],["updateonebranchbyid",{"_index":672,"title":{},"body":{"injectables/BranchService.html":{}}}],["updateonebranchbyid(branch_id",{"_index":687,"title":{},"body":{"injectables/BranchService.html":{}}}],["updateonebyemail",{"_index":4331,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateonebyemail(email",{"_index":4363,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateonebyid",{"_index":1601,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"controllers/CustomerUserController.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/PdrService.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"injectables/UsersService.html":{}}}],["updateonebyid(id",{"_index":1611,"title":{},"body":{"controllers/CustomerAdminController.html":{},"controllers/CustomerLocationsController.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/PdrService.html":{},"controllers/SpendingAuthController.html":{},"injectables/SpendingAuthService.html":{},"controllers/StockController.html":{},"controllers/StockTransactionController.html":{},"injectables/UsersService.html":{}}}],["updateonebyid(req",{"_index":1759,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["updateonebyid(stock_id",{"_index":3573,"title":{},"body":{"injectables/StockService.html":{}}}],["updateonebyid(transaction_id",{"_index":3668,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["updateonebyuserid",{"_index":3122,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["updateonebyuserid(user_id",{"_index":3141,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["updateonecouponbyid",{"_index":908,"title":{},"body":{"injectables/CouponService.html":{}}}],["updateonecouponbyid(coupon_id",{"_index":937,"title":{},"body":{"injectables/CouponService.html":{}}}],["updateonecustomerbyid",{"_index":1723,"title":{},"body":{"injectables/CustomerService.html":{}}}],["updateonecustomerbyid(customer_id",{"_index":1736,"title":{},"body":{"injectables/CustomerService.html":{}}}],["updateonecustomerlocationbyid",{"_index":1670,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["updateonecustomerlocationbyid(customer_id",{"_index":1686,"title":{},"body":{"injectables/CustomerLocationsService.html":{}}}],["updateoneofferbyid",{"_index":2424,"title":{},"body":{"injectables/OffersService.html":{}}}],["updateoneofferbyid(offer_id",{"_index":2447,"title":{},"body":{"injectables/OffersService.html":{}}}],["updateoneproductbyid",{"_index":3038,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateoneproductbyid(product_id",{"_index":3071,"title":{},"body":{"injectables/ProductService.html":{}}}],["updateonesupplierbyid",{"_index":3756,"title":{},"body":{"injectables/SupplierService.html":{}}}],["updateonesupplierbyid(supplier_id",{"_index":3769,"title":{},"body":{"injectables/SupplierService.html":{}}}],["updateoneticketbyid",{"_index":3878,"title":{},"body":{"injectables/TicketService.html":{}}}],["updateoneticketbyid(id",{"_index":3889,"title":{},"body":{"injectables/TicketService.html":{}}}],["updateoneticketupdatebyid",{"_index":3943,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updateoneticketupdatebyid(id",{"_index":3954,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updatepassword",{"_index":4260,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatepassword(code",{"_index":4277,"title":{},"body":{"controllers/UsersController.html":{}}}],["updatepaymentdto",{"_index":4002,"title":{"classes/UpdatePaymentDto.html":{}},"body":{"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePayPalPaymentDto.html":{},"classes/UpdatePaymentDto.html":{}}}],["updatepaymentdto:13",{"_index":4007,"title":{},"body":{"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePayPalPaymentDto.html":{}}}],["updatepaymentdto:8",{"_index":4005,"title":{},"body":{"classes/UpdateCashPaymentDto.html":{},"classes/UpdatePayPalPaymentDto.html":{}}}],["updatepaypalpayment",{"_index":2915,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["updatepaypalpayment(id",{"_index":2919,"title":{},"body":{"injectables/PaypalService-1.html":{}}}],["updatepaypalpaymentdto",{"_index":4120,"title":{"classes/UpdatePayPalPaymentDto.html":{}},"body":{"classes/UpdatePayPalPaymentDto.html":{}}}],["updatepaypalpaymentinterface",{"_index":2920,"title":{"interfaces/UpdatePayPalPaymentInterface.html":{}},"body":{"injectables/PaypalService-1.html":{},"interfaces/UpdatePayPalPaymentInterface.html":{}}}],["updateproductdto",{"_index":2997,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"classes/UpdateProductDto.html":{}}}],["updaterefresh",{"_index":4332,"title":{},"body":{"injectables/UsersService.html":{}}}],["updaterefresh(id",{"_index":4366,"title":{},"body":{"injectables/UsersService.html":{}}}],["updaterefreshdto",{"_index":4136,"title":{"classes/UpdateRefreshDto.html":{}},"body":{"classes/UpdateRefreshDto.html":{}}}],["updates",{"_index":615,"title":{},"body":{"injectables/BillingService.html":{},"injectables/CartService.html":{},"injectables/CashierService.html":{},"injectables/MaterialService.html":{},"injectables/NotificationsService.html":{},"interfaces/TicketInterface.html":{},"controllers/TicketUpdatesController.html":{},"injectables/WalletService.html":{}}}],["updates.controller",{"_index":3872,"title":{},"body":{"modules/TicketModule.html":{}}}],["updates.controller.ts",{"_index":3911,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["updates.controller.ts:25",{"_index":3915,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["updates.controller.ts:39",{"_index":3917,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["updates.controller.ts:44",{"_index":3921,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["updates.controller.ts:49",{"_index":3920,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["updates.controller.ts:55",{"_index":3924,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["updates.controller.ts:67",{"_index":3922,"title":{},"body":{"controllers/TicketUpdatesController.html":{}}}],["updates.dto",{"_index":3925,"title":{},"body":{"controllers/TicketUpdatesController.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["updates.dto.ts",{"_index":1553,"title":{},"body":{"classes/CreateTicketUpdateDto.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["updates.dto.ts:12",{"_index":4219,"title":{},"body":{"classes/UpdateTicketUpdatesDto.html":{}}}],["updates.dto.ts:20",{"_index":4222,"title":{},"body":{"classes/UpdateTicketUpdatesDto.html":{}}}],["updates.dto.ts:25",{"_index":4220,"title":{},"body":{"classes/UpdateTicketUpdatesDto.html":{}}}],["updates.dto.ts:6",{"_index":1555,"title":{},"body":{"classes/CreateTicketUpdateDto.html":{}}}],["updates.inteface",{"_index":3928,"title":{},"body":{"controllers/TicketUpdatesController.html":{},"injectables/TicketUpdatesService.html":{}}}],["updates.inteface.ts",{"_index":3939,"title":{},"body":{"interfaces/TicketUpdatesInterface.html":{}}}],["updates.model",{"_index":3859,"title":{},"body":{"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketUpdatesService.html":{}}}],["updates.model.ts",{"_index":3904,"title":{},"body":{"classes/TicketUpdates.html":{},"miscellaneous/variables.html":{}}}],["updates.model.ts:12",{"_index":3905,"title":{},"body":{"classes/TicketUpdates.html":{}}}],["updates.model.ts:15",{"_index":3906,"title":{},"body":{"classes/TicketUpdates.html":{}}}],["updates.model.ts:9",{"_index":3907,"title":{},"body":{"classes/TicketUpdates.html":{}}}],["updates.service",{"_index":3870,"title":{},"body":{"modules/TicketModule.html":{},"controllers/TicketUpdatesController.html":{}}}],["updates.service.ts",{"_index":3941,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updates.service.ts:10",{"_index":3945,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updates.service.ts:18",{"_index":3947,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updates.service.ts:33",{"_index":3948,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updates.service.ts:41",{"_index":3951,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updates.service.ts:49",{"_index":3950,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updates.service.ts:57",{"_index":3956,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updates.service.ts:80",{"_index":3953,"title":{},"body":{"injectables/TicketUpdatesService.html":{}}}],["updatespendingauthdto",{"_index":4085,"title":{"classes/UpdateSpendingAuthDto.html":{}},"body":{"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateSpendingAuthDto.html":{}}}],["updatestockdto",{"_index":3301,"title":{"classes/UpdateStockDto.html":{}},"body":{"controllers/StockController.html":{},"classes/UpdateStockDto.html":{}}}],["updatestockgardbyid",{"_index":3370,"title":{},"body":{"injectables/StockGardService.html":{}}}],["updatestockgardbyid(id",{"_index":3383,"title":{},"body":{"injectables/StockGardService.html":{}}}],["updatestockgarddto",{"_index":4157,"title":{"classes/UpdateStockGardDto.html":{}},"body":{"classes/UpdateStockGardDto.html":{}}}],["updatestockitemdto",{"_index":3432,"title":{"classes/UpdateStockItemDto.html":{}},"body":{"controllers/StockItemController.html":{},"classes/UpdateStockItemDto.html":{}}}],["updatestockitemlogsdto",{"_index":4168,"title":{"classes/UpdateStockItemLogsDto.html":{}},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["updatestockitemquantitydto",{"_index":4178,"title":{"classes/UpdateStockItemQuantityDto.html":{}},"body":{"classes/UpdateStockItemQuantityDto.html":{}}}],["updatestocktransactiondto",{"_index":3633,"title":{"classes/UpdateStockTransactionDto.html":{}},"body":{"controllers/StockTransactionController.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["updatesupplierdto",{"_index":3731,"title":{"classes/UpdateSupplierDto.html":{}},"body":{"controllers/SupplierController.html":{},"classes/UpdateSupplierDto.html":{}}}],["updateticketdto",{"_index":3833,"title":{"classes/UpdateTicketDto.html":{}},"body":{"controllers/TicketController.html":{},"controllers/TicketUpdatesController.html":{},"classes/UpdateTicketDto.html":{}}}],["updateticketstatus",{"_index":3826,"title":{},"body":{"controllers/TicketController.html":{}}}],["updateticketstatus(ticketid",{"_index":3836,"title":{},"body":{"controllers/TicketController.html":{}}}],["updateticketupdatesdto",{"_index":3923,"title":{"classes/UpdateTicketUpdatesDto.html":{}},"body":{"controllers/TicketUpdatesController.html":{},"classes/UpdateTicketUpdatesDto.html":{}}}],["updateuserdto",{"_index":4223,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["updatewalletdto",{"_index":4235,"title":{"classes/UpdateWalletDto.html":{}},"body":{"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["urgent",{"_index":4625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uri",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":2894,"title":{},"body":{"injectables/PaypalService.html":{}}}],["usd",{"_index":2900,"title":{},"body":{"injectables/PaypalService.html":{}}}],["use",{"_index":2911,"title":{},"body":{"injectables/PaypalService.html":{},"injectables/ProductService.html":{},"miscellaneous/enumerations.html":{}}}],["useclass",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{}}}],["usefactory",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":121,"title":{},"body":{"controllers/AdminController.html":{},"controllers/SupplierController.html":{},"controllers/UsersController.html":{}}}],["useguards(rolesguard",{"_index":134,"title":{},"body":{"controllers/AdminController.html":{},"controllers/SupplierController.html":{},"controllers/UsersController.html":{}}}],["useguards(rolesguard)@role(roles.superuser)@delete(':id",{"_index":4270,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(rolesguard)@role(roles.superuser)@patch(':id",{"_index":4275,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":74,"title":{"classes/User.html":{}},"body":{"injectables/ATStrategy.html":{},"classes/Attendence.html":{},"injectables/AuthService.html":{},"classes/Branch.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateEmployeeDto.html":{},"classes/Customer.html":{},"interfaces/CustomerInterface.html":{},"injectables/CustomerService.html":{},"controllers/CustomerUserController.html":{},"classes/DeliveryOrder.html":{},"injectables/EmpPdrActionService.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"injectables/EmployeeService.html":{},"classes/EmployeeTransactions.html":{},"controllers/GoogleController.html":{},"injectables/GoogleService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsUserCustomerGuard.html":{},"injectables/MailService.html":{},"classes/Order.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"classes/ResetPassword.html":{},"injectables/ResetPasswordService.html":{},"injectables/RolesGuard.html":{},"injectables/SpendingAuthService.html":{},"classes/SpendingAuthorization.html":{},"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"injectables/TicketUpdatesService.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["user'})@isoptional()@isstring()@ismongoid",{"_index":4170,"title":{},"body":{"classes/UpdateStockItemLogsDto.html":{}}}],["user.dto",{"_index":4234,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":1580,"title":{},"body":{"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:11",{"_index":1582,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["user.dto.ts:15",{"_index":4226,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:19",{"_index":1583,"title":{},"body":{"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:23",{"_index":4231,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:27",{"_index":1584,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["user.dto.ts:29",{"_index":4230,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:33",{"_index":4228,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":3177,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["user.is_valid_email",{"_index":4427,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["user.isregisteredwithgoogle",{"_index":2158,"title":{},"body":{"injectables/GoogleService.html":{}}}],["user.model",{"_index":3110,"title":{},"body":{"classes/ResetPassword.html":{},"classes/VerifyUserEmail.html":{}}}],["user.name",{"_index":280,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Customer.html":{},"classes/DeliveryOrder.html":{},"classes/Employee.html":{},"classes/EmployeeMonthlyPDR.html":{},"classes/EmployeePDRAction.html":{},"classes/EmployeeTransactions.html":{},"classes/Order.html":{},"classes/Payment.html":{},"classes/ResetPassword.html":{},"classes/SpendingAuthorization.html":{},"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"modules/UsersModule.html":{},"classes/VerifyUserEmail.html":{}}}],["user.password",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.refreshtoken",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles.some((role",{"_index":3200,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["user.save",{"_index":4378,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.status",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username},\\n",{"_index":3173,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["user.username}\\n",{"_index":4435,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["user_id",{"_index":466,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateBranchDto.html":{},"injectables/EmployeeService.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/OrderController.html":{},"injectables/ResetPasswordService.html":{},"classes/UpdateBranchDto.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{}}}],["userdata",{"_index":2160,"title":{},"body":{"injectables/GoogleService.html":{}}}],["userdata.name",{"_index":2162,"title":{},"body":{"injectables/GoogleService.html":{}}}],["userid",{"_index":233,"title":{},"body":{"classes/AssignRoleDto.html":{},"injectables/AuthService.html":{},"injectables/EmployeeService.html":{},"injectables/OrderService.html":{},"controllers/StockTransactionController.html":{},"injectables/UsersService.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{}}}],["useridandrefreshtoken",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["useridandrefreshtoken.refresh_token",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{}}}],["useridandrefreshtoken.userid",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["userinfoclient",{"_index":2147,"title":{},"body":{"injectables/GoogleService.html":{}}}],["userinfoclient.get",{"_index":2151,"title":{},"body":{"injectables/GoogleService.html":{}}}],["userinforesponse",{"_index":2150,"title":{},"body":{"injectables/GoogleService.html":{}}}],["userinforesponse.data",{"_index":2152,"title":{},"body":{"injectables/GoogleService.html":{}}}],["userinterface",{"_index":471,"title":{"interfaces/UserInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/UserInterface.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":1567,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"interfaces/UserInterface.html":{}}}],["userrepo",{"_index":4335,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":4258,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":1716,"title":{},"body":{"modules/CustomerModule.html":{}}}],["users.controller.ts",{"_index":1755,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["users.controller.ts:15",{"_index":1756,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["users.controller.ts:24",{"_index":1758,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["users.controller.ts:28",{"_index":1760,"title":{},"body":{"controllers/CustomerUserController.html":{}}}],["users.service",{"_index":3149,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["users/users.module",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":4253,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":4256,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userserivce",{"_index":137,"title":{},"body":{"controllers/AdminController.html":{}}}],["userservice",{"_index":62,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CustomerService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/PdrService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockTransactionService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{}}}],["usersignup",{"_index":455,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignup(createuserdata",{"_index":470,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":178,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CustomerModule.html":{},"modules/EmployeeModule.html":{},"modules/PaymentModule.html":{},"modules/StockModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":59,"title":{"injectables/UsersService.html":{}},"body":{"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CashService.html":{},"injectables/CustomerService.html":{},"injectables/EmpPdrActionService.html":{},"injectables/EmployeeService.html":{},"injectables/GoogleService.html":{},"injectables/PaypalService-1.html":{},"injectables/PdrService.html":{},"injectables/ResetPasswordService.html":{},"injectables/SpendingAuthService.html":{},"injectables/StockTransactionService.html":{},"injectables/TicketService.html":{},"injectables/TicketUpdatesService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"injectables/VerifyEmailService.html":{},"overview.html":{}}}],["valid",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/ResetPasswordService.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"injectables/VerifyEmailService.html":{}}}],["validate",{"_index":57,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["validate(payload",{"_index":63,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["validatenested",{"_index":995,"title":{},"body":{"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTransactionDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["validatenested({each",{"_index":1015,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateDeliveryOrderDto.html":{}}}],["validateuser",{"_index":456,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationschema",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":245,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateAttendenceDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBasePaymentDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateCustomerLocationDto.html":{},"classes/CreateDeliveryOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeeMonthlyPdrDTO.html":{},"classes/CreateEmployeePdrActionDto.html":{},"classes/CreateEmployeeSpendingAuthDto.html":{},"classes/CreateInvoiceSpendingAuthDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSpendingAuthDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockGardDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateStockItemQuantityDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTicketUpdateDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/TokenVerificationDto.html":{},"classes/UpdateAttendenceDTO.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateCustomerLocationDto.html":{},"classes/UpdateDeliveryOrderDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateEmployeeMonthlyPDRDTO.html":{},"classes/UpdateEmployeePdrActionDto.html":{},"classes/UpdateEmployeeSpendingAuthDto.html":{},"classes/UpdateInvoiceSpendingAuthDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSpendingAuthDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockGardDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockItemQuantityDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateTicketUpdatesDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["validcoupon",{"_index":955,"title":{},"body":{"injectables/CouponService.html":{}}}],["validoffer",{"_index":2472,"title":{},"body":{"injectables/OffersService.html":{}}}],["value",{"_index":746,"title":{},"body":{"classes/CashPayment.html":{},"classes/DeliveryOrder.html":{},"classes/DineinOrder.html":{},"classes/PayPalPayment.html":{},"injectables/PaypalService.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":4710,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbose_name",{"_index":1379,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{}}}],["verification",{"_index":4436,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["verified",{"_index":4429,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["verify",{"_index":4264,"title":{},"body":{"controllers/UsersController.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyandgeneraterefreshtoken",{"_index":457,"title":{"interfaces/VerifyandGenerateRefreshToken.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/VerifyandGenerateRefreshToken.html":{}}}],["verifyandgeneraterefreshtoken(useridandrefreshtoken",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyandupdate",{"_index":3123,"title":{},"body":{"injectables/ResetPasswordService.html":{},"injectables/VerifyEmailService.html":{}}}],["verifyandupdate(code",{"_index":3144,"title":{},"body":{"injectables/ResetPasswordService.html":{}}}],["verifyandupdate(user_id",{"_index":4416,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["verifycoderow",{"_index":4431,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["verifyemail",{"_index":4261,"title":{},"body":{"controllers/UsersController.html":{}}}],["verifyemail(@req",{"_index":4295,"title":{},"body":{"controllers/UsersController.html":{}}}],["verifyemail(req",{"_index":4281,"title":{},"body":{"controllers/UsersController.html":{}}}],["verifyemailservice",{"_index":4284,"title":{"injectables/VerifyEmailService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/VerifyEmailService.html":{},"overview.html":{}}}],["verifyrequest",{"_index":4404,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["verifyrequest(user_id",{"_index":4418,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["verifyuseremail",{"_index":4315,"title":{"classes/VerifyUserEmail.html":{}},"body":{"modules/UsersModule.html":{},"injectables/VerifyEmailService.html":{},"classes/VerifyUserEmail.html":{}}}],["verifyuseremail.name",{"_index":4319,"title":{},"body":{"modules/UsersModule.html":{}}}],["verifyuseremailrepo",{"_index":4407,"title":{},"body":{"injectables/VerifyEmailService.html":{}}}],["verifyuseremailschema",{"_index":4316,"title":{},"body":{"modules/UsersModule.html":{},"classes/VerifyUserEmail.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":4703,"title":{},"body":{"properties.html":{}}}],["virtuals",{"_index":2555,"title":{},"body":{"classes/Order.html":{}}}],["waitingcustomer",{"_index":4571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["waitingcustomerstatus",{"_index":1779,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["waitingcustomerstatus(@param('orderid",{"_index":1812,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["waitingcustomerstatus(orderid",{"_index":1791,"title":{},"body":{"controllers/DeliveryController-1.html":{}}}],["waitingorder",{"_index":4569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wallet",{"_index":4450,"title":{"classes/Wallet.html":{}},"body":{"classes/Wallet.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["wallet.controller",{"_index":4472,"title":{},"body":{"modules/WalletModule.html":{}}}],["wallet.dto",{"_index":4238,"title":{},"body":{"classes/UpdateWalletDto.html":{},"controllers/WalletController.html":{},"injectables/WalletService.html":{}}}],["wallet.dto.ts",{"_index":1587,"title":{},"body":{"classes/CreateWalletDto.html":{},"classes/UpdateWalletDto.html":{}}}],["wallet.service",{"_index":4461,"title":{},"body":{"controllers/WalletController.html":{},"modules/WalletModule.html":{}}}],["wallet/wallet.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["walletcontroller",{"_index":4452,"title":{"controllers/WalletController.html":{}},"body":{"controllers/WalletController.html":{},"modules/WalletModule.html":{}}}],["walletmodule",{"_index":179,"title":{"modules/WalletModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["walletservice",{"_index":4460,"title":{"injectables/WalletService.html":{}},"body":{"controllers/WalletController.html":{},"modules/WalletModule.html":{},"injectables/WalletService.html":{},"overview.html":{}}}],["watch",{"_index":4661,"title":{},"body":{"index.html":{}}}],["website",{"_index":4690,"title":{},"body":{"index.html":{}}}],["widget",{"_index":1482,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/UpdateStockItemDto.html":{}}}],["within",{"_index":965,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["without",{"_index":3095,"title":{},"body":{"injectables/ProductService.html":{}}}],["without_component",{"_index":1380,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"interfaces/OrderInterface.html":{},"classes/OrderItems.html":{},"interfaces/OrderItemsInterface.html":{}}}],["work",{"_index":2730,"title":{},"body":{"injectables/OrderService.html":{}}}],["work_from",{"_index":620,"title":{},"body":{"classes/Branch.html":{},"interfaces/BranchInterface.html":{},"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["work_to",{"_index":621,"title":{},"body":{"classes/Branch.html":{},"interfaces/BranchInterface.html":{},"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["working",{"_index":1246,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/TakeAwayService.html":{},"classes/UpdateEmployeeDto.html":{}}}],["working_in",{"_index":1211,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"interfaces/EmployeeInterface.html":{},"injectables/EmployeeService.html":{},"classes/UpdateEmployeeDto.html":{}}}],["works",{"_index":1225,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["xl",{"_index":4593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xlarge",{"_index":4592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":926,"title":{},"body":{"injectables/CouponService.html":{},"injectables/EmployeeService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["you'd",{"_index":4681,"title":{},"body":{"index.html":{}}}],["you've",{"_index":3593,"title":{},"body":{"injectables/StockService.html":{}}}],["zoom",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CashierModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MailModule.html":{},"modules/MaterialModule.html":{},"modules/NotificationsModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/PaypalModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ATGuard.html":{"url":"injectables/ATGuard.html","title":"injectable - ATGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ATGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/access-token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refleactor: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refleactor\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class ATGuard extends AuthGuard('jwt') {\n  constructor(private refleactor: Reflector) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    try {\n      const isPublic = this.refleactor.getAllAndOverride('isPublic', [\n        context.getClass(),\n        context.getHandler(),\n      ]);\n      if (isPublic) return true;\n      return super.canActivate(context);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ATStrategy.html":{"url":"injectables/ATStrategy.html","title":"injectable - ATStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ATStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/Strategy/access-token.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/Strategy/access-token.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/Strategy/access-token.strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { User } from 'src/users/Model/user.model';\nimport { UsersService } from 'src/users/service/users.service';\n\n@Injectable()\nexport class ATStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private userService: UsersService,\n    private configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any): Promise {\n    try {\n      // Assuming you have a method to find a user by ID in your UsersService\n      const user = await this.userService.findOneByid(payload.userid);\n\n      if (!user) {\n        // Handle case when user is not found\n        throw new UnauthorizedException();\n      }\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin-auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AddRoleToUser\n                            \n                            \n                                    \n                                    \n                                BlockUser\n                            \n                            \n                                    \n                                    \n                                RemoveRoleFromUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AddRoleToUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddRoleToUser(asssignRoleDto: AssignRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('assign-one-role')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/admin/admin.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asssignRoleDto\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BlockUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    BlockUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('block/:id')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/admin/admin.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RemoveRoleFromUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    RemoveRoleFromUser(asssignRoleDto: AssignRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('unassign-one-role')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/admin/admin.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asssignRoleDto\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, UseGuards } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Role } from '../decorator/roles.decorator';\nimport { AssignRoleDto } from '../dto/AssignRole.dto';\n\nimport { Roles } from '../enums/roles.enums';\nimport { RolesGuard } from '../guards/roles.guard';\nimport { AuthService } from '../auth.service';\nimport { UsersService } from 'src/users/service/users.service';\n\n@ApiTags('Auth Admin')\n@UseGuards(RolesGuard)\n@Controller('admin-auth')\nexport class AdminController {\n  constructor(\n    private readonly authService: AuthService,\n    private userserivce: UsersService,\n  ) {}\n\n  @Post('assign-one-role')\n  @Role(Roles.SUPERUSER)\n  AddRoleToUser(@Body() asssignRoleDto: AssignRoleDto) {\n    return this.authService.AddOneRoleToUser(asssignRoleDto);\n  }\n\n  @Post('unassign-one-role')\n  @Role(Roles.SUPERUSER)\n  RemoveRoleFromUser(@Body() asssignRoleDto: AssignRoleDto) {\n    return this.authService.RemoveOneRoleFromUser(asssignRoleDto);\n  }\n\n  @Post('block/:id')\n  @Role(Roles.SUPERUSER)\n  BlockUser(@Param(':id') id: string) {\n    return this.userserivce.BlockUser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBillingModule\n\nBillingModule\n\nAppModule -->\n\nBillingModule->AppModule\n\n\n\n\n\nBranchModule\n\nBranchModule\n\nAppModule -->\n\nBranchModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCashierModule\n\nCashierModule\n\nAppModule -->\n\nCashierModule->AppModule\n\n\n\n\n\nCouponModule\n\nCouponModule\n\nAppModule -->\n\nCouponModule->AppModule\n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nAppModule -->\n\nDeliveryModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\n\n\nOffersModule\n\nOffersModule\n\nAppModule -->\n\nOffersModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaypalModule\n\nPaypalModule\n\nAppModule -->\n\nPaypalModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nStockModule\n\nStockModule\n\nAppModule -->\n\nStockModule->AppModule\n\n\n\n\n\nSupplierModule\n\nSupplierModule\n\nAppModule -->\n\nSupplierModule->AppModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nAppModule -->\n\nWalletModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BillingModule\n                        \n                        \n                            BranchModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            CashierModule\n                        \n                        \n                            CouponModule\n                        \n                        \n                            CustomerModule\n                        \n                        \n                            DeliveryModule\n                        \n                        \n                            EmployeeModule\n                        \n                        \n                            LocationModule\n                        \n                        \n                            MailModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            OffersModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            PaypalModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            StockModule\n                        \n                        \n                            SupplierModule\n                        \n                        \n                            TicketModule\n                        \n                        \n                            UsersModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProductModule } from './product/product.module';\nimport { OrderModule } from './order/order.module';\nimport { BranchModule } from './branch/branch.module';\nimport { SupplierModule } from './supplier/supplier.module';\nimport { MaterialModule } from './material/material.module';\nimport { CartModule } from './cart/cart.module';\nimport { PaymentModule } from './payment/payment.module';\nimport { DeliveryModule } from './delivery/delivery.module';\nimport { LocationModule } from './location/location.module';\nimport { CustomerModule } from './customer/customer.module';\nimport { OffersModule } from './offers/offers.module';\nimport { CouponModule } from './coupon/coupon.module';\nimport { EmployeeModule } from './employee/employee.module';\nimport { StockModule } from './stock/stock.module';\nimport { BillingModule } from './billing/billing.module';\nimport { TicketModule } from './ticket/ticket.module';\nimport { WalletModule } from './wallet/wallet.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { PaypalModule } from './paypal/paypal.module';\nimport { MailModule } from './mail/mail.module';\nimport { CashierModule } from './cashier/cashier.module';\nimport * as joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      validationSchema: joi.object({\n        mongoCluster: joi.string().required(),\n        GOOGLE_AUTH_CLIENT_ID: joi.string().required(),\n        GOOGLE_AUTH_CLIENT_SECRET: joi.string().required(),\n        EMAIL_SERVICE: joi.string().required(),\n        EMAIL_USER: joi.string().required(),\n        EMAIL_PASSWORD: joi.string().required(),\n        GOOGLE_REFRESH: joi.string().required(),\n        GOOGLE_REDIRECT_URL: joi.string().required(),\n        RESET_PASSWORD_LINK: joi.string().required(),\n      }),\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get('mongoCluster'),\n      }),\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    UsersModule,\n    ProductModule,\n    OrderModule,\n    BranchModule,\n    SupplierModule,\n    MaterialModule,\n    CartModule,\n    PaymentModule,\n    DeliveryModule,\n    LocationModule,\n    CustomerModule,\n    OffersModule,\n    CouponModule,\n    EmployeeModule,\n    StockModule,\n    BillingModule,\n    TicketModule,\n    WalletModule,\n    NotificationsModule,\n    PaypalModule,\n    MailModule,\n    CashierModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignRoleDto.html":{"url":"classes/AssignRoleDto.html","title":"class - AssignRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssignRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/AssignRole.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                userid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: Roles, required: true})@IsNotEmpty()@IsEnum(Roles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/AssignRole.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '0121asd014', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/AssignRole.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsString } from 'class-validator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\nexport class AssignRoleDto {\n  @ApiProperty({\n    example: '0121asd014',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  userid: string;\n\n  @ApiProperty({\n    example: Roles,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEnum(Roles)\n  role: Roles;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Attendence.html":{"url":"classes/Attendence.html","title":"class - Attendence","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Attendence\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/Model/attendence.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                employee\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                note\n                            \n                            \n                                    \n                                phone_ip\n                            \n                            \n                                    \n                                signby\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttendenceActions\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/attendence.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/attendence.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coordinates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Coordinates})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/attendence.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/attendence.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone_ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/attendence.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/attendence.model.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Coordinates } from 'src/location/Model/location.model';\nimport { User } from 'src/users/Model/user.model';\nimport { AttendenceActions } from '../enums/attendence-action.enums';\nimport { Employee } from './employee.model';\n\n@Schema({ timestamps: true })\nexport class Attendence {\n  @Prop({ type: mongoose.Types.ObjectId, ref: Employee.name, required: true })\n  employee: string;\n\n  @Prop({ required: true })\n  action: AttendenceActions;\n\n  @Prop({ type: Coordinates })\n  location: Coordinates;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  signby: string;\n\n  @Prop()\n  phone_ip: string;\n\n  @Prop()\n  note: string;\n}\n\nexport const AttendenceSchema = SchemaFactory.createForClass(Attendence);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AttendenceController.html":{"url":"controllers/AttendenceController.html","title":"controller - AttendenceController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AttendenceController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/controller/attendence.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee-attendence\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                delete\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByEmployeeID\n                            \n                            \n                                    \n                                findByID\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateAttendenceDTO, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/attendence.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateAttendenceDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(AttendenceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':attendanceid')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/attendence.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                AttendenceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/attendence.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByEmployeeID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmployeeID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('employee/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/attendence.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/attendence.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(AttendenceId: string, updateAttendenceDTO: UpdateAttendenceDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':attendanceid')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/attendence.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                AttendenceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateAttendenceDTO\n                                            \n                                                            UpdateAttendenceDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { AttendenceService } from '../service/attendence.service';\nimport { AttendenceInterface } from '../interfaces/emp-attendence.interface';\nimport { CreateAttendenceDTO } from '../dto/Attendence/create-attendence.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UpdateAttendenceDTO } from '../dto/Attendence/update-attendence.dto';\n\n@ApiTags('Employee Attendence')\n@Controller('employee-attendence')\nexport class AttendenceController {\n  constructor(private attendService: AttendenceService) {}\n\n  @Post()\n  create(@Body() createDto: CreateAttendenceDTO, @Req() req: Request) {\n    const data: AttendenceInterface = {\n      ...createDto,\n      signby: (req as any).user._id,\n    };\n    return this.attendService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.attendService.findAll();\n  }\n\n  @Get(':id')\n  findByID(@Param('id') id: string) {\n    return this.attendService.findByID(id);\n  }\n\n  @Get('employee/:id')\n  findByEmployeeID(@Param('id') id: string) {\n    return this.attendService.findByEmployeeID(id);\n  }\n\n  @Patch(':attendanceid')\n  update(\n    @Param('attendanceid') AttendenceId: string,\n    updateAttendenceDTO: UpdateAttendenceDTO,\n  ) {\n    return this.attendService.updateEmployeeAttend(\n      AttendenceId,\n      updateAttendenceDTO,\n    );\n  }\n\n  @Delete(':attendanceid')\n  delete(@Param('attendanceid') AttendenceId: string) {\n    return this.attendService.removeEmployeeAttend(AttendenceId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AttendenceInterface.html":{"url":"interfaces/AttendenceInterface.html","title":"interface - AttendenceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AttendenceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/interfaces/emp-attendence.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            employee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone_ip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            signby\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         AttendenceActions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AttendenceActions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        employee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        employee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         CoordinatesInteface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoordinatesInteface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone_ip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone_ip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        signby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        signby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CoordinatesInteface } from 'src/location/interface/Location.interface';\nimport { AttendenceActions } from '../enums/attendence-action.enums';\n\nexport interface AttendenceInterface {\n  employee?: string;\n  action?: AttendenceActions;\n\n  location?: CoordinatesInteface;\n\n  signby?: string;\n\n  phone_ip?: string;\n\n  note?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AttendenceService.html":{"url":"injectables/AttendenceService.html","title":"injectable - AttendenceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AttendenceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/service/attendence.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmployeeID\n                            \n                            \n                                    Async\n                                findByID\n                            \n                            \n                                    Async\n                                removeEmployeeAttend\n                            \n                            \n                                    Async\n                                updateEmployeeAttend\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeRepo: Model, attendenceRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/employee/service/attendence.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        attendenceRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(NewData: AttendenceInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/attendence.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                NewData\n                                            \n                                                            AttendenceInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/attendence.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmployeeID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmployeeID(employee_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/attendence.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employee_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByID(attend_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/attendence.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                attend_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeEmployeeAttend\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEmployeeAttend(attendenceId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/attendence.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                attendenceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEmployeeAttend\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEmployeeAttend(attendenceId: string, updatedData: AttendenceInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/attendence.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                attendenceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedData\n                                            \n                                                            AttendenceInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Employee } from '../Model/employee.model';\nimport { Attendence } from '../Model/attendence.model';\nimport { AttendenceInterface } from '../interfaces/emp-attendence.interface';\n\n@Injectable()\nexport class AttendenceService {\n  constructor(\n    @InjectModel(Employee.name) private readonly employeeRepo: Model,\n    @InjectModel(Attendence.name)\n    private readonly attendenceRepo: Model,\n  ) {}\n\n  async create(NewData: AttendenceInterface) {\n    try {\n      const emp = await this.employeeRepo.findById(NewData.employee);\n      if (!emp) throw new NotFoundException('Employee Not Exist');\n      const new_Record = new this.attendenceRepo({\n        NewData,\n      });\n\n      return await new_Record.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.attendenceRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByID(attend_id: string): Promise {\n    try {\n      return await this.attendenceRepo.findById(attend_id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByEmployeeID(employee_id: string): Promise {\n    try {\n      return await this.attendenceRepo.find({ employee: employee_id }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateEmployeeAttend(\n    attendenceId: string,\n    updatedData: AttendenceInterface,\n  ): Promise {\n    try {\n      if (updatedData.employee) {\n        const emp = await this.employeeRepo.findById(updatedData.employee);\n        if (!emp) throw new NotFoundException('Employee Not Exist');\n      }\n      return await this.attendenceRepo.findByIdAndUpdate(\n        attendenceId,\n        updatedData,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeEmployeeAttend(attendenceId: string): Promise {\n    try {\n      return await this.attendenceRepo.findByIdAndDelete(attendenceId);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                Logout\n                            \n                            \n                                    \n                                    Async\n                                signinByEmail\n                            \n                            \n                                    \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        Logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    Logout(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signinByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signinByEmail(signInByEmailDto: SignInByEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signin-by-email')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInByEmailDto\n                                            \n                                                            SignInByEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Post, Req } from '@nestjs/common';\nimport { CreateUserDto } from './dto/Singup.dto';\nimport { Token } from './interface/token-payload.interface';\nimport { SignInByEmailDto } from './dto/SignIn-by-email.dto';\nimport { Public } from 'src/auth/decorator/IsPuplic.decorator';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { Request } from 'express';\n\n@ApiTags('auth')\n@Public()\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('signup')\n  async signup(@Body() createUserDto: CreateUserDto): Promise {\n    return await this.authService.Usersignup(createUserDto);\n  }\n\n  @Post('signin-by-email')\n  async signinByEmail(\n    @Body() signInByEmailDto: SignInByEmailDto,\n  ): Promise {\n    return await this.authService.signinByEmail(signInByEmailDto);\n  }\n\n  @Post('logout')\n  @HttpCode(200)\n  async Logout(@Req() req: Request): Promise {\n    return await this.authService.logout((req as any).user._id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nATStrategy\n\nATStrategy\n\nAuthModule -->\n\nATStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAuthModule -->\n\nGoogleService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ATStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            GoogleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                        \n                            AdminController\n                        \n                        \n                            GoogleController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ATStrategy } from './Strategy/access-token.strategy';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JWTGuard } from './guards/jwt.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AdminController } from './admin/admin.controller';\nimport { GoogleService } from './google/google.service';\nimport { GoogleController } from './google/google.controller';\n\n@Module({\n  imports: [\n    ConfigModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: configService.get('JWT_TOKEN_EXPIREIN') },\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n  ],\n  controllers: [AuthController, AdminController, GoogleController],\n  providers: [\n    AuthService,\n    ATStrategy,\n    {\n      provide: APP_GUARD,\n      useClass: JWTGuard,\n    },\n    GoogleService,\n  ],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddOneRoleToUser\n                            \n                            \n                                    Async\n                                GenerateTokenandRefresh\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                RemoveOneRoleFromUser\n                            \n                            \n                                    Async\n                                signinByEmail\n                            \n                            \n                                    Async\n                                Usersignup\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                VerifyandGenerateRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddOneRoleToUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddOneRoleToUser(assignRoleDto: AssignRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:153\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                assignRoleDto\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GenerateTokenandRefresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    GenerateTokenandRefresh(userid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        RemoveOneRoleFromUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    RemoveOneRoleFromUser(assignRoleDto: AssignRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                assignRoleDto\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signinByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signinByEmail(signinByEmailDto: SignInByEmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signinByEmailDto\n                                            \n                                                            SignInByEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Usersignup\n                        \n                    \n                \n            \n            \n                \n                        \n                    Usersignup(createUserData: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserData\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        VerifyandGenerateRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    VerifyandGenerateRefreshToken(userIdAndRefreshToken: VerifyandGenerateRefreshToken)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userIdAndRefreshToken\n                                            \n                                                            VerifyandGenerateRefreshToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from 'src/users/service/users.service';\nimport * as bcrypt from 'bcrypt';\nimport { ConfigService } from '@nestjs/config';\nimport { Token } from './interface/token-payload.interface';\nimport { SignInByEmailDto } from './dto/SignIn-by-email.dto';\nimport { AssignRoleDto } from './dto/AssignRole.dto';\nimport { AccountStatus } from 'src/users/enums/account-status.enums';\nimport { UserInterface } from 'src/users/interfaces/User.interface';\nimport { VerifyandGenerateRefreshToken } from './interface/VerifyandGenerateRefreshToken.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  async GenerateTokenandRefresh(userid: string): Promise {\n    try {\n      const [token, refresh] = await Promise.all([\n        this.jwtService.signAsync(\n          { userid: userid },\n          {\n            secret: this.configService.get('JWT_SECRET'),\n            expiresIn: this.configService.get('JWT_TOKEN_EXPIREIN'),\n          },\n        ),\n        this.jwtService.signAsync(\n          { userid: userid },\n          {\n            secret: this.configService.get('JWT_SECRET'),\n            expiresIn: this.configService.get('JWT_REFRESH_EXPIREIN'),\n          },\n        ),\n      ]);\n      return {\n        access_token: token,\n        refresh_token: refresh,\n      };\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async validateUser(email: string, pass: string): Promise {\n    try {\n      const user = await this.userService.findOneByEmail(email);\n      if (user && bcrypt.compare(pass, user.password)) {\n        return user;\n      }\n      return null;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async Usersignup(createUserData: UserInterface): Promise {\n    try {\n      const user = await this.userService.create(createUserData);\n      const token = await this.GenerateTokenandRefresh((user as any)._id);\n      const hashRefresh = await this.userService.hashFunction(\n        token.refresh_token,\n      );\n\n      await this.userService.updateRefresh((user as any)._id, hashRefresh);\n      return token;\n    } catch (err) {\n      if (err.status == 409) {\n        throw new ConflictException(err.response.message);\n      }\n      throw err;\n    }\n  }\n\n  async signinByEmail(signinByEmailDto: SignInByEmailDto): Promise {\n    try {\n      const user = await this.userService.findOneByEmail(\n        signinByEmailDto.email,\n      );\n\n      // Check if email exist and not blocked\n      if (!user || user.status == AccountStatus.BLOCK)\n        throw new ForbiddenException('Accesss Denied!');\n\n      //  Check If Password is valid\n      const isMatchPassword = await this.userService.CompareTextWithHash(\n        signinByEmailDto.password,\n        user.password,\n      );\n      if (!isMatchPassword) throw new ForbiddenException('Accesss Denied!');\n\n      // Generate New Token\n      const tokens = await this.GenerateTokenandRefresh((user as any)._id);\n\n      // Save New Token\n      await this.userService.updateRefresh(\n        (user as any)._id,\n        tokens.refresh_token,\n      );\n\n      return tokens;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async logout(user_id: string) {\n    try {\n      await this.userService.DeleteOneUserRefreshByUserID(user_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async VerifyandGenerateRefreshToken(\n    userIdAndRefreshToken: VerifyandGenerateRefreshToken,\n  ) {\n    try {\n      const user = await this.userService.findOneByid(\n        userIdAndRefreshToken.userid,\n      );\n\n      if (!user || !user.refreshToken)\n        throw new ForbiddenException('Access Denied');\n\n      const IsRefreshMatched = await this.userService.CompareTextWithHash(\n        userIdAndRefreshToken.refresh_token,\n        user.refreshToken,\n      );\n\n      if (!IsRefreshMatched) throw new ForbiddenException('Access Denied');\n\n      const tokens = await this.GenerateTokenandRefresh((user as any)._id);\n\n      await this.userService.updateRefresh(\n        (user as any)._id,\n        tokens.refresh_token,\n      );\n\n      return tokens;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async AddOneRoleToUser(assignRoleDto: AssignRoleDto) {\n    try {\n      return await this.userService.AddOneRoleToUser(\n        assignRoleDto.userid,\n        assignRoleDto.role,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async RemoveOneRoleFromUser(assignRoleDto: AssignRoleDto) {\n    try {\n      return await this.userService.UnAssignOneRoleFromUser(\n        assignRoleDto.userid,\n        assignRoleDto.role,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Billing.html":{"url":"classes/Billing.html","title":"class - Billing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Billing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/Model/billing.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Billing {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BillingController.html":{"url":"controllers/BillingController.html","title":"controller - BillingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BillingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/controller/billing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                billing\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBillingDto: CreateBillingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/billing.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBillingDto\n                                            \n                                                            CreateBillingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/billing.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/billing.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/billing.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateBillingDto: UpdateBillingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/billing.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBillingDto\n                                            \n                                                            UpdateBillingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { BillingService } from '../service/billing.service';\nimport { CreateBillingDto } from '../dto/create-billing.dto';\nimport { UpdateBillingDto } from '../dto/update-billing.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Billing')\n@Controller('billing')\nexport class BillingController {\n  constructor(private readonly billingService: BillingService) {}\n\n  @Post()\n  create(@Body() createBillingDto: CreateBillingDto) {\n    return this.billingService.create(createBillingDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.billingService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.billingService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateBillingDto: UpdateBillingDto) {\n    return this.billingService.update(+id, updateBillingDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.billingService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BillingModule.html":{"url":"modules/BillingModule.html","title":"module - BillingModule","body":"\n                   \n\n\n\n\n    Modules\n    BillingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BillingModule\n\n\n\ncluster_BillingModule_imports\n\n\n\ncluster_BillingModule_providers\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\n\n\nBillingModule\n\nBillingModule\n\nBillingModule -->\n\nEmployeeModule->BillingModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nBillingModule -->\n\nUsersModule->BillingModule\n\n\n\n\n\nBillingService\n\nBillingService\n\nBillingModule -->\n\nBillingService->BillingModule\n\n\n\n\n\nInvoiceService\n\nInvoiceService\n\nBillingModule -->\n\nInvoiceService->BillingModule\n\n\n\n\n\nSpendingAuthService\n\nSpendingAuthService\n\nBillingModule -->\n\nSpendingAuthService->BillingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/billing/billing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BillingService\n                        \n                        \n                            InvoiceService\n                        \n                        \n                            SpendingAuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BillingController\n                        \n                        \n                            SpendingAuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EmployeeModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BillingService } from './service/billing.service';\nimport { BillingController } from './controller/billing.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersModule } from 'src/users/users.module';\nimport {\n  SpendingAuthorization,\n  SpendingAuthorizationSchema,\n} from './Model/Spending Authorization/Spending-Authorization.model';\nimport {\n  EmployeeSpendingAuthorization,\n  EmployeeSpendingAuthorizationSchema,\n} from './Model/Spending Authorization/Emp-Spending-Auth.model';\nimport {\n  InvoiceSpendingAuthorization,\n  InvoiceSpendingAuthorizationSchema,\n} from './Model/Spending Authorization/Invoice-Spending-Auth.model';\nimport { EmployeeModule } from 'src/employee/employee.module';\nimport { Invoice, InvoiceSchema } from './Model/Invoice.model';\nimport { SpendingAuthController } from './controller/spending-auth.controller';\nimport { SpendingAuthService } from './service/spending-auth.service';\nimport { InvoiceService } from './service/invoice.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: SpendingAuthorization.name,\n        schema: SpendingAuthorizationSchema,\n        discriminators: [\n          {\n            name: EmployeeSpendingAuthorization.name,\n            schema: EmployeeSpendingAuthorizationSchema,\n          },\n          {\n            name: InvoiceSpendingAuthorization.name,\n            schema: InvoiceSpendingAuthorizationSchema,\n          },\n        ],\n      },\n      { name: Invoice.name, schema: InvoiceSchema },\n    ]),\n    UsersModule,\n    EmployeeModule,\n  ],\n  controllers: [BillingController, SpendingAuthController],\n  providers: [BillingService, SpendingAuthService, InvoiceService],\n})\nexport class BillingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BillingService.html":{"url":"injectables/BillingService.html","title":"injectable - BillingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BillingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/service/billing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBillingDto: CreateBillingDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/billing.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBillingDto\n                                            \n                                                            CreateBillingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/billing.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/billing.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/billing.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBillingDto: UpdateBillingDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/billing.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBillingDto\n                                            \n                                                            UpdateBillingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBillingDto } from '../dto/create-billing.dto';\nimport { UpdateBillingDto } from '../dto/update-billing.dto';\n\n@Injectable()\nexport class BillingService {\n  create(createBillingDto: CreateBillingDto) {\n    return 'This action adds a new billing';\n  }\n\n  findAll() {\n    return `This action returns all billing`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} billing`;\n  }\n\n  update(id: number, updateBillingDto: UpdateBillingDto) {\n    return `This action updates a #${id} billing`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} billing`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Branch.html":{"url":"classes/Branch.html","title":"class - Branch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Branch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/Model/branch.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                manager\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                work_from\n                            \n                            \n                                    \n                                work_to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Location})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        work_from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        work_to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Location } from 'src/location/Model/location.model';\nimport { User } from 'src/users/Model/user.model';\n\n@Schema({ timestamps: true })\nexport class Branch {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ type: Date })\n  work_from: Date;\n\n  @Prop({ type: Date })\n  work_to: Date;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  manager: string;\n\n  @Prop({ type: Location })\n  location: Location;\n}\nexport const BranchSchema = SchemaFactory.createForClass(Branch);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BranchController.html":{"url":"controllers/BranchController.html","title":"controller - BranchController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BranchController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/branch.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                branch\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                removeBranch\n                            \n                            \n                                    \n                                updateBranch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBranchDto: CreateBranchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBranchDto\n                                            \n                                                            CreateBranchDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeBranch(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateBranch(id: string, updateBranchDto: UpdateBranchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBranchDto\n                                            \n                                                            UpdateBranchDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { BranchService } from './branch.service';\nimport { CreateBranchDto } from './dto/create-branch.dto';\nimport { UpdateBranchDto } from './dto/update-branch.dto';\nimport { Public } from 'src/auth/decorator/IsPuplic.decorator';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('branch')\n@Controller('branch')\nexport class BranchController {\n  constructor(private readonly branchService: BranchService) {}\n\n  @Post()\n  @Public()\n  create(@Body() createBranchDto: CreateBranchDto) {\n    return this.branchService.create(createBranchDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.branchService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.branchService.findOneBranchByID(id);\n  }\n\n  @Patch(':id')\n  updateBranch(\n    @Param('id') id: string,\n    @Body() updateBranchDto: UpdateBranchDto,\n  ) {\n    return this.branchService.updateOneBranchByID(id, updateBranchDto);\n  }\n\n  @Delete(':id')\n  removeBranch(@Param('id') id: string) {\n    return this.branchService.removeOneBranchById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BranchInterface.html":{"url":"interfaces/BranchInterface.html","title":"interface - BranchInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BranchInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/interface/branch.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            manager\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            work_from\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            work_to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         Location\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Location\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        manager\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        manager:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        work_from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        work_from:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        work_to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        work_to:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Location } from 'src/common/interfaces/location.interface';\n\nexport interface BranchInterface {\n  name?: string;\n\n  work_from?: Date;\n\n  work_to?: Date;\n\n  manager?: string;\n\n  location?: Location;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BranchModule.html":{"url":"modules/BranchModule.html","title":"module - BranchModule","body":"\n                   \n\n\n\n\n    Modules\n    BranchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BranchModule\n\n\n\ncluster_BranchModule_providers\n\n\n\ncluster_BranchModule_exports\n\n\n\ncluster_BranchModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nBranchModule\n\nBranchModule\n\nBranchModule -->\n\nUsersModule->BranchModule\n\n\n\n\n\nBranchService \n\nBranchService \n\nBranchService  -->\n\nBranchModule->BranchService \n\n\n\n\n\nBranchService\n\nBranchService\n\nBranchModule -->\n\nBranchService->BranchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/branch/branch.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BranchService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BranchController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BranchService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BranchService } from './branch.service';\nimport { BranchController } from './branch.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Branch, BranchSchema } from './Model/branch.model';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Branch.name, schema: BranchSchema }]),\n    UsersModule,\n  ],\n  controllers: [BranchController],\n  providers: [BranchService],\n  exports: [BranchService],\n})\nexport class BranchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BranchService.html":{"url":"injectables/BranchService.html","title":"injectable - BranchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BranchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/branch.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneBranchByID\n                            \n                            \n                                    Async\n                                IsBranchsAvaliables\n                            \n                            \n                                    Async\n                                removeOneBranchById\n                            \n                            \n                                    Async\n                                updateOneBranchByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(branchRepo: Model, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/branch/branch.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        branchRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBranchData: BranchInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBranchData\n                                            \n                                                            BranchInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneBranchByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneBranchByID(branch_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsBranchsAvaliables\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsBranchsAvaliables(branch_id: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneBranchById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneBranchById(branch_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneBranchByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneBranchByID(branch_id: string, NewBranchData: BranchInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                NewBranchData\n                                            \n                                                            BranchInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Branch } from './Model/branch.model';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { BranchInterface } from './interface/branch.interface';\nimport { UsersService } from 'src/users/service/users.service';\n\n@Injectable()\nexport class BranchService {\n  constructor(\n    @InjectModel(Branch.name) private readonly branchRepo: Model,\n    private userService: UsersService,\n  ) {}\n\n  async create(createBranchData: BranchInterface): Promise {\n    try {\n      if (createBranchData.manager) {\n        const user = await this.userService.findOneByid(\n          createBranchData.manager,\n        );\n        if (!user) throw new NotFoundException('Wrong Manager ID');\n      }\n\n      const branch = new this.branchRepo(createBranchData);\n      return await branch.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.branchRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneBranchByID(branch_id: string): Promise {\n    try {\n      return await this.branchRepo.findById(branch_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsBranchsAvaliables(branch_id: string[]) {\n    try {\n      const branchs = await this.branchRepo.find({ _id: branch_id });\n      if (branchs.length == branch_id.length) {\n        return true;\n      }\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneBranchByID(branch_id: string, NewBranchData: BranchInterface) {\n    try {\n      if (NewBranchData.manager) {\n        const user = await this.userService.findOneByid(NewBranchData.manager);\n        if (!user) throw new NotFoundException('Wrong Manager Id');\n      }\n      return await this.branchRepo.findByIdAndUpdate(branch_id, NewBranchData);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneBranchById(branch_id: string) {\n    try {\n      return await this.branchRepo.findByIdAndDelete(branch_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cart.html":{"url":"classes/Cart.html","title":"class - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cart {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartController.html":{"url":"controllers/CartController.html","title":"controller - CartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cart\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCartDto: CreateCartDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCartDto\n                                            \n                                                            CreateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCartDto: UpdateCartDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCartDto\n                                            \n                                                            UpdateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CreateCartDto } from './dto/create-cart.dto';\nimport { UpdateCartDto } from './dto/update-cart.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('cart')\n@Controller('cart')\nexport class CartController {\n  constructor(private readonly cartService: CartService) {}\n\n  @Post()\n  create(@Body() createCartDto: CreateCartDto) {\n    return this.cartService.create(createCartDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.cartService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.cartService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCartDto: UpdateCartDto) {\n    return this.cartService.update(+id, updateCartDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.cartService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\n\nCartService\n\nCartService\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CartController } from './cart.controller';\n\n@Module({\n  controllers: [CartController],\n  providers: [CartService],\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCartDto: CreateCartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCartDto\n                                            \n                                                            CreateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCartDto: UpdateCartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCartDto\n                                            \n                                                            UpdateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCartDto } from './dto/create-cart.dto';\nimport { UpdateCartDto } from './dto/update-cart.dto';\n\n@Injectable()\nexport class CartService {\n  create(createCartDto: CreateCartDto) {\n    return 'This action adds a new cart';\n  }\n\n  findAll() {\n    return `This action returns all cart`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} cart`;\n  }\n\n  update(id: number, updateCartDto: UpdateCartDto) {\n    return `This action updates a #${id} cart`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} cart`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CashPayment.html":{"url":"classes/CashPayment.html","title":"class - CashPayment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CashPayment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/Model/Cash.payment.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branch\n                            \n                            \n                                payment_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/Cash.payment.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentType\n\n                    \n                \n                \n                    \n                        Default value : PaymentType.CASH\n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/Cash.payment.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PaymentType } from '../enums/payment-type.enums';\nimport mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\n\n@Schema()\nexport class CashPayment {\n  payment_type: PaymentType = PaymentType.CASH;\n\n  @Prop({ required: true, type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n}\n\nexport const CashPaymentSchema = SchemaFactory.createForClass(CashPayment);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CashService.html":{"url":"injectables/CashService.html","title":"injectable - CashService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CashService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/service/cash.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCashPayment\n                            \n                            \n                                    Async\n                                updateCash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepo: Model, ordeSerivce: OrderService, usersService: UsersService, branchService: BranchService)\n                    \n                \n                        \n                            \n                                Defined in src/payment/service/cash.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordeSerivce\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        branchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCashPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCashPayment(data: CreateCashPaymentInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/service/cash.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateCashPaymentInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateCash\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCash(id: string, data: UpdateCashPaymentInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/service/cash.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdateCashPaymentInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Payment } from '../Model/payment.model';\nimport { Model } from 'mongoose';\nimport { CreateCashPaymentInterface } from '../interface/Cash/Create-Cash-Payment.interface';\nimport { UpdateCashPaymentInterface } from '../interface/Cash/Update-Cash-Payment.interface';\nimport { OrderService } from 'src/order/service/order.service';\nimport { UsersService } from 'src/users/service/users.service';\nimport { BranchService } from 'src/branch/branch.service';\n\n@Injectable()\nexport class CashService {\n  constructor(\n    @InjectModel(Payment.name) private readonly paymentRepo: Model,\n    private ordeSerivce: OrderService,\n    private usersService: UsersService,\n    private branchService: BranchService,\n  ) {}\n  async createCashPayment(data: CreateCashPaymentInterface) {\n    try {\n      const branch = await this.branchService.findOneBranchByID(data.branch);\n      if (!branch) throw new NotFoundException('Branch Not Exist');\n      // Check If Order Exist\n      const order = await this.ordeSerivce.findOneOrderByID(data.order_id);\n      if (!order) throw new NotFoundException('Order Not Exist');\n\n      // Check If User Exist\n      const user = await this.usersService.findOneByid(data.createby);\n      if (!user) throw new NotFoundException('User Not Exist');\n\n      const newPayment = new this.paymentRepo(data);\n      return await newPayment.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateCash(id: string, data: UpdateCashPaymentInterface) {\n    try {\n      if (data.branch) {\n        const branch = await this.branchService.findOneBranchByID(data.branch);\n        if (!branch) throw new NotFoundException('Branch Not Exist');\n      }\n\n      if (data.order_id) {\n        // Check If Order Exist\n        const order = await this.ordeSerivce.findOneOrderByID(data.order_id);\n        if (!order) throw new NotFoundException('Order Not Exist');\n      }\n\n      if (data.createby) {\n        // Check If User Exist\n        const user = await this.usersService.findOneByid(data.createby);\n        if (!user) throw new NotFoundException('User Not Exist');\n      }\n\n      return await this.paymentRepo.findByIdAndUpdate(id, data);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cashier.html":{"url":"classes/Cashier.html","title":"class - Cashier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cashier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cashier/entities/cashier.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cashier {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CashierController.html":{"url":"controllers/CashierController.html","title":"controller - CashierController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CashierController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cashier/cashier.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cashier\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCashierDto: CreateCashierDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/cashier/cashier.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCashierDto\n                                            \n                                                            CreateCashierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/cashier/cashier.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cashier/cashier.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cashier/cashier.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCashierDto: UpdateCashierDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cashier/cashier.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCashierDto\n                                            \n                                                            UpdateCashierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CashierService } from './cashier.service';\nimport { CreateCashierDto } from './dto/create-cashier.dto';\nimport { UpdateCashierDto } from './dto/update-cashier.dto';\n\n@Controller('cashier')\nexport class CashierController {\n  constructor(private readonly cashierService: CashierService) {}\n\n  @Post()\n  create(@Body() createCashierDto: CreateCashierDto) {\n    return this.cashierService.create(createCashierDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.cashierService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.cashierService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCashierDto: UpdateCashierDto) {\n    return this.cashierService.update(+id, updateCashierDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.cashierService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CashierModule.html":{"url":"modules/CashierModule.html","title":"module - CashierModule","body":"\n                   \n\n\n\n\n    Modules\n    CashierModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CashierModule\n\n\n\ncluster_CashierModule_providers\n\n\n\n\nCashierService\n\nCashierService\n\n\n\nCashierModule\n\nCashierModule\n\nCashierModule -->\n\nCashierService->CashierModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cashier/cashier.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CashierService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CashierController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CashierService } from './cashier.service';\nimport { CashierController } from './cashier.controller';\n\n@Module({\n  controllers: [CashierController],\n  providers: [CashierService],\n})\nexport class CashierModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CashierService.html":{"url":"injectables/CashierService.html","title":"injectable - CashierService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CashierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cashier/cashier.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCashierDto: CreateCashierDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cashier/cashier.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCashierDto\n                                            \n                                                            CreateCashierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/cashier/cashier.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cashier/cashier.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cashier/cashier.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCashierDto: UpdateCashierDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cashier/cashier.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCashierDto\n                                            \n                                                            UpdateCashierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCashierDto } from './dto/create-cashier.dto';\nimport { UpdateCashierDto } from './dto/update-cashier.dto';\n\n@Injectable()\nexport class CashierService {\n  create(createCashierDto: CreateCashierDto) {\n    return 'This action adds a new cashier';\n  }\n\n  findAll() {\n    return `This action returns all cashier`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} cashier`;\n  }\n\n  update(id: number, updateCashierDto: UpdateCashierDto) {\n    return `This action updates a #${id} cashier`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} cashier`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeUserStatusDTO.html":{"url":"classes/ChangeUserStatusDTO.html","title":"class - ChangeUserStatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeUserStatusDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/Change-User-Status.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(AccountStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/Change-User-Status.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty } from 'class-validator';\nimport { AccountStatus } from '../enums/account-status.enums';\n\nexport class ChangeUserStatusDTO {\n  @IsNotEmpty()\n  @IsEnum(AccountStatus)\n  status: AccountStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coordinates.html":{"url":"classes/Coordinates.html","title":"class - Coordinates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coordinates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/Model/location.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                lat\n                            \n                            \n                                    \n                                long\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nexport class Coordinates {\n  @Prop({ required: true })\n  long: number;\n\n  @Prop({ required: true })\n  lat: number;\n}\n\nconst CoordinatesSchema = SchemaFactory.createForClass(Coordinates);\n\n@Schema()\nexport class Location {\n  @Prop()\n  name: string;\n\n  @Prop()\n  country: string;\n\n  @Prop()\n  city: string;\n\n  @Prop()\n  district: string;\n\n  @Prop()\n  neighborhood: string;\n\n  @Prop()\n  street_Address: string;\n\n  @Prop()\n  building_Number: string;\n\n  @Prop()\n  floor: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: CoordinatesSchema })\n  cordinates: Coordinates;\n}\n\nexport const LocationSchema = SchemaFactory.createForClass(Location);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CoordinatesInteface.html":{"url":"classes/CoordinatesInteface.html","title":"class - CoordinatesInteface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CoordinatesInteface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/interface/Location.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                lat\n                            \n                            \n                                    Optional\n                                long\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/location/interface/Location.interface.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/location/interface/Location.interface.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CoordinatesInteface {\n  long?: number;\n\n  lat?: number;\n}\n\nexport interface LocationInterface {\n  name?: string;\n\n  country?: string;\n\n  city?: string;\n\n  district?: string;\n\n  neighborhood?: string;\n\n  street_Address?: string;\n\n  building_Number?: string;\n\n  floor?: string;\n\n  description?: string;\n\n  cordinates?: CoordinatesInteface;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coupon.html":{"url":"classes/Coupon.html","title":"class - Coupon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coupon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/Model/coupon.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branches\n                            \n                            \n                                    \n                                from\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                percent_discount\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percent_discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\n\n@Schema()\nexport class Coupon {\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  branches: string[];\n\n  @Prop({ type: Date })\n  from: Date;\n\n  @Prop({ type: Date })\n  to: Date;\n\n  @Prop({ required: true })\n  quantity: number;\n\n  @Prop({ required: true })\n  percent_discount: number;\n}\n\nexport const CouponSchema = SchemaFactory.createForClass(Coupon);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CouponController.html":{"url":"controllers/CouponController.html","title":"controller - CouponController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CouponController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/coupon.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                coupon\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCouponDto: CreateCouponDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCouponDto\n                                            \n                                                            CreateCouponDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCouponDto: UpdateCouponDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCouponDto\n                                            \n                                                            UpdateCouponDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { CouponService } from './coupon.service';\nimport { CreateCouponDto } from './dto/create-coupon.dto';\nimport { UpdateCouponDto } from './dto/update-coupon.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('coupon')\n@Controller('coupon')\nexport class CouponController {\n  constructor(private readonly couponService: CouponService) {}\n\n  @Post()\n  create(@Body() createCouponDto: CreateCouponDto) {\n    return this.couponService.create(createCouponDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.couponService.findAll();\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.couponService.findOneByID(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCouponDto: UpdateCouponDto) {\n    return this.couponService.updateOneCouponByID(id, updateCouponDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.couponService.removeOneCouponByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CouponInterface.html":{"url":"interfaces/CouponInterface.html","title":"interface - CouponInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CouponInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/interface/Coupon.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branches\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            percent_discount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branches:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent_discount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percent_discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CouponInterface {\n  name?: string;\n\n  branches?: string[];\n\n  from?: Date;\n\n  to?: Date;\n\n  quantity?: number;\n\n  percent_discount?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CouponModule.html":{"url":"modules/CouponModule.html","title":"module - CouponModule","body":"\n                   \n\n\n\n\n    Modules\n    CouponModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CouponModule\n\n\n\ncluster_CouponModule_exports\n\n\n\ncluster_CouponModule_providers\n\n\n\ncluster_CouponModule_imports\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nCouponModule\n\nCouponModule\n\nCouponModule -->\n\nBranchModule->CouponModule\n\n\n\n\n\nCouponService \n\nCouponService \n\nCouponService  -->\n\nCouponModule->CouponService \n\n\n\n\n\nCouponService\n\nCouponService\n\nCouponModule -->\n\nCouponService->CouponModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/coupon/coupon.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CouponService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CouponController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CouponService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CouponService } from './coupon.service';\nimport { CouponController } from './coupon.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Coupon, CouponSchema } from './Model/coupon.model';\nimport { BranchModule } from 'src/branch/branch.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Coupon.name, schema: CouponSchema }]),\n    BranchModule,\n  ],\n  controllers: [CouponController],\n  providers: [CouponService],\n  exports: [CouponService],\n})\nexport class CouponModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CouponService.html":{"url":"injectables/CouponService.html","title":"injectable - CouponService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CouponService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/coupon.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCouponName\n                            \n                            \n                                    Async\n                                findOneByID\n                            \n                            \n                                    Async\n                                IsValidCouponByName\n                            \n                            \n                                    Async\n                                IsValidCouponInBranchByCouponID\n                            \n                            \n                                    Async\n                                IsValidCouponInBranchByCouponName\n                            \n                            \n                                    Async\n                                removeOneCouponByID\n                            \n                            \n                                    Async\n                                SubtractOneFromCouponQuantity\n                            \n                            \n                                    Async\n                                updateOneCouponByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(couponRepo: Model, branchService: BranchService)\n                    \n                \n                        \n                            \n                                Defined in src/coupon/coupon.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        couponRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        branchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCouponData: CouponInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCouponData\n                                            \n                                                            CouponInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCouponName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCouponName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(coupon_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                coupon_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCouponByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCouponByName(couponName: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                couponName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCouponInBranchByCouponID\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCouponInBranchByCouponID(couponID: string, branchId: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                couponID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCouponInBranchByCouponName\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCouponInBranchByCouponName(couponName: string, branchId: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                couponName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneCouponByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneCouponByID(coupon_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                coupon_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        SubtractOneFromCouponQuantity\n                        \n                    \n                \n            \n            \n                \n                        \n                    SubtractOneFromCouponQuantity(couponID: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                couponID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneCouponByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneCouponByID(coupon_id: string, updatedCouponData: CouponInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                coupon_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedCouponData\n                                            \n                                                            CouponInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Coupon } from './Model/coupon.model';\nimport { ClientSession, Model } from 'mongoose';\nimport { BranchService } from 'src/branch/branch.service';\nimport { CouponInterface } from './interface/Coupon.interface';\n\n@Injectable()\nexport class CouponService {\n  constructor(\n    @InjectModel(Coupon.name) private readonly couponRepo: Model,\n    private branchService: BranchService,\n  ) {}\n\n  async create(createCouponData: CouponInterface) {\n    try {\n      const is_branchavailable = await this.branchService.IsBranchsAvaliables(\n        createCouponData.branches,\n      );\n\n      if (!is_branchavailable) throw new NotFoundException('Wrong Branch IDs');\n\n      const coupon = new this.couponRepo(createCouponData);\n\n      return await coupon.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByCouponName(name: string) {\n    try {\n      return await this.couponRepo.findOne({ name });\n    } catch (err) {\n      throw err;\n    }\n  }\n  async findAll() {\n    try {\n      return await this.couponRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneByID(coupon_id: string) {\n    try {\n      return await this.couponRepo.findById(coupon_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneCouponByID(\n    coupon_id: string,\n    updatedCouponData: CouponInterface,\n  ) {\n    try {\n      if (updatedCouponData.branches) {\n        const is_branchavailable = await this.branchService.IsBranchsAvaliables(\n          updatedCouponData.branches,\n        );\n        if (!is_branchavailable)\n          throw new NotFoundException('Wrong Branch IDs');\n      }\n      return await this.couponRepo.findByIdAndUpdate(\n        coupon_id,\n        updatedCouponData,\n      );\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async removeOneCouponByID(coupon_id: string) {\n    try {\n      return await this.couponRepo.findByIdAndDelete(coupon_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidCouponByName(couponName: string, session?: ClientSession) {\n    try {\n      const currentDate = new Date();\n\n      const validCoupon = await this.couponRepo\n        .findOne({\n          name: couponName,\n          quantity: { $gt: 0 },\n          from: { $lte: currentDate },\n          to: { $gte: currentDate },\n        })\n        .session(session)\n        .exec();\n\n      return !!validCoupon;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidCouponInBranchByCouponName(\n    couponName: string,\n    branchId: string,\n    session?: ClientSession,\n  ) {\n    try {\n      const currentDate = new Date();\n\n      const validCoupon = await this.couponRepo\n        .findOne({\n          name: couponName,\n          quantity: { $gt: 0 },\n          from: { $lte: currentDate },\n          to: { $gte: currentDate },\n          branches: branchId,\n        })\n        .session(session)\n        .exec();\n\n      return !!validCoupon;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidCouponInBranchByCouponID(\n    couponID: string,\n    branchId: string,\n    session?: ClientSession,\n  ) {\n    try {\n      const currentDate = new Date();\n\n      const validCoupon = await this.couponRepo\n        .findOne({\n          _id: couponID,\n          quantity: { $gt: 0 },\n          $or: [\n            { from: { $exists: false }, to: { $exists: false } }, // Neither from nor to dates exist\n            { from: { $lte: currentDate }, to: { $gte: currentDate } }, // Current date is within the from and to dates\n          ],\n          branches: { $in: [branchId] },\n        })\n        .session(session)\n        .exec();\n\n      return !!validCoupon;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async SubtractOneFromCouponQuantity(\n    couponID: string,\n    session?: ClientSession,\n  ) {\n    try {\n      return await this.couponRepo\n        .findByIdAndUpdate(couponID, { $inc: { quantity: -1 } }, { new: true })\n        .session(session);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAttendenceDTO.html":{"url":"classes/CreateAttendenceDTO.html","title":"class - CreateAttendenceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAttendenceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/Attendence/create-attendence.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                employee_id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                phone_ip\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttendenceActions\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Action taken for attendance', enum: AttendenceActions})@IsEnum(AttendenceActions)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/create-attendence.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        employee_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unique identifier of the employee'})@IsMongoId()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/create-attendence.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateCordinatesDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Location details', type: CreateCordinatesDto})@IsNotEmpty()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/create-attendence.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Additional notes'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/create-attendence.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        phone_ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'IP address of the phone'})@IsNotEmpty()@IsIP()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/create-attendence.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsIP,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { AttendenceActions } from '../../enums/attendence-action.enums';\nimport { Type } from 'class-transformer';\nimport { CreateCordinatesDto } from 'src/location/dto/create-location.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreateAttendenceDTO {\n  @ApiProperty({ description: 'The unique identifier of the employee' })\n  @IsMongoId()\n  @IsNotEmpty()\n  employee_id: string;\n\n  @ApiProperty({\n    description: 'Action taken for attendance',\n    enum: AttendenceActions,\n  })\n  @IsEnum(AttendenceActions)\n  @IsNotEmpty()\n  action: AttendenceActions;\n\n  @ApiProperty({ description: 'Location details', type: CreateCordinatesDto })\n  @IsNotEmpty()\n  @ValidateNested()\n  @Type(() => CreateCordinatesDto)\n  location: CreateCordinatesDto;\n\n  @ApiProperty({ description: 'IP address of the phone' })\n  @IsNotEmpty()\n  @IsIP()\n  @IsString()\n  phone_ip: string;\n\n  @ApiPropertyOptional({ description: 'Additional notes' })\n  @IsOptional()\n  @IsString()\n  note?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBaseOrderDto.html":{"url":"classes/CreateBaseOrderDto.html","title":"class - CreateBaseOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBaseOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/base-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({each: true})@IsMongoId({each: true})@ArrayMinSize(1)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMinSize,\n  IsArray,\n  IsDateString,\n  IsMongoId,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateOrderItemsDto } from './order-items/create-order-items.dto';\nimport { Type } from 'class-transformer';\n\nexport class CreateBaseOrderDto {\n  @ValidateNested({ each: true })\n  @Type(() => CreateOrderItemsDto)\n  @IsArray()\n  @ArrayMinSize(1)\n  items: CreateOrderItemsDto[];\n\n  @IsOptional()\n  @IsDateString()\n  readyat?: Date;\n\n  @IsOptional()\n  @IsString({ each: true })\n  @IsMongoId({ each: true })\n  @ArrayMinSize(1)\n  @IsArray()\n  offers?: string[];\n\n  @IsOptional()\n  @IsMongoId()\n  coupon?: string;\n\n  @IsOptional()\n  @IsString()\n  kitchen_notes?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  customer?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBasePaymentDto.html":{"url":"classes/CreateBasePaymentDto.html","title":"class - CreateBasePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBasePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/create-base-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                currency\n                            \n                            \n                                    \n                                    \n                                    \n                                order_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-base-payment.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentCurrency\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsEnum(PaymentCurrency)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-base-payment.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-base-payment.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { PaymentCurrency } from '../enums/payment-currency.enum';\n\nexport class CreateBasePaymentDto {\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  order_id: string;\n\n  @IsOptional()\n  @IsString()\n  @IsEnum(PaymentCurrency)\n  currency: PaymentCurrency;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateBasePaymentInterface.html":{"url":"interfaces/CreateBasePaymentInterface.html","title":"interface - CreateBasePaymentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateBasePaymentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/interface/Create-Base-Payment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            createby\n                                        \n                                \n                                \n                                        \n                                            currency\n                                        \n                                \n                                \n                                        \n                                            order_id\n                                        \n                                \n                                \n                                        \n                                            payment_status\n                                        \n                                \n                                \n                                        \n                                            payment_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         PaymentCurrency\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentCurrency\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_status:         PaymentStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaymentCurrency } from '../enums/payment-currency.enum';\nimport { PaymentStatus } from '../enums/payment-status.enums';\n\nexport interface CreateBasePaymentInterface {\n  payment_type: string;\n\n  payment_status: PaymentStatus;\n\n  amount: number;\n\n  order_id: string;\n\n  createby: string;\n\n  currency: PaymentCurrency;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBillingDto.html":{"url":"classes/CreateBillingDto.html","title":"class - CreateBillingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBillingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/create-billing.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBillingDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBranchDto.html":{"url":"classes/CreateBranchDto.html","title":"class - CreateBranchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBranchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/dto/create-branch.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                manager\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                work_from\n                            \n                            \n                                    \n                                    \n                                    \n                                work_to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: CreateLocationDto, required: false})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user_id', required: false})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Port Said', required: false})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        work_from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-20', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        work_to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-20', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsDateString,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class CreateBranchDto {\n  @ApiProperty({\n    example: 'Port Said',\n    required: false,\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: '2020-02-20',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  work_from: Date;\n\n  @ApiProperty({\n    example: '2020-02-20',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  work_to: Date;\n\n  @ApiProperty({\n    example: 'user_id',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  manager?: string;\n\n  @ApiProperty({\n    // example: ,\n    type: CreateLocationDto,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  location?: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCartDto.html":{"url":"classes/CreateCartDto.html","title":"class - CreateCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dto/create-cart.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCartDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateCashPaymentInterface.html":{"url":"interfaces/CreateCashPaymentInterface.html","title":"interface - CreateCashPaymentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateCashPaymentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/interface/Cash/Create-Cash-Payment.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateBasePaymentInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            branch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CreateBasePaymentInterface } from '../Create-Base-Payment.interface';\n\nexport interface CreateCashPaymentInterface extends CreateBasePaymentInterface {\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCashierDto.html":{"url":"classes/CreateCashierDto.html","title":"class - CreateCashierDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCashierDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cashier/dto/create-cashier.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCashierDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCordinatesDto.html":{"url":"classes/CreateCordinatesDto.html","title":"class - CreateCordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/create-location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                lat\n                            \n                            \n                                    \n                                    \n                                    \n                                long\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '17.1', name: 'Latitude'})@IsNotEmpty()@IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '17.1', name: 'Longitude'})@IsLongitude()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsLatitude,\n  IsLongitude,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateCordinatesDto {\n  @ApiProperty({\n    example: '17.1',\n    name: 'Longitude',\n  })\n  @IsLongitude()\n  @IsNotEmpty()\n  long: number;\n\n  @ApiProperty({\n    example: '17.1',\n    name: 'Latitude',\n  })\n  @IsNotEmpty()\n  @IsLatitude()\n  lat: number;\n}\n\nexport class CreateLocationDto {\n  @ApiProperty({\n    example: 'My Home',\n    name: 'name',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'Egypt',\n    name: 'country',\n  })\n  @IsString()\n  @IsNotEmpty()\n  country: string;\n\n  @ApiProperty({\n    example: 'Port Said',\n    name: 'city',\n  })\n  @IsString()\n  @IsNotEmpty()\n  city: string;\n\n  @ApiProperty({\n    example: 'Madient Nasr',\n    name: 'district',\n  })\n  @IsString()\n  @IsNotEmpty()\n  district: string;\n\n  @ApiProperty({\n    example: 'Obour Area',\n    name: 'neighborhood',\n  })\n  @IsString()\n  @IsNotEmpty()\n  neighborhood: string;\n\n  @ApiProperty({\n    example: 'Mohamed Ali Street',\n    name: 'street_Address',\n  })\n  @IsString()\n  @IsNotEmpty()\n  street_Address: string;\n\n  @ApiProperty({\n    example: '3C',\n    name: 'building_Number',\n  })\n  @IsString()\n  @IsNotEmpty()\n  building_Number: string;\n\n  @ApiProperty({\n    example: 'third Or 3th',\n    name: 'floor',\n  })\n  @IsString()\n  @IsNotEmpty()\n  floor: string;\n\n  @ApiProperty({\n    example: 'the building next to the market',\n    name: 'description',\n  })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({\n    type: CreateCordinatesDto,\n    name: 'cordinates',\n  })\n  @ValidateNested()\n  @Type(() => CreateCordinatesDto)\n  @IsOptional()\n  cordinates: CreateCordinatesDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCouponDto.html":{"url":"classes/CreateCouponDto.html","title":"class - CreateCouponDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCouponDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/dto/create-coupon.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                branches\n                            \n                            \n                                    \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                percent_discount\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[branch1,branch2]', required: false})@IsNotEmpty()@ArrayMinSize(1)@IsString({each: true})@IsMongoId({each: true})@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-03', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'copoun1', required: false})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        percent_discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:63\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 20, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-03', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsDateString,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateCouponDto {\n  @ApiProperty({\n    example: 'copoun1',\n    required: false,\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: '[branch1,branch2]',\n    required: false,\n  })\n  @IsNotEmpty()\n  @ArrayMinSize(1)\n  @IsString({ each: true })\n  @IsMongoId({ each: true })\n  @IsArray()\n  branches: string[];\n\n  @ApiProperty({\n    example: '2020-02-03',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  from: Date;\n\n  @ApiProperty({\n    example: '2020-02-03',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  to: Date;\n\n  @ApiProperty({\n    example: 20,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty({\n    example: 10,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  percent_discount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomerDto.html":{"url":"classes/CreateCustomerDto.html","title":"class - CreateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/customer/create-customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                    \n                                    \n                                notification_email\n                            \n                            \n                                    \n                                    \n                                    \n                                notification_phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the customer', example: 'John Doe'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/create-customer.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Optional notes about the customer', example: 'Important client', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/create-customer.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        notification_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Optional Notification Email for the customer', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/create-customer.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        notification_phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Optional Notification Phone for the customer', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/create-customer.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The phone numbers of the customer', example: undefined, type: undefined, isArray: true})@IsNotEmpty()@IsString({each: true})@ArrayMinSize(1)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/create-customer.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateCustomerDto {\n  @ApiProperty({\n    description: 'The name of the customer',\n    example: 'John Doe',\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: 'The phone numbers of the customer',\n    example: ['1234567890'],\n    type: [String],\n    isArray: true,\n  })\n  @IsNotEmpty()\n  @IsString({ each: true })\n  @ArrayMinSize(1)\n  @IsArray()\n  phone: string[];\n\n  @ApiProperty({\n    description: 'Optional notes about the customer',\n    example: 'Important client',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  notes?: string;\n\n  @ApiProperty({\n    description: 'Optional Notification Phone for the customer',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  notification_phone: string;\n\n  @ApiProperty({\n    description: 'Optional Notification Email for the customer',\n\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  notification_email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomerLocationDto.html":{"url":"classes/CreateCustomerLocationDto.html","title":"class - CreateCustomerLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/customer locations/Create-Customer-Location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer locations/Create-Customer-Location.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The locations associated with the customer', type: undefined, isArray: true})@ValidateNested({each: true})@Type(undefined)@IsNotEmpty()@ArrayMinSize(1)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer locations/Create-Customer-Location.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsMongoId,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class CreateCustomerLocationDto {\n  @IsMongoId()\n  @IsNotEmpty()\n  @IsString()\n  customer: string;\n\n  @ApiProperty({\n    description: 'The locations associated with the customer',\n    type: [CreateLocationDto],\n    isArray: true,\n  })\n  @ValidateNested({ each: true })\n  @Type(() => CreateLocationDto)\n  @IsNotEmpty()\n  @ArrayMinSize(1)\n  @IsArray()\n  location: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeliveryOrderDto.html":{"url":"classes/CreateDeliveryOrderDto.html","title":"class - CreateDeliveryOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeliveryOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/delivery/create-delivery-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateBaseOrderDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deliverey_method\n                            \n                            \n                                    \n                                    \n                                    \n                                delivery_price\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                delivery_status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                end_location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pilot\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deliverey_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DelivereyMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(DelivereyMethod)@ApiProperty({description: 'The method of delivery', example: undefined, enum: DelivereyMethod, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/create-delivery-order.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        delivery_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryPrice\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(DeliveryPrice)@ApiProperty({description: 'The price category of the delivery', example: undefined, enum: DeliveryPrice, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/create-delivery-order.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        delivery_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(DeliveryStatus)@ApiProperty({description: 'The current status of the delivery', example: undefined, enum: DeliveryStatus, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/create-delivery-order.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        end_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()@IsString()@ApiProperty({description: 'The MongoDB ID of the end location', example: '507f1f77bcf86cd799439011'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/create-delivery-order.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pilot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({description: 'The name of the pilot handling the delivery', example: 'Mohamed', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/create-delivery-order.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({each: true})@IsMongoId({each: true})@ArrayMinSize(1)@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:22\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsMongoId,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { CreateBaseOrderDto } from '../base-order.dto';\nimport { DeliveryPrice } from 'src/delivery/enums/Deliver-price.enums';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { DelivereyMethod } from 'src/delivery/enums/Deliverey-method.enums';\nimport { DeliveryStatus } from 'src/delivery/enums/delivery-status.enums';\n\nexport class CreateDeliveryOrderDto extends CreateBaseOrderDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  @ApiProperty({\n    description: 'The MongoDB ID of the end location',\n    example: '507f1f77bcf86cd799439011',\n  })\n  end_location: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    description: 'The name of the pilot handling the delivery',\n    example: 'Mohamed',\n    required: false,\n  })\n  pilot?: string;\n\n  @IsOptional()\n  @IsEnum(DelivereyMethod)\n  @ApiProperty({\n    description: 'The method of delivery',\n    example: DelivereyMethod.BIKE,\n    enum: DelivereyMethod,\n    required: false,\n  })\n  deliverey_method?: DelivereyMethod;\n\n  @IsNotEmpty()\n  @IsEnum(DeliveryPrice)\n  @ApiProperty({\n    description: 'The price category of the delivery',\n    example: DeliveryPrice.FOURTY,\n    enum: DeliveryPrice,\n    required: false,\n  })\n  delivery_price: DeliveryPrice;\n\n  @IsOptional()\n  @IsEnum(DeliveryStatus)\n  @ApiProperty({\n    description: 'The current status of the delivery',\n    example: DeliveryStatus.INDELIVER,\n    enum: DeliveryStatus,\n    required: false,\n  })\n  delivery_status?: DeliveryStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDineInOrderDto.html":{"url":"classes/CreateDineInOrderDto.html","title":"class - CreateDineInOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDineInOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/dinein/create-dinein-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateBaseOrderDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                table_number\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        table_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/dinein/create-dinein-order.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({each: true})@IsMongoId({each: true})@ArrayMinSize(1)@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:22\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { CreateBaseOrderDto } from '../base-order.dto';\n\nexport class CreateDineInOrderDto extends CreateBaseOrderDto {\n  @IsString()\n  @IsNotEmpty()\n  table_number: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/employee/create-employee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bank_account\n                            \n                            \n                                    \n                                    \n                                    \n                                base_salary\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                birthdate\n                            \n                            \n                                    \n                                    \n                                    \n                                department\n                            \n                            \n                                    \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                join_at\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                phones\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                ssid\n                            \n                            \n                                    \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                working_in\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Address of the employee', type: CreateLocationDto, required: false})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bank_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Bank account number (optional)', required: false, example: '123456789'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        base_salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Base salary of the employee', example: 50000})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        birthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Birthdate of the employee (optional)', example: '1990-01-01', required: false})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Department\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Department, description: 'Department the employee works in'})@IsNotEmpty()@IsEnum(Department)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Sex, description: 'Gender of the employee'})@IsEnum(Sex)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        join_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The date the employee joined', example: '2023-01-01'})@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Phone numbers', example: undefined, isArray: true})@IsString({each: true})@IsArray()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        ssid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Social Security ID (optional)', required: false, example: '123-45-6789'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User MongoDB ID', required: false, example: '507f191e810c19729de860ea'})@IsOptional()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        working_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Working in MongoDB ID', example: '507f191e810c19729de860eb'})@IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/create-employee.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsMongoId,\n  IsEnum,\n  IsNumber,\n  IsString,\n  IsDateString,\n  IsNotEmpty,\n  IsOptional,\n  IsArray,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Department } from '../../enums/department.enums';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class CreateEmployeeDto {\n  @ApiProperty({\n    description: 'The date the employee joined',\n    example: '2023-01-01',\n  })\n  @IsDateString()\n  @IsNotEmpty()\n  join_at: Date;\n\n  @ApiProperty({\n    description: 'User MongoDB ID',\n    required: false,\n    example: '507f191e810c19729de860ea',\n  })\n  @IsOptional()\n  @IsMongoId()\n  user: string;\n\n  @ApiProperty({\n    description: 'Working in MongoDB ID',\n    example: '507f191e810c19729de860eb',\n  })\n  @IsNotEmpty()\n  @IsMongoId()\n  working_in: string;\n\n  @ApiProperty({\n    enum: Department,\n    description: 'Department the employee works in',\n  })\n  @IsNotEmpty()\n  @IsEnum(Department)\n  department: Department;\n\n  @ApiProperty({ description: 'Base salary of the employee', example: 50000 })\n  @IsNumber()\n  @IsNotEmpty()\n  base_salary: number;\n\n  @ApiProperty({\n    description: 'Phone numbers',\n    example: ['+1234567890'],\n    isArray: true,\n  })\n  @IsString({ each: true })\n  @IsArray()\n  @IsNotEmpty()\n  phones: string[];\n\n  @ApiProperty({ enum: Sex, description: 'Gender of the employee' })\n  @IsEnum(Sex)\n  @IsNotEmpty()\n  gender: Sex;\n\n  @ApiProperty({\n    description: 'Address of the employee',\n    type: CreateLocationDto,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  address?: CreateLocationDto;\n\n  @ApiProperty({\n    description: 'Social Security ID (optional)',\n    required: false,\n    example: '123-45-6789',\n  })\n  @IsOptional()\n  @IsString()\n  ssid?: string;\n\n  @ApiProperty({\n    description: 'Birthdate of the employee (optional)',\n    example: '1990-01-01',\n    required: false,\n  })\n  @IsDateString()\n  @IsOptional()\n  birthdate?: Date;\n\n  @ApiProperty({\n    description: 'Bank account number (optional)',\n    required: false,\n    example: '123456789',\n  })\n  @IsOptional()\n  @IsString()\n  bank_account?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeMonthlyPdrDTO.html":{"url":"classes/CreateEmployeeMonthlyPdrDTO.html","title":"class - CreateEmployeeMonthlyPdrDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeMonthlyPdrDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/Monthly PDR/create-employee-monthly-pdr.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                details\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                employee\n                            \n                            \n                                    \n                                    \n                                    \n                                pdr\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Date of the PDR', example: '2024-03-19', type: Date})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/create-employee-monthly-pdr.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Additional details regarding the PDR', example: 'Exceeded expectations in project management and leadership skills.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/create-employee-monthly-pdr.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The unique identifier of the employee, must be a valid MongoDB ObjectId', example: '507f191e810c19729de860ea'})@IsNotEmpty()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/create-employee-monthly-pdr.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        pdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'PDR (Performance Development Review) rating', example: 8.5, type: Number})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/create-employee-monthly-pdr.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsDateString,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateEmployeeMonthlyPdrDTO {\n  @ApiProperty({\n    description:\n      'The unique identifier of the employee, must be a valid MongoDB ObjectId',\n    example: '507f191e810c19729de860ea',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  employee: string;\n\n  @ApiProperty({\n    description: 'PDR (Performance Development Review) rating',\n    example: 8.5,\n    type: Number,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  pdr: number;\n\n  @ApiPropertyOptional({\n    description: 'Additional details regarding the PDR',\n    example:\n      'Exceeded expectations in project management and leadership skills.',\n  })\n  @IsOptional()\n  @IsString()\n  details?: string;\n\n  @ApiPropertyOptional({\n    description: 'Date of the PDR',\n    example: '2024-03-19',\n    type: Date,\n  })\n  @IsOptional()\n  @IsDateString()\n  date?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeePdrActionDto.html":{"url":"classes/CreateEmployeePdrActionDto.html","title":"class - CreateEmployeePdrActionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeePdrActionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/Employee  PDR Actions/create-emp-pdr-action.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                employee\n                            \n                            \n                                    \n                                    \n                                    \n                                grade\n                            \n                            \n                                    \n                                    \n                                    \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PDRActions\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(PDRActions)@ApiProperty({description: 'The action to be taken', enum: PDRActions, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/create-emp-pdr-action.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()@ApiPropertyOptional({description: 'The date of the action', example: '2023-03-19', required: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/create-emp-pdr-action.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()@IsString()@ApiProperty({description: 'The employee ID', example: '507f191e810c19729de860ea'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/create-emp-pdr-action.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@ApiProperty({description: 'The grade of the employee', example: 5, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/create-emp-pdr-action.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'A note about the action', example: 'Needs to improve time management skills.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/create-emp-pdr-action.dto.ts:48\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsDateString,\n  IsEnum,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { PDRActions } from 'src/employee/enums/pdr-action.enum';\n\nexport class CreateEmployeePdrActionDto {\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  @ApiProperty({\n    description: 'The employee ID',\n    example: '507f191e810c19729de860ea',\n  })\n  employee: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @ApiProperty({\n    description: 'The grade of the employee',\n    example: 5,\n    type: Number,\n  })\n  grade: number;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(PDRActions)\n  @ApiProperty({\n    description: 'The action to be taken',\n    enum: PDRActions,\n    example: PDRActions.POSITIVE,\n  })\n  action: PDRActions;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'A note about the action',\n    example: 'Needs to improve time management skills.',\n  })\n  note: string;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiPropertyOptional({\n    description: 'The date of the action',\n    example: '2023-03-19',\n    required: false,\n    type: String,\n  })\n  date?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeSpendingAuthDto.html":{"url":"classes/CreateEmployeeSpendingAuthDto.html","title":"class - CreateEmployeeSpendingAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeSpendingAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/Spending-Auth/Employee/Create-Emp-Spending-Auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateSpendingAuthDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                employee\n                            \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '507f191e810c19729de860ea', description: 'MongoDB ObjectId of the employee related to the spending authorization', required: true})@IsMongoId()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/Employee/Create-Emp-Spending-Auth.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@ApiProperty({example: 250, description: 'The amount for the spending authorization', required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateSpendingAuthDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateSpendingAuthDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({example: 'This is a note about the spending authorization', required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateSpendingAuthDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateSpendingAuthDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpendingAuthorizationStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(SpendingAuthorizationStatus)@ApiProperty({example: undefined, enum: SpendingAuthorizationStatus, description: 'The status of the spending authorization', required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateSpendingAuthDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateSpendingAuthDto:38\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CreateSpendingAuthDto } from '../create-Spending-Auth.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateEmployeeSpendingAuthDto extends CreateSpendingAuthDto {\n  @ApiProperty({\n    example: '507f191e810c19729de860ea',\n    description:\n      'MongoDB ObjectId of the employee related to the spending authorization',\n    required: true,\n  })\n  @IsMongoId()\n  @IsString()\n  @IsNotEmpty()\n  employee: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateInvoiceSpendingAuthDto.html":{"url":"classes/CreateInvoiceSpendingAuthDto.html","title":"class - CreateInvoiceSpendingAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateInvoiceSpendingAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/Spending-Auth/Invoice/Create-Invoice-Spending-Auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateSpendingAuthDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                invoice\n                            \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        invoice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '507f191e810c19729de860ea', description: 'MongoDB ObjectId of the invoice related to the spending authorization', required: true})@IsMongoId()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/Invoice/Create-Invoice-Spending-Auth.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@ApiProperty({example: 250, description: 'The amount for the spending authorization', required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateSpendingAuthDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateSpendingAuthDto:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({example: 'This is a note about the spending authorization', required: false})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateSpendingAuthDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateSpendingAuthDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpendingAuthorizationStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(SpendingAuthorizationStatus)@ApiProperty({example: undefined, enum: SpendingAuthorizationStatus, description: 'The status of the spending authorization', required: true})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateSpendingAuthDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateSpendingAuthDto:38\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty, IsString } from 'class-validator';\nimport { CreateSpendingAuthDto } from '../create-Spending-Auth.dto';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateInvoiceSpendingAuthDto extends CreateSpendingAuthDto {\n  @ApiProperty({\n    example: '507f191e810c19729de860ea',\n    description:\n      'MongoDB ObjectId of the invoice related to the spending authorization',\n    required: true,\n  })\n  @IsMongoId()\n  @IsString()\n  @IsNotEmpty()\n  invoice: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocationDto.html":{"url":"classes/CreateLocationDto.html","title":"class - CreateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/create-location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                building_Number\n                            \n                            \n                                    \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                cordinates\n                            \n                            \n                                    \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                district\n                            \n                            \n                                    \n                                    \n                                    \n                                floor\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                neighborhood\n                            \n                            \n                                    \n                                    \n                                    \n                                street_Address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        building_Number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '3C', name: 'building_Number'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Port Said', name: 'city'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        cordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateCordinatesDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: CreateCordinatesDto, name: 'cordinates'})@ValidateNested()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Egypt', name: 'country'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'the building next to the market', name: 'description'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        district\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Madient Nasr', name: 'district'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'third Or 3th', name: 'floor'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'My Home', name: 'name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        neighborhood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Obour Area', name: 'neighborhood'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        street_Address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mohamed Ali Street', name: 'street_Address'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsLatitude,\n  IsLongitude,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateCordinatesDto {\n  @ApiProperty({\n    example: '17.1',\n    name: 'Longitude',\n  })\n  @IsLongitude()\n  @IsNotEmpty()\n  long: number;\n\n  @ApiProperty({\n    example: '17.1',\n    name: 'Latitude',\n  })\n  @IsNotEmpty()\n  @IsLatitude()\n  lat: number;\n}\n\nexport class CreateLocationDto {\n  @ApiProperty({\n    example: 'My Home',\n    name: 'name',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'Egypt',\n    name: 'country',\n  })\n  @IsString()\n  @IsNotEmpty()\n  country: string;\n\n  @ApiProperty({\n    example: 'Port Said',\n    name: 'city',\n  })\n  @IsString()\n  @IsNotEmpty()\n  city: string;\n\n  @ApiProperty({\n    example: 'Madient Nasr',\n    name: 'district',\n  })\n  @IsString()\n  @IsNotEmpty()\n  district: string;\n\n  @ApiProperty({\n    example: 'Obour Area',\n    name: 'neighborhood',\n  })\n  @IsString()\n  @IsNotEmpty()\n  neighborhood: string;\n\n  @ApiProperty({\n    example: 'Mohamed Ali Street',\n    name: 'street_Address',\n  })\n  @IsString()\n  @IsNotEmpty()\n  street_Address: string;\n\n  @ApiProperty({\n    example: '3C',\n    name: 'building_Number',\n  })\n  @IsString()\n  @IsNotEmpty()\n  building_Number: string;\n\n  @ApiProperty({\n    example: 'third Or 3th',\n    name: 'floor',\n  })\n  @IsString()\n  @IsNotEmpty()\n  floor: string;\n\n  @ApiProperty({\n    example: 'the building next to the market',\n    name: 'description',\n  })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({\n    type: CreateCordinatesDto,\n    name: 'cordinates',\n  })\n  @ValidateNested()\n  @Type(() => CreateCordinatesDto)\n  @IsOptional()\n  cordinates: CreateCordinatesDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMaterialDto.html":{"url":"classes/CreateMaterialDto.html","title":"class - CreateMaterialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMaterialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/dto/create-material.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMaterialDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateNotificationDto.html":{"url":"classes/CreateNotificationDto.html","title":"class - CreateNotificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateNotificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/create-notification.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateNotificationDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOfferDto.html":{"url":"classes/CreateOfferDto.html","title":"class - CreateOfferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOfferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/dto/create-offer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                branches\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@IsString({each: true})@IsMongoId({each: true})@IsArray()@ArrayMinSize(1)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-02', required: true})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@IsNotEmpty()@IsArray()@ArrayMinSize(1)@IsString({each: true})@IsMongoId({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Family Offer', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: true})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-02', required: true})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsDateString,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateOfferDto {\n  @ApiProperty({\n    example: 'Family Offer',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    example: ['65d5b8076bf8d67aee25ccd5', '65d5b8076bf8d67aee25ccd2'],\n    required: true,\n  })\n  @IsString({ each: true })\n  @IsMongoId({ each: true })\n  @IsArray()\n  @ArrayMinSize(1)\n  @IsNotEmpty()\n  branches: string[];\n\n  @ApiProperty({\n    example: '2020-02-02',\n    required: true,\n  })\n  @IsDateString()\n  @IsOptional()\n  from?: Date;\n\n  @ApiProperty({\n    example: '2020-02-02',\n    required: true,\n  })\n  @IsDateString()\n  @IsOptional()\n  to?: Date;\n\n  @ApiProperty({\n    example: 100,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty({\n    example: ['65d5b8076bf8d67aee25ccd5', '65d5b8076bf8d67aee25ccd2'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsArray()\n  @ArrayMinSize(1)\n  @IsString({ each: true })\n  @IsMongoId({ each: true })\n  items: string[];\n\n  @ApiProperty({\n    example: 100,\n    required: true,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderItemsDto.html":{"url":"classes/CreateOrderItemsDto.html","title":"class - CreateOrderItemsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderItemsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/order-items/create-order-items.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                extra\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                product\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                verbose_name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                without_component\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@ArrayMinSize(1)@IsMongoId({each: true})@IsString({each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        verbose_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        without_component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ProductComponents)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMinSize,\n  IsArray,\n  IsEnum,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\n\nexport class CreateOrderItemsDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  product: string;\n\n  @IsOptional()\n  @IsString()\n  verbose_name?: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @IsOptional()\n  @IsString()\n  note?: string;\n\n  @IsOptional()\n  @IsArray()\n  @ArrayMinSize(1)\n  @IsMongoId({ each: true })\n  @IsString({ each: true })\n  extra?: string[];\n\n  @IsOptional()\n  @IsEnum(ProductComponents)\n  @IsArray()\n  without_component?: ProductComponents[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                branch\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                can_deliver\n                            \n                            \n                                    \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                components\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                is_extra\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                is_sensetive\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                production_price\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                    \n                                subcategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'BRANCH ID', required: true})@IsNotEmpty()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        can_deliver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'true', required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ProductCategory, required: true})@IsNotEmpty()@IsEnum(ProductCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ProductComponents, required: false})@IsOptional()@IsEnum(ProductComponents)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://example.com', required: false})@IsOptional()@IsArray()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        is_extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'true', required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        is_sensetive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'true', required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'product 1', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        production_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: false})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ProductSize, required: true})@IsNotEmpty()@IsEnum(ProductSize)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        subcategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSubCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ProductSubCategory, required: true})@IsNotEmpty()@IsEnum(ProductSubCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsEnum,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { ProductCategory } from '../enums/product-category.enums';\nimport { ProductComponents } from '../enums/product-components.enum';\nimport { ProductSubCategory } from '../enums/product-subcategory.enum';\nimport { ProductSize } from '../enums/size.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProductDto {\n  @ApiProperty({\n    example: 'product 1',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: 100,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  price: number;\n\n  @ApiProperty({\n    example: 100,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty({\n    example: 100,\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  production_price: number;\n\n  @ApiProperty({\n    example: 'BRANCH ID',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  branch: string;\n\n  @ApiProperty({\n    example: ProductCategory,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEnum(ProductCategory)\n  category: ProductCategory;\n\n  @ApiProperty({\n    example: ProductSubCategory,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEnum(ProductSubCategory)\n  subcategory: ProductSubCategory;\n\n  @ApiProperty({\n    example: ProductSize,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEnum(ProductSize)\n  size: ProductSize;\n\n  @ApiProperty({\n    example: ProductComponents,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(ProductComponents)\n  components: ProductComponents[];\n\n  @ApiProperty({\n    example: 'http://example.com',\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString()\n  images?: string[];\n\n  @ApiProperty({\n    example: 'true',\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  can_deliver?: boolean;\n\n  @ApiProperty({\n    example: 'true',\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  is_sensetive?: boolean;\n\n  @ApiProperty({\n    example: 'true',\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  is_extra?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSpendingAuthDto.html":{"url":"classes/CreateSpendingAuthDto.html","title":"class - CreateSpendingAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSpendingAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/Spending-Auth/create-Spending-Auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@ApiProperty({example: 250, description: 'The amount for the spending authorization', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/create-Spending-Auth.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({example: 'This is a note about the spending authorization', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/create-Spending-Auth.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpendingAuthorizationStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsEnum(SpendingAuthorizationStatus)@ApiProperty({example: undefined, enum: SpendingAuthorizationStatus, description: 'The status of the spending authorization', required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/create-Spending-Auth.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { SpendingAuthorizationStatus } from 'src/billing/enum/SpendingAuthorization-status.enum';\n\nexport class CreateSpendingAuthDto {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({\n    example: 'This is a note about the spending authorization',\n    required: false,\n  })\n  note?: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @ApiProperty({\n    example: 250,\n    description: 'The amount for the spending authorization',\n    required: true,\n  })\n  amount: number;\n\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(SpendingAuthorizationStatus)\n  @ApiProperty({\n    example: SpendingAuthorizationStatus.CLOSE,\n    enum: SpendingAuthorizationStatus,\n    description: 'The status of the spending authorization',\n    required: true,\n  })\n  status: SpendingAuthorizationStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockDto.html":{"url":"classes/CreateStockDto.html","title":"class - CreateStockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock/create-stock.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                branch\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The ID of the branch', example: '507f1f77bcf86cd799439011'})@IsNotEmpty()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock/create-stock.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateStockItemLogsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of stock item logs', type: CreateStockItemLogsDto, isArray: true, required: false})@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock/create-stock.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsNotEmpty,\n  IsString,\n  IsMongoId,\n  ValidateNested,\n  IsOptional,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CreateStockItemLogsDto } from '../Stock Item Logs/create-Stock-Item-Logs.dto';\n\nexport class CreateStockDto {\n  @ApiProperty({\n    description: 'The ID of the branch',\n    example: '507f1f77bcf86cd799439011',\n  })\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  branch: string;\n\n  @ApiProperty({\n    description: 'List of stock item logs',\n    type: CreateStockItemLogsDto,\n    isArray: true,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => CreateStockItemLogsDto)\n  items?: CreateStockItemLogsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockGardDto.html":{"url":"classes/CreateStockGardDto.html","title":"class - CreateStockGardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockGardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Gard/create-stock-gard.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateStockItemQuantityDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'List of stock item quantities', type: undefined, isArray: true})@IsNotEmpty()@ArrayMinSize(1)@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Gard/create-stock-gard.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArrayMinSize, IsNotEmpty, ValidateNested } from 'class-validator';\nimport { CreateStockItemQuantityDto } from '../stock item quantity/create-stock-item-quantity.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateStockGardDto {\n  @ApiProperty({\n    description: 'List of stock item quantities',\n    type: [CreateStockItemQuantityDto],\n    isArray: true,\n  })\n  @IsNotEmpty()\n  @ArrayMinSize(1)\n  @ValidateNested()\n  @Type(() => CreateStockItemQuantityDto)\n  items: CreateStockItemQuantityDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockItemDto.html":{"url":"classes/CreateStockItemDto.html","title":"class - CreateStockItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Item/create-stock-item.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockItemCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The category of the stock item', enum: StockItemCategory, example: StockItemCategory})@IsNotEmpty()@IsEnum(StockItemCategory)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item/create-stock-item.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'A brief description of the stock item', example: 'A high-quality widget for all your widget needs'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item/create-stock-item.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The name of the stock item', example: 'Widget A'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item/create-stock-item.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { StockItemCategory } from 'src/stock/enums/Stock-Item-Category.enum';\n\nexport class CreateStockItemDto {\n  @ApiProperty({\n    description: 'The name of the stock item',\n    example: 'Widget A',\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: 'The category of the stock item',\n    enum: StockItemCategory,\n    example: StockItemCategory,\n  })\n  @IsNotEmpty()\n  @IsEnum(StockItemCategory)\n  @IsString()\n  category: StockItemCategory;\n\n  @ApiPropertyOptional({\n    description: 'A brief description of the stock item',\n    example: 'A high-quality widget for all your widget needs',\n  })\n  @IsOptional()\n  @IsString()\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockItemLogsDto.html":{"url":"classes/CreateStockItemLogsDto.html","title":"class - CreateStockItemLogsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockItemLogsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Item Logs/create-Stock-Item-Logs.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateStockItemQuantityDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The stock item involved in the transaction', type: CreateStockItemQuantityDto})@IsNotEmpty()@ValidateNested()@ArrayMinSize(1)@ArrayMaxSize(1)@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item Logs/create-Stock-Item-Logs.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockTransactionTYPE\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The type of transaction', enum: StockTransactionTYPE})@IsNotEmpty()@IsString()@IsEnum(StockTransactionTYPE)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item Logs/create-Stock-Item-Logs.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMaxSize,\n  ArrayMinSize,\n  IsEnum,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateStockItemQuantityDto } from '../stock item quantity/create-stock-item-quantity.dto';\nimport { Type } from 'class-transformer';\nimport { StockTransactionTYPE } from 'src/stock/enums/Stock-Transactions.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateStockItemLogsDto {\n  @ApiProperty({\n    description: 'The stock item involved in the transaction',\n    type: CreateStockItemQuantityDto,\n  })\n  @IsNotEmpty()\n  @ValidateNested()\n  @ArrayMinSize(1)\n  @ArrayMaxSize(1)\n  @Type(() => CreateStockItemQuantityDto)\n  item: CreateStockItemQuantityDto;\n\n  @ApiProperty({\n    description: 'The type of transaction',\n    enum: StockTransactionTYPE,\n  })\n  @IsNotEmpty()\n  @IsString()\n  @IsEnum(StockTransactionTYPE)\n  transaction: StockTransactionTYPE;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockItemQuantityDto.html":{"url":"classes/CreateStockItemQuantityDto.html","title":"class - CreateStockItemQuantityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockItemQuantityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/stock item quantity/create-stock-item-quantity.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stock_item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The quantity of the stock item', example: 100, type: Number})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/stock item quantity/create-stock-item-quantity.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stock_item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The MongoDB ObjectId of the stock item', example: '507f1f77bcf86cd799439011'})@IsMongoId()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/stock item quantity/create-stock-item-quantity.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsMongoId, IsNotEmpty, IsNumber, IsString } from 'class-validator';\n\nexport class CreateStockItemQuantityDto {\n  @ApiProperty({\n    description: 'The MongoDB ObjectId of the stock item',\n    example: '507f1f77bcf86cd799439011',\n  })\n  @IsMongoId()\n  @IsNotEmpty()\n  @IsString()\n  stock_item: string;\n\n  @ApiProperty({\n    description: 'The quantity of the stock item',\n    example: 100,\n    type: Number,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSupplierDto.html":{"url":"classes/CreateSupplierDto.html","title":"class - CreateSupplierDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSupplierDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/dto/create-supplier.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                phones\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Location of the supplier', type: () => CreateLocationDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/create-supplier.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the supplier', example: 'ABC Supplies'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/create-supplier.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contact phone numbers for the supplier', example: undefined, type: undefined})@IsNotEmpty()@IsString({each: true})@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/create-supplier.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class CreateSupplierDto {\n  @ApiProperty({ description: 'Name of the supplier', example: 'ABC Supplies' })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: 'Contact phone numbers for the supplier',\n    example: ['+1234567890', '+0987654321'],\n    type: [String],\n  })\n  @IsNotEmpty()\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(1)\n  phones: string[];\n\n  @ApiPropertyOptional({\n    description: 'Location of the supplier',\n    type: () => CreateLocationDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  location?: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTakeAwayOrderDto.html":{"url":"classes/CreateTakeAwayOrderDto.html","title":"class - CreateTakeAwayOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTakeAwayOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/takeaway/create-takeaway-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateBaseOrderDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({each: true})@IsMongoId({each: true})@ArrayMinSize(1)@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:22\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateBaseOrderDto } from '../base-order.dto';\n\nexport class CreateTakeAwayOrderDto extends CreateBaseOrderDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTicketDto.html":{"url":"classes/CreateTicketDto.html","title":"class - CreateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/create-ticket.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                pool\n                            \n                            \n                                    \n                                    \n                                    \n                                segment\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TicketCategory, description: 'The category of the ticket'})@IsNotEmpty()@IsEnum(TicketCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The description of the ticket'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        pool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketsPool\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TicketsPool, description: 'The Pool of the ticket'})@IsNotEmpty()@IsEnum(TicketsPool)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        segment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketSegment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TicketSegment, description: 'The segment of the ticket'})@IsNotEmpty()@IsEnum(TicketSegment)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: TicketStatus, description: 'The status of the ticket'})@IsNotEmpty()@IsEnum(TicketStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsString } from 'class-validator';\nimport { TicketCategory } from '../enums/Ticket-category.enum';\nimport { TicketStatus } from '../enums/ticket-status.enum';\nimport { TicketSegment } from '../enums/Ticket-Segment.enum';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { TicketsPool } from '../enums/Ticket-Pool.enum';\n\nexport class CreateTicketDto {\n  @ApiProperty({ enum: TicketStatus, description: 'The status of the ticket' })\n  @IsNotEmpty()\n  @IsEnum(TicketStatus)\n  status: TicketStatus;\n\n  @ApiProperty({\n    enum: TicketCategory,\n    description: 'The category of the ticket',\n  })\n  @IsNotEmpty()\n  @IsEnum(TicketCategory)\n  category: TicketCategory;\n\n  @ApiProperty({\n    enum: TicketsPool,\n    description: 'The Pool of the ticket',\n  })\n  @IsNotEmpty()\n  @IsEnum(TicketsPool)\n  pool: TicketsPool;\n\n  @ApiProperty({\n    enum: TicketSegment,\n    description: 'The segment of the ticket',\n  })\n  @IsNotEmpty()\n  @IsEnum(TicketSegment)\n  segment: TicketSegment;\n\n  @ApiProperty({ description: 'The description of the ticket' })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTicketUpdateDto.html":{"url":"classes/CreateTicketUpdateDto.html","title":"class - CreateTicketUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTicketUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/Create-Ticket-updates.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/Create-Ticket-updates.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateTicketUpdateDto {\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionDto.html":{"url":"classes/CreateTransactionDto.html","title":"class - CreateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Transaction/create-Transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                items_quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        items_quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateStockItemQuantityDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Array of stock item quantities involved in the transaction', type: undefined})@IsNotEmpty()@ArrayMinSize(1)@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Transaction/create-Transaction.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The MongoDB ObjectId of the branch transferring to', example: '507f191e810c19729de860ea'})@IsMongoId()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Transaction/create-Transaction.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMinSize,\n  IsMongoId,\n  IsNotEmpty,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateStockItemQuantityDto } from '../stock item quantity/create-stock-item-quantity.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateTransactionDto {\n  @ApiProperty({\n    description: 'Array of stock item quantities involved in the transaction',\n    type: [CreateStockItemQuantityDto],\n  })\n  @IsNotEmpty()\n  @ArrayMinSize(1)\n  @ValidateNested({ each: true })\n  @Type(() => CreateStockItemQuantityDto)\n  items_quantity: CreateStockItemQuantityDto[];\n\n  @ApiProperty({\n    description: 'The MongoDB ObjectId of the branch transferring to',\n    example: '507f191e810c19729de860ea',\n  })\n  @IsMongoId()\n  @IsNotEmpty()\n  @IsString()\n  stock: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/Singup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed@gmail.com', required: true})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Singup.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mypassword', required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Singup.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Singup.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    example: 'ahmed@gmail.com',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: 'ahmed',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @ApiProperty({\n    example: 'mypassword',\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto-1.html":{"url":"classes/CreateUserDto-1.html","title":"class - CreateUserDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed@gmail.com', required: true})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mypassword', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    example: 'ahmed@gmail.com',\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({\n    example: 'mypassword',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({\n    example: 'ahmed',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateWalletDto.html":{"url":"classes/CreateWalletDto.html","title":"class - CreateWalletDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateWalletDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/dto/create-wallet.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateWalletDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Customer.html":{"url":"classes/Customer.html","title":"class - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/Model/customer.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                notification_email\n                            \n                            \n                                    \n                                notification_phone\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notification_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notification_phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\n\n@Schema()\nexport class Customer {\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  user: string;\n\n  @Prop({ required: true })\n  phone: string[];\n\n  @Prop()\n  notes: string;\n\n  @Prop()\n  notification_phone: string;\n\n  @Prop()\n  notification_email: string;\n}\n\nexport const CustomerSchema = SchemaFactory.createForClass(Customer);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerAdminController.html":{"url":"controllers/CustomerAdminController.html","title":"controller - CustomerAdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerAdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/controller/customer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findAllCustomersByPhone\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                removeOneById\n                            \n                            \n                                    \n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCustomerDto: CreateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCustomerDto\n                                            \n                                                            CreateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllCustomersByPhone\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCustomersByPhone(number: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('phone/:number')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                number\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneById(id: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCustomerDto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { CustomerService } from '../service/customer.service';\nimport { CreateCustomerDto } from '../dto/customer/create-customer.dto';\nimport { UpdateCustomerDto } from '../dto/customer/update-customer.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Customer')\n@Controller('customer')\nexport class CustomerAdminController {\n  constructor(private readonly customerService: CustomerService) {}\n\n  @Post()\n  create(@Body() createCustomerDto: CreateCustomerDto) {\n    return this.customerService.create(createCustomerDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.customerService.findAllCustomers();\n  }\n\n  @Get('phone/:number')\n  findAllCustomersByPhone(@Param('number') number: string) {\n    return this.customerService.findAllCustomersByPhone(number);\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.customerService.findOneCustomerById(id);\n  }\n\n  @Patch(':id')\n  updateOneById(\n    @Param('id') id: string,\n    @Body() updateCustomerDto: UpdateCustomerDto,\n  ) {\n    return this.customerService.updateOneCustomerById(id, updateCustomerDto);\n  }\n\n  @Delete(':id')\n  removeOneById(@Param('id') id: string) {\n    return this.customerService.removeOneCustomerById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomerInterface.html":{"url":"interfaces/CustomerInterface.html","title":"interface - CustomerInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomerInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/interface/Customer.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notification_email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notification_phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notification_email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notification_email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notification_phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notification_phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CustomerInterface {\n  name?: string;\n\n  user?: string;\n\n  phone?: string[];\n\n  notes?: string;\n  notification_phone?: string;\n\n  notification_email?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerLocations.html":{"url":"classes/CustomerLocations.html","title":"class - CustomerLocations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerLocations\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/Model/customer-locations.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                customer\n                            \n                            \n                                    \n                                location\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer-locations.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer-locations.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Customer } from './customer.model';\nimport { Location } from 'src/location/Model/location.model';\n\n@Schema()\nexport class CustomerLocations {\n  @Prop({ type: mongoose.Types.ObjectId, ref: Customer.name, required: true })\n  customer: string;\n\n  @Prop({ type: [Location], required: true })\n  location: Location;\n}\n\nexport const CustomerLocationsSchema =\n  SchemaFactory.createForClass(CustomerLocations);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerLocationsController.html":{"url":"controllers/CustomerLocationsController.html","title":"controller - CustomerLocationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerLocationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/controller/customer-locations.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customer-locations\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                removeOneById\n                            \n                            \n                                    \n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: CreateCustomerLocationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer-locations.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateCustomerLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer-locations.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer-locations.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer-locations.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneById(id: string, updateCustomerDto: UpdateCustomerLocationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer-locations.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCustomerDto\n                                            \n                                                            UpdateCustomerLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CustomerLocationsService } from '../service/customer-locations.service';\nimport { CreateCustomerLocationDto } from '../dto/customer locations/Create-Customer-Location.dto';\nimport { UpdateCustomerLocationDto } from '../dto/customer locations/Update-Customer-Location.dto';\n\n@ApiTags('Customer Locations')\n@Controller('customer-locations')\nexport class CustomerLocationsController {\n  constructor(\n    private readonly customerLocationService: CustomerLocationsService,\n  ) {}\n\n  @Post()\n  create(@Body() data: CreateCustomerLocationDto) {\n    return this.customerLocationService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.customerLocationService.findAllLocations();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.customerLocationService.findOneCustomerLocationById(id);\n  }\n\n  @Patch(':id')\n  updateOneById(\n    @Param('id') id: string,\n    @Body() updateCustomerDto: UpdateCustomerLocationDto,\n  ) {\n    return this.customerLocationService.updateOneCustomerLocationById(\n      id,\n      updateCustomerDto,\n    );\n  }\n\n  @Delete(':id')\n  removeOneById(@Param('id') id: string) {\n    return this.customerLocationService.removeOneCustomerLocationById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomerLocationsInterface.html":{"url":"interfaces/CustomerLocationsInterface.html","title":"interface - CustomerLocationsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomerLocationsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/interface/Customer-Locations.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            customer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        customer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         LocationInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocationInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LocationInterface } from 'src/location/interface/Location.interface';\n\nexport interface CustomerLocationsInterface {\n  customer?: string;\n  location?: LocationInterface;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerLocationsService.html":{"url":"injectables/CustomerLocationsService.html","title":"injectable - CustomerLocationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerLocationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/service/customer-locations.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllLocations\n                            \n                            \n                                    Async\n                                findAllSpecificCustomerLocations\n                            \n                            \n                                    Async\n                                findOneCustomerLocationById\n                            \n                            \n                                    Async\n                                removeOneCustomerLocationById\n                            \n                            \n                                    Async\n                                updateOneCustomerLocationById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customerLocationsRepo: Model, customerService: CustomerService)\n                    \n                \n                        \n                            \n                                Defined in src/customer/service/customer-locations.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customerLocationsRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createData: CustomerLocationsInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer-locations.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createData\n                                            \n                                                            CustomerLocationsInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllLocations\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllLocations()\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer-locations.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllSpecificCustomerLocations\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllSpecificCustomerLocations(customer_id)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer-locations.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customer_id\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneCustomerLocationById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneCustomerLocationById(customer_location_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer-locations.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customer_location_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneCustomerLocationById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneCustomerLocationById(customer_location_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer-locations.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customer_location_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneCustomerLocationById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneCustomerLocationById(customer_id: string, NewUpdateData: CustomerLocationsInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer-locations.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customer_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                NewUpdateData\n                                            \n                                                            CustomerLocationsInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CustomerLocations } from '../Model/customer-locations.model';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CustomerService } from './customer.service';\nimport { CustomerLocationsInterface } from '../interface/Customer-Locations.interface';\n\n@Injectable()\nexport class CustomerLocationsService {\n  constructor(\n    @InjectModel(CustomerLocations.name)\n    private readonly customerLocationsRepo: Model,\n    private customerService: CustomerService,\n  ) {}\n\n  async create(createData: CustomerLocationsInterface) {\n    try {\n      const customer = await this.customerService.findOneCustomerById(\n        createData.customer,\n      );\n      if (!customer) throw new NotFoundException('Customer Not Exist');\n\n      const newCustomerLocation = new this.customerLocationsRepo(createData);\n      return await newCustomerLocation.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllLocations() {\n    try {\n      return await this.customerLocationsRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllSpecificCustomerLocations(customer_id) {\n    try {\n      return await this.customerLocationsRepo\n        .find({ customer: customer_id })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneCustomerLocationById(customer_location_id: string) {\n    try {\n      return await this.customerLocationsRepo\n        .findById(customer_location_id)\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneCustomerLocationById(\n    customer_id: string,\n    NewUpdateData: CustomerLocationsInterface,\n  ) {\n    try {\n      return await this.customerLocationsRepo.findByIdAndUpdate(\n        customer_id,\n        NewUpdateData,\n        {\n          new: true,\n        },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneCustomerLocationById(customer_location_id: string) {\n    try {\n      return await this.customerLocationsRepo.findByIdAndDelete(\n        customer_location_id,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_exports\n\n\n\ncluster_CustomerModule_imports\n\n\n\ncluster_CustomerModule_providers\n\n\n\n\nLocationModule\n\nLocationModule\n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerModule -->\n\nLocationModule->CustomerModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nCustomerModule -->\n\nUsersModule->CustomerModule\n\n\n\n\n\nCustomerLocationsService \n\nCustomerLocationsService \n\nCustomerLocationsService  -->\n\nCustomerModule->CustomerLocationsService \n\n\n\n\n\nCustomerService \n\nCustomerService \n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nCustomerLocationsService\n\nCustomerLocationsService\n\nCustomerModule -->\n\nCustomerLocationsService->CustomerModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomerLocationsService\n                        \n                        \n                            CustomerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomerAdminController\n                        \n                        \n                            CustomerUserController\n                        \n                        \n                            CustomerLocationsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LocationModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomerLocationsService\n                        \n                        \n                            CustomerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CustomerService } from './service/customer.service';\nimport { CustomerAdminController } from './controller/customer.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Customer, CustomerSchema } from './Model/customer.model';\nimport { UsersModule } from 'src/users/users.module';\nimport { LocationModule } from 'src/location/location.module';\nimport { CustomerUserController } from './controller/customer-users.controller';\nimport { CustomerLocationsService } from './service/customer-locations.service';\nimport { CustomerLocationsController } from './controller/customer-locations.controller';\nimport {\n  CustomerLocations,\n  CustomerLocationsSchema,\n} from './Model/customer-locations.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { schema: CustomerSchema, name: Customer.name },\n      { schema: CustomerLocationsSchema, name: CustomerLocations.name },\n    ]),\n    UsersModule,\n    LocationModule,\n  ],\n  controllers: [\n    CustomerAdminController,\n    CustomerUserController,\n    CustomerLocationsController,\n  ],\n  providers: [CustomerService, CustomerLocationsService],\n  exports: [CustomerService, CustomerLocationsService],\n})\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/service/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllCustomers\n                            \n                            \n                                    Async\n                                findAllCustomersByPhone\n                            \n                            \n                                    Async\n                                findOneCustomerById\n                            \n                            \n                                    Async\n                                removeOneCustomerById\n                            \n                            \n                                    Async\n                                updateOneCustomerById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(customerRepo: Model, UserService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/customer/service/customer.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customerRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        UserService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createData: CustomerInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createData\n                                            \n                                                            CustomerInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllCustomers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCustomers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllCustomersByPhone\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCustomersByPhone(phoneNumber: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                phoneNumber\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneCustomerById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneCustomerById(customer_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customer_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneCustomerById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneCustomerById(customer_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customer_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneCustomerById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneCustomerById(customer_id: string, NewUpdateData: CustomerInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/service/customer.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customer_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                NewUpdateData\n                                            \n                                                            CustomerInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Customer } from '../Model/customer.model';\nimport { Model } from 'mongoose';\nimport { CustomerInterface } from '../interface/Customer.interface';\nimport { UsersService } from 'src/users/service/users.service';\n\n@Injectable()\nexport class CustomerService {\n  constructor(\n    @InjectModel(Customer.name) private readonly customerRepo: Model,\n    private UserService: UsersService,\n  ) {}\n\n  async create(createData: CustomerInterface) {\n    try {\n      if (createData.user) {\n        const user = await this.UserService.findOneByid(createData.user);\n        if (!user) throw new NotFoundException('Wrong User ID');\n      }\n      const newCustomer = new this.customerRepo(createData);\n      return await newCustomer.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllCustomers() {\n    try {\n      return await this.customerRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllCustomersByPhone(phoneNumber: string): Promise {\n    try {\n      return await this.customerRepo\n        .find({ phone: { $in: [phoneNumber] } }) // Searches for customers with the given phone number in their phone array\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneCustomerById(customer_id: string) {\n    try {\n      return await this.customerRepo.findById(customer_id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneCustomerById(\n    customer_id: string,\n    NewUpdateData: CustomerInterface,\n  ) {\n    try {\n      if (NewUpdateData.user) {\n        const user = await this.UserService.findOneByid(NewUpdateData.user);\n        if (!user) throw new NotFoundException('Wrong User ID');\n      }\n      return await this.customerRepo.findByIdAndUpdate(\n        customer_id,\n        NewUpdateData,\n        {\n          new: true,\n        },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneCustomerById(customer_id: string) {\n    try {\n      return await this.customerRepo.findByIdAndDelete(customer_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerUserController.html":{"url":"controllers/CustomerUserController.html","title":"controller - CustomerUserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerUserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/controller/customer-users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user-customer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCustomerDto: CreateCustomerDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer-users.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCustomerDto\n                                            \n                                                            CreateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/controller/customer-users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateOneById\n                        \n                    \n                \n            \n            \n                \nupdateOneById(req: Request, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/controller/customer-users.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCustomerDto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Req } from '@nestjs/common';\nimport { CustomerService } from '../service/customer.service';\nimport { CreateCustomerDto } from '../dto/customer/create-customer.dto';\nimport { UpdateCustomerDto } from '../dto/customer/update-customer.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CustomerInterface } from '../interface/Customer.interface';\nimport { Request } from 'express';\n\n@ApiTags('User Customer')\n@Controller('user-customer')\nexport class CustomerUserController {\n  constructor(private readonly customerService: CustomerService) {}\n\n  @Post()\n  create(@Body() createCustomerDto: CreateCustomerDto, @Req() req: Request) {\n    const data: CustomerInterface = {\n      ...createCustomerDto,\n      user: (req as any).user._id,\n    };\n    return this.customerService.create(data);\n  }\n\n  @Get()\n  findOneById(@Req() req: Request) {\n    return this.customerService.findOneCustomerById((req as any).user._id);\n  }\n\n  updateOneById(\n    @Req() req: Request,\n    @Body() updateCustomerDto: UpdateCustomerDto,\n  ) {\n    return this.customerService.updateOneCustomerById(\n      (req as any).user._id,\n      updateCustomerDto,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Delivery.html":{"url":"classes/Delivery.html","title":"class - Delivery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Delivery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/Model/delivery.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema({ timestamps: true })\nexport class Delivery {}\n\nexport const DeliverySchema = SchemaFactory.createForClass(Delivery);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryController.html":{"url":"controllers/DeliveryController.html","title":"controller - DeliveryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/delivery.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                delivery\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('delivery')\n@Controller('delivery')\nexport class DeliveryController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryController-1.html":{"url":"controllers/DeliveryController-1.html","title":"controller - DeliveryController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/controller/delivery.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order/delivery\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                CompeleteOrder\n                            \n                            \n                                    \n                                createDeliveryOrder\n                            \n                            \n                                    \n                                ReciveOrder\n                            \n                            \n                                    \n                                WaitingCustomerStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        CompeleteOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    CompeleteOrder(orderid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('status/compelete/:orderid')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/delivery.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createDeliveryOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDeliveryOrder(createOrderDto: CreateDeliveryOrderDto, branchid: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':branchid')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/delivery.controller.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateDeliveryOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ReciveOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    ReciveOrder(orderid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('status/receive/:orderid')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/delivery.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        WaitingCustomerStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    WaitingCustomerStatus(orderid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('status/waiting-customer/:orderid')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/delivery.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Patch, Post, Req } from '@nestjs/common';\nimport { OrderInterface } from '../Interface/Order.interface';\nimport { DeliveryOrder } from '../Model/Delivery.model';\nimport { CreateDeliveryOrderDto } from '../dto/delivery/create-delivery-order.dto';\nimport { OrderService } from '../service/order.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { DeliveryService } from '../service/delivery.service';\nimport { DeliveryStatus } from 'src/delivery/enums/delivery-status.enums';\n\n@ApiTags('Delivery Order')\n@Controller('order/delivery')\nexport class DeliveryController {\n  constructor(\n    private readonly orderService: OrderService,\n    private readonly deliveryService: DeliveryService,\n  ) {}\n\n  @Post(':branchid')\n  createDeliveryOrder(\n    @Body()\n    createOrderDto: CreateDeliveryOrderDto,\n    @Param('branchid') branchid: string,\n    @Req() req: Request,\n  ) {\n    const data: OrderInterface = {\n      ...createOrderDto,\n      branch: branchid,\n      order_type: DeliveryOrder.name,\n      createby: (req as any).user._id,\n    };\n    return this.orderService.create(data);\n  }\n\n  @Patch('status/receive/:orderid')\n  ReciveOrder(@Param('orderid') orderid: string) {\n    return this.deliveryService.UpdateDeliveryOrderStatus(\n      orderid,\n      DeliveryStatus.INDELIVER,\n    );\n  }\n\n  @Patch('status/compelete/:orderid')\n  CompeleteOrder(@Param('orderid') orderid: string) {\n    return this.deliveryService.UpdateDeliveryOrderStatus(\n      orderid,\n      DeliveryStatus.COMPELETED,\n    );\n  }\n\n  @Patch('status/waiting-customer/:orderid')\n  WaitingCustomerStatus(@Param('orderid') orderid: string) {\n    return this.deliveryService.UpdateDeliveryOrderStatus(\n      orderid,\n      DeliveryStatus.WAITINGCUSTOMER,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveryModule.html":{"url":"modules/DeliveryModule.html","title":"module - DeliveryModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeliveryModule\n\n\n\ncluster_DeliveryModule_providers\n\n\n\n\nDeliveryService\n\nDeliveryService\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nDeliveryModule -->\n\nDeliveryService->DeliveryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/delivery/delivery.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeliveryService } from './delivery.service';\nimport { DeliveryController } from './delivery.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Delivery, DeliverySchema } from './Model/delivery.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Delivery.name, schema: DeliverySchema },\n    ]),\n  ],\n  controllers: [DeliveryController],\n  providers: [DeliveryService],\n})\nexport class DeliveryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeliveryOrder.html":{"url":"classes/DeliveryOrder.html","title":"class - DeliveryOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeliveryOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/Delivery.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deliverey_method\n                            \n                            \n                                    \n                                delivery_price\n                            \n                            \n                                    \n                                delivery_status\n                            \n                            \n                                    \n                                end_location\n                            \n                            \n                                order_type\n                            \n                            \n                                    \n                                pilot\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliverey_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DelivereyMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Delivery.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delivery_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryPrice\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Delivery.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delivery_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Delivery.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        end_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Delivery.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        order_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderType\n\n                    \n                \n                \n                    \n                        Default value : OrderType.DELIVEREY\n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Delivery.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pilot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Delivery.model.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { OrderType } from '../enums/Order-Types.enums';\nimport { DeliveryPrice } from 'src/delivery/enums/Deliver-price.enums';\nimport { DeliveryStatus } from 'src/delivery/enums/delivery-status.enums';\nimport mongoose from 'mongoose';\nimport { CustomerLocations } from 'src/customer/Model/customer-locations.model';\nimport { DelivereyMethod } from 'src/delivery/enums/Deliverey-method.enums';\nimport { User } from 'src/users/Model/user.model';\n\n@Schema()\nexport class DeliveryOrder {\n  order_type: OrderType = OrderType.DELIVEREY;\n\n  @Prop({ required: true, default: DeliveryPrice.TWENTY })\n  delivery_price: DeliveryPrice;\n\n  @Prop({ required: true, default: DeliveryStatus.WAITINGORDER })\n  delivery_status: DeliveryStatus;\n\n  @Prop({\n    required: true,\n    type: mongoose.Types.ObjectId,\n    ref: CustomerLocations.name,\n  })\n  end_location: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  pilot: string;\n\n  @Prop()\n  deliverey_method: DelivereyMethod;\n}\n\nexport const DeliveryOrderSchema = SchemaFactory.createForClass(DeliveryOrder);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryService.html":{"url":"injectables/DeliveryService.html","title":"injectable - DeliveryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/delivery.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DeliveryService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryService-1.html":{"url":"injectables/DeliveryService-1.html","title":"injectable - DeliveryService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/service/delivery.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                UpdateDeliveryOrderStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/order/service/delivery.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateDeliveryOrderStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateDeliveryOrderStatus(order_id: string, newStatus: DeliveryStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/delivery.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                order_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            DeliveryStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\nimport { Order } from '../Model/order.model';\nimport { DeliveryStatus } from 'src/delivery/enums/delivery-status.enums';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { DeliveryOrder } from '../Model/Delivery.model';\n\n@Injectable()\nexport class DeliveryService {\n  constructor(\n    @InjectModel(Order.name) private readonly orderRepo: Model,\n  ) {}\n\n  async UpdateDeliveryOrderStatus(order_id: string, newStatus: DeliveryStatus) {\n    try {\n      const order = await this.orderRepo.findById(order_id);\n      if (!order) throw new NotFoundException('Order Not Exist');\n      if ((order as any).delivery_status == newStatus)\n        throw new ConflictException('Status Already Set');\n      if (\n        order.order_status == OrderStatus.COMPELETED &&\n        order.order_type == DeliveryOrder.name\n      ) {\n        (order as any).delivery_status = newStatus;\n        return await order.save();\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DineInController.html":{"url":"controllers/DineInController.html","title":"controller - DineInController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DineInController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/controller/dine-in.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order/dine-in\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createDineInOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createDineInOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDineInOrder(createOrderDto: CreateDineInOrderDto, branchid: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':branchid')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/dine-in.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateDineInOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, Req } from '@nestjs/common';\nimport { OrderInterface } from '../Interface/Order.interface';\nimport { DineinOrder } from '../Model/DineIn.model';\nimport { CreateDineInOrderDto } from '../dto/dinein/create-dinein-order.dto';\nimport { OrderService } from '../service/order.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('DineIn Order')\n@Controller('order/dine-in')\nexport class DineInController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post(':branchid')\n  createDineInOrder(\n    @Body()\n    createOrderDto: CreateDineInOrderDto,\n\n    @Param('branchid') branchid: string,\n    @Req() req: Request,\n  ) {\n    const data: OrderInterface = {\n      ...createOrderDto,\n      branch: branchid,\n      order_type: DineinOrder.name,\n      createby: (req as any).user._id,\n    };\n    return this.orderService.create(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DineInService.html":{"url":"injectables/DineInService.html","title":"injectable - DineInService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DineInService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/service/dine-in.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class DineInService {\n  // constructor(private){}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DineinOrder.html":{"url":"classes/DineinOrder.html","title":"class - DineinOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DineinOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/DineIn.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                order_type\n                            \n                            \n                                    \n                                service_price\n                            \n                            \n                                    \n                                table_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        order_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderType\n\n                    \n                \n                \n                    \n                        Default value : OrderType.DINEIN\n                    \n                \n                    \n                        \n                                Defined in src/order/Model/DineIn.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        service_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 30})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/DineIn.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        table_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/DineIn.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { OrderType } from '../enums/Order-Types.enums';\n\n@Schema()\nexport class DineinOrder {\n  order_type: OrderType = OrderType.DINEIN;\n\n  @Prop({ default: 30 })\n  service_price: number;\n\n  @Prop()\n  table_number: string;\n}\n\nexport const DineinOrderSchema = SchemaFactory.createForClass(DineinOrder);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/service/email.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class EmailService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmpPdrActionController.html":{"url":"controllers/EmpPdrActionController.html","title":"controller - EmpPdrActionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmpPdrActionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/controller/emp-pdr-action.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                emp-pdr-action\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByEmployeeID\n                            \n                            \n                                    \n                                findByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateEmployeePdrActionDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/emp-pdr-action.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateEmployeePdrActionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/emp-pdr-action.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByEmployeeID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmployeeID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('employee/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/emp-pdr-action.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/emp-pdr-action.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/emp-pdr-action.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDTO: UpdateEmployeePdrActionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/emp-pdr-action.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDTO\n                                            \n                                                            UpdateEmployeePdrActionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { EmpPdrActionService } from '../service/employee-pdr-action.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateEmployeePdrActionDto } from '../dto/Employee  PDR Actions/create-emp-pdr-action.dto';\nimport { EmployeePDRActionInterface } from '../interfaces/emp-pdr-actions.interface';\nimport { UpdateEmployeePdrActionDto } from '../dto/Employee  PDR Actions/update-emp-pdr-action.dto';\n\n@ApiTags('Employee Pdr Action')\n@Controller('emp-pdr-action')\nexport class EmpPdrActionController {\n  constructor(private readonly empPDRService: EmpPdrActionService) {}\n\n  @Post()\n  create(@Body() createDto: CreateEmployeePdrActionDto, @Req() req: Request) {\n    const data: EmployeePDRActionInterface = {\n      ...createDto,\n      createby: (req as any).user._id,\n    };\n    return this.empPDRService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.empPDRService.findAll();\n  }\n\n  @Get(':id')\n  findByID(@Param('id') id: string) {\n    return this.empPDRService.findOneById(id);\n  }\n\n  @Get('employee/:id')\n  findByEmployeeID(@Param('id') id: string) {\n    return this.empPDRService.findByEmployeeId(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, updateDTO: UpdateEmployeePdrActionDto) {\n    return this.empPDRService.updateOneByID(id, updateDTO);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.empPDRService.removeOneById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmpPdrActionService.html":{"url":"injectables/EmpPdrActionService.html","title":"injectable - EmpPdrActionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmpPdrActionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/service/employee-pdr-action.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmployeeId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeOneById\n                            \n                            \n                                    Async\n                                updateOneByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeePDRActionRepo: Model, employeeService: EmployeeService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/employee/service/employee-pdr-action.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeePDRActionRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: EmployeePDRActionInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee-pdr-action.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmployeePDRActionInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee-pdr-action.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmployeeId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmployeeId(employee_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee-pdr-action.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employee_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee-pdr-action.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneById(pdr_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee-pdr-action.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pdr_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneByID(id: string, UpdatedData: EmployeeMonthlyPDRInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee-pdr-action.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                UpdatedData\n                                            \n                                                            EmployeeMonthlyPDRInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { UsersService } from 'src/users/service/users.service';\nimport { EmployeePDRActionInterface } from '../interfaces/emp-pdr-actions.interface';\nimport { EmployeeMonthlyPDRInterface } from '../interfaces/employee-monthly-pdr.interface';\nimport { EmployeePDRAction } from '../Model/emp-pdr-actions.model';\nimport { EmployeeService } from './employee.service';\n\n@Injectable()\nexport class EmpPdrActionService {\n  constructor(\n    @InjectModel(EmployeePDRAction.name)\n    private readonly employeePDRActionRepo: Model,\n    private employeeService: EmployeeService,\n    private userService: UsersService,\n  ) {}\n\n  async create(data: EmployeePDRActionInterface): Promise {\n    try {\n      const emp = await this.employeeService.findOneById(data.employee);\n      if (!emp) throw new NotFoundException('Employee not found');\n\n      const NewPDRAction = new this.employeePDRActionRepo(data);\n      return await NewPDRAction.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.employeePDRActionRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string): Promise {\n    try {\n      return await this.employeePDRActionRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByEmployeeId(employee_id: string): Promise {\n    try {\n      return await this.employeePDRActionRepo\n        .find({ employee: employee_id })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneByID(\n    id: string,\n    UpdatedData: EmployeeMonthlyPDRInterface,\n  ): Promise {\n    try {\n      if (UpdatedData.employee) {\n        const employee = await this.employeeService.findOneById(\n          UpdatedData.employee,\n        );\n        if (!employee) throw new NotFoundException('Employee Not Exist');\n      }\n\n      if (UpdatedData.createby) {\n        const user = await this.userService.findOneByid(UpdatedData.createby);\n        if (!user) throw new NotFoundException('User Not Exist');\n      }\n\n      return await this.employeePDRActionRepo.findByIdAndUpdate(\n        id,\n        UpdatedData,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneById(pdr_id: string): Promise {\n    try {\n      return await this.employeePDRActionRepo.findByIdAndDelete(pdr_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employee.html":{"url":"classes/Employee.html","title":"class - Employee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/Model/employee.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addrees\n                            \n                            \n                                    \n                                bank_account\n                            \n                            \n                                    \n                                base_salary\n                            \n                            \n                                    \n                                birthdate\n                            \n                            \n                                    \n                                department\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                join_at\n                            \n                            \n                                    \n                                phones\n                            \n                            \n                                    \n                                ssid\n                            \n                            \n                                    \n                                ticket_pool\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                working_in\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Location})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bank_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        base_salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Department\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        join_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ssid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ticket_pool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketsPool\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        working_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { User } from 'src/users/Model/user.model';\nimport { Department } from '../enums/department.enums';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Location } from 'src/location/Model/location.model';\nimport { TicketsPool } from 'src/ticket/enums/Ticket-Pool.enum';\n\n@Schema({ timestamps: true })\nexport class Employee {\n  @Prop()\n  join_at: Date;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  user: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  working_in: string;\n\n  @Prop({ required: true })\n  department: Department;\n\n  @Prop({ required: true })\n  base_salary: number;\n\n  @Prop({ required: true })\n  phones: string[];\n\n  @Prop({ default: Sex.MALE })\n  gender: Sex;\n\n  @Prop({ type: Location })\n  addrees: Location;\n\n  @Prop()\n  ssid: string;\n\n  @Prop()\n  birthdate: Date;\n\n  @Prop()\n  bank_account: string;\n\n  @Prop({ required: true, default: TicketsPool.STAFF })\n  ticket_pool: TicketsPool;\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeController.html":{"url":"controllers/EmployeeController.html","title":"controller - EmployeeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/controller/employee.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findById\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { EmployeeService } from '../service/employee.service';\nimport { CreateEmployeeDto } from '../dto/employee/create-employee.dto';\nimport { UpdateEmployeeDto } from '../dto/employee/update-employee.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('employee')\n@Controller('employee')\nexport class EmployeeController {\n  constructor(private readonly employeeService: EmployeeService) {}\n\n  @Post()\n  create(@Body() createEmployeeDto: CreateEmployeeDto) {\n    return this.employeeService.create(createEmployeeDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.employeeService.findAll();\n  }\n\n  @Get(':id')\n  findById(@Param('id') id: string) {\n    return this.employeeService.findOneById(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateEmployeeDto: UpdateEmployeeDto,\n  ) {\n    return this.employeeService.updateOneByID(id, updateEmployeeDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.employeeService.removeOneByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeeInterface.html":{"url":"interfaces/EmployeeInterface.html","title":"interface - EmployeeInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeeInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/interfaces/employee.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            addrees\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bank_account\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            base_salary\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            birthdate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            department\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            join_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phones\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ssid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ticket_pool\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            user\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            working_in\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addrees\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        addrees:         Location\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Location\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bank_account\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bank_account:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        base_salary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base_salary:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthdate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        department\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        department:         Department\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Department\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         Sex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sex\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        join_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        join_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phones:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ssid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ssid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket_pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ticket_pool:         TicketsPool\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TicketsPool\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        working_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        working_in:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Sex } from 'src/users/enums/Sex.enum';\nimport { Department } from '../enums/department.enums';\nimport { TicketsPool } from 'src/ticket/enums/Ticket-Pool.enum';\n\nexport interface EmployeeInterface {\n  join_at?: Date;\n\n  user?: string;\n\n  working_in?: string;\n\n  department?: Department;\n\n  base_salary?: number;\n\n  phones?: string[];\n\n  gender?: Sex;\n\n  addrees?: Location;\n\n  ssid?: string;\n\n  birthdate?: Date;\n\n  bank_account?: string;\n\n  ticket_pool?: TicketsPool;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_providers\n\n\n\ncluster_EmployeeModule_imports\n\n\n\ncluster_EmployeeModule_exports\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nBranchModule->EmployeeModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nEmployeeModule -->\n\nLocationModule->EmployeeModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nEmployeeModule -->\n\nUsersModule->EmployeeModule\n\n\n\n\n\nEmployeeService \n\nEmployeeService \n\nEmployeeService  -->\n\nEmployeeModule->EmployeeService \n\n\n\n\n\nAttendenceService\n\nAttendenceService\n\nEmployeeModule -->\n\nAttendenceService->EmployeeModule\n\n\n\n\n\nEmpPdrActionService\n\nEmpPdrActionService\n\nEmployeeModule -->\n\nEmpPdrActionService->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\nPdrService\n\nPdrService\n\nEmployeeModule -->\n\nPdrService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AttendenceService\n                        \n                        \n                            EmpPdrActionService\n                        \n                        \n                            EmployeeService\n                        \n                        \n                            PdrService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeController\n                        \n                        \n                            AttendenceController\n                        \n                        \n                            PdrController\n                        \n                        \n                            EmpPdrActionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            LocationModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmployeeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmployeeService } from './service/employee.service';\nimport { EmployeeController } from './controller/employee.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LocationModule } from 'src/location/location.module';\nimport { AttendenceService } from './service/attendence.service';\nimport { PdrService } from './service/monthly-pdr.service';\nimport { AttendenceController } from './controller/attendence.controller';\nimport { PdrController } from './controller/employee-monthly-pdr.controller';\nimport {\n  EmployeeMonthlyPDR,\n  EmployeeMonthlyPDRSchema,\n} from './Model/emp-monthly-pdr.model';\nimport { Attendence, AttendenceSchema } from './Model/attendence.model';\nimport { Employee, EmployeeSchema } from './Model/employee.model';\nimport {\n  EmployeePDRAction,\n  EmployeePDRActionSchema,\n} from './Model/emp-pdr-actions.model';\nimport { EmpPdrActionService } from './service/employee-pdr-action.service';\nimport { EmpPdrActionController } from './controller/emp-pdr-action.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { BranchModule } from 'src/branch/branch.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Employee.name, schema: EmployeeSchema },\n      { name: Attendence.name, schema: AttendenceSchema },\n      { name: EmployeeMonthlyPDR.name, schema: EmployeeMonthlyPDRSchema },\n      { name: EmployeePDRAction.name, schema: EmployeePDRActionSchema },\n    ]),\n    LocationModule,\n    UsersModule,\n    BranchModule,\n  ],\n  controllers: [\n    EmployeeController,\n    AttendenceController,\n    PdrController,\n    EmpPdrActionController,\n  ],\n  providers: [\n    EmployeeService,\n    AttendenceService,\n    PdrService,\n    EmpPdrActionService,\n  ],\n  exports: [EmployeeService],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeMonthlyPDR.html":{"url":"classes/EmployeeMonthlyPDR.html","title":"class - EmployeeMonthlyPDR","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeMonthlyPDR\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/Model/emp-monthly-pdr.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                details\n                            \n                            \n                                    \n                                employee\n                            \n                            \n                                    \n                                pdr\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-monthly-pdr.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-monthly-pdr.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-monthly-pdr.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-monthly-pdr.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-monthly-pdr.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { Employee } from './employee.model';\n\n@Schema({ timestamps: true })\nexport class EmployeeMonthlyPDR {\n  @Prop({ type: mongoose.Types.ObjectId, ref: Employee.name })\n  employee: string;\n\n  @Prop({ required: true })\n  pdr: number;\n\n  @Prop()\n  details: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n\n  @Prop({ required: true, unique: true })\n  date: Date;\n}\n\nexport const EmployeeMonthlyPDRSchema =\n  SchemaFactory.createForClass(EmployeeMonthlyPDR);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeeMonthlyPDRInterface.html":{"url":"interfaces/EmployeeMonthlyPDRInterface.html","title":"interface - EmployeeMonthlyPDRInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeeMonthlyPDRInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/interfaces/employee-monthly-pdr.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            details\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            employee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pdr\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        details\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        details:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        employee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        employee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pdr\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pdr:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EmployeeMonthlyPDRInterface {\n  employee?: string;\n\n  pdr?: number;\n\n  details?: string;\n\n  createby?: string;\n\n  date?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeePDRAction.html":{"url":"classes/EmployeePDRAction.html","title":"class - EmployeePDRAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeePDRAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/Model/emp-pdr-actions.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                date\n                            \n                            \n                                    \n                                employee\n                            \n                            \n                                    \n                                grade\n                            \n                            \n                                    \n                                note\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PDRActions\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-pdr-actions.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-pdr-actions.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-pdr-actions.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-pdr-actions.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-pdr-actions.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/emp-pdr-actions.model.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { Employee } from './employee.model';\nimport { PDRActions } from '../enums/pdr-action.enum';\n\n@Schema({ timestamps: true })\nexport class EmployeePDRAction {\n  @Prop({ type: mongoose.Types.ObjectId, ref: Employee.name, required: true })\n  employee: string;\n\n  @Prop({ required: true })\n  grade: number;\n\n  @Prop({ required: true })\n  action: PDRActions;\n\n  @Prop()\n  note: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ required: true })\n  date: Date;\n}\n\nexport const EmployeePDRActionSchema =\n  SchemaFactory.createForClass(EmployeePDRAction);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeePDRActionInterface.html":{"url":"interfaces/EmployeePDRActionInterface.html","title":"interface - EmployeePDRActionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeePDRActionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/interfaces/emp-pdr-actions.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            action\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            employee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            grade\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         PDRActions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PDRActions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        employee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        employee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grade\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grade:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PDRActions } from '../enums/pdr-action.enum';\n\nexport interface EmployeePDRActionInterface {\n  employee?: string;\n\n  grade?: number;\n\n  action?: PDRActions;\n\n  note?: string;\n\n  createby?: string;\n\n  date?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmployeeService.html":{"url":"injectables/EmployeeService.html","title":"injectable - EmployeeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmployeeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/service/employee.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ChangeTicketPoolByEmployeeID\n                            \n                            \n                                    Async\n                                ChangeTicketPoolByUserID\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findEmpByUserId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                IsUserEmployee\n                            \n                            \n                                    Async\n                                IsUserWorkingInBranch\n                            \n                            \n                                    Async\n                                IsUserWorkingInBranchAndHaveRole\n                            \n                            \n                                    Async\n                                removeOneByID\n                            \n                            \n                                    Async\n                                updateOneByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeRepo: Model, userService: UsersService, branchService: BranchService)\n                    \n                \n                        \n                            \n                                Defined in src/employee/service/employee.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        branchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeTicketPoolByEmployeeID\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTicketPoolByEmployeeID(employee_id: string, ticket_pool: TicketsPool)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employee_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ticket_pool\n                                            \n                                                            TicketsPool\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeTicketPoolByUserID\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTicketPoolByUserID(user_id: string, ticket_pool: TicketsPool)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ticket_pool\n                                            \n                                                            TicketsPool\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createEmployeeData: EmployeeInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeData\n                                            \n                                                            EmployeeInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findEmpByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findEmpByUserId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsUserEmployee\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsUserEmployee(userid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsUserWorkingInBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsUserWorkingInBranch(userId, branchid: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsUserWorkingInBranchAndHaveRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsUserWorkingInBranchAndHaveRole(userid: string, branchid: string, role: Roles, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Roles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneByID(id: string, UpdatedData: EmployeeInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/employee.service.ts:121\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                UpdatedData\n                                            \n                                                            EmployeeInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Employee } from '../Model/employee.model';\nimport { ClientSession, Model } from 'mongoose';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { UsersService } from 'src/users/service/users.service';\nimport { BranchService } from 'src/branch/branch.service';\nimport { EmployeeInterface } from '../interfaces/employee.interface';\nimport { TicketsPool } from 'src/ticket/enums/Ticket-Pool.enum';\n\n@Injectable()\nexport class EmployeeService {\n  constructor(\n    @InjectModel(Employee.name) private readonly employeeRepo: Model,\n    private userService: UsersService,\n    private branchService: BranchService,\n  ) {}\n\n  async create(createEmployeeData: EmployeeInterface): Promise {\n    try {\n      if (createEmployeeData.user) {\n        const user = await this.userService.findOneByid(\n          createEmployeeData.user,\n        );\n        if (!user) throw new NotFoundException('User Not Exist');\n      }\n\n      const branch = await this.branchService.findOneBranchByID(\n        createEmployeeData.working_in,\n      );\n      if (!branch) throw new NotFoundException('Branch Not Exist');\n\n      const Newemployee = new this.employeeRepo(createEmployeeData);\n      return await Newemployee.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.employeeRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string): Promise {\n    try {\n      return await this.employeeRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findEmpByUserId(id: string): Promise {\n    try {\n      return await this.employeeRepo.findOne({ user: id });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsUserEmployee(userid: string): Promise {\n    try {\n      const user = await this.employeeRepo.findOne({ user: userid });\n      if (user) return true;\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsUserWorkingInBranchAndHaveRole(\n    userid: string,\n    branchid: string,\n    role: Roles,\n    session?: ClientSession,\n  ): Promise {\n    try {\n      const employee = await this.employeeRepo\n        .findOne({ user: userid, working_in: branchid })\n        .populate('user')\n        .session(session);\n\n      // Check if the employee exists and if the populated user has the specified role\n      if (\n        employee &&\n        employee.user &&\n        (employee as any).user.roles.includes(role)\n      ) {\n        return true;\n      }\n\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsUserWorkingInBranch(\n    userId,\n    branchid: string,\n    session?: ClientSession,\n  ): Promise {\n    try {\n      const isExist = await this.employeeRepo\n        .findOne({\n          user: userId,\n          working_in: branchid,\n        })\n        .session(session)\n        .exec();\n      if (!isExist) return false;\n      return true;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneByID(id: string, UpdatedData: EmployeeInterface) {\n    try {\n      if (UpdatedData.user) {\n        const user = await this.userService.findOneByid(UpdatedData.user);\n        if (!user) throw new NotFoundException('User Not Exist');\n      }\n\n      if (UpdatedData.working_in) {\n        const branch = await this.branchService.findOneBranchByID(\n          UpdatedData.working_in,\n        );\n        if (!branch) throw new NotFoundException('Branch Not Exist');\n      }\n\n      return await this.employeeRepo.findByIdAndUpdate(id, UpdatedData);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async ChangeTicketPoolByEmployeeID(\n    employee_id: string,\n    ticket_pool: TicketsPool,\n  ) {\n    try {\n      return await this.employeeRepo.findByIdAndUpdate(employee_id, {\n        ticket_pool: ticket_pool,\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async ChangeTicketPoolByUserID(user_id: string, ticket_pool: TicketsPool) {\n    try {\n      return await this.employeeRepo.findOne(\n        { user: user_id },\n        {\n          ticket_pool: ticket_pool,\n        },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneByID(id: string) {\n    try {\n      return await this.employeeRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeeSpendingAuthInteface.html":{"url":"interfaces/EmployeeSpendingAuthInteface.html","title":"interface - EmployeeSpendingAuthInteface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeeSpendingAuthInteface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/interface/Spending Authriztion/Employee-Spending-Auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            createby\n                                        \n                                \n                                \n                                        \n                                            employee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            releasedby\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        employee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        employee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releasedby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releasedby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         SpendingAuthorizationStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpendingAuthorizationStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SpendingAuthorizationStatus } from 'src/billing/enum/SpendingAuthorization-status.enum';\n\nexport interface EmployeeSpendingAuthInteface {\n  type: string;\n  amount: number;\n  employee: string;\n\n  createby: string;\n\n  note?: string;\n\n  status: SpendingAuthorizationStatus;\n  releasedby?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeSpendingAuthorization.html":{"url":"classes/EmployeeSpendingAuthorization.html","title":"class - EmployeeSpendingAuthorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeSpendingAuthorization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/Model/Spending Authorization/Emp-Spending-Auth.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                employee\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Emp-Spending-Auth.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Emp-Spending-Auth.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Employee } from 'src/employee/Model/employee.model';\n\n@Schema()\nexport class EmployeeSpendingAuthorization {\n  type: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Employee.name })\n  employee: string;\n}\n\nexport const EmployeeSpendingAuthorizationSchema = SchemaFactory.createForClass(\n  EmployeeSpendingAuthorization,\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeeTransactionInterface.html":{"url":"interfaces/EmployeeTransactionInterface.html","title":"interface - EmployeeTransactionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeeTransactionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/interface/emp-transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            createby\n                                        \n                                \n                                \n                                        \n                                            employee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            notes\n                                        \n                                \n                                \n                                        \n                                            transaction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        employee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        employee:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction:         Transaction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transaction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Transaction } from '../enum/emp-transaction.enum';\n\nexport interface EmployeeTransactionInterface {\n  amount: number;\n\n  transaction: Transaction;\n\n  notes?: string;\n\n  createby: string;\n\n  employee: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeTransactions.html":{"url":"classes/EmployeeTransactions.html","title":"class - EmployeeTransactions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeTransactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/Model/employee.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                emplpyee\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/employee.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/employee.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        emplpyee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/employee.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/employee.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/employee.model.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Employee } from 'src/employee/Model/employee.model';\nimport { Transaction } from 'src/billing/enum/emp-transaction.enum';\nimport { User } from 'src/users/Model/user.model';\n\n@Schema({ timestamps: true })\nexport class EmployeeTransactions {\n  @Prop({ type: mongoose.Types.ObjectId, ref: Employee.name })\n  emplpyee: string;\n\n  @Prop({ required: true })\n  amount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ required: true })\n  transaction: Transaction;\n\n  @Prop()\n  notes: string;\n}\n\nexport const EmployeeTransactionsSchema =\n  SchemaFactory.createForClass(EmployeeTransactions);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GoogleController.html":{"url":"controllers/GoogleController.html","title":"controller - GoogleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GoogleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/google/google.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth/google\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                authenticate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(tokenData: TokenVerificationDto, request: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/auth/google/google.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tokenData\n                                            \n                                                            TokenVerificationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post, Req } from '@nestjs/common';\nimport { GoogleService } from './google.service';\nimport TokenVerificationDto from '../dto/tokenVerificationDto';\nimport { Request } from 'express';\n\n@Controller('auth/google')\nexport class GoogleController {\n  constructor(private readonly googleAuthService: GoogleService) {}\n\n  @Post()\n  async authenticate(\n    @Body() tokenData: TokenVerificationDto,\n    @Req() request: Request,\n  ) {\n    const { access_token, refresh_token, user } =\n      await this.googleAuthService.authenticate(tokenData.token);\n\n    console.log(access_token, refresh_token);\n    request.res.setHeader('Set-Cookie', [access_token, refresh_token]);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleService.html":{"url":"injectables/GoogleService.html","title":"injectable - GoogleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GoogleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/google/google.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                oauthClient\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                authenticate\n                            \n                            \n                                    Async\n                                getCookiesForUser\n                            \n                            \n                                    Async\n                                getUserData\n                            \n                            \n                                    Async\n                                handleRegisteredUser\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, configService: ConfigService, authenticationService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/google/google.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authenticationService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                        \n                    authenticate(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/google/google.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCookiesForUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCookiesForUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/google/google.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserData(token: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/google/google.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleRegisteredUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleRegisteredUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/google/google.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(token: string, email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/google/google.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        oauthClient\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth.OAuth2Client\n\n                    \n                \n                    \n                        \n                                Defined in src/auth/google/google.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { google, Auth } from 'googleapis';\nimport { UsersService } from 'src/users/service/users.service';\nimport { AuthService } from '../auth.service';\nimport { User } from 'src/users/Model/user.model';\n\n@Injectable()\nexport class GoogleService {\n  oauthClient: Auth.OAuth2Client;\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly configService: ConfigService,\n    private readonly authenticationService: AuthService,\n  ) {\n    const clientID = this.configService.get('GOOGLE_AUTH_CLIENT_ID');\n    const clientSecret = this.configService.get('GOOGLE_AUTH_CLIENT_SECRET');\n\n    this.oauthClient = new google.auth.OAuth2(clientID, clientSecret);\n  }\n\n  async getUserData(token: string) {\n    const userInfoClient = google.oauth2('v2').userinfo;\n\n    this.oauthClient.setCredentials({\n      access_token: token,\n    });\n\n    const userInfoResponse = await userInfoClient.get({\n      auth: this.oauthClient,\n    });\n\n    return userInfoResponse.data;\n  }\n\n  async getCookiesForUser(user: User) {\n    const access_with_refresh =\n      await this.authenticationService.GenerateTokenandRefresh(\n        (user as any).id,\n      );\n\n    await this.usersService.updateRefresh(\n      (user as any)._id,\n      (await access_with_refresh).refresh_token,\n    );\n\n    return access_with_refresh;\n  }\n\n  async handleRegisteredUser(user: User) {\n    if (!user.isRegisteredWithGoogle) {\n      throw new UnauthorizedException();\n    }\n\n    const { access_token, refresh_token } = await this.getCookiesForUser(user);\n\n    return {\n      access_token,\n      refresh_token,\n      user,\n    };\n  }\n\n  async registerUser(token: string, email: string) {\n    const userData = await this.getUserData(token);\n    const name = userData.name;\n\n    const user = await this.usersService.createWithGoogle(email, name);\n\n    return this.handleRegisteredUser(user);\n  }\n\n  async authenticate(token: string) {\n    const tokenInfo = await this.oauthClient.getTokenInfo(token);\n\n    const email = tokenInfo.email;\n\n    try {\n      const user = await this.usersService.findOneByEmail(email);\n\n      return this.handleRegisteredUser(user);\n    } catch (error) {\n      if (error.status !== 404) {\n        throw new error();\n      }\n\n      return this.registerUser(token, email);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Invoice.html":{"url":"classes/Invoice.html","title":"class - Invoice","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Invoice\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/Model/Invoice.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema()\nexport class Invoice {}\n\nexport const InvoiceSchema = SchemaFactory.createForClass(Invoice);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InvoiceService.html":{"url":"injectables/InvoiceService.html","title":"injectable - InvoiceService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InvoiceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/service/invoice.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(invoiceRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/billing/service/invoice.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        invoiceRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/invoice.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Invoice } from '../Model/Invoice.model';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class InvoiceService {\n  constructor(@InjectModel(Invoice.name) private invoiceRepo: Model) {}\n  async findOneById(id: string): Promise {\n    try {\n      return await this.invoiceRepo.findById(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InvoiceSpendingAuthInteface.html":{"url":"interfaces/InvoiceSpendingAuthInteface.html","title":"interface - InvoiceSpendingAuthInteface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InvoiceSpendingAuthInteface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/interface/Spending Authriztion/Invoice-Spending-Auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            invoice\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            releasedby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invoice\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        invoice:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releasedby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releasedby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         SpendingAuthorizationStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SpendingAuthorizationStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SpendingAuthorizationStatus } from 'src/billing/enum/SpendingAuthorization-status.enum';\n\nexport interface InvoiceSpendingAuthInteface {\n  type?: string;\n  amount?: number;\n\n  invoice?: string;\n\n  createby?: string;\n\n  note?: string;\n\n  status?: SpendingAuthorizationStatus;\n  releasedby?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvoiceSpendingAuthorization.html":{"url":"classes/InvoiceSpendingAuthorization.html","title":"class - InvoiceSpendingAuthorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvoiceSpendingAuthorization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/Model/Spending Authorization/Invoice-Spending-Auth.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                invoice\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        invoice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Invoice-Spending-Auth.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Invoice-Spending-Auth.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Invoice } from '../Invoice.model';\n\n@Schema()\nexport class InvoiceSpendingAuthorization {\n  type: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Invoice.name })\n  invoice: string;\n}\n\nexport const InvoiceSpendingAuthorizationSchema = SchemaFactory.createForClass(\n  InvoiceSpendingAuthorization,\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsEmployeeGuard.html":{"url":"classes/IsEmployeeGuard.html","title":"class - IsEmployeeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsEmployeeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/guards/IsEmployee.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, empService: EmployeeService)\n                    \n                \n                        \n                            \n                                Defined in src/employee/guards/IsEmployee.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        empService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/guards/IsEmployee.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport { EmployeeService } from '../service/employee.service';\n\nexport class IsEmployeeGuard extends AuthGuard('jwt') {\n  constructor(\n    private reflector: Reflector,\n    private empService: EmployeeService,\n  ) {\n    super();\n  }\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    try {\n      const user = context.switchToHttp().getRequest().user;\n      return this.empService.IsUserEmployee(user._id);\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsUserCustomerGuard.html":{"url":"classes/IsUserCustomerGuard.html","title":"class - IsUserCustomerGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsUserCustomerGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/guards/Is-User-Own-Customer.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/customer/guards/Is-User-Own-Customer.guard.ts:5\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\n\nexport class IsUserCustomerGuard extends AuthGuard('jwt') {\n  constructor() {\n    super();\n  }\n//   canActivate(context: ExecutionContext) {\n//     const requestedUser = context.switchToHttp().getRequest().user._id;\n\n//     return false\n//   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsWorkingInBranchGuard.html":{"url":"classes/IsWorkingInBranchGuard.html","title":"class - IsWorkingInBranchGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsWorkingInBranchGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/guards/Is-working-In-Branch.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refleactor: Reflector, employeesService: EmployeeService)\n                    \n                \n                        \n                            \n                                Defined in src/order/guards/Is-working-In-Branch.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refleactor\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeesService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/guards/Is-working-In-Branch.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { EmployeeService } from 'src/employee/service/employee.service';\n\nexport class IsWorkingInBranchGuard extends AuthGuard('jwt') {\n  constructor(\n    private refleactor: Reflector,\n    private employeesService: EmployeeService,\n  ) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    try {\n      const req = context.switchToHttp().getRequest();\n      const branch = req.params.branchid;\n      const user_id = (req as any).user._id;\n      return this.employeesService.IsUserWorkingInBranch(user_id, branch);\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTGuard.html":{"url":"injectables/JWTGuard.html","title":"injectable - JWTGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JWTGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JWTGuard extends AuthGuard('jwt') {\n  constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const is_public = this.reflector.getAllAndOverride('isPublic', [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (is_public) return true;\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/Model/location.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                building_Number\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                cordinates\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                district\n                            \n                            \n                                    \n                                floor\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                neighborhood\n                            \n                            \n                                    \n                                street_Address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        building_Number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coordinates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: CoordinatesSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        district\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        neighborhood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        street_Address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nexport class Coordinates {\n  @Prop({ required: true })\n  long: number;\n\n  @Prop({ required: true })\n  lat: number;\n}\n\nconst CoordinatesSchema = SchemaFactory.createForClass(Coordinates);\n\n@Schema()\nexport class Location {\n  @Prop()\n  name: string;\n\n  @Prop()\n  country: string;\n\n  @Prop()\n  city: string;\n\n  @Prop()\n  district: string;\n\n  @Prop()\n  neighborhood: string;\n\n  @Prop()\n  street_Address: string;\n\n  @Prop()\n  building_Number: string;\n\n  @Prop()\n  floor: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: CoordinatesSchema })\n  cordinates: Coordinates;\n}\n\nexport const LocationSchema = SchemaFactory.createForClass(Location);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocationController.html":{"url":"controllers/LocationController.html","title":"controller - LocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                location\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { LocationService } from './location.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('location')\n@Controller('location')\nexport class LocationController {\n  constructor(private readonly locationService: LocationService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocationInterface.html":{"url":"interfaces/LocationInterface.html","title":"interface - LocationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LocationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/interface/Location.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            building_Number\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            city\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cordinates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            country\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            district\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            floor\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            neighborhood\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            street_Address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        building_Number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        building_Number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cordinates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cordinates:         CoordinatesInteface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CoordinatesInteface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        district\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        district:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        floor\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        floor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        neighborhood\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        neighborhood:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street_Address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street_Address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export class CoordinatesInteface {\n  long?: number;\n\n  lat?: number;\n}\n\nexport interface LocationInterface {\n  name?: string;\n\n  country?: string;\n\n  city?: string;\n\n  district?: string;\n\n  neighborhood?: string;\n\n  street_Address?: string;\n\n  building_Number?: string;\n\n  floor?: string;\n\n  description?: string;\n\n  cordinates?: CoordinatesInteface;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_LocationModule_exports\n\n\n\n\nLocationService \n\nLocationService \n\n\n\nLocationModule\n\nLocationModule\n\nLocationService  -->\n\nLocationModule->LocationService \n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/location/location.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocationService } from './location.service';\nimport { LocationController } from './location.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Location, LocationSchema } from './Model/location.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Location.name, schema: LocationSchema },\n    ]),\n  ],\n  controllers: [LocationController],\n  providers: [LocationService],\n  exports: [LocationService],\n})\nexport class LocationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createObject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(locationRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/location/location.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locationRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createObject\n                        \n                    \n                \n            \n            \n                \ncreateObject(locationData: LocationInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                locationData\n                                            \n                                                            LocationInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { LocationInterface } from './interface/Location.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Location } from './Model/location.model';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class LocationService {\n  constructor(\n    @InjectModel(Location.name) private locationRepo: Model,\n  ) {}\n  createObject(locationData: LocationInterface) {\n    try {\n      return new this.locationRepo(locationData);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailController.html":{"url":"controllers/MailController.html","title":"controller - MailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                mail\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MailService } from './mail.service';\n\n@Controller('mail')\nexport class MailController {\n  constructor(private readonly mailService: MailService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailModule.html":{"url":"modules/MailModule.html","title":"module - MailModule","body":"\n                   \n\n\n\n\n    Modules\n    MailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailModule\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MailModule_exports\n\n\n\n\nMailService \n\nMailService \n\n\n\nMailModule\n\nMailModule\n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mail/mail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailService } from './mail.service';\nimport { MailController } from './mail.controller';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [ConfigModule],\n  controllers: [MailController],\n  providers: [MailService],\n  exports: [MailService],\n})\nexport class MailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailService.html":{"url":"injectables/MailService.html","title":"injectable - MailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mail/mail.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                sendMail\n                            \n                            \n                                    Private\n                                    Async\n                                setTransport\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/mail/mail.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(mailOption: SendMailOption)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mailOption\n                                            \n                                                            SendMailOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        setTransport\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTransport()\n                \n            \n\n\n                    \n                        \n                            Defined in src/mail/mail.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { google } from 'googleapis';\n// import { Options } from 'nodemailer/lib/smtp-transport';\nimport * as nodemailer from 'nodemailer';\nimport { SendMailOption } from './type/SendMail-Option.type';\n\n@Injectable()\nexport class MailService {\n  constructor(private configService: ConfigService) {}\n  private async setTransport() {\n    const OAuth2 = google.auth.OAuth2;\n    const oauth2Client = new OAuth2(\n      this.configService.get('GOOGLE_AUTH_CLIENT_ID'),\n      this.configService.get('GOOGLE_AUTH_CLIENT_SECRET'),\n      this.configService.get('GOOGLE_REDIRECT_URL'),\n    );\n\n    oauth2Client.setCredentials({\n      refresh_token: this.configService.get('GOOGLE_REFRESH'),\n    });\n\n    const accessToken: string = await new Promise((resolve, reject) => {\n      oauth2Client.getAccessToken((err, token) => {\n        if (err) {\n          reject('Failed to create access token');\n        }\n        resolve(token);\n      });\n    });\n\n    const transport = nodemailer.createTransport({\n      service: 'gmail',\n      auth: {\n        type: 'OAuth2',\n        user: this.configService.get('EMAIL_USER'),\n        clientId: this.configService.get('GOOGLE_AUTH_CLIENT_ID'),\n        clientSecret: this.configService.get('GOOGLE_AUTH_CLIENT_SECRET'),\n        refreshToken: this.configService.get('GOOGLE_REFRESH'),\n        accessToken: accessToken,\n      },\n    });\n    return transport;\n  }\n\n  public async sendMail(mailOption: SendMailOption) {\n    try {\n      const transport = await this.setTransport();\n\n      const option = {\n        to: mailOption.to, // list of receivers\n        from: `No Reply `,\n        subject: mailOption.subject,\n        text: mailOption.body,\n      };\n\n      return await transport.sendMail(option);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Material.html":{"url":"classes/Material.html","title":"class - Material","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Material\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/Model/material.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                measure_by\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        measure_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeasureUnits\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MeasureUnits})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/material/Model/material.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/material/Model/material.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema } from '@nestjs/mongoose';\nimport { MeasureUnits } from '../enums/measure-units.enum';\n\n@Schema()\nexport class Material {\n  @Prop()\n  name: string;\n\n  @Prop({ type: MeasureUnits })\n  measure_by: MeasureUnits;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MaterialController.html":{"url":"controllers/MaterialController.html","title":"controller - MaterialController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MaterialController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/material.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                material\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMaterialDto: CreateMaterialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMaterialDto\n                                            \n                                                            CreateMaterialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateMaterialDto: UpdateMaterialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMaterialDto\n                                            \n                                                            UpdateMaterialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { MaterialService } from './material.service';\nimport { CreateMaterialDto } from './dto/create-material.dto';\nimport { UpdateMaterialDto } from './dto/update-material.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('material')\n@Controller('material')\nexport class MaterialController {\n  constructor(private readonly materialService: MaterialService) {}\n\n  @Post()\n  create(@Body() createMaterialDto: CreateMaterialDto) {\n    return this.materialService.create(createMaterialDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.materialService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.materialService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateMaterialDto: UpdateMaterialDto) {\n    return this.materialService.update(+id, updateMaterialDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.materialService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_providers\n\n\n\n\nMaterialService\n\nMaterialService\n\n\n\nMaterialModule\n\nMaterialModule\n\nMaterialModule -->\n\nMaterialService->MaterialModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/material/material.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MaterialService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MaterialController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MaterialService } from './material.service';\nimport { MaterialController } from './material.controller';\n\n@Module({\n  controllers: [MaterialController],\n  providers: [MaterialService],\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MaterialService.html":{"url":"injectables/MaterialService.html","title":"injectable - MaterialService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MaterialService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/material.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createMaterialDto: CreateMaterialDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMaterialDto\n                                            \n                                                            CreateMaterialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateMaterialDto: UpdateMaterialDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMaterialDto\n                                            \n                                                            UpdateMaterialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMaterialDto } from './dto/create-material.dto';\nimport { UpdateMaterialDto } from './dto/update-material.dto';\n\n@Injectable()\nexport class MaterialService {\n  create(createMaterialDto: CreateMaterialDto) {\n    return 'This action adds a new material';\n  }\n\n  findAll() {\n    return `This action returns all material`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} material`;\n  }\n\n  update(id: number, updateMaterialDto: UpdateMaterialDto) {\n    return `This action updates a #${id} material`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} material`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/Model/notification.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Notification {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/NotificationsController.html":{"url":"controllers/NotificationsController.html","title":"controller - NotificationsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  NotificationsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/controller/notifications.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                notifications\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Notifications')\n@Controller('notifications')\nexport class NotificationsController {\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_NotificationsModule_imports\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nMailModule->NotificationsModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nNotificationsModule -->\n\nEmailService->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/notifications/notifications.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmailService\n                        \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            NotificationsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MailModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { NotificationsService } from './service/notifications.service';\nimport { NotificationsController } from './controller/notifications.controller';\nimport { EmailService } from './service/email.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { MailModule } from 'src/mail/mail.module';\n\n@Module({\n  imports: [ConfigModule, MailModule],\n  controllers: [NotificationsController],\n  providers: [NotificationsService, EmailService],\n})\nexport class NotificationsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/service/notifications.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createNotificationDto: CreateNotificationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/service/notifications.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createNotificationDto\n                                            \n                                                            CreateNotificationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/service/notifications.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/service/notifications.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/service/notifications.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateNotificationDto: UpdateNotificationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/notifications/service/notifications.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateNotificationDto\n                                            \n                                                            UpdateNotificationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateNotificationDto } from '../dto/create-notification.dto';\nimport { UpdateNotificationDto } from '../dto/update-notification.dto';\n\n@Injectable()\nexport class NotificationsService {\n  create(createNotificationDto: CreateNotificationDto) {\n    return 'This action adds a new notification';\n  }\n\n  findAll() {\n    return `This action returns all notifications`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} notification`;\n  }\n\n  update(id: number, updateNotificationDto: UpdateNotificationDto) {\n    return `This action updates a #${id} notification`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} notification`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Offer.html":{"url":"classes/Offer.html","title":"class - Offer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Offer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/Model/offer.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branches\n                            \n                            \n                                    \n                                from\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { Product } from 'src/product/Model/product.model';\n\n@Schema()\nexport class Offer {\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  branches: string[];\n\n  @Prop({ type: Date })\n  from: Date;\n\n  @Prop({ type: Date })\n  to: Date;\n\n  @Prop({ required: true })\n  quantity: number;\n\n  @Prop({ required: true, type: mongoose.Types.ObjectId, ref: Product.name })\n  items: string[];\n\n  @Prop({ required: true })\n  price: number;\n}\n\nexport const OfferSchema = SchemaFactory.createForClass(Offer);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OfferInterface.html":{"url":"interfaces/OfferInterface.html","title":"interface - OfferInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OfferInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/interface/Offer.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branches\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branches\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branches:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OfferInterface {\n  name?: string;\n\n  branches?: string[];\n\n  from?: Date;\n\n  to?: Date;\n\n  quantity?: number;\n\n  items?: string[];\n\n  price?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OffersController.html":{"url":"controllers/OffersController.html","title":"controller - OffersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OffersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/offers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                offers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByname\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createOfferDto: CreateOfferDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOfferDto\n                                            \n                                                            CreateOfferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByname\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByname(offerName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search')\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateOfferDto: UpdateOfferDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOfferDto\n                                            \n                                                            UpdateOfferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { OffersService } from './offers.service';\nimport { CreateOfferDto } from './dto/create-offer.dto';\nimport { UpdateOfferDto } from './dto/update-offer.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('offers')\n@Controller('offers')\nexport class OffersController {\n  constructor(private readonly offersService: OffersService) {}\n\n  @Post()\n  create(@Body() createOfferDto: CreateOfferDto) {\n    return this.offersService.create(createOfferDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.offersService.findAllOffers();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.offersService.findOneOfferById(id);\n  }\n\n  @Get('search')\n  findByname(@Query('name') offerName: string) {\n    return this.offersService.findOfferByName(offerName);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateOfferDto: UpdateOfferDto) {\n    return this.offersService.updateOneOfferById(id, updateOfferDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.offersService.removeOneOfferByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OffersModule.html":{"url":"modules/OffersModule.html","title":"module - OffersModule","body":"\n                   \n\n\n\n\n    Modules\n    OffersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OffersModule\n\n\n\ncluster_OffersModule_exports\n\n\n\ncluster_OffersModule_imports\n\n\n\ncluster_OffersModule_providers\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nOffersModule\n\nOffersModule\n\nOffersModule -->\n\nBranchModule->OffersModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nOffersModule -->\n\nProductModule->OffersModule\n\n\n\n\n\nOffersService \n\nOffersService \n\nOffersService  -->\n\nOffersModule->OffersService \n\n\n\n\n\nOffersService\n\nOffersService\n\nOffersModule -->\n\nOffersService->OffersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/offers/offers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OffersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OffersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            ProductModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OffersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OffersService } from './offers.service';\nimport { OffersController } from './offers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Offer, OfferSchema } from './Model/offer.model';\nimport { BranchModule } from 'src/branch/branch.module';\nimport { ProductModule } from 'src/product/product.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Offer.name, schema: OfferSchema }]),\n    BranchModule,\n    ProductModule,\n  ],\n  controllers: [OffersController],\n  providers: [OffersService],\n  exports: [OffersService],\n})\nexport class OffersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OffersService.html":{"url":"injectables/OffersService.html","title":"injectable - OffersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OffersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/offers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllOffers\n                            \n                            \n                                    Async\n                                findOfferByName\n                            \n                            \n                                    Async\n                                findOneOfferById\n                            \n                            \n                                    Async\n                                IsValidCouponByID\n                            \n                            \n                                    Async\n                                IsValidOfferInBranchByID\n                            \n                            \n                                    Async\n                                removeOneOfferByID\n                            \n                            \n                                    Async\n                                SubtractOneFromOfferQuantity\n                            \n                            \n                                    Async\n                                updateOneOfferById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(offerRepo: Model, branchService: BranchService, productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/offers/offers.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offerRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        branchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(NewOfferData: OfferInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                NewOfferData\n                                            \n                                                            OfferInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllOffers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllOffers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOfferByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOfferByName(OfferName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                OfferName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOfferById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOfferById(offer_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offer_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCouponByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCouponByID(offerId: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidOfferInBranchByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidOfferInBranchByID(OfferId: string, branchId: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                OfferId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneOfferByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneOfferByID(offer_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offer_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        SubtractOneFromOfferQuantity\n                        \n                    \n                \n            \n            \n                \n                        \n                    SubtractOneFromOfferQuantity(offer_id: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offer_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneOfferById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneOfferById(offer_id: string, NewUpdatedData: OfferInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offer_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                NewUpdatedData\n                                            \n                                                            OfferInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ClientSession, Model } from 'mongoose';\nimport { Offer } from './Model/offer.model';\nimport { BranchService } from 'src/branch/branch.service';\nimport { ProductService } from 'src/product/product.service';\nimport { OfferInterface } from './interface/Offer.interface';\n\n@Injectable()\nexport class OffersService {\n  constructor(\n    @InjectModel(Offer.name) private readonly offerRepo: Model,\n    private branchService: BranchService,\n    private productService: ProductService,\n  ) {}\n  async create(NewOfferData: OfferInterface) {\n    try {\n      // Check If Branchs IDs Valid\n      const is_branchs_available = await this.branchService.IsBranchsAvaliables(\n        NewOfferData.branches,\n      );\n      if (!is_branchs_available) throw new NotFoundException('Wrong Branch ID');\n\n      // Check If Products IDs Valid\n      const is_products_available =\n        await this.productService.IsProductsAvailable(NewOfferData.items);\n      if (!is_products_available)\n        throw new NotFoundException('Wrong Products ID');\n\n      // Create New Offer\n      const newOffer = new this.offerRepo(NewOfferData);\n      return await newOffer.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllOffers() {\n    try {\n      return await this.offerRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneOfferById(offer_id: string) {\n    try {\n      return await this.offerRepo.findById(offer_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async SubtractOneFromOfferQuantity(\n    offer_id: string,\n    session?: ClientSession,\n  ) {\n    try {\n      return await this.offerRepo\n        .findByIdAndUpdate(offer_id, { $inc: { quantity: -1 } }, { new: true })\n        .session(session);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOfferByName(OfferName: string) {\n    try {\n      return await this.offerRepo.find({ OfferName }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneOfferById(offer_id: string, NewUpdatedData: OfferInterface) {\n    try {\n      if (NewUpdatedData.branches) {\n        const is_branchs_available =\n          await this.branchService.IsBranchsAvaliables(NewUpdatedData.branches);\n        if (!is_branchs_available)\n          throw new NotFoundException('Wrong Branch ID');\n      }\n\n      if (NewUpdatedData.items) {\n        const is_products_available =\n          await this.productService.IsProductsAvailable(NewUpdatedData.items);\n        if (!is_products_available)\n          throw new NotFoundException('Wrong Products ID');\n      }\n      return await this.offerRepo.findByIdAndUpdate(offer_id, NewUpdatedData);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneOfferByID(offer_id: string) {\n    try {\n      return await this.offerRepo.findByIdAndDelete(offer_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidCouponByID(offerId: string, session?: ClientSession) {\n    try {\n      const currentDate = new Date();\n\n      const validOffer = await this.offerRepo\n        .findOne({\n          _id: offerId,\n          quantity: { $gt: 0 },\n          from: { $lte: currentDate },\n          to: { $gte: currentDate },\n        })\n        .session(session)\n        .exec();\n\n      return !!validOffer;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidOfferInBranchByID(\n    OfferId: string,\n    branchId: string,\n    session?: ClientSession,\n  ) {\n    try {\n      const currentDate = new Date();\n\n      const validOffer = await this.offerRepo\n        .findOne({\n          _id: OfferId,\n          quantity: { $gt: 0 },\n          $or: [\n            { from: { $exists: false }, to: { $exists: false } }, // Neither from nor to dates exist\n            { from: { $lte: currentDate }, to: { $gte: currentDate } }, // Current date is within the from and to dates\n          ],\n          branches: { $in: [branchId] },\n        })\n        .session(session)\n        .exec();\n\n      return !!validOffer;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OnlineController.html":{"url":"controllers/OnlineController.html","title":"controller - OnlineController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OnlineController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/controller/online.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                online\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller('online')\nexport class OnlineController {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OnlineService.html":{"url":"injectables/OnlineService.html","title":"injectable - OnlineService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OnlineService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/service/online.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/order/service/online.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Order } from '../Model/order.model';\n\n@Injectable()\nexport class OnlineService {\n  constructor(\n    @InjectModel(Order.name) private readonly orderRepo: Model,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/order.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                approvedby\n                            \n                            \n                                    \n                                branch\n                            \n                            \n                                    \n                                coupon\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                customer\n                            \n                            \n                                    \n                                daily_orderid\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                kitchen_notes\n                            \n                            \n                                    \n                                offers\n                            \n                            \n                                    \n                                order_status\n                            \n                            \n                                    \n                                order_type\n                            \n                            \n                                    \n                                percent_discount\n                            \n                            \n                                    \n                                readyat\n                            \n                            \n                                    \n                                tax_percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        approvedby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        daily_orderid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderItems[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percent_discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tax_percent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 14, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport * as mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { Customer } from 'src/customer/Model/customer.model';\nimport { Coupon } from 'src/coupon/Model/coupon.model';\nimport { Offer } from 'src/offers/Model/offer.model';\nimport { OrderItems } from './Order-Items.model';\nimport { Model } from 'mongoose';\nimport { TakeAwayOrder } from './TakeAway.model';\nimport { DineinOrder } from './DineIn.model';\nimport { DeliveryOrder } from './Delivery.model';\n\n@Schema({ timestamps: true, discriminatorKey: 'order_type' })\nexport class Order {\n  @Prop()\n  daily_orderid: number;\n\n  @Prop({ type: [OrderItems] })\n  items: OrderItems[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n\n  @Prop({\n    required: true,\n    enum: [DeliveryOrder.name, TakeAwayOrder.name, DineinOrder.name],\n  })\n  order_type: string;\n\n  @Prop()\n  readyat: Date;\n\n  @Prop({ default: 14, required: true })\n  tax_percent: number;\n\n  @Prop()\n  percent_discount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Offer.name })\n  offers: string[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Coupon.name })\n  coupon: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  approvedby?: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ default: OrderStatus.PREPARING, required: true })\n  order_status: OrderStatus;\n\n  @Prop()\n  kitchen_notes: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Customer.name })\n  customer: string;\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n// Set Daily Order Id For Branch\nOrderSchema.pre('save', async function (next) {\n  if (this.isNew) {\n    const todayStart = new Date();\n    todayStart.setHours(0, 0, 0, 0);\n\n    const todayEnd = new Date();\n    todayEnd.setHours(23, 59, 59, 999);\n\n    const model = this.constructor as Model;\n\n    const count = await model\n      .countDocuments({\n        branch: this.branch,\n        createdAt: {\n          $gte: todayStart,\n          $lt: todayEnd,\n        },\n      })\n      .exec();\n\n    this.daily_orderid = count + 1;\n  }\n\n  next();\n});\n\n// const OfferModel = mongoose.model(Offer.name, OfferSchema);\n// const CouponModel = mongoose.model(Coupon.name, CouponSchema);\n// const ProductModel = mongoose.model(Product.name, ProductSchema);\n\n// OrderSchema.virtual('total').get(async function () {\n//   let total = 0;\n\n//   for (const item of this.items) {\n//     const product = await ProductModel.findById(item.product).exec();\n\n//     const item_price = product.price * item.quantity;\n//     total += item_price;\n//   }\n\n//   if (this.offers) {\n//     for (const offerid of this.offers) {\n//       const offer = await OfferModel.findById(offerid).exec();\n//       total += offer.price;\n//     }\n//   }\n\n//   if (this.coupon) {\n//     const coupon = await CouponModel.findById(this.coupon).exec();\n//     const couponDiscount = total * (coupon.percent_discount / 100);\n//     total -= couponDiscount;\n//   }\n\n//   if (this.percent_discount) {\n//     const percent = total * (this.percent_discount / 100);\n//     total -= percent;\n//   }\n//   return total;\n// });\n\n// OrderSchema.set('toJSON', { virtuals: true });\n// OrderSchema.set('toObject', { virtuals: true });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/controller/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                approveOrder\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findAllCompeletedOrderByBranchId\n                            \n                            \n                                    \n                                findAllOrderInBranch\n                            \n                            \n                                    \n                                findAllOrdersApprovedByUserID\n                            \n                            \n                                    \n                                findAllPendingOrder\n                            \n                            \n                                    \n                                findAllPendingOrderByBranchID\n                            \n                            \n                                    \n                                findAllPendingOrderByUserID\n                            \n                            \n                                    \n                                findAllPreparingdOrderByBranchId\n                            \n                            \n                                    \n                                findAllPreparingOrder\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                removeOneOrderByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        approveOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    approveOrder(orderid: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('aprove-order/:orderid')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllCompeletedOrderByBranchId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCompeletedOrderByBranchId(branch_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('compeleted/:branch_id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllOrderInBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllOrderInBranch(branch_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('all/:branch_id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllOrdersApprovedByUserID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllOrdersApprovedByUserID(user_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('approveby/:user_id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllPendingOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrder()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pending')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllPendingOrderByBranchID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrderByBranchID(branch_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pending/:branch_id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllPendingOrderByUserID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrderByUserID(user_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('pending/:user_id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllPreparingdOrderByBranchId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPreparingdOrderByBranchId(branch_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('preparing/:branch_id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllPreparingOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPreparingOrder()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('preparing')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeOneOrderByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneOrderByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/order.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Delete, Patch, Req } from '@nestjs/common';\nimport { OrderService } from '../service/order.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { Request } from 'express';\n\n@ApiTags('order')\n@Controller('order')\nexport class OrderController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Patch('aprove-order/:orderid')\n  approveOrder(@Param('orderid') orderid: string, @Req() req: Request) {\n    return this.orderService.ApproveOrderByOrderID(\n      orderid,\n      OrderStatus.PREPARING,\n      (req as any).user._id,\n    );\n  }\n\n  @Get('pending')\n  findAllPendingOrder() {\n    return this.orderService.findAllPendingOrder();\n  }\n\n  @Get('pending/:branch_id')\n  findAllPendingOrderByBranchID(@Param('branch_id') branch_id: string) {\n    return this.orderService.findAllPendingOrderByBranchID(branch_id);\n  }\n\n  @Get('pending/:user_id')\n  findAllPendingOrderByUserID(@Param('user_id') user_id: string) {\n    return this.orderService.findAllPendingOrderByUserID(user_id);\n  }\n\n  @Get('all/:branch_id')\n  findAllOrderInBranch(@Param('branch_id') branch_id: string) {\n    return this.orderService.findAllOrderInBranch(branch_id);\n  }\n\n  @Get('compeleted/:branch_id')\n  findAllCompeletedOrderByBranchId(@Param('branch_id') branch_id: string) {\n    return this.orderService.findAllCompeletedOrderByBranchId(branch_id);\n  }\n\n  @Get('preparing')\n  findAllPreparingOrder() {\n    return this.orderService.findAllPreparingOrder();\n  }\n\n  @Get('preparing/:branch_id')\n  findAllPreparingdOrderByBranchId(@Param('branch_id') branch_id: string) {\n    return this.orderService.findAllPreparingOrderByBranchID(branch_id);\n  }\n\n  @Get('approveby/:user_id')\n  findAllOrdersApprovedByUserID(@Param('user_id') user_id: string) {\n    return this.orderService.findAllOrdersApprovedByUserID(user_id);\n  }\n\n  @Get()\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOneOrderByID(id);\n  }\n\n  @Delete(':id')\n  removeOneOrderByID(@Param('id') id: string) {\n    return this.orderService.removeOneOrderByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderInterface.html":{"url":"interfaces/OrderInterface.html","title":"interface - OrderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Interface/Order.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            approvedby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            branch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coupon\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            daily_orderid\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deliverey_method\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            delivery_price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            delivery_status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            end_location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            kitchen_notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order_status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            percent_discount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pilot\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            readyat\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            service_price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            table_number\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tax_percent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approvedby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approvedby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coupon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coupon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daily_orderid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        daily_orderid:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deliverey_method\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deliverey_method:         DelivereyMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DelivereyMethod\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delivery_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delivery_price:         DeliveryPrice\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DeliveryPrice\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        delivery_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        delivery_status:         DeliveryStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DeliveryStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end_location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         OrderItemsInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderItemsInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kitchen_notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kitchen_notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order_status:         OrderStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent_discount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percent_discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pilot\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pilot:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readyat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readyat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        table_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        table_number:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tax_percent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tax_percent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DeliveryPrice } from 'src/delivery/enums/Deliver-price.enums';\nimport { DeliveryStatus } from 'src/delivery/enums/delivery-status.enums';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { DelivereyMethod } from 'src/delivery/enums/Deliverey-method.enums';\n\nexport interface OrderItemsInterface {\n  verbose_name?: string;\n\n  product?: string;\n\n  quantity?: number;\n\n  note?: string;\n\n  extra?: string[];\n\n  without_component?: ProductComponents[];\n}\n\nexport interface OrderInterface {\n  daily_orderid?: number;\n\n  items?: OrderItemsInterface[];\n\n  branch?: string;\n\n  order_type?: string;\n\n  readyat?: Date;\n\n  tax_percent?: number;\n\n  percent_discount?: number;\n\n  offers?: string[];\n\n  coupon?: string;\n\n  approvedby?: string;\n\n  createby?: string;\n\n  order_status?: OrderStatus;\n\n  kitchen_notes?: string;\n\n  customer?: string;\n\n  delivery_price?: DeliveryPrice;\n\n  delivery_status?: DeliveryStatus;\n\n  end_location?: string;\n\n  pilot?: string;\n\n  deliverey_method?: DelivereyMethod;\n\n  service_price?: number;\n\n  table_number?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderItems.html":{"url":"classes/OrderItems.html","title":"class - OrderItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/Order-Items.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                extra\n                            \n                            \n                                    \n                                note\n                            \n                            \n                                    \n                                product\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                verbose_name\n                            \n                            \n                                    \n                                without_component\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Order-Items.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Order-Items.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Order-Items.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Order-Items.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        verbose_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Order-Items.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        without_component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/Order-Items.model.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Product } from 'src/product/Model/product.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\n\n@Schema()\nexport class OrderItems {\n  @Prop()\n  verbose_name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Product.name })\n  product: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  note: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Product.name })\n  extra: string[];\n\n  @Prop()\n  without_component: ProductComponents[];\n}\n\nexport const OrderItemsSchema = SchemaFactory.createForClass(OrderItems);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderItemsInterface.html":{"url":"interfaces/OrderItemsInterface.html","title":"interface - OrderItemsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrderItemsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Interface/Order.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            extra\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            product\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verbose_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            without_component\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        extra\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extra:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        product\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        product:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verbose_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verbose_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        without_component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        without_component:         ProductComponents[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductComponents[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DeliveryPrice } from 'src/delivery/enums/Deliver-price.enums';\nimport { DeliveryStatus } from 'src/delivery/enums/delivery-status.enums';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { DelivereyMethod } from 'src/delivery/enums/Deliverey-method.enums';\n\nexport interface OrderItemsInterface {\n  verbose_name?: string;\n\n  product?: string;\n\n  quantity?: number;\n\n  note?: string;\n\n  extra?: string[];\n\n  without_component?: ProductComponents[];\n}\n\nexport interface OrderInterface {\n  daily_orderid?: number;\n\n  items?: OrderItemsInterface[];\n\n  branch?: string;\n\n  order_type?: string;\n\n  readyat?: Date;\n\n  tax_percent?: number;\n\n  percent_discount?: number;\n\n  offers?: string[];\n\n  coupon?: string;\n\n  approvedby?: string;\n\n  createby?: string;\n\n  order_status?: OrderStatus;\n\n  kitchen_notes?: string;\n\n  customer?: string;\n\n  delivery_price?: DeliveryPrice;\n\n  delivery_status?: DeliveryStatus;\n\n  end_location?: string;\n\n  pilot?: string;\n\n  deliverey_method?: DelivereyMethod;\n\n  service_price?: number;\n\n  table_number?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_exports\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nBranchModule->OrderModule\n\n\n\n\n\nCouponModule\n\nCouponModule\n\nOrderModule -->\n\nCouponModule->OrderModule\n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nOrderModule -->\n\nCustomerModule->OrderModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nOrderModule -->\n\nEmployeeModule->OrderModule\n\n\n\n\n\nOffersModule\n\nOffersModule\n\nOrderModule -->\n\nOffersModule->OrderModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nOrderModule -->\n\nProductModule->OrderModule\n\n\n\n\n\nOrderService \n\nOrderService \n\nOrderService  -->\n\nOrderModule->OrderService \n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nOrderModule -->\n\nDeliveryService->OrderModule\n\n\n\n\n\nDineInService\n\nDineInService\n\nOrderModule -->\n\nDineInService->OrderModule\n\n\n\n\n\nOnlineService\n\nOnlineService\n\nOrderModule -->\n\nOnlineService->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nTakeAwayService\n\nTakeAwayService\n\nOrderModule -->\n\nTakeAwayService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryService\n                        \n                        \n                            DineInService\n                        \n                        \n                            OnlineService\n                        \n                        \n                            OrderService\n                        \n                        \n                            TakeAwayService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                        \n                            TakeAwayController\n                        \n                        \n                            DeliveryController\n                        \n                        \n                            DineInController\n                        \n                        \n                            OnlineController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            CouponModule\n                        \n                        \n                            CustomerModule\n                        \n                        \n                            EmployeeModule\n                        \n                        \n                            OffersModule\n                        \n                        \n                            ProductModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrderService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './service/order.service';\nimport { OrderController } from './controller/order.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Order, OrderSchema } from './Model/order.model';\nimport { BranchModule } from 'src/branch/branch.module';\nimport { EmployeeModule } from 'src/employee/employee.module';\nimport { OffersModule } from 'src/offers/offers.module';\nimport { TakeAwayController } from './controller/take-away.controller';\nimport { DeliveryController } from './controller/delivery.controller';\nimport { DineInController } from './controller/dine-in.controller';\nimport { OnlineController } from './controller/online.controller';\nimport { TakeAwayService } from './service/take-away.service';\nimport { DeliveryService } from './service/delivery.service';\nimport { DineInService } from './service/dine-in.service';\nimport { OnlineService } from './service/online.service';\n\nimport { DineinOrder, DineinOrderSchema } from './Model/DineIn.model';\nimport { TakeAwayOrder, TakeAwayOrderSchema } from './Model/TakeAway.model';\nimport { DeliveryOrder, DeliveryOrderSchema } from './Model/Delivery.model';\nimport { ProductModule } from 'src/product/product.module';\nimport { CouponModule } from 'src/coupon/coupon.module';\nimport { CustomerModule } from 'src/customer/customer.module';\n\n@Module({\n  imports: [\n    BranchModule,\n    EmployeeModule,\n    OffersModule,\n    CouponModule,\n    ProductModule,\n    CustomerModule,\n    MongooseModule.forFeature([\n      {\n        name: Order.name,\n        schema: OrderSchema,\n        discriminators: [\n          {\n            name: DineinOrder.name,\n            schema: DineinOrderSchema,\n          },\n          {\n            name: TakeAwayOrder.name,\n            schema: TakeAwayOrderSchema,\n          },\n          {\n            name: DeliveryOrder.name,\n            schema: DeliveryOrderSchema,\n          },\n        ],\n      },\n    ]),\n  ],\n  controllers: [\n    OrderController,\n    TakeAwayController,\n    DeliveryController,\n    DineInController,\n    OnlineController,\n  ],\n  providers: [\n    OrderService,\n    TakeAwayService,\n    DeliveryService,\n    DineInService,\n    OnlineService,\n  ],\n  exports: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/service/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ApproveOrderByOrderID\n                            \n                            \n                                    Async\n                                ChangeOrderStatusByOrderID\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllCompeletedOrder\n                            \n                            \n                                    Async\n                                findAllCompeletedOrderByBranchId\n                            \n                            \n                                    Async\n                                findAllOrderInBranch\n                            \n                            \n                                    Async\n                                findAllOrdersApprovedByUserID\n                            \n                            \n                                    Async\n                                findAllOrdersApprovedByUserIDInSpecificTime\n                            \n                            \n                                    Async\n                                findAllPendingOrder\n                            \n                            \n                                    Async\n                                findAllPendingOrderByBranchID\n                            \n                            \n                                    Async\n                                findAllPendingOrderByUserID\n                            \n                            \n                                    Async\n                                findAllPreparingOrder\n                            \n                            \n                                    Async\n                                findAllPreparingOrderByBranchID\n                            \n                            \n                                    Async\n                                findOneOrderByID\n                            \n                            \n                                    Async\n                                removeOneOrderByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepo: Model, productService: ProductService, employeeService: EmployeeService, offerService: OffersService, coponService: CouponService, branchService: BranchService, customerService: CustomerService, cutomerlocationService: CustomerLocationsService, connection: mongoose.Connection)\n                    \n                \n                        \n                            \n                                Defined in src/order/service/order.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        offerService\n                                                  \n                                                        \n                                                                        OffersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        coponService\n                                                  \n                                                        \n                                                                        CouponService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        branchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customerService\n                                                  \n                                                        \n                                                                        CustomerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cutomerlocationService\n                                                  \n                                                        \n                                                                        CustomerLocationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    mongoose.Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ApproveOrderByOrderID\n                        \n                    \n                \n            \n            \n                \n                        \n                    ApproveOrderByOrderID(orderid: string, newStatus: OrderStatus, createby: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:300\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            OrderStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createby\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeOrderStatusByOrderID\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeOrderStatusByOrderID(orderid: string, newStatus: OrderStatus, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:327\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            OrderStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: OrderInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            OrderInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllCompeletedOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCompeletedOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllCompeletedOrderByBranchId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllCompeletedOrderByBranchId(branch_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllOrderInBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllOrderInBranch(branchid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllOrdersApprovedByUserID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllOrdersApprovedByUserID(userid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:268\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllOrdersApprovedByUserIDInSpecificTime\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllOrdersApprovedByUserIDInSpecificTime(userid: string, from: Date, to: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:279\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                from\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                to\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPendingOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:180\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPendingOrderByBranchID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrderByBranchID(branchid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:235\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPendingOrderByUserID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrderByUserID(userid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:246\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPreparingOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPreparingOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:191\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPreparingOrderByBranchID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPreparingOrderByBranchID(branchid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:257\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneOrderByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneOrderByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneOrderByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneOrderByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/order.service.ts:348\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport mongoose, { ClientSession, Model } from 'mongoose';\nimport { Order } from '../Model/order.model';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { OrderInterface } from '../Interface/Order.interface';\nimport { ProductService } from 'src/product/product.service';\nimport { EmployeeService } from 'src/employee/service/employee.service';\nimport { OffersService } from 'src/offers/offers.service';\nimport { CouponService } from 'src/coupon/coupon.service';\nimport { BranchService } from 'src/branch/branch.service';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { CustomerService } from 'src/customer/service/customer.service';\nimport { CustomerLocationsService } from 'src/customer/service/customer-locations.service';\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    @InjectModel(Order.name) private readonly orderRepo: Model,\n    private productService: ProductService,\n    private employeeService: EmployeeService,\n    private offerService: OffersService,\n    private coponService: CouponService,\n    private branchService: BranchService,\n    private customerService: CustomerService,\n    private cutomerlocationService: CustomerLocationsService,\n    @InjectConnection() private readonly connection: mongoose.Connection,\n  ) {}\n\n  async create(data: OrderInterface) {\n    const session = await this.connection.startSession();\n    try {\n      await session.withTransaction(async () => {\n        const branch = await this.branchService.findOneBranchByID(data.branch);\n        if (!branch) throw new NotFoundException('Branch Not Exist');\n        const items = data['items'];\n\n        if (data.customer) {\n          const customer = await this.customerService.findOneCustomerById(\n            data.customer,\n          );\n          if (!customer) throw new NotFoundException('Cudstomer Not Exist');\n        }\n\n        if (data.end_location) {\n          const customerLoction =\n            await this.cutomerlocationService.findOneCustomerLocationById(\n              data.end_location,\n            );\n          if (!customerLoction)\n            throw new NotFoundException('Location Not Exist');\n        }\n\n        // Check Item Availability\n        for (const item of items) {\n          const isProductAvailable =\n            await this.productService.IsProductAvailableInBranchWithQuantity(\n              item.product,\n              data['branch'],\n              item.quantity,\n              session,\n            );\n          if (item.extra) {\n            const IsValidExtra = await this.productService.IsExtraProducts(\n              item.extra,\n            );\n            if (!IsValidExtra)\n              throw new NotFoundException('Products Not Valid For Extra');\n          }\n          if (!isProductAvailable) {\n            throw new NotFoundException(\n              \"item Doesn't exist with this quantity\",\n            );\n          }\n        }\n        //  Check Order Offer Availability\n        if (data.offers) {\n          for (const offer of data.offers) {\n            const Is_ValidOffer =\n              await this.offerService.IsValidOfferInBranchByID(\n                offer,\n                data.branch,\n                session,\n              );\n            if (!Is_ValidOffer)\n              throw new NotFoundException('Not Valid Offer in Branch');\n          }\n        }\n        // Check Order Coupon Availability\n        if (data.coupon) {\n          const Is_ValidCoupon =\n            await this.coponService.IsValidCouponInBranchByCouponID(\n              data.coupon,\n              data.branch,\n              session,\n            );\n          if (!Is_ValidCoupon) throw new NotFoundException('Not Valid Coupon');\n        }\n        // Subtract from Offer\n        if (data.offers) {\n          for (const offer of data.offers) {\n            await this.offerService.SubtractOneFromOfferQuantity(\n              offer,\n              session,\n            );\n          }\n        }\n        // Subtract from Coupon\n        if (data.coupon) {\n          await this.coponService.SubtractOneFromCouponQuantity(\n            data.coupon,\n            session,\n          );\n        }\n        // Subtract from stock quantity\n        for (const item of items) {\n          await this.productService.SubtractproductQuantity(\n            item.product,\n            item.quantity,\n            session,\n          );\n        }\n\n        // Check If User Work In Branch and Cashier\n        const isInBrnch =\n          await this.employeeService.IsUserWorkingInBranchAndHaveRole(\n            data['createby'],\n            data['branch'],\n            Roles.CASHIER,\n            session,\n          );\n        if (!isInBrnch) {\n          data['order_status'] = OrderStatus.PENDING;\n        } else {\n          data['order_status'] = OrderStatus.PREPARING;\n        }\n        const newOrder = new this.orderRepo(data); // Removed session from here\n        await newOrder.save({ session });\n      });\n    } catch (err) {\n      // Error handling logic here, if any specific actions needed\n      throw err; // Rethrow the error to be handled elsewhere or logged\n    } finally {\n      await session.endSession(); // Ensure session is ended properly\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.orderRepo.find().populate('items.item').exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneOrderByID(id: string): Promise {\n    try {\n      return await this.orderRepo\n        .findById(id)\n        .populate([\n          'offers',\n          'coupon',\n          'branch',\n          'items',\n          'items.product',\n          'end_location',\n          'createby',\n          'customer',\n        ])\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllPendingOrder(): Promise {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.PENDING })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllPreparingOrder(): Promise {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.PREPARING })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllCompeletedOrder(): Promise {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.COMPELETED })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllCompeletedOrderByBranchId(branch_id: string): Promise {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.COMPELETED, branch: branch_id })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllOrderInBranch(branchid: string): Promise {\n    try {\n      return await this.orderRepo\n        .find({ branch: branchid })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllPendingOrderByBranchID(branchid: string) {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.PENDING, branch: branchid })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllPendingOrderByUserID(userid: string) {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.PENDING, createby: userid })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllPreparingOrderByBranchID(branchid: string) {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.PREPARING, branch: branchid })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllOrdersApprovedByUserID(userid: string) {\n    try {\n      return await this.orderRepo\n        .find({ approvedby: userid })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllOrdersApprovedByUserIDInSpecificTime(\n    userid: string,\n    from: Date,\n    to: Date,\n  ) {\n    try {\n      return await this.orderRepo\n        .find({\n          approvedby: userid,\n          createdAt: {\n            $gte: from,\n            $lte: to,\n          },\n        })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async ApproveOrderByOrderID(\n    orderid: string,\n    newStatus: OrderStatus,\n    createby: string,\n    session?: ClientSession,\n  ) {\n    try {\n      const order = await this.orderRepo.findById(orderid);\n      if (order.order_status == newStatus)\n        throw new ConflictException('Order In this Status Already');\n      // Check If User Work In Branch and Cashier\n      const isInBrnch =\n        await this.employeeService.IsUserWorkingInBranchAndHaveRole(\n          createby,\n          order.branch,\n          Roles.CASHIER,\n          session,\n        );\n      if (isInBrnch) {\n        order.order_status = newStatus;\n      }\n      return await order.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async ChangeOrderStatusByOrderID(\n    orderid: string,\n    newStatus: OrderStatus,\n    session?: ClientSession,\n  ) {\n    try {\n      return await this.orderRepo\n        .findByIdAndUpdate(\n          orderid,\n          {\n            order_status: newStatus,\n          },\n          { new: true },\n        )\n        .session(session)\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneOrderByID(id: string) {\n    try {\n      return await this.orderRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PayPalPayment.html":{"url":"classes/PayPalPayment.html","title":"class - PayPalPayment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PayPalPayment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/Model/PayPal.payment.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                payment_id\n                            \n                            \n                                payment_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/PayPal.payment.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentType\n\n                    \n                \n                \n                    \n                        Default value : PaymentType.PAYPAL\n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/PayPal.payment.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PaymentType } from '../enums/payment-type.enums';\n\n@Schema()\nexport class PayPalPayment {\n  payment_type: PaymentType = PaymentType.PAYPAL;\n\n  @Prop({ required: true, unique: true })\n  payment_id: string;\n}\n\nexport const PayPalPaymentSchema = SchemaFactory.createForClass(PayPalPayment);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payment.html":{"url":"classes/Payment.html","title":"class - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/Model/payment.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                currency\n                            \n                            \n                                    \n                                order_id\n                            \n                            \n                                    \n                                payment_status\n                            \n                            \n                                    \n                                payment_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        currency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentCurrency\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PaymentType } from '../enums/payment-type.enums';\nimport { PaymentStatus } from '../enums/payment-status.enums';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { PayPalPayment } from './PayPal.payment.model';\nimport { Order } from 'src/order/Model/order.model';\nimport { PaymentCurrency } from '../enums/payment-currency.enum';\nimport { CashPayment } from './Cash.payment.model';\n\n@Schema({ timestamps: true, discriminatorKey: 'payment_type' })\nexport class Payment {\n  @Prop({\n    required: true,\n    default: PaymentType.CASH,\n    enum: [PayPalPayment.name, CashPayment.name],\n  })\n  payment_type: string;\n\n  @Prop({ required: true, default: PaymentStatus.PENDING })\n  payment_status: PaymentStatus;\n\n  @Prop()\n  amount: number;\n\n  @Prop({\n    type: mongoose.Types.ObjectId,\n    ref: Order.name,\n    unique: true,\n    required: true,\n  })\n  order_id: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n\n  @Prop({ default: PaymentCurrency.EG })\n  currency: PaymentCurrency;\n}\n\nexport const PaymentSchema = SchemaFactory.createForClass(Payment);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createCash\n                            \n                            \n                                    \n                                createPayPal\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createCash\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCash(branchid: string, data: CreateBasePaymentDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('cash/:branchid')\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateBasePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createPayPal\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPayPal(branchid: string, data: CreateBasePaymentDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('paypal')\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            CreateBasePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Delete,\n  Post,\n  Req,\n  Body,\n} from '@nestjs/common';\nimport { PaymentService } from './service/payment.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CashService } from './service/cash.service';\nimport { PaypalService } from './service/paypal.service';\nimport { Request } from 'express';\nimport { CreateCashPaymentInterface } from './interface/Cash/Create-Cash-Payment.interface';\nimport { PaymentType } from './enums/payment-type.enums';\nimport { PaymentStatus } from './enums/payment-status.enums';\nimport { CreateBasePaymentDto } from './dto/create-base-payment.dto';\nimport { CreateBasePaymentInterface } from './interface/Create-Base-Payment.interface';\n\n@ApiTags('payment')\n@Controller('payment')\nexport class PaymentController {\n  constructor(\n    private readonly paymentService: PaymentService,\n    private readonly cashService: CashService,\n    private readonly paypalService: PaypalService,\n  ) {}\n\n  @Post('cash/:branchid')\n  createCash(\n    @Param('branchid') branchid: string,\n    @Body() data: CreateBasePaymentDto,\n    @Req() req: Request,\n  ) {\n    const newData: CreateCashPaymentInterface = {\n      branch: branchid,\n      payment_type: PaymentType.CASH,\n      payment_status: PaymentStatus.COMPELETED,\n      ...data,\n      createby: (req as any).user._id,\n    };\n    return this.cashService.createCashPayment(newData);\n  }\n\n  @Post('paypal')\n  createPayPal(\n    @Param('branchid') branchid: string,\n    @Body() data: CreateBasePaymentDto,\n    @Req() req: Request,\n  ) {\n    const newData: CreateBasePaymentInterface = {\n      payment_type: PaymentType.PAYPAL,\n      payment_status: PaymentStatus.COMPELETED,\n      ...data,\n      createby: (req as any).user._id,\n    };\n    return this.paypalService.createPayPalPayment(newData);\n  }\n\n  @Get()\n  findAll() {\n    return this.paymentService.findAll();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.paymentService.findOneById(id);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.paymentService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_imports\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nBranchModule->PaymentModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nPaymentModule -->\n\nOrderModule->PaymentModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPaymentModule -->\n\nUsersModule->PaymentModule\n\n\n\n\n\nCashService\n\nCashService\n\nPaymentModule -->\n\nCashService->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPaypalService\n\nPaypalService\n\nPaymentModule -->\n\nPaypalService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CashService\n                        \n                        \n                            PaymentService\n                        \n                        \n                            PaypalService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentService } from './service/payment.service';\nimport { PaymentController } from './payment.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Payment, PaymentSchema } from './Model/payment.model';\nimport { BranchModule } from 'src/branch/branch.module';\nimport { UsersModule } from 'src/users/users.module';\nimport {\n  PayPalPayment,\n  PayPalPaymentSchema,\n} from './Model/PayPal.payment.model';\nimport { CashPayment, CashPaymentSchema } from './Model/Cash.payment.model';\nimport { CashService } from './service/cash.service';\nimport { PaypalService } from './service/paypal.service';\nimport { OrderModule } from 'src/order/order.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Payment.name,\n        schema: PaymentSchema,\n        discriminators: [\n          {\n            name: PayPalPayment.name,\n            schema: PayPalPaymentSchema,\n          },\n          {\n            name: CashPayment.name,\n            schema: CashPaymentSchema,\n          },\n        ],\n      },\n    ]),\n    BranchModule,\n    UsersModule,\n    OrderModule,\n  ],\n  controllers: [PaymentController],\n  providers: [PaymentService, CashService, PaypalService],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/service/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/payment/service/payment.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/service/payment.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/service/payment.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/service/payment.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Payment } from '../Model/payment.model';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class PaymentService {\n  constructor(\n    @InjectModel(Payment.name) private readonly paymentRepo: Model,\n  ) {}\n\n  async findAll() {\n    try {\n      return await this.paymentRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.paymentRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async remove(id: string) {\n    try {\n      return await this.paymentRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaypalController.html":{"url":"controllers/PaypalController.html","title":"controller - PaypalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaypalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paypal/paypal.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                paypal\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                pay\n                            \n                            \n                                    \n                                    \n                                    Async\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        pay\n                        \n                    \n                \n            \n            \n                \n                        \n                    pay()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get('pay')\n                \n            \n\n                    \n                        \n                            Defined in src/paypal/paypal.controller.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        token\n                        \n                    \n                \n            \n            \n                \n                        \n                    token(orderid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Get(':orderid')\n                \n            \n\n                    \n                        \n                            Defined in src/paypal/paypal.controller.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param } from '@nestjs/common';\nimport { PaypalService } from './paypal.service';\nimport { Public } from 'src/auth/decorator/IsPuplic.decorator';\n\n@Controller('paypal')\nexport class PaypalController {\n  constructor(private readonly paypalService: PaypalService) {}\n\n  @Public()\n  @Get('pay')\n  async pay() {\n    return await this.paypalService.createPayment('10.00'); // Example amount\n  }\n\n  @Public()\n  @Get(':orderid')\n  async token(@Param('orderid') orderid: string) {\n    return await this.paypalService.captureOrder(orderid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaypalModule.html":{"url":"modules/PaypalModule.html","title":"module - PaypalModule","body":"\n                   \n\n\n\n\n    Modules\n    PaypalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaypalModule\n\n\n\ncluster_PaypalModule_providers\n\n\n\n\nPaypalService\n\nPaypalService\n\n\n\nPaypalModule\n\nPaypalModule\n\nPaypalModule -->\n\nPaypalService->PaypalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/paypal/paypal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaypalService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaypalController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaypalService } from './paypal.service';\nimport { PaypalController } from './paypal.controller';\n\n@Module({\n  controllers: [PaypalController],\n  providers: [PaypalService],\n})\nexport class PaypalModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaypalService.html":{"url":"injectables/PaypalService.html","title":"injectable - PaypalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaypalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/paypal/paypal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                base\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                captureOrder\n                            \n                            \n                                    Async\n                                createPayment\n                            \n                            \n                                    Async\n                                generateAccessToken\n                            \n                            \n                                    Async\n                                handleResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        captureOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    captureOrder(orderID)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paypal/paypal.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderID\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPayment(amount: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paypal/paypal.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                amount\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateAccessToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateAccessToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/paypal/paypal.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleResponse\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleResponse(response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/paypal/paypal.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        base\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://api-m.sandbox.paypal.com'\n                    \n                \n                    \n                        \n                                Defined in src/paypal/paypal.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n// import {\n//   PayPalEnvironment,\n//   PayPalHttpClient,\n// } from '@paypal/checkout-server-sdk';\n\n@Injectable()\nexport class PaypalService {\n  base = 'https://api-m.sandbox.paypal.com';\n\n  async generateAccessToken() {\n    try {\n      if (!process.env.PAYPAL_CLIENT_ID || !process.env.PAYPAL_CLIENT_SECRET) {\n        throw new Error('MISSING_API_CREDENTIALS');\n      }\n      const auth = Buffer.from(\n        process.env.PAYPAL_CLIENT_ID + ':' + process.env.PAYPAL_CLIENT_SECRET,\n      ).toString('base64');\n      const response = await fetch(`${this.base}/v1/oauth2/token`, {\n        method: 'POST',\n        body: 'grant_type=client_credentials',\n        headers: {\n          Authorization: `Basic ${auth}`,\n        },\n      });\n\n      const data = await response.json();\n      return data.access_token;\n    } catch (error) {\n      console.error('Failed to generate Access Token:', error);\n    }\n  }\n\n  async handleResponse(response) {\n    try {\n      const jsonResponse = await response.json();\n      return {\n        jsonResponse,\n        httpStatusCode: response.status,\n      };\n    } catch (err) {\n      const errorMessage = await response.text();\n      throw new Error(errorMessage);\n    }\n  }\n\n  async createPayment(amount: any): Promise {\n    const accessToken = await this.generateAccessToken();\n    const url = `${this.base}/v2/checkout/orders`;\n    const payload = {\n      intent: 'CAPTURE',\n      purchase_units: [\n        {\n          amount: {\n            currency_code: 'USD',\n            value: amount,\n          },\n        },\n      ],\n    };\n    const response = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n      method: 'POST',\n      body: JSON.stringify(payload),\n    });\n\n    return this.handleResponse(response);\n  }\n\n  async captureOrder(orderID) {\n    const accessToken = await this.generateAccessToken();\n    const url = `${this.base}/v2/checkout/orders/${orderID}/capture`;\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${accessToken}`,\n      },\n    });\n\n    return this.handleResponse(response);\n  }\n  //   async executePayment(paymentId: string, payerId: string): Promise {\n  //     // Execute payment logic\n  //     // Use the PayPal API client\n  //   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaypalService-1.html":{"url":"injectables/PaypalService-1.html","title":"injectable - PaypalService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaypalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/service/paypal.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPayPalPayment\n                            \n                            \n                                    Async\n                                updatePayPalPayment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepo: Model, ordeSerivce: OrderService, usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/payment/service/paypal.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ordeSerivce\n                                                  \n                                                        \n                                                                        OrderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createPayPalPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPayPalPayment(data: CreateBasePaymentInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/service/paypal.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            CreateBasePaymentInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updatePayPalPayment\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePayPalPayment(id: string, data: UpdatePayPalPaymentInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/service/paypal.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            UpdatePayPalPaymentInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Payment } from '../Model/payment.model';\nimport { UpdatePayPalPaymentInterface } from '../interface/Paypal/Update-PayPal-Payment.interface';\nimport { OrderService } from 'src/order/service/order.service';\nimport { UsersService } from 'src/users/service/users.service';\nimport { CreateBasePaymentInterface } from '../interface/Create-Base-Payment.interface';\n\n@Injectable()\nexport class PaypalService {\n  constructor(\n    @InjectModel(Payment.name) private readonly paymentRepo: Model,\n    private ordeSerivce: OrderService,\n    private usersService: UsersService,\n  ) {}\n\n  async createPayPalPayment(data: CreateBasePaymentInterface) {\n    try {\n      // Check If Order Exist\n      const order = await this.ordeSerivce.findOneOrderByID(data.order_id);\n      if (!order) throw new NotFoundException('Order Not Exist');\n\n      // Check If User Exist\n      const user = await this.usersService.findOneByid(data.createby);\n      if (!user) throw new NotFoundException('User Not Exist');\n\n      const newPayment = new this.paymentRepo(data);\n      return await newPayment.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updatePayPalPayment(id: string, data: UpdatePayPalPaymentInterface) {\n    try {\n      return await this.paymentRepo.findByIdAndUpdate(id, data);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PdrController.html":{"url":"controllers/PdrController.html","title":"controller - PdrController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PdrController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/controller/employee-monthly-pdr.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pdr\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByEmployeeID\n                            \n                            \n                                    \n                                findByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateEmployeeMonthlyPdrDTO, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee-monthly-pdr.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateEmployeeMonthlyPdrDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee-monthly-pdr.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByEmployeeID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmployeeID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('employee/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee-monthly-pdr.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee-monthly-pdr.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(pdr_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':pdr_id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee-monthly-pdr.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pdr_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(pdr_id: string, updateDTO: UpdateEmployeeMonthlyPDRDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':pdr_id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/controller/employee-monthly-pdr.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pdr_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDTO\n                                            \n                                                            UpdateEmployeeMonthlyPDRDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { PdrService } from '../service/monthly-pdr.service';\nimport { EmployeeMonthlyPDRInterface } from '../interfaces/employee-monthly-pdr.interface';\nimport { CreateEmployeeMonthlyPdrDTO } from '../dto/Monthly PDR/create-employee-monthly-pdr.dto';\nimport { UpdateEmployeeMonthlyPDRDTO } from '../dto/Monthly PDR/update-employee-monthly-pdr.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Employee Monthly PDR')\n@Controller('pdr')\nexport class PdrController {\n  constructor(private readonly empPDRService: PdrService) {}\n  @Post('')\n  create(@Body() createDto: CreateEmployeeMonthlyPdrDTO, @Req() req: Request) {\n    const data: EmployeeMonthlyPDRInterface = {\n      ...createDto,\n      createby: (req as any).user._id,\n    };\n    return this.empPDRService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.empPDRService.findAll();\n  }\n\n  @Get(':id')\n  findByID(@Param('id') id: string) {\n    return this.empPDRService.findOneById(id);\n  }\n\n  @Get('employee/:id')\n  findByEmployeeID(@Param('id') id: string) {\n    return this.empPDRService.findByEmployeeId(id);\n  }\n\n  @Patch(':pdr_id')\n  update(\n    @Param('pdr_id') pdr_id: string,\n    updateDTO: UpdateEmployeeMonthlyPDRDTO,\n  ) {\n    return this.empPDRService.updateOneByID(pdr_id, updateDTO);\n  }\n\n  @Delete(':pdr_id')\n  remove(@Param('pdr_id') pdr_id: string) {\n    return this.empPDRService.remove(pdr_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PdrService.html":{"url":"injectables/PdrService.html","title":"injectable - PdrService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PdrService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/service/monthly-pdr.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByEmployeeId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                updateOneByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeMothlyPDRRepo: Model, employeeService: EmployeeService, userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/employee/service/monthly-pdr.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeMothlyPDRRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: EmployeeMonthlyPDRInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/monthly-pdr.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            EmployeeMonthlyPDRInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/monthly-pdr.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByEmployeeId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByEmployeeId(employee_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/monthly-pdr.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employee_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/monthly-pdr.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(pdr_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/monthly-pdr.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                pdr_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneByID(id: string, UpdatedData: EmployeeMonthlyPDRInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/service/monthly-pdr.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                UpdatedData\n                                            \n                                                            EmployeeMonthlyPDRInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Employee } from '../Model/employee.model';\nimport { EmployeeMonthlyPDR } from '../Model/emp-monthly-pdr.model';\nimport { EmployeeService } from './employee.service';\nimport { EmployeeMonthlyPDRInterface } from '../interfaces/employee-monthly-pdr.interface';\nimport { UsersService } from 'src/users/service/users.service';\n\n@Injectable()\nexport class PdrService {\n  constructor(\n    @InjectModel(EmployeeMonthlyPDR.name)\n    private readonly employeeMothlyPDRRepo: Model,\n    private employeeService: EmployeeService,\n    private userService: UsersService,\n  ) {}\n\n  async create(data: EmployeeMonthlyPDRInterface): Promise {\n    try {\n      const emp = await this.employeeService.findOneById(data.employee);\n      if (!emp) throw new NotFoundException('Employee not found');\n\n      const NewmonthlyPDR = new this.employeeMothlyPDRRepo(data);\n      return await NewmonthlyPDR.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.employeeMothlyPDRRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string): Promise {\n    try {\n      return await this.employeeMothlyPDRRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByEmployeeId(employee_id: string): Promise {\n    try {\n      return await this.employeeMothlyPDRRepo\n        .find({ employee: employee_id })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneByID(\n    id: string,\n    UpdatedData: EmployeeMonthlyPDRInterface,\n  ): Promise {\n    try {\n      if (UpdatedData.employee) {\n        const employee = await this.employeeService.findOneById(\n          UpdatedData.employee,\n        );\n        if (!employee) throw new NotFoundException('Employee Not Exist');\n      }\n\n      if (UpdatedData.createby) {\n        const user = await this.userService.findOneByid(UpdatedData.createby);\n        if (!user) throw new NotFoundException('User Not Exist');\n      }\n\n      return await this.employeeMothlyPDRRepo.findByIdAndUpdate(\n        id,\n        UpdatedData,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async remove(pdr_id: string): Promise {\n    try {\n      return await this.employeeMothlyPDRRepo.findByIdAndDelete(pdr_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/Model/product.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branch\n                            \n                            \n                                    \n                                can_deliver\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                components\n                            \n                            \n                                    \n                                images\n                            \n                            \n                                    \n                                is_extra\n                            \n                            \n                                    \n                                is_sensetive\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                production_price\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                subcategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        can_deliver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_sensetive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        production_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 5, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subcategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSubCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport * as mongoose from 'mongoose';\nimport { ProductCategory } from '../enums/product-category.enums';\nimport { ProductSubCategory } from '../enums/product-subcategory.enum';\nimport { ProductSize } from '../enums/size.enum';\nimport { ProductComponents } from '../enums/product-components.enum';\n\n@Schema({ timestamps: true })\nexport class Product {\n  @Prop()\n  name: string;\n\n  @Prop()\n  price: number;\n\n  @Prop()\n  production_price: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n\n  @Prop()\n  category: ProductCategory;\n\n  @Prop()\n  subcategory: ProductSubCategory;\n\n  @Prop()\n  size: ProductSize;\n\n  @Prop()\n  components: ProductComponents[];\n\n  @Prop()\n  images: string[];\n\n  @Prop({ default: 5, required: true })\n  quantity: number;\n\n  @Prop({ default: true })\n  can_deliver: boolean;\n\n  @Prop()\n  is_sensetive: boolean;\n\n  @Prop()\n  is_extra: boolean;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                    \n                                findProductbyBranchId\n                            \n                            \n                                    \n                                    \n                                findProductbyBranchIdandCategory\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findProductbyBranchId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductbyBranchId(branchid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':branchid')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findProductbyBranchIdandCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductbyBranchIdandCategory(branchid: string, category: ProductCategory)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':branchid/:category')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            ProductCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Role } from 'src/auth/decorator/roles.decorator';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { Public } from 'src/auth/decorator/IsPuplic.decorator';\nimport { ProductCategory } from './enums/product-category.enums';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('product')\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Get(':branchid')\n  @Public()\n  findProductbyBranchId(@Param('branchid') branchid: string) {\n    return this.productService.findProductsByBranchID(branchid);\n  }\n\n  @Get(':branchid/:category')\n  @Public()\n  findProductbyBranchIdandCategory(\n    @Param('branchid') branchid: string,\n    @Param('category') category: ProductCategory,\n  ) {\n    return this.productService.findProductsByBranchIDandCategory(\n      branchid,\n      category,\n    );\n  }\n\n  @Post()\n  // @Role(Roles.SUPERUSER)\n  @Public()\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @Role(Roles.SUPERUSER)\n  findAll() {\n    return this.productService.findAllProducts();\n  }\n\n  @Get(':id')\n  @Role(Roles.SUPERUSER)\n  findOneByID(@Param('id') id: string) {\n    return this.productService.findOneProductByID(id);\n  }\n\n  @Patch(':id')\n  @Role(Roles.SUPERUSER)\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.updateOneProductByID(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @Role(Roles.SUPERUSER)\n  remove(@Param('id') id: string) {\n    return this.productService.removeOneProductByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProductInterface.html":{"url":"interfaces/ProductInterface.html","title":"interface - ProductInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProductInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/interface/product.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            can_deliver\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            components\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            images\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            is_extra\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            is_sensetive\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            production_price\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subcategory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        can_deliver\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        can_deliver:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         ProductCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductCategory\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         ProductComponents[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductComponents[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        images\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        images:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_extra\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_extra:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_sensetive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_sensetive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        production_price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        production_price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         ProductSize\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductSize\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subcategory:         ProductSubCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductSubCategory\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ProductCategory } from '../enums/product-category.enums';\nimport { ProductComponents } from '../enums/product-components.enum';\nimport { ProductSubCategory } from '../enums/product-subcategory.enum';\nimport { ProductSize } from '../enums/size.enum';\n\nexport interface ProductInterface {\n  name?: string;\n\n  price?: number;\n\n  production_price?: number;\n\n  branch?: string;\n\n  category?: ProductCategory;\n\n  subcategory?: ProductSubCategory;\n\n  size?: ProductSize;\n\n  components?: ProductComponents[];\n\n  images?: string[];\n\n  quantity?: number;\n\n  can_deliver?: boolean;\n\n  is_sensetive?: boolean;\n\n  is_extra?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nBranchModule->ProductModule\n\n\n\n\n\nProductService \n\nProductService \n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './Model/product.model';\nimport { BranchModule } from 'src/branch/branch.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n    BranchModule,\n  ],\n  controllers: [ProductController],\n  providers: [ProductService],\n  exports: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AreProductsAvailableInBranch\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAllProducts\n                            \n                            \n                                    Async\n                                findOneProductByID\n                            \n                            \n                                    Async\n                                findProductsByBranchID\n                            \n                            \n                                    Async\n                                findProductsByBranchIDandCategory\n                            \n                            \n                                    Async\n                                findProductsByBranchIDandCategoryandSubCategory\n                            \n                            \n                                    Async\n                                IsExtraProducts\n                            \n                            \n                                    Async\n                                IsProductAvailableInBranch\n                            \n                            \n                                    Async\n                                IsProductAvailableInBranchWithQuantity\n                            \n                            \n                                    Async\n                                IsProductsAvailable\n                            \n                            \n                                    Async\n                                removeOneProductByID\n                            \n                            \n                                    Async\n                                SubtractproductQuantity\n                            \n                            \n                                    Async\n                                updateOneProductByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepo: Model, branchService: BranchService)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        branchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AreProductsAvailableInBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    AreProductsAvailableInBranch(productIds: string[], branchId: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:167\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(NewProductData: ProductInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                NewProductData\n                                            \n                                                            ProductInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllProducts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneProductByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneProductByID(product_id: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductsByBranchID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductsByBranchID(branchid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductsByBranchIDandCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductsByBranchIDandCategory(branchid: string, category: ProductCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            ProductCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductsByBranchIDandCategoryandSubCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductsByBranchIDandCategoryandSubCategory(branchid: string, category: ProductCategory, subcategory: ProductSubCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            ProductCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subcategory\n                                            \n                                                            ProductSubCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsExtraProducts\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsExtraProducts(products: string[], session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                products\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsProductAvailableInBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsProductAvailableInBranch(product_id: string, branch_id: string, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsProductAvailableInBranchWithQuantity\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsProductAvailableInBranchWithQuantity(product_id: string, branch_id: string, quantity: number, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsProductsAvailable\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsProductsAvailable(products_id: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                products_id\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneProductByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneProductByID(product_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:229\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        SubtractproductQuantity\n                        \n                    \n                \n            \n            \n                \n                        \n                    SubtractproductQuantity(product_id: string, quantity: number, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                quantity\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneProductByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneProductByID(product_id: string, newProductData: ProductInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:207\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                product_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newProductData\n                                            \n                                                            ProductInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { ClientSession, Model } from 'mongoose';\nimport { Product } from './Model/product.model';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ProductCategory } from './enums/product-category.enums';\nimport { ProductSubCategory } from './enums/product-subcategory.enum';\nimport { ProductInterface } from './interface/product.interface';\nimport { BranchService } from 'src/branch/branch.service';\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @InjectModel(Product.name) private productRepo: Model,\n    private branchService: BranchService,\n  ) {}\n\n  async create(NewProductData: ProductInterface): Promise {\n    try {\n      const branch = await this.branchService.findOneBranchByID(\n        NewProductData.branch,\n      );\n      if (!branch) throw new NotFoundException('Wrong Branch Id');\n      const product = new this.productRepo(NewProductData);\n      return await product.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllProducts(): Promise {\n    try {\n      return await this.productRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsProductsAvailable(products_id: string[]): Promise {\n    try {\n      const products = await this.productRepo.find({ _id: products_id }).exec();\n      if (products.length == products_id.length) {\n        return true;\n      }\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findProductsByBranchID(branchid: string): Promise {\n    try {\n      return await this.productRepo.find({ branch: branchid }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findProductsByBranchIDandCategory(\n    branchid: string,\n    category: ProductCategory,\n  ): Promise {\n    try {\n      return await this.productRepo.find({ branch: branchid, category }).exec();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async findProductsByBranchIDandCategoryandSubCategory(\n    branchid: string,\n    category: ProductCategory,\n    subcategory: ProductSubCategory,\n  ): Promise {\n    try {\n      return await this.productRepo\n        .find({ branch: branchid, category, subcategory })\n        .exec();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async IsProductAvailableInBranch(\n    product_id: string,\n    branch_id: string,\n    session?: ClientSession,\n  ): Promise {\n    try {\n      const product = await this.productRepo\n        .findOne({ _id: product_id, branch: branch_id })\n        .session(session)\n        .exec();\n      if (product && product.quantity > 0) {\n        return true;\n      }\n\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsExtraProducts(\n    products: string[],\n    session?: ClientSession,\n  ): Promise {\n    try {\n      const product = await this.productRepo\n        .find({ _id: products, is_extra: true })\n        .session(session)\n        .exec();\n      if (product && product.length == products.length) {\n        return true;\n      }\n\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsProductAvailableInBranchWithQuantity(\n    product_id: string,\n    branch_id: string,\n    quantity: number,\n    session?: ClientSession,\n  ): Promise {\n    try {\n      const product = await this.productRepo\n        .findOne({ _id: product_id, branch: branch_id })\n        .session(session)\n        .exec();\n      if (product && product.quantity >= quantity) {\n        return true;\n      }\n\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async SubtractproductQuantity(\n    product_id: string,\n    quantity: number,\n    session?: ClientSession,\n  ): Promise {\n    try {\n      const product = await this.productRepo\n        .findById(product_id)\n        .session(session)\n        .exec();\n\n      // Check if the product exists\n      if (!product) {\n        throw new Error('Product not found');\n      }\n\n      // Subtract the quantity and save\n      product.quantity -= quantity; // Simplified subtraction operation\n      return await product.save({ session });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async AreProductsAvailableInBranch(\n    productIds: string[],\n    branchId: string,\n    session?: ClientSession,\n  ): Promise {\n    try {\n      const products = await this.productRepo\n        .find({\n          _id: { $in: productIds },\n          branch: branchId,\n          quantity: { $gt: 0 },\n        })\n        .session(session)\n        .exec();\n\n      return products.length === productIds.length;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneProductByID(\n    product_id: string,\n    session?: ClientSession,\n  ): Promise {\n    try {\n      let query = this.productRepo.findById(product_id);\n\n      // If a session is provided, use it with the query\n      if (session) {\n        query = query.session(session);\n      }\n\n      // Now execute the query with or without the session, as applicable\n      return await query.exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneProductByID(\n    product_id: string,\n    newProductData: ProductInterface,\n  ): Promise {\n    try {\n      if (newProductData.branch) {\n        const branch = await this.branchService.findOneBranchByID(\n          newProductData.branch,\n        );\n\n        if (!branch) throw new NotFoundException('Wrong Branch Id');\n      }\n\n      return await this.productRepo.findByIdAndUpdate(\n        product_id,\n        newProductData,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneProductByID(product_id: string): Promise {\n    try {\n      return await this.productRepo.findByIdAndDelete(product_id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RTGuard.html":{"url":"classes/RTGuard.html","title":"class - RTGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RTGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/refresh-tpken.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt-refresh')\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/refresh-tpken.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport';\n\nexport class RTGuard extends AuthGuard('jwt-refresh') {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResetPassword.html":{"url":"classes/ResetPassword.html","title":"class - ResetPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResetPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/Model/Reset-Password.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/Reset-Password.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/Reset-Password.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from './user.model';\n\n@Schema({ timestamps: true })\nexport class ResetPassword {\n  @Prop({\n    type: mongoose.Types.ObjectId,\n    ref: User.name,\n    unique: true,\n    required: true,\n  })\n  user: string;\n\n  @Prop({ required: true, unique: true })\n  code: number;\n}\n\nexport const ResetPasswordSchema = SchemaFactory.createForClass(ResetPassword);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResetPasswordService.html":{"url":"injectables/ResetPasswordService.html","title":"injectable - ResetPasswordService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResetPasswordService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/service/reset-password.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Create\n                            \n                            \n                                    Async\n                                DeleteOneByUserId\n                            \n                            \n                                    Async\n                                findOneByCode\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByUserId\n                            \n                            \n                                    Async\n                                GenerateCode\n                            \n                            \n                                    Async\n                                IsValidCode\n                            \n                            \n                                    Async\n                                RequestResetPassword\n                            \n                            \n                                    Async\n                                UpdateOneByUserId\n                            \n                            \n                                    Async\n                                VerifyAndUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resetRepo: Model, usersService: UsersService, configService: ConfigService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/users/service/reset-password.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resetRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Create\n                        \n                    \n                \n            \n            \n                \n                        \n                    Create(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteOneByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteOneByUserId(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByCode(code: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUserId(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GenerateCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    GenerateCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCode(code: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:112\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        RequestResetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    RequestResetPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateOneByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateOneByUserId(user_id: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        VerifyAndUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    VerifyAndUpdate(code: number, newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/reset-password.service.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ResetPassword } from '../Model/Reset-Password.model';\nimport { Model } from 'mongoose';\nimport { UsersService } from './users.service';\nimport { ConfigService } from '@nestjs/config';\nimport { SendMailOption } from 'src/mail/type/SendMail-Option.type';\nimport { MailService } from 'src/mail/mail.service';\n\n@Injectable()\nexport class ResetPasswordService {\n  constructor(\n    @InjectModel(ResetPassword.name) private resetRepo: Model,\n    private usersService: UsersService,\n    private configService: ConfigService,\n    private mailService: MailService,\n  ) {}\n  async GenerateCode() {\n    const min = 10000000;\n    const max = 99999999;\n    return await Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  async Create(data: { user: string; code: number }) {\n    try {\n      const newRow = new this.resetRepo(data);\n      return await newRow.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.resetRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneByCode(code: string) {\n    try {\n      return await this.resetRepo.findOne({ code: code }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneByUserId(user_id: string) {\n    try {\n      return await this.resetRepo.findOne({ user: user_id }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateOneByUserId(user_id: string, data: object) {\n    try {\n      return await this.resetRepo\n        .findOneAndUpdate({ user: user_id }, data, { new: true })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteOneByUserId(user_id: string) {\n    try {\n      return await this.resetRepo.findOneAndDelete({ user: user_id }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async RequestResetPassword(email: string) {\n    try {\n      const user = await this.usersService.findOneByEmail(email);\n      if (!user) throw new NotFoundException('Email Not Exist');\n      const code = await this.GenerateCode();\n      const is_reset = await this.findOneByUserId((user as any)._id);\n      if (is_reset) {\n        await this.UpdateOneByUserId((user as any)._id, {\n          code: code,\n        });\n      } else {\n        await this.Create({\n          user: (user as any)._id,\n          code: code,\n        });\n      }\n\n      const EmailBody = `Dear ${user.username},\\n\n      your Reset Password Link IS:\\n\n      ${this.configService.get('RESET_PASSWORD_LINK')}${code}`;\n\n      const mailOption: SendMailOption = {\n        to: [user.email],\n        subject: 'Reset Password Request',\n        body: EmailBody,\n      };\n      await this.mailService.sendMail(mailOption);\n      return { message: 'Please Check Your Mail' };\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidCode(code: number) {\n    try {\n      const fiveMinutesAgo = new Date(new Date().getTime() - 5 * 60000);\n      return await this.resetRepo\n        .findOne({\n          code: code,\n          updatedAt: { $gte: fiveMinutesAgo },\n        })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async VerifyAndUpdate(code: number, newPassword: string) {\n    try {\n      const is_valid_email = await this.IsValidCode(code);\n      if (is_valid_email) {\n        await this.usersService.updateOneByID(is_valid_email.user, {\n          password: newPassword,\n        });\n        await this.DeleteOneByUserId(is_valid_email.user);\n        return { message: 'Success Updated' };\n      }\n      return new UnauthorizedException(\n        'Code Not Valid, Contact with Customer Service Or Try Again',\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesGuard.html":{"url":"injectables/RolesGuard.html","title":"injectable - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/roles.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflactor: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflactor\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ROLES_KEYS } from '../decorator/roles.decorator';\nimport { Roles } from '../enums/roles.enums';\n\n@Injectable()\nexport class RolesGuard extends AuthGuard('jwt') {\n  constructor(private reflactor: Reflector) {\n    super();\n  }\n  async canActivate(context: ExecutionContext) {\n    try {\n      const isPublic = this.reflactor.getAllAndOverride(ROLES_KEYS, [\n        context.getClass(),\n        context.getHandler(),\n      ]);\n      const user = context.switchToHttp().getRequest().user;\n      if (user) {\n        return user.roles.some((role) => isPublic.includes(role));\n      }\n      return false;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInByEmailDto.html":{"url":"classes/SignInByEmailDto.html","title":"class - SignInByEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInByEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/SignIn-by-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ayani@gmail.com', required: true})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/SignIn-by-email.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mypassword', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/SignIn-by-email.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class SignInByEmailDto {\n  @ApiProperty({\n    example: 'ayani@gmail.com',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: 'mypassword',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SpendingAuthController.html":{"url":"controllers/SpendingAuthController.html","title":"controller - SpendingAuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SpendingAuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/controller/spending-auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                spending-auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createEmployeeSpendingAuth\n                            \n                            \n                                    \n                                createInvoiceSpendingAuth\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                removeOneById\n                            \n                            \n                                    \n                                updateOneByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createEmployeeSpendingAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    createEmployeeSpendingAuth(bodyData: CreateEmployeeSpendingAuthDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('employee')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/spending-auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bodyData\n                                            \n                                                            CreateEmployeeSpendingAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createInvoiceSpendingAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    createInvoiceSpendingAuth(bodyData: CreateInvoiceSpendingAuthDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('invoice')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/spending-auth.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                bodyData\n                                            \n                                                            CreateInvoiceSpendingAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/spending-auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/spending-auth.controller.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneByID(id: string, updatedData: UpdateInvoiceSpendingAuthDto | UpdateEmployeeSpendingAuthDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/controller/spending-auth.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedData\n                                            \n                                                        UpdateInvoiceSpendingAuthDto | UpdateEmployeeSpendingAuthDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { SpendingAuthService } from '../service/spending-auth.service';\nimport { CreateEmployeeSpendingAuthDto } from '../dto/Spending-Auth/Employee/Create-Emp-Spending-Auth.dto';\nimport { EmployeeSpendingAuthInteface } from '../interface/Spending Authriztion/Employee-Spending-Auth.interface';\nimport { EmployeeSpendingAuthorization } from '../Model/Spending Authorization/Emp-Spending-Auth.model';\nimport { Request } from 'express';\nimport { CreateInvoiceSpendingAuthDto } from '../dto/Spending-Auth/Invoice/Create-Invoice-Spending-Auth.dto';\nimport { InvoiceSpendingAuthInteface } from '../interface/Spending Authriztion/Invoice-Spending-Auth.interface';\nimport { InvoiceSpendingAuthorization } from '../Model/Spending Authorization/Invoice-Spending-Auth.model';\nimport { UpdateInvoiceSpendingAuthDto } from '../dto/Spending-Auth/Invoice/Update-Invoice-Spending-Auth.dto';\nimport { UpdateEmployeeSpendingAuthDto } from '../dto/Spending-Auth/Employee/Update-Emp-Spending-Auth.dto';\n\n@ApiTags('Spending Auth')\n@Controller('spending-auth')\nexport class SpendingAuthController {\n  constructor(private spendingAuthService: SpendingAuthService) {}\n\n  @Post('employee')\n  createEmployeeSpendingAuth(\n    @Body() bodyData: CreateEmployeeSpendingAuthDto,\n    @Req() req: Request,\n  ) {\n    const data: EmployeeSpendingAuthInteface = {\n      ...bodyData,\n      type: EmployeeSpendingAuthorization.name,\n      createby: (req as any).user._id,\n    };\n    return this.spendingAuthService.create(data);\n  }\n\n  @Post('invoice')\n  createInvoiceSpendingAuth(\n    @Body() bodyData: CreateInvoiceSpendingAuthDto,\n    @Req() req: Request,\n  ) {\n    const data: InvoiceSpendingAuthInteface = {\n      ...bodyData,\n      type: InvoiceSpendingAuthorization.name,\n      createby: (req as any).user._id,\n    };\n    return this.spendingAuthService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.spendingAuthService.findAll();\n  }\n\n  @Patch(':id')\n  updateOneByID(\n    @Param('id') id: string,\n    @Body()\n    updatedData: UpdateInvoiceSpendingAuthDto | UpdateEmployeeSpendingAuthDto,\n  ) {\n    return this.spendingAuthService.updateOneById(id, updatedData);\n  }\n\n  @Delete(':id')\n  removeOneById(@Param('id') id: string) {\n    return this.spendingAuthService.removeOneById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpendingAuthService.html":{"url":"injectables/SpendingAuthService.html","title":"injectable - SpendingAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SpendingAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/service/spending-auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCreateBy\n                            \n                            \n                                    Async\n                                findByReleasedBy\n                            \n                            \n                                    Async\n                                findByStatus\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeOneById\n                            \n                            \n                                    Async\n                                updateOneById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(spendingAuthRepo: Model, employeeService: EmployeeService, userService: UsersService, invoiceService: InvoiceService)\n                    \n                \n                        \n                            \n                                Defined in src/billing/service/spending-auth.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        spendingAuthRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        invoiceService\n                                                  \n                                                        \n                                                                        InvoiceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: EmployeeSpendingAuthInteface | InvoiceSpendingAuthInteface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/spending-auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        EmployeeSpendingAuthInteface | InvoiceSpendingAuthInteface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/spending-auth.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCreateBy\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCreateBy(createby_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/spending-auth.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createby_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByReleasedBy\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByReleasedBy(releasedby_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/spending-auth.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                releasedby_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByStatus(status: SpendingAuthorizationStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/spending-auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            SpendingAuthorizationStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/spending-auth.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/spending-auth.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneById(id: string, data: EmployeeSpendingAuthInteface | InvoiceSpendingAuthInteface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/service/spending-auth.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        EmployeeSpendingAuthInteface | InvoiceSpendingAuthInteface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { SpendingAuthorization } from '../Model/Spending Authorization/Spending-Authorization.model';\nimport { EmployeeSpendingAuthInteface } from '../interface/Spending Authriztion/Employee-Spending-Auth.interface';\nimport { InvoiceSpendingAuthInteface } from '../interface/Spending Authriztion/Invoice-Spending-Auth.interface';\nimport { EmployeeService } from 'src/employee/service/employee.service';\nimport { UsersService } from 'src/users/service/users.service';\nimport { InvoiceService } from './invoice.service';\nimport { SpendingAuthorizationStatus } from '../enum/SpendingAuthorization-status.enum';\n\n@Injectable()\nexport class SpendingAuthService {\n  constructor(\n    @InjectModel(SpendingAuthorization.name)\n    private spendingAuthRepo: Model,\n    private employeeService: EmployeeService,\n    private userService: UsersService,\n    private invoiceService: InvoiceService,\n  ) {}\n\n  async create(\n    data: EmployeeSpendingAuthInteface | InvoiceSpendingAuthInteface,\n  ): Promise {\n    try {\n      if ('employee' in data) {\n        const employee = await this.employeeService.findOneById(data.employee);\n        if (!employee) throw new NotFoundException('Wrong Employee ID');\n      }\n\n      if ('invoice' in data) {\n        const employee = await this.invoiceService.findOneById(data.invoice);\n        if (!employee) throw new NotFoundException('Wrong Invoice ID');\n      }\n\n      const user = await this.userService.findOneByid(data.createby);\n      if (!user) throw new NotFoundException('Wrong User ID');\n\n      const newTicket = new this.spendingAuthRepo(data);\n      return await newTicket.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.spendingAuthRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByCreateBy(createby_id: string): Promise {\n    try {\n      return await this.spendingAuthRepo.find({ createby: createby_id }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByReleasedBy(\n    releasedby_id: string,\n  ): Promise {\n    try {\n      return await this.spendingAuthRepo\n        .find({ releasedby: releasedby_id })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByStatus(\n    status: SpendingAuthorizationStatus,\n  ): Promise {\n    try {\n      return await this.spendingAuthRepo.find({ status: status }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string): Promise {\n    try {\n      return await this.spendingAuthRepo.findById(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneById(\n    id: string,\n    data: EmployeeSpendingAuthInteface | InvoiceSpendingAuthInteface,\n  ): Promise {\n    try {\n      if ('employee' in data) {\n        const employee = await this.employeeService.findOneById(data.employee);\n        if (!employee) throw new NotFoundException('Wrong Employee ID');\n      }\n\n      if ('invoice' in data) {\n        const invoice = await this.invoiceService.findOneById(data.invoice);\n        if (!invoice) throw new NotFoundException('Wrong Invoice ID');\n      }\n\n      if (data.createby) {\n        const user = await this.userService.findOneByid(data.createby);\n        if (!user) throw new NotFoundException('Wrong User ID');\n      }\n\n      return await this.spendingAuthRepo.findByIdAndUpdate(id, data, {\n        new: true,\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneById(id: string) {\n    try {\n      return await this.spendingAuthRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpendingAuthorization.html":{"url":"classes/SpendingAuthorization.html","title":"class - SpendingAuthorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpendingAuthorization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/Model/Spending Authorization/Spending-Authorization.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                note\n                            \n                            \n                                    \n                                releasedby\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Spending-Authorization.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Spending-Authorization.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Spending-Authorization.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        releasedby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Spending-Authorization.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpendingAuthorizationStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Spending-Authorization.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/Model/Spending Authorization/Spending-Authorization.model.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { SpendingAuthorizationStatus } from '../../enum/SpendingAuthorization-status.enum';\nimport { EmployeeSpendingAuthorization } from './Emp-Spending-Auth.model';\nimport { InvoiceSpendingAuthorization } from './Invoice-Spending-Auth.model';\n\n@Schema({ timestamps: true, discriminatorKey: 'type' })\nexport class SpendingAuthorization {\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n\n  @Prop({ required: true })\n  amount: number;\n\n  @Prop()\n  note: string;\n\n  @Prop({ required: true, default: SpendingAuthorizationStatus.CLOSE })\n  status: SpendingAuthorizationStatus;\n\n  @Prop({\n    required: true,\n    enum: [\n      EmployeeSpendingAuthorization.name,\n      InvoiceSpendingAuthorization.name,\n    ],\n  })\n  type: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  releasedby: string;\n}\n\nexport const SpendingAuthorizationSchema = SchemaFactory.createForClass(\n  SpendingAuthorization,\n);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stock.html":{"url":"classes/Stock.html","title":"class - Stock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/stock.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branch\n                            \n                            \n                                    \n                                gard\n                            \n                            \n                                    \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/stock.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StockGard[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/stock.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StockItemslogs[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/stock.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { StockItemslogs } from './Stock-item-logs.model';\nimport { StockGard } from './Stock-Gard.model';\n\n@Schema({ timestamps: true })\nexport class Stock {\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: Branch.name,\n    required: true,\n    unique: true,\n  })\n  branch: string;\n\n  @Prop({ type: [StockItemslogs] })\n  items: StockItemslogs[];\n\n  @Prop({ type: [StockGard] })\n  gard: StockGard[];\n}\n\nexport const StockSchema = SchemaFactory.createForClass(Stock);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockController.html":{"url":"controllers/StockController.html","title":"controller - StockController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                    Async\n                                GetItemsCountAtStock\n                            \n                            \n                                    \n                                    Async\n                                removeOnebyID\n                            \n                            \n                                    \n                                    Async\n                                updateOnebyID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createStockDto: CreateStockDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStockDto\n                                            \n                                                            CreateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        GetItemsCountAtStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetItemsCountAtStock(stockid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('item-count/:stockid')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        removeOnebyID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOnebyID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        updateOnebyID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOnebyID(id: string, updateStockDto: UpdateStockDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStockDto\n                                            \n                                                            UpdateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  NotFoundException,\n} from '@nestjs/common';\nimport { StockService } from '../service/stock.service';\nimport { CreateStockDto } from '../dto/Stock/create-stock.dto';\nimport { UpdateStockDto } from '../dto/Stock/update-stock.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Stock')\n@Controller('stock')\nexport class StockController {\n  constructor(private readonly stockService: StockService) {}\n\n  @Post()\n  create(@Body() createStockDto: CreateStockDto) {\n    return this.stockService.createStock(createStockDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.stockService.findAll();\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.stockService.findOneByID(id);\n  }\n\n  @Get('item-count/:stockid')\n  async GetItemsCountAtStock(@Param('stockid') stockid: string) {\n    const stock = await this.stockService.findOneByID(stockid);\n    if (!stock) throw new NotFoundException('No Stock With This ID');\n    return this.stockService.GetItemsCountAtStock(stockid);\n  }\n\n  @Patch(':id')\n  async updateOnebyID(\n    @Param('id') id: string,\n    @Body() updateStockDto: UpdateStockDto,\n  ) {\n    const stock = await this.stockService.findOneByID(id);\n    if (!stock) throw new NotFoundException('No Stock With This ID');\n    return this.stockService.updateOnebyID(id, updateStockDto);\n  }\n\n  @Delete(':id')\n  async removeOnebyID(@Param('id') id: string) {\n    const stock = await this.stockService.findOneByID(id);\n    if (!stock) throw new NotFoundException('No Stock With This ID');\n    return this.stockService.removeOnebyID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockGard.html":{"url":"classes/StockGard.html","title":"class - StockGard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockGard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-Gard.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Gard.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StockItemQuantity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Gard.model.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { StockItemQuantity } from './Stock-item-quantity.model';\n\n@Schema({ timestamps: true })\nexport class StockGard {\n  @Prop({\n    type: [StockItemQuantity],\n  })\n  items: StockItemQuantity[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n}\n\nexport const StockGardSchema = SchemaFactory.createForClass(StockGard);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockGardController.html":{"url":"controllers/StockGardController.html","title":"controller - StockGardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockGardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock-gard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock-gard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAllForOneBranch\n                            \n                            \n                                    \n                                    Async\n                                findOneBranchGardById\n                            \n                            \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateStockGardDto, stock_id: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':stock_id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-gard.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateStockGardDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllForOneBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllForOneBranch(stockid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':stockid')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-gard.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOneBranchGardById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneBranchGardById(gard_id: string, stockid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':gard_id/:stockid')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-gard.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gard_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stockid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(gard_id: string, stockid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':gard_id/:stockid')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-gard.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                gard_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stockid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  NotFoundException,\n  Param,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { StockGardService } from '../service/stock-gard.service';\nimport { CreateStockGardDto } from '../dto/Stock Gard/create-stock-gard.dto';\nimport { Request } from 'express';\nimport { ApiTags } from '@nestjs/swagger';\nimport { StockService } from '../service/stock.service';\n\n@ApiTags('Stock Gard')\n@Controller('stock-gard')\nexport class StockGardController {\n  constructor(\n    private readonly stockGardService: StockGardService,\n    private stockService: StockService,\n  ) {}\n\n  @Post(':stock_id')\n  async create(\n    @Body() createDto: CreateStockGardDto,\n    @Param('stock_id') stock_id: string,\n    @Req() req: Request,\n  ) {\n    const stock = await this.stockService.findOneByID(stock_id);\n    if (!stock) throw new NotFoundException('No Stock With This ID');\n    const createby = (req as any).user._id;\n    const data = {\n      createby,\n      stock_id,\n      ...createDto,\n    };\n    return this.stockGardService.create(data);\n  }\n\n  @Get(':stockid')\n  findAllForOneBranch(@Param('stockid') stockid: string) {\n    return this.stockGardService.findAllForOneStock(stockid);\n  }\n\n  @Get(':gard_id/:stockid')\n  async findOneBranchGardById(\n    @Param('gard_id') gard_id: string,\n    @Param('stockid') stockid: string,\n  ) {\n    const stock = await this.stockService.findOneByID(stockid);\n    if (!stock) throw new NotFoundException('No Stock With This ID');\n    return this.stockGardService.findOneStockGardById(gard_id, stockid);\n  }\n\n  @Delete(':gard_id/:stockid')\n  remove(@Param('gard_id') gard_id: string, @Param('stockid') stockid: string) {\n    return this.stockGardService.DeleteStockGardById(gard_id, stockid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockGardInterface.html":{"url":"interfaces/StockGardInterface.html","title":"interface - StockGardInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockGardInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Gard.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stock_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         StockItemQuantityInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockItemQuantityInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stock_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StockItemQuantityInterface } from './Stock-Item-quantity.interface';\n\nexport interface StockGardInterface {\n  items?: StockItemQuantityInterface[];\n  stock_id?: string;\n  createby?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockGardService.html":{"url":"injectables/StockGardService.html","title":"injectable - StockGardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockGardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock-gard.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                DeleteStockGardById\n                            \n                            \n                                    Async\n                                findAllForOneStock\n                            \n                            \n                                    Async\n                                findOneStockGardById\n                            \n                            \n                                    Async\n                                UpdateStockGardById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockGardRepo: Model, stockRepo: Model, stockItemService: StockItemService)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock-gard.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockGardRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockItemService\n                                                  \n                                                        \n                                                                        StockItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: StockGardInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-gard.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockGardInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteStockGardById\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteStockGardById(id: string, stock_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-gard.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllForOneStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllForOneStock(stock_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-gard.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneStockGardById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneStockGardById(id: string, stock_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-gard.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateStockGardById\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateStockGardById(id: string, data: StockGardInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-gard.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StockGardInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { StockGard } from '../Model/Stock-Gard.model';\nimport { StockGardInterface } from '../interfaces/Stock-Gard.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Stock } from '../Model/stock.model';\nimport { StockItemService } from './stock-item.service';\n\n@Injectable()\nexport class StockGardService {\n  constructor(\n    @InjectModel(StockGard.name)\n    private readonly stockGardRepo: Model,\n    @InjectModel(Stock.name)\n    private readonly stockRepo: Model,\n    private stockItemService: StockItemService,\n  ) {}\n\n  async create(data: StockGardInterface): Promise {\n    try {\n      const { stock_id, ...newData } = data;\n\n      const stock = await this.stockRepo.findById(stock_id);\n      if (!stock) throw new NotFoundException('Stock Not Exist');\n\n      if (newData.items) {\n        for (const item of newData.items) {\n          const itemObject = await this.stockItemService.findOneById(\n            item.stock_item,\n          );\n          if (!itemObject) throw new NotFoundException('item Not Exist ');\n        }\n        const newGard = new this.stockGardRepo(newData);\n\n        return await this.stockRepo.findByIdAndUpdate(\n          stock_id,\n          { $push: { gard: newGard } },\n          { new: true },\n        );\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllForOneStock(stock_id: string) {\n    try {\n      return await this.stockRepo.find({ _id: stock_id }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneStockGardById(id: string, stock_id: string) {\n    try {\n      return await this.stockRepo.findOne({\n        _id: stock_id,\n        'gard._id': id,\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateStockGardById(id: string, data: StockGardInterface) {\n    try {\n      return await this.stockRepo\n        .updateOne(\n          { _id: data.stock_id, 'gard._id': id },\n          { $set: { 'gard.$[elem]': data } },\n          { arrayFilters: [{ 'elem._id': id }] },\n        )\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteStockGardById(id: string, stock_id: string) {\n    try {\n      return await this.stockRepo.updateOne(\n        { _id: stock_id },\n        { $pull: { gard: { _id: id } } },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockInterface.html":{"url":"interfaces/StockInterface.html","title":"interface - StockInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transaction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gard:         StockGardInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockGardInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         StockItemLogsInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockItemLogsInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StockGardInterface } from './Stock-Gard.interface';\nimport { StockItemLogsInterface } from './Stock-Item-logs.interface';\n\nexport interface StockInterface {\n  branch?: string;\n\n  items?: StockItemLogsInterface[];\n\n  transaction?: string[];\n\n  gard?: StockGardInterface[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockItem.html":{"url":"classes/StockItem.html","title":"class - StockItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-Item.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockItemCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Item.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Item.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Item.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { StockItemCategory } from '../enums/Stock-Item-Category.enum';\n\n@Schema()\nexport class StockItem {\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Prop({ required: true })\n  category: StockItemCategory;\n\n  @Prop()\n  description: string;\n}\n\nexport const StockItemSchema = SchemaFactory.createForClass(StockItem);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockItemController.html":{"url":"controllers/StockItemController.html","title":"controller - StockItemController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockItemController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock-item.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock-item\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateStockItemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateStockItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateStockItemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdateStockItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { StockItemService } from '../service/stock-item.service';\nimport { CreateStockItemDto } from '../dto/Stock Item/create-stock-item.dto';\nimport { UpdateStockItemDto } from '../dto/Stock Item/update-Stock-Item.dto';\n\n@ApiTags('Stock Item')\n@Controller('stock-item')\nexport class StockItemController {\n  constructor(private readonly stockItemService: StockItemService) {}\n\n  @Post()\n  create(@Body() createDto: CreateStockItemDto) {\n    return this.stockItemService.create(createDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.stockItemService.findAll();\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.stockItemService.findOneById(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateDto: UpdateStockItemDto) {\n    return this.stockItemService.UpdateById(id, updateDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.stockItemService.DeleteById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockItemInterface.html":{"url":"interfaces/StockItemInterface.html","title":"interface - StockItemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockItemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Item.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         StockItemCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockItemCategory\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StockItemCategory } from '../enums/Stock-Item-Category.enum';\n\nexport interface StockItemInterface {\n  name?: string;\n  category?: StockItemCategory;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockItemLogsController.html":{"url":"controllers/StockItemLogsController.html","title":"controller - StockItemLogsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockItemLogsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock-item-logs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock-item-logs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findOneStockTransactionById\n                            \n                            \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(stock_id: string, createDto: CreateStockItemLogsDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':stock_id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item-logs.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createDto\n                                            \n                                                            CreateStockItemLogsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneStockTransactionById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneStockTransactionById(item_log_id: string, stock_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item-logs.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item_log_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(item_log_id: string, stock_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item-logs.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item_log_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Post,\n  Query,\n  Req,\n} from '@nestjs/common';\nimport { StockItemLogsService } from '../service/stock-item-logs.service';\nimport { CreateStockItemLogsDto } from '../dto/Stock Item Logs/create-Stock-Item-Logs.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { StockItemLogsInterface } from '../interfaces/Stock-Item-logs.interface';\nimport { StockService } from '../service/stock.service';\n\n@ApiTags('Stock Item Logs')\n@Controller('stock-item-logs')\nexport class StockItemLogsController {\n  constructor(\n    private readonly stockItemLogsService: StockItemLogsService,\n    private stockService: StockService,\n  ) {}\n\n  @Post(':stock_id')\n  create(\n    @Param('stock_id') stock_id: string,\n    @Body() createDto: CreateStockItemLogsDto,\n    @Req() req: Request,\n  ) {\n    const data: StockItemLogsInterface = {\n      createby: (req as any).user._id,\n      stock_id: stock_id,\n      ...createDto,\n    };\n    return this.stockItemLogsService.create(data);\n  }\n\n  @Get()\n  findOneStockTransactionById(\n    @Query('item-log-id') item_log_id: string,\n    @Query('stock-id') stock_id: string,\n  ) {\n    return this.stockItemLogsService.findOneStockTransactionById(\n      item_log_id,\n      stock_id,\n    );\n  }\n\n  @Delete()\n  remove(\n    @Query('item-log-id') item_log_id: string,\n    @Query('stock-id') stock_id: string,\n  ) {\n    return this.stockItemLogsService.DeleteStockItemLogById(\n      item_log_id,\n      stock_id,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockItemLogsInterface.html":{"url":"interfaces/StockItemLogsInterface.html","title":"interface - StockItemLogsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockItemLogsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Item-logs.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            item\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stock_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transaction\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transaction_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:         StockItemQuantityInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockItemQuantityInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stock_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction:         StockTransactionTYPE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockTransactionTYPE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StockTransactionTYPE } from '../enums/Stock-Transactions.enum';\nimport { StockItemQuantityInterface } from './Stock-Item-quantity.interface';\n\nexport interface StockItemLogsInterface {\n  item?: StockItemQuantityInterface;\n\n  createby?: string;\n\n  transaction?: StockTransactionTYPE;\n\n  stock_id?: string;\n\n  transaction_id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockItemLogsService.html":{"url":"injectables/StockItemLogsService.html","title":"injectable - StockItemLogsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockItemLogsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock-item-logs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                DeleteStockItemLogById\n                            \n                            \n                                    Async\n                                findOneStockTransactionById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockItemLogRepo: Model, stockRepo: Model, stockItemService: StockItemService)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock-item-logs.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockItemLogRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockItemService\n                                                  \n                                                        \n                                                                        StockItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: StockItemLogsInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item-logs.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockItemLogsInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteStockItemLogById\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteStockItemLogById(log_id: string, stock_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item-logs.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                log_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneStockTransactionById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneStockTransactionById(item_log_id: string, stock_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item-logs.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item_log_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { StockItemslogs } from '../Model/Stock-item-logs.model';\nimport { Model } from 'mongoose';\nimport { StockItemLogsInterface } from '../interfaces/Stock-Item-logs.interface';\nimport { Stock } from '../Model/stock.model';\nimport { StockTransactionTYPE } from '../enums/Stock-Transactions.enum';\nimport { StockItemService } from './stock-item.service';\n\n@Injectable()\nexport class StockItemLogsService {\n  constructor(\n    @InjectModel(StockItemslogs.name)\n    private readonly stockItemLogRepo: Model,\n    @InjectModel(Stock.name)\n    private readonly stockRepo: Model,\n    private readonly stockItemService: StockItemService,\n  ) {}\n\n  async create(data: StockItemLogsInterface): Promise {\n    try {\n      const { stock_id, ...newData } = data;\n\n      const stock = await this.stockRepo.findById(stock_id);\n      if (!stock) throw new NotFoundException('Wrong Stock');\n\n      const item = await this.stockItemService.findOneById(\n        newData.item[0].stock_item,\n      );\n      if (!item) throw new NotFoundException('Item Not Found');\n\n      if (newData.transaction == StockTransactionTYPE.ADD) {\n        throw new ConflictException(\"Can't Add To Stock Back To Your Manager\");\n      }\n      const newItem = new this.stockItemLogRepo(newData);\n\n      return await this.stockRepo.findByIdAndUpdate(\n        stock_id,\n        { $push: { items: newItem } },\n        { new: true },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneStockTransactionById(\n    item_log_id: string,\n    stock_id: string,\n  ): Promise {\n    try {\n      return await this.stockRepo.findOne({\n        _id: stock_id,\n        'items._id': item_log_id,\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteStockItemLogById(\n    log_id: string,\n    stock_id: string,\n  ): Promise {\n    try {\n      return await this.stockRepo.findByIdAndUpdate(stock_id, {\n        $pull: { items: { _id: log_id } },\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockItemQuantity.html":{"url":"classes/StockItemQuantity.html","title":"class - StockItemQuantity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockItemQuantity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-item-quantity.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                stock_item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-quantity.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock_item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-quantity.model.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { StockItem } from './Stock-Item.model';\n\n@Schema()\nexport class StockItemQuantity {\n  @Prop({\n    type: mongoose.Types.ObjectId,\n    ref: StockItem.name,\n    required: true,\n  })\n  stock_item: string;\n\n  @Prop({ required: true })\n  quantity: number;\n}\n\nexport const StockItemQuantitySchema =\n  SchemaFactory.createForClass(StockItemQuantity);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockItemQuantityInterface.html":{"url":"interfaces/StockItemQuantityInterface.html","title":"interface - StockItemQuantityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockItemQuantityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Item-quantity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stock_item\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock_item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stock_item:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StockItemQuantityInterface {\n  stock_item?: string;\n\n  quantity?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockItemQuantityService.html":{"url":"injectables/StockItemQuantityService.html","title":"injectable - StockItemQuantityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockItemQuantityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock-item-quantity.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class StockItemQuantityService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockItemService.html":{"url":"injectables/StockItemService.html","title":"injectable - StockItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock-item.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AreStockItemsExist\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                DeleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                UpdateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockItemRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock-item.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockItemRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AreStockItemsExist\n                        \n                    \n                \n            \n            \n                \n                        \n                    AreStockItemsExist(stockItems: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockItems\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: StockItemInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockItemInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteById(item_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(item_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateById(item_id: string, data: StockItemInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                item_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StockItemInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { StockItemInterface } from '../interfaces/Stock-Item.interface';\nimport { StockItem } from '../Model/Stock-Item.model';\n\n@Injectable()\nexport class StockItemService {\n  constructor(\n    @InjectModel(StockItem.name)\n    private readonly stockItemRepo: Model,\n  ) {}\n\n  async create(data: StockItemInterface) {\n    try {\n      const newItem = new this.stockItemRepo(data);\n      return await newItem.save();\n    } catch (err) {\n      if (err.code == 11000) {\n        throw new ConflictException('Item Is Already Exist');\n      }\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.stockItemRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async AreStockItemsExist(stockItems: string[]): Promise {\n    try {\n      const items = await this.stockItemRepo.find({ _id: stockItems }).exec();\n      if (items.length == stockItems.length) {\n        return true;\n      }\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(item_id: string) {\n    try {\n      return await this.stockItemRepo.findById(item_id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateById(item_id: string, data: StockItemInterface) {\n    try {\n      return await this.stockItemRepo\n        .findByIdAndUpdate(item_id, { data }, { new: true })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteById(item_id: string) {\n    try {\n      return await this.stockItemRepo.findByIdAndDelete(item_id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockItemslogs.html":{"url":"classes/StockItemslogs.html","title":"class - StockItemslogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockItemslogs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-item-logs.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                item\n                            \n                            \n                                    \n                                transaction\n                            \n                            \n                                    \n                                transaction_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-logs.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockItemQuantity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: StockItemQuantity})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-logs.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockTransactionTYPE\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-logs.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-logs.model.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { StockTransactionTYPE } from '../enums/Stock-Transactions.enum';\nimport { StockItemQuantity } from './Stock-item-quantity.model';\nimport { StockTransaction } from './Stock-Transaction.model';\n\n@Schema({ timestamps: true })\nexport class StockItemslogs {\n  @Prop({ type: StockItemQuantity })\n  item: StockItemQuantity;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n\n  @Prop()\n  transaction: StockTransactionTYPE;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: StockTransaction.name })\n  transaction_id: string;\n}\n\nexport const StockItemslogsSchema =\n  SchemaFactory.createForClass(StockItemslogs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StockModule.html":{"url":"modules/StockModule.html","title":"module - StockModule","body":"\n                   \n\n\n\n\n    Modules\n    StockModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StockModule\n\n\n\ncluster_StockModule_providers\n\n\n\ncluster_StockModule_exports\n\n\n\ncluster_StockModule_imports\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nStockModule\n\nStockModule\n\nStockModule -->\n\nBranchModule->StockModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nStockModule -->\n\nUsersModule->StockModule\n\n\n\n\n\nStockItemService \n\nStockItemService \n\nStockItemService  -->\n\nStockModule->StockItemService \n\n\n\n\n\nStockService \n\nStockService \n\nStockService  -->\n\nStockModule->StockService \n\n\n\n\n\nStockTransactionService \n\nStockTransactionService \n\nStockTransactionService  -->\n\nStockModule->StockTransactionService \n\n\n\n\n\nStockGardService\n\nStockGardService\n\nStockModule -->\n\nStockGardService->StockModule\n\n\n\n\n\nStockItemLogsService\n\nStockItemLogsService\n\nStockModule -->\n\nStockItemLogsService->StockModule\n\n\n\n\n\nStockItemQuantityService\n\nStockItemQuantityService\n\nStockModule -->\n\nStockItemQuantityService->StockModule\n\n\n\n\n\nStockItemService\n\nStockItemService\n\nStockModule -->\n\nStockItemService->StockModule\n\n\n\n\n\nStockService\n\nStockService\n\nStockModule -->\n\nStockService->StockModule\n\n\n\n\n\nStockTransactionService\n\nStockTransactionService\n\nStockModule -->\n\nStockTransactionService->StockModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stock/stock.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StockGardService\n                        \n                        \n                            StockItemLogsService\n                        \n                        \n                            StockItemQuantityService\n                        \n                        \n                            StockItemService\n                        \n                        \n                            StockService\n                        \n                        \n                            StockTransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StockController\n                        \n                        \n                            StockItemController\n                        \n                        \n                            StockTransactionController\n                        \n                        \n                            StockItemLogsController\n                        \n                        \n                            StockGardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StockItemService\n                        \n                        \n                            StockService\n                        \n                        \n                            StockTransactionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StockService } from './service/stock.service';\nimport { StockController } from './controller/stock.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { StockItem, StockItemSchema } from './Model/Stock-Item.model';\nimport { Stock, StockSchema } from './Model/stock.model';\nimport {\n  StockTransactionSchema,\n  StockTransaction,\n} from './Model/Stock-Transaction.model';\nimport { StockGard, StockGardSchema } from './Model/Stock-Gard.model';\nimport {\n  StockItemQuantity,\n  StockItemQuantitySchema,\n} from './Model/Stock-item-quantity.model';\nimport {\n  StockItemslogs,\n  StockItemslogsSchema,\n} from './Model/Stock-item-logs.model';\nimport { BranchModule } from 'src/branch/branch.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { StockItemService } from './service/stock-item.service';\nimport { StockTransactionService } from './service/stock-transaction.service';\nimport { StockItemLogsService } from './service/stock-item-logs.service';\nimport { StockItemController } from './controller/stock-item.controller';\nimport { StockTransactionController } from './controller/stock-transaction.controller';\nimport { StockItemLogsController } from './controller/stock-item-logs.controller';\nimport { StockGardController } from './controller/stock-gard.controller';\nimport { StockGardService } from './service/stock-gard.service';\nimport { StockItemQuantityService } from './service/stock-item-quantity.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Stock.name,\n        schema: StockSchema,\n      },\n      {\n        name: StockItemQuantity.name,\n        schema: StockItemQuantitySchema,\n      },\n      {\n        name: StockItem.name,\n        schema: StockItemSchema,\n      },\n      {\n        name: StockItemslogs.name,\n        schema: StockItemslogsSchema,\n      },\n      {\n        name: StockTransaction.name,\n        schema: StockTransactionSchema,\n      },\n      {\n        name: StockGard.name,\n        schema: StockGardSchema,\n      },\n    ]),\n    BranchModule,\n    UsersModule,\n  ],\n  controllers: [\n    StockController,\n    StockItemController,\n    StockTransactionController,\n    StockItemLogsController,\n    StockGardController,\n  ],\n  providers: [\n    StockService,\n    StockItemService,\n    StockTransactionService,\n    StockItemLogsService,\n    StockGardService,\n    StockItemQuantityService,\n  ],\n  exports: [StockService, StockItemService, StockTransactionService],\n})\nexport class StockModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockService.html":{"url":"injectables/StockService.html","title":"injectable - StockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStock\n                            \n                            \n                                    Async\n                                CreateStockItemlog\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByID\n                            \n                            \n                                    Async\n                                GetItemsCountAtStock\n                            \n                            \n                                    Async\n                                removeOnebyID\n                            \n                            \n                                    Async\n                                updateOnebyID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockRepo: Model, stockItemLogRepo: Model, connection: mongoose.Connection, banchService: BranchService)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockItemLogRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    mongoose.Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        banchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStock(createStockData: StockInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStockData\n                                            \n                                                            StockInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CreateStockItemlog\n                        \n                    \n                \n            \n            \n                \n                        \n                    CreateStockItemlog(data: StockItemLogsInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockItemLogsInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GetItemsCountAtStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    GetItemsCountAtStock(stockid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stockid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOnebyID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOnebyID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOnebyID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOnebyID(stock_id: string, updatedStockData: StockInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedStockData\n                                            \n                                                            StockInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { Stock } from '../Model/stock.model';\nimport mongoose, { Model } from 'mongoose';\nimport { StockItemLogsInterface } from '../interfaces/Stock-Item-logs.interface';\nimport { StockItemslogs } from '../Model/Stock-item-logs.model';\nimport { StockTransactionTYPE } from '../enums/Stock-Transactions.enum';\nimport { StockItem } from '../Model/Stock-Item.model';\nimport { BranchService } from 'src/branch/branch.service';\nimport { StockInterface } from '../interfaces/Stock.interface';\n\n@Injectable()\nexport class StockService {\n  constructor(\n    @InjectModel(Stock.name) private readonly stockRepo: Model,\n    @InjectModel(StockItemslogs.name)\n    private readonly stockItemLogRepo: Model,\n    @InjectConnection() private readonly connection: mongoose.Connection,\n    private banchService: BranchService,\n  ) {}\n\n  async createStock(createStockData: StockInterface): Promise {\n    try {\n      const branch = await this.banchService.findOneBranchByID(\n        createStockData.branch,\n      );\n      if (!branch) throw new NotFoundException('Branch Not Exist');\n      const newStock = new this.stockRepo(createStockData);\n      return await newStock.save();\n    } catch (err) {\n      if (err.code == 11000) {\n        throw new ConflictException('Stock Already Exist');\n      }\n      throw err;\n    }\n  }\n\n  async CreateStockItemlog(data: StockItemLogsInterface) {\n    try {\n      const { stock_id, ...stocklogdata } = data;\n      const newStckItemLog = new this.stockItemLogRepo(stocklogdata);\n      return await this.stockRepo.findByIdAndUpdate(stock_id, {\n        $push: { items: newStckItemLog },\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.stockRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneByID(id: string) {\n    try {\n      return await this.stockRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async GetItemsCountAtStock(stockid: string) {\n    try {\n      const stock = await this.stockRepo.findById(stockid).populate({\n        path: 'items',\n        populate: {\n          path: 'item',\n          populate: {\n            path: 'stock_item',\n            model: StockItem.name, // Make sure this matches the name you've given your stock item model\n          },\n        },\n      });\n\n      if (!stock) {\n        throw new Error('Stock not found');\n      }\n\n      const itemCounts = {};\n      stock.items.forEach((log) => {\n        const itemName = (log as any).item.stock_item.name;\n        const quantity = log.item.quantity;\n        const transactionType = log.transaction;\n\n        if (!itemCounts[itemName]) {\n          itemCounts[itemName] = 0;\n        }\n\n        // If transaction type is 'add', increase the count, otherwise decrease it\n        if (transactionType === StockTransactionTYPE.ADD) {\n          itemCounts[itemName] += quantity;\n        } else {\n          itemCounts[itemName] -= quantity;\n        }\n      });\n\n      return itemCounts;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOnebyID(stock_id: string, updatedStockData: StockInterface) {\n    try {\n      if (updatedStockData.branch) {\n        const branch = await this.banchService.findOneBranchByID(\n          updatedStockData.branch,\n        );\n        if (!branch) throw new NotFoundException('Branch Not Exist');\n      }\n      return await this.stockRepo.findByIdAndUpdate(stock_id, updatedStockData);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOnebyID(id: string) {\n    try {\n      return await this.stockRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockTransaction.html":{"url":"classes/StockTransaction.html","title":"class - StockTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-Transaction.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                items_quantity\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                stock\n                            \n                            \n                                    \n                                updated_user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items_quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StockItemQuantity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockTransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: 'Stock'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updated_user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { StockItemQuantity } from './Stock-item-quantity.model';\nimport { User } from 'src/users/Model/user.model';\nimport { StockTransactionStatus } from '../enums/Stock-Transaction-Status.enum';\n\n@Schema({ timestamps: true })\nexport class StockTransaction {\n  @Prop({\n    type: [StockItemQuantity],\n    required: true,\n    default: [],\n  })\n  items_quantity: StockItemQuantity[];\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Stock' })\n  stock: string;\n\n  @Prop({\n    type: mongoose.Schema.Types.ObjectId,\n    ref: User.name,\n    required: true,\n  })\n  createby: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: User.name })\n  updated_user: string;\n\n  @Prop({ required: true, default: StockTransactionStatus.INPROGRESS })\n  status: StockTransactionStatus;\n}\n\nexport const StockTransactionSchema =\n  SchemaFactory.createForClass(StockTransaction);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockTransactionController.html":{"url":"controllers/StockTransactionController.html","title":"controller - StockTransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockTransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock-transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock-transaction\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                ChangeTransactionStatus\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findAllTransactionForSpecificBranch\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                removeOneByID\n                            \n                            \n                                    \n                                updateOneByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        ChangeTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTransactionStatus(transaction_id: string, status: StockTransactionStatus, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('change-status/:transaction_id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            StockTransactionStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(req: Request, createDto: CreateTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createDto\n                                            \n                                                            CreateTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAllTransactionForSpecificBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllTransactionForSpecificBranch(branch_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('branch/:branch_id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneByID(id: string, updateDto: UpdateStockTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdateStockTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { StockTransactionService } from '../service/stock-transaction.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateTransactionDto } from '../dto/Stock Transaction/create-Transaction.dto';\nimport { UpdateStockTransactionDto } from '../dto/Stock Transaction/update-Transaction.dto';\nimport { StockTransactionStatus } from '../enums/Stock-Transaction-Status.enum';\nimport { Request } from 'express';\nimport { StockTransactionInterface } from '../interfaces/Stock-Transaction.interface';\n\n@ApiTags('Stock Transaction')\n@Controller('stock-transaction')\nexport class StockTransactionController {\n  constructor(\n    private readonly stockTransactionService: StockTransactionService,\n  ) {}\n\n  @Post()\n  create(@Req() req: Request, @Body() createDto: CreateTransactionDto) {\n    const data: StockTransactionInterface = {\n      createby: (req as any).user._id,\n      ...createDto,\n    };\n    return this.stockTransactionService.Create(data);\n  }\n\n  @Post('change-status/:transaction_id')\n  async ChangeTransactionStatus(\n    @Param('transaction_id') transaction_id: string,\n    @Body('status') status: StockTransactionStatus,\n    @Req() req: Request,\n  ) {\n    const userid = (req as any).user._id;\n    return this.stockTransactionService.ChangeTransactionStatus(\n      transaction_id,\n      status,\n      userid,\n    );\n  }\n\n  @Get()\n  findAll() {\n    return this.stockTransactionService.findAll();\n  }\n\n  @Get('branch/:branch_id')\n  findAllTransactionForSpecificBranch(@Param('branch_id') branch_id: string) {\n    return this.stockTransactionService.findAllTransactionForSpecificBranch(\n      branch_id,\n    );\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.stockTransactionService.findOneStockTransactionByID(id);\n  }\n\n  @Patch(':id')\n  updateOneByID(\n    @Param('id') id: string,\n    @Body() updateDto: UpdateStockTransactionDto,\n  ) {\n    return this.stockTransactionService.UpdateOneByID(id, updateDto);\n  }\n\n  @Delete(':id')\n  removeOneByID(@Param('id') id: string) {\n    return this.stockTransactionService.DeleteOneByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockTransactionInterface.html":{"url":"interfaces/StockTransactionInterface.html","title":"interface - StockTransactionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockTransactionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            items_quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stock\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updated_user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items_quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items_quantity:         StockItemQuantityInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockItemQuantityInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StockTransactionStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockTransactionStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stock:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StockTransactionStatus } from '../enums/Stock-Transaction-Status.enum';\nimport { StockItemQuantityInterface } from './Stock-Item-quantity.interface';\n\nexport interface StockTransactionInterface {\n  items_quantity?: StockItemQuantityInterface[];\n\n  stock?: string;\n\n  createby?: string;\n\n  updated_user?: string;\n\n  status?: StockTransactionStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockTransactionService.html":{"url":"injectables/StockTransactionService.html","title":"injectable - StockTransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockTransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock-transaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddTransactionToStock\n                            \n                            \n                                    Async\n                                ChangeTransactionStatus\n                            \n                            \n                                    Async\n                                Create\n                            \n                            \n                                    Async\n                                DeleteOneByID\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllTransactionForSpecificBranch\n                            \n                            \n                                    Async\n                                findOneStockTransactionByID\n                            \n                            \n                                    Async\n                                UpdateOneByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockTransactionRepo: Model, stockItemlogSerivce: StockItemLogsService, connection: mongoose.Connection, userService: UsersService, stockService: StockService, stockItemService: StockItemService)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock-transaction.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockTransactionRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockItemlogSerivce\n                                                  \n                                                        \n                                                                        StockItemLogsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    mongoose.Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockService\n                                                  \n                                                        \n                                                                        StockService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockItemService\n                                                  \n                                                        \n                                                                        StockItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddTransactionToStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddTransactionToStock(transaction: StockTransactionInterface, createby: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction\n                                            \n                                                            StockTransactionInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createby\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTransactionStatus(transaction_id, status: StockTransactionStatus, updateby: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction_id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            StockTransactionStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateby\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Create\n                        \n                    \n                \n            \n            \n                \n                        \n                    Create(data: StockTransactionInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockTransactionInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteOneByID(transaction_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllTransactionForSpecificBranch\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllTransactionForSpecificBranch(branch_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branch_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneStockTransactionByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneStockTransactionByID(stock_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:129\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                stock_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateOneByID(transaction_id: string, data: StockTransactionInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StockTransactionInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { StockTransactionStatus } from '../enums/Stock-Transaction-Status.enum';\nimport { StockTransactionInterface } from '../interfaces/Stock-Transaction.interface';\nimport { InjectModel, InjectConnection } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { StockTransaction } from '../Model/Stock-Transaction.model';\nimport { StockItemLogsInterface } from '../interfaces/Stock-Item-logs.interface';\nimport { StockTransactionTYPE } from '../enums/Stock-Transactions.enum';\nimport { StockItemLogsService } from './stock-item-logs.service';\nimport { UsersService } from 'src/users/service/users.service';\nimport { StockService } from './stock.service';\nimport { StockItemService } from './stock-item.service';\n\n@Injectable()\nexport class StockTransactionService {\n  constructor(\n    @InjectModel(StockTransaction.name)\n    private readonly stockTransactionRepo: Model,\n    private stockItemlogSerivce: StockItemLogsService,\n    @InjectConnection() private readonly connection: mongoose.Connection,\n    private userService: UsersService,\n    private stockService: StockService,\n    private stockItemService: StockItemService,\n  ) {}\n\n  async Create(data: StockTransactionInterface): Promise {\n    try {\n      // Check If User Valid\n      const createby = await this.userService.findOneByid(data.createby);\n      if (!createby) throw new NotFoundException('User Not Exist');\n\n      // Check If Stock Valid\n      const stock = await this.stockService.findOneByID(data.stock);\n      if (!stock) throw new NotFoundException('Stock Not found');\n\n      // Check If Stock Valid\n      for (const item of data.items_quantity) {\n        const is_item_available = await this.stockItemService.findOneById(\n          item.stock_item,\n        );\n        if (!is_item_available) throw new NotFoundException('Item not found');\n      }\n      const newTransactin = new this.stockTransactionRepo(data);\n      return await newTransactin.save();\n    } catch (err) {\n      if (err.code) {\n        console.log(err.message);\n        throw new ConflictException();\n      }\n      throw err;\n    }\n  }\n\n  async ChangeTransactionStatus(\n    transaction_id,\n    status: StockTransactionStatus,\n    updateby: string,\n  ): Promise {\n    try {\n      // Check is Transaction ID Valid\n      const transactionObject =\n        await this.findOneStockTransactionByID(transaction_id);\n      if (!transactionObject)\n        throw new NotFoundException('Not Valid Transaction');\n\n      //  Check If Status Not The Same\n      if (transactionObject.status === status) {\n        throw new ConflictException('You Need To Call Your SuperVisor');\n      } else {\n        if (transactionObject.status == StockTransactionStatus.INPROGRESS) {\n          //  If Status Completed add to Stock then Update the status\n          if (status == StockTransactionStatus.COMPELETED) {\n            const session = await this.connection.startSession();\n\n            await session.withTransaction(async () => {\n              this.AddTransactionToStock(transactionObject, updateby);\n              await this.UpdateOneByID(transaction_id, { status });\n            });\n\n            session.endSession();\n\n            return { MSG: 'Transaction added successfully' };\n          } else {\n            // Status Is Canceled only Update\n            return await this.UpdateOneByID(transaction_id, {\n              status,\n              updated_user: updateby,\n            });\n          }\n        } else {\n          throw new ConflictException(\n            \"You Need To Call Your SuperVisor, Can't Change Status After Accept Or Cancel\",\n          );\n        }\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async AddTransactionToStock(\n    transaction: StockTransactionInterface,\n    createby: string,\n  ): Promise {\n    try {\n      const session = await this.connection.startSession();\n      await session.withTransaction(async () => {\n        (await transaction).items_quantity.forEach(async (item) => {\n          const newLogData: StockItemLogsInterface = {\n            item: { stock_item: item.stock_item, quantity: item.quantity },\n            createby,\n            transaction: StockTransactionTYPE.ADD,\n            transaction_id: (transaction as any)._id,\n            stock_id: transaction.stock,\n          };\n          await this.stockItemlogSerivce.create(newLogData);\n        });\n        session.endSession();\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneStockTransactionByID(\n    stock_id: string,\n  ): Promise {\n    try {\n      return await this.stockTransactionRepo.findById(stock_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.stockTransactionRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllTransactionForSpecificBranch(\n    branch_id: string,\n  ): Promise {\n    try {\n      return await this.stockTransactionRepo.find({ branch: branch_id }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateOneByID(\n    transaction_id: string,\n    data: StockTransactionInterface,\n  ): Promise {\n    try {\n      if (data.stock) {\n        // Check If Stock Valid\n        const stock = await this.stockService.findOneByID(data.stock);\n        if (!stock) throw new NotFoundException('Stock Not found');\n      }\n\n      if (data.createby) {\n        // Check If user Valid\n        const user = await this.userService.findOneByid(data.createby);\n        if (!user) throw new NotFoundException('User Not found');\n      }\n\n      if (data.updated_user) {\n        // Check If user Valid\n        const user = await this.userService.findOneByid(data.updated_user);\n        if (!user) throw new NotFoundException('User Not found');\n      }\n\n      if (data.status) {\n        const enumValues = Object.values(StockTransactionStatus);\n        if (!enumValues.includes(data.status))\n          throw new NotFoundException('Status Not Exist');\n      }\n      return await this.stockTransactionRepo.findByIdAndUpdate(\n        transaction_id,\n        data,\n        { new: true },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteOneByID(transaction_id: string): Promise {\n    try {\n      return await this.stockTransactionRepo\n        .findByIdAndDelete(transaction_id)\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Supplier.html":{"url":"classes/Supplier.html","title":"class - Supplier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Supplier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/Model/supplier.Model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phones\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Location})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/Model/supplier.Model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/Model/supplier.Model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/Model/supplier.Model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Location } from 'src/location/Model/location.model';\n\n@Schema({ timestamps: true })\nexport class Supplier {\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Prop()\n  phones: string[];\n\n  @Prop({ type: Location })\n  location: Location;\n}\n\nexport const SupplierSchema = SchemaFactory.createForClass(Supplier);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SupplierController.html":{"url":"controllers/SupplierController.html","title":"controller - SupplierController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SupplierController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/supplier.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                supplier\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSupplierDto: CreateSupplierDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBody({type: CreateSupplierDto})\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSupplierDto\n                                            \n                                                            CreateSupplierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSupplierDto: UpdateSupplierDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSupplierDto\n                                            \n                                                            UpdateSupplierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { SupplierService } from './supplier.service';\nimport { CreateSupplierDto } from './dto/create-supplier.dto';\nimport { UpdateSupplierDto } from './dto/update-supplier.dto';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { Role } from 'src/auth/decorator/roles.decorator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\n@ApiTags('supplier')\n@Role(Roles.SUPERUSER)\n@UseGuards(RolesGuard)\n@Controller('supplier')\nexport class SupplierController {\n  constructor(private readonly supplierService: SupplierService) {}\n\n  @Post()\n  @ApiBody({ type: CreateSupplierDto })\n  create(@Body() createSupplierDto: CreateSupplierDto) {\n    return this.supplierService.create(createSupplierDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.supplierService.findAll();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.supplierService.findOneById(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateSupplierDto: UpdateSupplierDto,\n  ) {\n    return this.supplierService.updateOneSupplierByID(id, updateSupplierDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.supplierService.removeOneSupplierByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SupplierInterface.html":{"url":"interfaces/SupplierInterface.html","title":"interface - SupplierInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SupplierInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/interface/supplier.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            location\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phones\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:         LocationInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LocationInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phones\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phones:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LocationInterface } from 'src/location/interface/Location.interface';\n\nexport interface SupplierInterface {\n  name?: string;\n\n  phones?: string[];\n\n  location?: LocationInterface;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SupplierModule.html":{"url":"modules/SupplierModule.html","title":"module - SupplierModule","body":"\n                   \n\n\n\n\n    Modules\n    SupplierModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SupplierModule\n\n\n\ncluster_SupplierModule_imports\n\n\n\ncluster_SupplierModule_providers\n\n\n\n\nLocationModule\n\nLocationModule\n\n\n\nSupplierModule\n\nSupplierModule\n\nSupplierModule -->\n\nLocationModule->SupplierModule\n\n\n\n\n\nSupplierService\n\nSupplierService\n\nSupplierModule -->\n\nSupplierService->SupplierModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/supplier/supplier.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupplierService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SupplierController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LocationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SupplierService } from './supplier.service';\nimport { SupplierController } from './supplier.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Supplier, SupplierSchema } from './Model/supplier.Model';\nimport { LocationModule } from 'src/location/location.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Supplier.name, schema: SupplierSchema },\n    ]),\n    LocationModule,\n  ],\n  controllers: [SupplierController],\n  providers: [SupplierService],\n})\nexport class SupplierModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupplierService.html":{"url":"injectables/SupplierService.html","title":"injectable - SupplierService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupplierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/supplier.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeOneSupplierByID\n                            \n                            \n                                    Async\n                                updateOneSupplierByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supplierRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/supplier/supplier.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supplierRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSupplierData: SupplierInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSupplierData\n                                            \n                                                            SupplierInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(supplier_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                supplier_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneSupplierByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneSupplierByID(supplier_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                supplier_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneSupplierByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneSupplierByID(supplier_id: string, updatedSupplierData: SupplierInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                supplier_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatedSupplierData\n                                            \n                                                            SupplierInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Supplier } from './Model/supplier.Model';\nimport { Model } from 'mongoose';\nimport { SupplierInterface } from './interface/supplier.interface';\n\n@Injectable()\nexport class SupplierService {\n  constructor(\n    @InjectModel(Supplier.name) private readonly supplierRepo: Model,\n  ) {}\n\n  async create(createSupplierData: SupplierInterface): Promise {\n    try {\n      const newSupplier = new this.supplierRepo(createSupplierData);\n      return await newSupplier.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.supplierRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(supplier_id: string): Promise {\n    try {\n      return await this.supplierRepo.findById(supplier_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneSupplierByID(\n    supplier_id: string,\n    updatedSupplierData: SupplierInterface,\n  ): Promise {\n    try {\n      return await this.supplierRepo.findByIdAndUpdate(\n        supplier_id,\n        updatedSupplierData,\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneSupplierByID(supplier_id: string): Promise {\n    try {\n      return await this.supplierRepo.findByIdAndDelete(supplier_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TakeAwayController.html":{"url":"controllers/TakeAwayController.html","title":"controller - TakeAwayController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TakeAwayController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/controller/take-away.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order/take-away\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTakeAwayOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTakeAwayOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTakeAwayOrder(createOrderDto: CreateTakeAwayOrderDto, branchid: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':branchid')\n                \n            \n\n                    \n                        \n                            Defined in src/order/controller/take-away.controller.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateTakeAwayOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, Req } from '@nestjs/common';\nimport { OrderInterface } from '../Interface/Order.interface';\nimport { TakeAwayOrder } from '../Model/TakeAway.model';\nimport { CreateTakeAwayOrderDto } from '../dto/takeaway/create-takeaway-order.dto';\nimport { OrderService } from '../service/order.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('TakeAway Order')\n@Controller('order/take-away')\nexport class TakeAwayController {\n  constructor(private readonly orderService: OrderService) {}\n\n  @Post(':branchid')\n  createTakeAwayOrder(\n    @Body()\n    createOrderDto: CreateTakeAwayOrderDto,\n    @Param('branchid') branchid: string,\n    @Req() req: Request,\n  ) {\n    const data: OrderInterface = {\n      ...createOrderDto,\n      branch: branchid,\n      order_type: TakeAwayOrder.name,\n      createby: (req as any).user._id,\n    };\n    return this.orderService.create(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TakeAwayOrder.html":{"url":"classes/TakeAwayOrder.html","title":"class - TakeAwayOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TakeAwayOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/TakeAway.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                order_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        order_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderType\n\n                    \n                \n                \n                    \n                        Default value : OrderType.TAKEAWAY\n                    \n                \n                    \n                        \n                                Defined in src/order/Model/TakeAway.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { OrderType } from '../enums/Order-Types.enums';\n\n@Schema()\nexport class TakeAwayOrder {\n  order_type: OrderType = OrderType.TAKEAWAY;\n}\n\nexport const TakeAwayOrderSchema = SchemaFactory.createForClass(TakeAwayOrder);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TakeAwayService.html":{"url":"injectables/TakeAwayService.html","title":"injectable - TakeAwayService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TakeAwayService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/service/take-away.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateTakeAwayOrder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(employeeService: EmployeeService, orderRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/order/service/take-away.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        orderRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CreateTakeAwayOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    CreateTakeAwayOrder(CreateOrderData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/service/take-away.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateOrderData\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { EmployeeService } from 'src/employee/service/employee.service';\nimport { Order } from '../Model/order.model';\nimport { OrderStatus } from '../enums/Order-Status.enums';\n\n@Injectable()\nexport class TakeAwayService {\n  constructor(\n    private employeeService: EmployeeService,\n    @InjectModel(Order.name) private readonly orderRepo: Model,\n  ) {}\n  async CreateTakeAwayOrder(CreateOrderData) {\n    try {\n      const emp = await this.employeeService.findEmpByUserId(\n        CreateOrderData.createby,\n      );\n      //  Check If this is Employee\n      if (emp) {\n        // Employee But Check His Working Location\n        if (\n          new mongoose.Types.ObjectId(emp.working_in) ==\n          new mongoose.Types.ObjectId(CreateOrderData.branch)\n        ) {\n          CreateOrderData.approvedby = CreateOrderData.createby;\n          const order = new this.orderRepo(CreateOrderData);\n          return await order.save();\n        }\n      }\n      CreateOrderData.order_status = OrderStatus.PENDING;\n      const order = new this.orderRepo(CreateOrderData);\n      return await order.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ticket.html":{"url":"classes/Ticket.html","title":"class - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ticket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/Models/ticket.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branch\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                pool\n                            \n                            \n                                    \n                                segment\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketsPool\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, defalt: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        segment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketSegment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { TicketStatus } from '../enums/ticket-status.enum';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { TicketCategory } from '../enums/Ticket-category.enum';\nimport { TicketSegment } from '../enums/Ticket-Segment.enum';\nimport { TicketsPool } from '../enums/Ticket-Pool.enum';\n\n@Schema({ timestamps: true })\nexport class Ticket {\n  @Prop({ required: true, default: TicketStatus.OPEN })\n  status: TicketStatus;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  branch: string;\n\n  @Prop({ required: true, defalt: TicketsPool.HR })\n  pool: TicketsPool;\n\n  @Prop({ required: true, default: TicketCategory.IMPROVE })\n  category: TicketCategory;\n\n  @Prop({ required: true, default: TicketSegment.NORMAL })\n  segment: TicketSegment;\n\n  @Prop({ required: true })\n  description: string;\n}\n\nexport const TicketSchema = SchemaFactory.createForClass(Ticket);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TicketController.html":{"url":"controllers/TicketController.html","title":"controller - TicketController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TicketController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/controller/ticket.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ticket\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                updateTicketStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(branchid: string, createTicketDto: CreateTicketDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':branchid')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createTicketDto\n                                            \n                                                            CreateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Role(Roles.SUPERUSER)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTicketDto: UpdateTicketDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Role(Roles.SUPERUSER)@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTicketDto\n                                            \n                                                            UpdateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateTicketStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTicketStatus(ticketid: string, newstatus: TicketStatus)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Role(Roles.SUPERUSER)@Patch('status/:ticketid/:newstatus')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ticketid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newstatus\n                                            \n                                                            TicketStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n} from '@nestjs/common';\nimport { TicketService } from '../service/ticket.service';\nimport { CreateTicketDto } from '../dto/create-ticket.dto';\nimport { UpdateTicketDto } from '../dto/update-ticket.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { TicketInterface } from '../interface/Ticket.interface';\nimport { Role } from 'src/auth/decorator/roles.decorator';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { TicketStatus } from '../enums/ticket-status.enum';\n\n@ApiTags('Tickets')\n@Controller('ticket')\nexport class TicketController {\n  constructor(private readonly ticketService: TicketService) {}\n\n  @Post(':branchid')\n  async create(\n    @Param('branchid') branchid: string,\n    @Body() createTicketDto: CreateTicketDto,\n    @Req() req: Request,\n  ) {\n    const data: TicketInterface = {\n      ...createTicketDto,\n      createby: (req as any).user._id,\n      branch: branchid,\n    };\n    return this.ticketService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.ticketService.findAll();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.ticketService.findOneById(id);\n  }\n\n  @Role(Roles.SUPERUSER)\n  @Patch('status/:ticketid/:newstatus')\n  updateTicketStatus(\n    @Param('ticketid') ticketid: string,\n    @Param('newstatus') newstatus: TicketStatus,\n  ) {\n    try {\n      return this.ticketService.ChangeTicketStatus(ticketid, newstatus);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  @Role(Roles.SUPERUSER)\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTicketDto: UpdateTicketDto) {\n    return this.ticketService.updateOneTicketById(id, updateTicketDto);\n  }\n\n  @Role(Roles.SUPERUSER)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.ticketService.removeOneTicketById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketInterface.html":{"url":"interfaces/TicketInterface.html","title":"interface - TicketInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/interface/Ticket.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            category\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            segment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updates\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         TicketCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TicketCategory\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segment:         TicketSegment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TicketSegment\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         TicketStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TicketStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updates:     TicketUpdates[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TicketUpdates[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TicketUpdates } from '../Models/ticket-updates.model';\nimport { TicketSegment } from '../enums/Ticket-Segment.enum';\nimport { TicketCategory } from '../enums/Ticket-category.enum';\nimport { TicketStatus } from '../enums/ticket-status.enum';\n\nexport interface TicketInterface {\n  status?: TicketStatus;\n\n  createby?: string;\n\n  branch?: string;\n\n  category?: TicketCategory;\n\n  segment?: TicketSegment;\n\n  description?: string;\n\n  updates?: TicketUpdates[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TicketModule.html":{"url":"modules/TicketModule.html","title":"module - TicketModule","body":"\n                   \n\n\n\n\n    Modules\n    TicketModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_providers\n\n\n\ncluster_TicketModule_imports\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nTicketModule\n\nTicketModule\n\nTicketModule -->\n\nBranchModule->TicketModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTicketModule -->\n\nUsersModule->TicketModule\n\n\n\n\n\nTicketService\n\nTicketService\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\nTicketUpdatesService\n\nTicketUpdatesService\n\nTicketModule -->\n\nTicketUpdatesService->TicketModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ticket/ticket.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TicketService\n                        \n                        \n                            TicketUpdatesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TicketController\n                        \n                        \n                            TicketUpdatesController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TicketService } from './service/ticket.service';\nimport { TicketController } from './controller/ticket.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Ticket, TicketSchema } from './Models/ticket.model';\nimport {\n  TicketUpdates,\n  TicketUpdatesSchema,\n} from './Models/ticket-updates.model';\nimport { BranchModule } from 'src/branch/branch.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { TicketUpdatesService } from './service/ticket-updates.service';\nimport { TicketUpdatesController } from './controller/ticket-updates.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Ticket.name,\n        schema: TicketSchema,\n      },\n      {\n        name: TicketUpdates.name,\n        schema: TicketUpdatesSchema,\n      },\n    ]),\n    BranchModule,\n    UsersModule,\n  ],\n  controllers: [TicketController, TicketUpdatesController],\n  providers: [TicketService, TicketUpdatesService],\n})\nexport class TicketModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketService.html":{"url":"injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/service/ticket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ChangeTicketStatus\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeOneTicketById\n                            \n                            \n                                    Async\n                                updateOneTicketById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ticketRepo: Model, userService: UsersService, branchService: BranchService)\n                    \n                \n                        \n                            \n                                Defined in src/ticket/service/ticket.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticketRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        branchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeTicketStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTicketStatus(id: string, status: TicketStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            TicketStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: TicketInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            TicketInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneTicketById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneTicketById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneTicketById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneTicketById(id: string, newTicketUpdate: TicketInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newTicketUpdate\n                                            \n                                                            TicketInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Ticket } from '../Models/ticket.model';\nimport { Model } from 'mongoose';\nimport { TicketInterface } from '../interface/Ticket.interface';\nimport { TicketStatus } from '../enums/ticket-status.enum';\nimport { UsersService } from 'src/users/service/users.service';\nimport { BranchService } from 'src/branch/branch.service';\n\n@Injectable()\nexport class TicketService {\n  constructor(\n    @InjectModel(Ticket.name) private readonly ticketRepo: Model,\n    private userService: UsersService,\n    private branchService: BranchService,\n  ) {}\n\n  async create(data: TicketInterface): Promise {\n    try {\n      const branch = await this.branchService.findOneBranchByID(data.branch);\n      if (!branch) throw new NotFoundException('Wrong Branch ID');\n\n      const user = await this.userService.findOneByid(data.createby);\n      if (!user) throw new NotFoundException('Wrong User ID');\n\n      const newTicket = new this.ticketRepo(data);\n      return await newTicket.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.ticketRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string): Promise {\n    try {\n      return await this.ticketRepo.findById(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneTicketById(\n    id: string,\n    newTicketUpdate: TicketInterface,\n  ): Promise {\n    try {\n      if (newTicketUpdate.branch) {\n        const branch = await this.branchService.findOneBranchByID(\n          newTicketUpdate.branch,\n        );\n        if (!branch) throw new NotFoundException('Wrong Branch ID');\n      }\n\n      if (newTicketUpdate.createby) {\n        const user = await this.userService.findOneByid(\n          newTicketUpdate.createby,\n        );\n        if (!user) throw new NotFoundException('Wrong User ID');\n      }\n\n      return await this.ticketRepo.findByIdAndUpdate(id, newTicketUpdate);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async ChangeTicketStatus(id: string, status: TicketStatus) {\n    try {\n      return await this.ticketRepo.findOneAndUpdate(\n        { _id: id, status: { $ne: TicketStatus.CLOSE } },\n        { $set: { status } },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneTicketById(id: string) {\n    try {\n      return await this.ticketRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketUpdates.html":{"url":"classes/TicketUpdates.html","title":"class - TicketUpdates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketUpdates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/Models/ticket-updates.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                ticket\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket-updates.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket-updates.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ticket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket-updates.model.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { Ticket } from './ticket.model';\n\n@Schema({ timestamps: true })\nexport class TicketUpdates {\n  @Prop({ type: mongoose.Types.ObjectId, ref: Ticket.name })\n  ticket: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n\n  @Prop()\n  description: string;\n}\n\nexport const TicketUpdatesSchema = SchemaFactory.createForClass(TicketUpdates);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TicketUpdatesController.html":{"url":"controllers/TicketUpdatesController.html","title":"controller - TicketUpdatesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TicketUpdatesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/controller/ticket-updates.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ticket-updates\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByTicketId\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(ticket_id: string, createTicketDto: CreateTicketUpdateDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':ticket_id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket-updates.controller.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ticket_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createTicketDto\n                                            \n                                                            CreateTicketUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket-updates.controller.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByTicketId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByTicketId(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('ticket/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket-updates.controller.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket-updates.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Role(Roles.SUPERUSER)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket-updates.controller.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTicketDto: UpdateTicketUpdatesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Role(Roles.SUPERUSER)@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/controller/ticket-updates.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTicketDto\n                                            \n                                                            UpdateTicketUpdatesDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n  Req,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { TicketUpdatesService } from '../service/ticket-updates.service';\nimport { CreateTicketUpdateDto } from '../dto/Create-Ticket-updates.dto';\nimport { TicketUpdatesInterface } from '../interface/Ticket-Updates.inteface';\nimport { UpdateTicketUpdatesDto } from '../dto/update-ticket-updates.dto';\nimport { Role } from 'src/auth/decorator/roles.decorator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\n@ApiTags('Ticket Updates')\n@Controller('ticket-updates')\nexport class TicketUpdatesController {\n  constructor(private ticketUpdatesService: TicketUpdatesService) {}\n\n  @Post(':ticket_id')\n  async create(\n    @Param('ticket_id') ticket_id: string,\n    @Body() createTicketDto: CreateTicketUpdateDto,\n    @Req() req: Request,\n  ) {\n    const data: TicketUpdatesInterface = {\n      ...createTicketDto,\n      ticket: ticket_id,\n      createby: (req as any).user._id,\n    };\n    return this.ticketUpdatesService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.ticketUpdatesService.findAll();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.ticketUpdatesService.findOneById(id);\n  }\n\n  @Get('ticket/:id')\n  findByTicketId(@Param('id') id: string) {\n    return this.ticketUpdatesService.findByTicketId(id);\n  }\n\n  @Role(Roles.SUPERUSER)\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateTicketDto: UpdateTicketUpdatesDto,\n  ) {\n    return this.ticketUpdatesService.updateOneTicketUpdateById(\n      id,\n      updateTicketDto,\n    );\n  }\n\n  @Role(Roles.SUPERUSER)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.ticketUpdatesService.removeOneTicketUpdateById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketUpdatesInterface.html":{"url":"interfaces/TicketUpdatesInterface.html","title":"interface - TicketUpdatesInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketUpdatesInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/interface/Ticket-Updates.inteface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ticket\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ticket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ticket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TicketUpdatesInterface {\n  ticket?: string;\n  createby?: string;\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketUpdatesService.html":{"url":"injectables/TicketUpdatesService.html","title":"injectable - TicketUpdatesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketUpdatesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/service/ticket-updates.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByTicketId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                removeOneTicketUpdateById\n                            \n                            \n                                    Async\n                                updateOneTicketUpdateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ticketUpdatesRepo: Model, userService: UsersService, ticketService: TicketService)\n                    \n                \n                        \n                            \n                                Defined in src/ticket/service/ticket-updates.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticketUpdatesRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ticketService\n                                                  \n                                                        \n                                                                        TicketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: TicketUpdatesInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket-updates.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            TicketUpdatesInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket-updates.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByTicketId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByTicketId(ticket_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket-updates.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ticket_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket-updates.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneTicketUpdateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneTicketUpdateById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket-updates.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneTicketUpdateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneTicketUpdateById(id: string, TicketUpdate: TicketUpdatesInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/service/ticket-updates.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                TicketUpdate\n                                            \n                                                            TicketUpdatesInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { TicketUpdates } from '../Models/ticket-updates.model';\nimport { Model } from 'mongoose';\nimport { TicketUpdatesInterface } from '../interface/Ticket-Updates.inteface';\nimport { UsersService } from 'src/users/service/users.service';\nimport { TicketService } from './ticket.service';\n\n@Injectable()\nexport class TicketUpdatesService {\n  constructor(\n    @InjectModel(TicketUpdates.name)\n    private ticketUpdatesRepo: Model,\n    private userService: UsersService,\n    private ticketService: TicketService,\n  ) {}\n\n  async create(data: TicketUpdatesInterface): Promise {\n    try {\n      const ticket = await this.ticketService.findOneById(data.ticket);\n      if (!ticket) throw new NotFoundException('Wrong Ticket ID');\n\n      const user = await this.userService.findOneByid(data.createby);\n      if (!user) throw new NotFoundException('Wrong User ID');\n\n      const newTicketUpdate = new this.ticketUpdatesRepo(data);\n      return await newTicketUpdate.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.ticketUpdatesRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string): Promise {\n    try {\n      return await this.ticketUpdatesRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByTicketId(ticket_id: string): Promise {\n    try {\n      return await this.ticketUpdatesRepo.find({ ticket: ticket_id }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneTicketUpdateById(\n    id: string,\n    TicketUpdate: TicketUpdatesInterface,\n  ): Promise {\n    try {\n      if (TicketUpdate.ticket) {\n        const ticket = await this.ticketService.findOneById(\n          TicketUpdate.ticket,\n        );\n        if (!ticket) throw new NotFoundException('Wrong Ticket ID');\n      }\n\n      if (TicketUpdate.createby) {\n        const user = await this.userService.findOneByid(TicketUpdate.createby);\n        if (!user) throw new NotFoundException('Wrong User ID');\n      }\n\n      return await this.ticketUpdatesRepo.findByIdAndUpdate(id, TicketUpdate);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneTicketUpdateById(id: string) {\n    try {\n      return await this.ticketUpdatesRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/token-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n  access_token: string;\n  refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TokenVerificationDto.html":{"url":"classes/TokenVerificationDto.html","title":"class - TokenVerificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TokenVerificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/tokenVerificationDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/tokenVerificationDto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsNotEmpty } from 'class-validator';\n\nexport class TokenVerificationDto {\n  @IsString()\n  @IsNotEmpty()\n  token: string;\n}\n\nexport default TokenVerificationDto;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAttendenceDTO.html":{"url":"classes/UpdateAttendenceDTO.html","title":"class - UpdateAttendenceDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAttendenceDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/Attendence/update-attendence.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                employee_id\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                phone_ip\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                signby\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttendenceActions\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Action taken for attendance', enum: AttendenceActions})@IsEnum(AttendenceActions)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/update-attendence.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        employee_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The unique identifier of the employee'})@IsMongoId()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/update-attendence.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateCordinatesDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Location details', type: CreateCordinatesDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/update-attendence.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Additional notes'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/update-attendence.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        phone_ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'IP address of the phone'})@IsOptional()@IsIP()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/update-attendence.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        signby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Identifier of the person signing the attendance'})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Attendence/update-attendence.dto.ts:49\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsEnum,\n  IsIP,\n  IsMongoId,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { AttendenceActions } from 'src/employee/enums/attendence-action.enums';\nimport { CreateCordinatesDto } from 'src/location/dto/create-location.dto';\n\nexport class UpdateAttendenceDTO {\n  @ApiPropertyOptional({ description: 'The unique identifier of the employee' })\n  @IsMongoId()\n  @IsOptional()\n  employee_id?: string;\n\n  @ApiPropertyOptional({\n    description: 'Action taken for attendance',\n    enum: AttendenceActions,\n  })\n  @IsEnum(AttendenceActions)\n  @IsOptional()\n  action?: AttendenceActions;\n\n  @ApiPropertyOptional({\n    description: 'Location details',\n    type: CreateCordinatesDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateCordinatesDto)\n  location?: CreateCordinatesDto;\n\n  @ApiPropertyOptional({ description: 'IP address of the phone' })\n  @IsOptional()\n  @IsIP()\n  @IsString()\n  phone_ip?: string;\n\n  @ApiPropertyOptional({\n    description: 'Identifier of the person signing the attendance',\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  signby?: string;\n\n  @ApiPropertyOptional({ description: 'Additional notes' })\n  @IsOptional()\n  @IsString()\n  note?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateBasePaymentInterface.html":{"url":"interfaces/UpdateBasePaymentInterface.html","title":"interface - UpdateBasePaymentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateBasePaymentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/interface/Update-Base-Payment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            currency\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currency\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currency:         PaymentCurrency\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentCurrency\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_status:         PaymentStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaymentCurrency } from '../enums/payment-currency.enum';\nimport { PaymentStatus } from '../enums/payment-status.enums';\n\nexport interface UpdateBasePaymentInterface {\n  payment_type?: string;\n\n  payment_status?: PaymentStatus;\n\n  amount?: number;\n\n  order_id?: string;\n\n  createby?: string;\n\n  currency?: PaymentCurrency;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBillingDto.html":{"url":"classes/UpdateBillingDto.html","title":"class - UpdateBillingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBillingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/update-billing.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateBillingDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateBillingDto } from './create-billing.dto';\n\nexport class UpdateBillingDto extends PartialType(CreateBillingDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBranchDto.html":{"url":"classes/UpdateBranchDto.html","title":"class - UpdateBranchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBranchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/dto/update-branch.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateBranchDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                manager\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                work_from\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                work_to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: CreateLocationDto, required: false})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user_id', required: false})@IsOptional()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Port Said', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        work_from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-20', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        work_to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-20', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateBranchDto } from './create-branch.dto';\nimport {\n  IsOptional,\n  IsString,\n  IsDateString,\n  ValidateNested,\n  IsMongoId,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class UpdateBranchDto extends PartialType(CreateBranchDto) {\n  @ApiProperty({\n    example: 'Port Said',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @ApiProperty({\n    example: '2020-02-20',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  work_from?: Date;\n\n  @ApiProperty({\n    example: '2020-02-20',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  work_to?: Date;\n\n  @ApiProperty({\n    example: 'user_id',\n    required: false,\n  })\n  @IsOptional()\n  @IsMongoId()\n  @IsString()\n  manager?: string;\n\n  @ApiProperty({\n    // example: ,\n    type: CreateLocationDto,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  location?: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCartDto.html":{"url":"classes/UpdateCartDto.html","title":"class - UpdateCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dto/update-cart.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCartDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCartDto } from './create-cart.dto';\n\nexport class UpdateCartDto extends PartialType(CreateCartDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCashPaymentDto.html":{"url":"classes/UpdateCashPaymentDto.html","title":"class - UpdateCashPaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCashPaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/cash/update-Cash-payment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdatePaymentDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                branch\n                            \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                order_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/cash/update-Cash-payment.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdatePaymentDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdatePaymentDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdatePaymentDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdatePaymentDto:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdatePaymentDto } from '../update-base-payment.dto';\n\nexport class UpdateCashPaymentDto extends UpdatePaymentDto {\n  branch?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateCashPaymentInterface.html":{"url":"interfaces/UpdateCashPaymentInterface.html","title":"interface - UpdateCashPaymentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateCashPaymentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/interface/Cash/Update-Cash-Payment.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdateBasePaymentInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branch\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UpdateBasePaymentInterface } from '../Update-Base-Payment.interface';\n\nexport interface UpdateCashPaymentInterface extends UpdateBasePaymentInterface {\n  branch?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCashierDto.html":{"url":"classes/UpdateCashierDto.html","title":"class - UpdateCashierDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCashierDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cashier/dto/update-cashier.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCashierDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCashierDto } from './create-cashier.dto';\n\nexport class UpdateCashierDto extends PartialType(CreateCashierDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCouponDto.html":{"url":"classes/UpdateCouponDto.html","title":"class - UpdateCouponDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCouponDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/dto/update-coupon.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCouponDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                branches\n                            \n                            \n                                    \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                percent_discount\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[branch1,branch2]', required: false})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-03', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'copoun1', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        percent_discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: true})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 20, required: true})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-03', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateCouponDto } from './create-coupon.dto';\nimport {\n  IsArray,\n  IsDateString,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class UpdateCouponDto extends PartialType(CreateCouponDto) {\n  @ApiProperty({\n    example: 'copoun1',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: '[branch1,branch2]',\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  branches: string[];\n\n  @ApiProperty({\n    example: '2020-02-03',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  from: Date;\n\n  @ApiProperty({\n    example: '2020-02-03',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  to: Date;\n\n  @ApiProperty({\n    example: 20,\n    required: true,\n  })\n  @IsOptional()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty({\n    example: 10,\n    required: true,\n  })\n  @IsOptional()\n  @IsNumber()\n  percent_discount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerDto.html":{"url":"classes/UpdateCustomerDto.html","title":"class - UpdateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/customer/update-customer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCustomerDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                notes\n                            \n                            \n                                    \n                                    \n                                    \n                                notification_email\n                            \n                            \n                                    \n                                    \n                                    \n                                notification_phone\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The name of the customer', example: 'John Doe'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/update-customer.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional notes about the customer', example: 'Important client', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/update-customer.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        notification_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional Notification Email for the customer', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/update-customer.dto.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        notification_phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional Notification Phone for the customer', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/update-customer.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The phone numbers of the customer', example: undefined, type: undefined, isArray: true})@IsOptional()@IsString({each: true})@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer/update-customer.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateCustomerDto } from './create-customer.dto';\nimport { IsOptional, IsString, ArrayMinSize } from 'class-validator';\n\nexport class UpdateCustomerDto extends PartialType(CreateCustomerDto) {\n  @ApiPropertyOptional({\n    description: 'The name of the customer',\n    example: 'John Doe',\n  })\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @ApiPropertyOptional({\n    description: 'The phone numbers of the customer',\n    example: ['1234567890'],\n    type: [String],\n    isArray: true,\n  })\n  @IsOptional()\n  @IsString({ each: true })\n  @ArrayMinSize(1)\n  phone?: string[];\n\n  @ApiPropertyOptional({\n    description: 'Optional notes about the customer',\n    example: 'Important client',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  notes?: string;\n\n  @ApiPropertyOptional({\n    description: 'Optional Notification Phone for the customer',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  notification_phone: string;\n\n  @ApiPropertyOptional({\n    description: 'Optional Notification Email for the customer',\n\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  notification_email: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerLocationDto.html":{"url":"classes/UpdateCustomerLocationDto.html","title":"class - UpdateCustomerLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/customer locations/Update-Customer-Location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer locations/Update-Customer-Location.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UpdateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The locations associated with the customer', type: undefined, isArray: true})@ValidateNested({each: true})@Type(undefined)@IsOptional()@ArrayMinSize(1)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/customer locations/Update-Customer-Location.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsMongoId,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\nimport { UpdateLocationDto } from 'src/location/dto/update-location.dto';\n\nexport class UpdateCustomerLocationDto {\n  @IsMongoId()\n  @IsOptional()\n  @IsString()\n  customer?: string;\n\n  @ApiProperty({\n    description: 'The locations associated with the customer',\n    type: [CreateLocationDto],\n    isArray: true,\n  })\n  @ValidateNested({ each: true })\n  @Type(() => UpdateLocationDto)\n  @IsOptional()\n  @ArrayMinSize(1)\n  @IsArray()\n  location?: UpdateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeliveryOrderDto.html":{"url":"classes/UpdateDeliveryOrderDto.html","title":"class - UpdateDeliveryOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeliveryOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/delivery/update-deliveryorder.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateBaseOrderDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                deliverey_method\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                delivery_price\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                delivery_status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                end_location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pilot\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        deliverey_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DelivereyMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(DelivereyMethod)@ApiPropertyOptional({description: 'The method of delivery', example: undefined, enum: DelivereyMethod, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/update-deliveryorder.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        delivery_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryPrice\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(DeliveryPrice)@ApiPropertyOptional({description: 'The price category of the delivery', example: undefined, enum: DeliveryPrice, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/update-deliveryorder.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        delivery_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(DeliveryStatus)@ApiPropertyOptional({description: 'The current status of the delivery', example: undefined, enum: DeliveryStatus, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/update-deliveryorder.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        end_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@IsString()@ApiPropertyOptional({description: 'The MongoDB ID of the end location', example: '507f1f77bcf86cd799439011'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/update-deliveryorder.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pilot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'The name of the pilot handling the delivery', example: 'Mohamed', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/update-deliveryorder.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:41\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({each: true})@IsMongoId({each: true})@ArrayMinSize(1)@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:29\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:22\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { DeliveryPrice } from 'src/delivery/enums/Deliver-price.enums';\nimport { CreateBaseOrderDto } from '../base-order.dto';\nimport { ApiPropertyOptional } from '@nestjs/swagger';\nimport { DelivereyMethod } from 'src/delivery/enums/Deliverey-method.enums';\nimport { DeliveryStatus } from 'src/delivery/enums/delivery-status.enums';\n\nexport class UpdateDeliveryOrderDto extends CreateBaseOrderDto {\n  @IsOptional()\n  @IsMongoId()\n  @IsString()\n  @ApiPropertyOptional({\n    description: 'The MongoDB ID of the end location',\n    example: '507f1f77bcf86cd799439011',\n  })\n  end_location?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiPropertyOptional({\n    description: 'The name of the pilot handling the delivery',\n    example: 'Mohamed',\n    required: false,\n  })\n  pilot?: string;\n\n  @IsOptional()\n  @IsEnum(DelivereyMethod)\n  @ApiPropertyOptional({\n    description: 'The method of delivery',\n    example: DelivereyMethod.BIKE,\n    enum: DelivereyMethod,\n    required: false,\n  })\n  deliverey_method?: DelivereyMethod;\n\n  @IsOptional()\n  @IsEnum(DeliveryPrice)\n  @ApiPropertyOptional({\n    description: 'The price category of the delivery',\n    example: DeliveryPrice.FOURTY,\n    enum: DeliveryPrice,\n    required: false,\n  })\n  delivery_price?: DeliveryPrice;\n\n  @IsOptional()\n  @IsEnum(DeliveryStatus)\n  @ApiPropertyOptional({\n    description: 'The current status of the delivery',\n    example: DeliveryStatus.INDELIVER,\n    enum: DeliveryStatus,\n    required: false,\n  })\n  delivery_status?: DeliveryStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/employee/update-employee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bank_account\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                base_salary\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                birthdate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                department\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                join_at\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                phones\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                ssid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                working_in\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address of the employee', type: () => Location})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bank_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Bank account number', example: '123456789'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        base_salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Base salary of the employee', example: 50000})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        birthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Birthdate of the employee', example: '1990-01-01'})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Department\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Department, description: 'Department the employee works in'})@IsEnum(Department)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Sex, description: 'Gender of the employee'})@IsEnum(Sex)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        join_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The date the employee joined', example: '2023-01-01'})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone numbers', example: undefined, isArray: true})@IsString({each: true})@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        ssid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Social Security ID', example: '123-45-6789'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User MongoDB ID', example: '507f191e810c19729de860ea'})@IsMongoId()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        working_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Working in MongoDB ID', example: '507f191e810c19729de860eb'})@IsMongoId()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/employee/update-employee.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsMongoId,\n  IsEnum,\n  IsNumber,\n  IsString,\n  IsDateString,\n  IsOptional,\n  IsArray,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Department } from '../../enums/department.enums';\nimport { Location } from 'src/location/Model/location.model';\n\nexport class UpdateEmployeeDto {\n  @ApiPropertyOptional({\n    description: 'The date the employee joined',\n    example: '2023-01-01',\n  })\n  @IsDateString()\n  @IsOptional()\n  join_at?: Date;\n\n  @ApiPropertyOptional({\n    description: 'User MongoDB ID',\n    example: '507f191e810c19729de860ea',\n  })\n  @IsMongoId()\n  @IsOptional()\n  user?: string;\n\n  @ApiPropertyOptional({\n    description: 'Working in MongoDB ID',\n    example: '507f191e810c19729de860eb',\n  })\n  @IsMongoId()\n  @IsOptional()\n  working_in?: string;\n\n  @ApiPropertyOptional({\n    enum: Department,\n    description: 'Department the employee works in',\n  })\n  @IsEnum(Department)\n  @IsOptional()\n  department?: Department;\n\n  @ApiPropertyOptional({\n    description: 'Base salary of the employee',\n    example: 50000,\n  })\n  @IsNumber()\n  @IsOptional()\n  base_salary?: number;\n\n  @ApiPropertyOptional({\n    description: 'Phone numbers',\n    example: ['+1234567890'],\n    isArray: true,\n  })\n  @IsString({ each: true })\n  @IsArray()\n  @IsOptional()\n  phones?: string[];\n\n  @ApiPropertyOptional({ enum: Sex, description: 'Gender of the employee' })\n  @IsEnum(Sex)\n  @IsOptional()\n  gender?: Sex;\n\n  @ApiPropertyOptional({\n    description: 'Address of the employee',\n    type: () => Location,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => Location)\n  address?: Location;\n\n  @ApiPropertyOptional({\n    description: 'Social Security ID',\n    example: '123-45-6789',\n  })\n  @IsOptional()\n  @IsString()\n  ssid?: string;\n\n  @ApiPropertyOptional({\n    description: 'Birthdate of the employee',\n    example: '1990-01-01',\n  })\n  @IsDateString()\n  @IsOptional()\n  birthdate?: Date;\n\n  @ApiPropertyOptional({\n    description: 'Bank account number',\n    example: '123456789',\n  })\n  @IsOptional()\n  @IsString()\n  bank_account?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeMonthlyPDRDTO.html":{"url":"classes/UpdateEmployeeMonthlyPDRDTO.html","title":"class - UpdateEmployeeMonthlyPDRDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeMonthlyPDRDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/Monthly PDR/update-employee-monthly-pdr.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  CreateEmployeeMonthlyPdrDTO,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                createby\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                details\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                employee\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pdr\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The unique identifier of the User, must be a valid MongoDB ObjectId', example: '507f191e810c19729de860ea'})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/update-employee-monthly-pdr.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Date of the PDR', example: '2024-03-19', type: Date})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/update-employee-monthly-pdr.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Additional details regarding the PDR', example: 'Exceeded expectations in project management and leadership skills.'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/update-employee-monthly-pdr.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The unique identifier of the employee, must be a valid MongoDB ObjectId', example: '507f191e810c19729de860ea'})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/update-employee-monthly-pdr.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'PDR (Performance Development Review) rating', example: 8.5, type: Number})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Monthly PDR/update-employee-monthly-pdr.dto.ts:41\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport {\n  IsDateString,\n  IsMongoId,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { CreateEmployeeMonthlyPdrDTO } from './create-employee-monthly-pdr.dto';\n\nexport class UpdateEmployeeMonthlyPDRDTO extends PartialType(\n  CreateEmployeeMonthlyPdrDTO,\n) {\n  @ApiPropertyOptional({\n    description:\n      'The unique identifier of the employee, must be a valid MongoDB ObjectId',\n    example: '507f191e810c19729de860ea',\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  employee?: string;\n\n  @ApiPropertyOptional({\n    description:\n      'The unique identifier of the User, must be a valid MongoDB ObjectId',\n    example: '507f191e810c19729de860ea',\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  createby?: string;\n\n  @ApiPropertyOptional({\n    description: 'PDR (Performance Development Review) rating',\n    example: 8.5,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  pdr?: number;\n\n  @ApiPropertyOptional({\n    description: 'Additional details regarding the PDR',\n    example:\n      'Exceeded expectations in project management and leadership skills.',\n  })\n  @IsOptional()\n  @IsString()\n  details?: string;\n\n  @ApiPropertyOptional({\n    description: 'Date of the PDR',\n    example: '2024-03-19',\n    type: Date,\n  })\n  @IsOptional()\n  @IsDateString()\n  date?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeePdrActionDto.html":{"url":"classes/UpdateEmployeePdrActionDto.html","title":"class - UpdateEmployeePdrActionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeePdrActionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/Employee  PDR Actions/update-emp-pdr-action.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  CreateEmployeePdrActionDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                action\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                createby\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                employee\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                grade\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PDRActions\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsEnum(PDRActions)@ApiPropertyOptional({description: 'The action to be taken', enum: PDRActions, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/update-emp-pdr-action.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@IsString()@ApiPropertyOptional({description: 'The User ID', example: '507f191e810c19729de860ea'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/update-emp-pdr-action.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()@ApiPropertyOptional({description: 'The date of the action', example: '2023-03-19', required: false, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/update-emp-pdr-action.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@IsString()@ApiPropertyOptional({description: 'The employee ID', example: '507f191e810c19729de860ea'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/update-emp-pdr-action.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        grade\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()@ApiPropertyOptional({description: 'The grade of the employee', example: 5, type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/update-emp-pdr-action.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiPropertyOptional({description: 'A note about the action', example: 'Needs to improve time management skills.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/Employee  PDR Actions/update-emp-pdr-action.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsDateString,\n  IsEnum,\n  IsMongoId,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { CreateEmployeePdrActionDto } from './create-emp-pdr-action.dto';\nimport { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { PDRActions } from 'src/employee/enums/pdr-action.enum';\n\nexport class UpdateEmployeePdrActionDto extends PartialType(\n  CreateEmployeePdrActionDto,\n) {\n  @IsOptional()\n  @IsMongoId()\n  @IsString()\n  @ApiPropertyOptional({\n    description: 'The employee ID',\n    example: '507f191e810c19729de860ea',\n  })\n  employee?: string;\n\n  @IsOptional()\n  @IsNumber()\n  @ApiPropertyOptional({\n    description: 'The grade of the employee',\n    example: 5,\n    type: Number,\n  })\n  grade?: number;\n\n  @IsOptional()\n  @IsString()\n  @IsEnum(PDRActions)\n  @ApiPropertyOptional({\n    description: 'The action to be taken',\n    enum: PDRActions,\n    example: PDRActions.POSITIVE,\n  })\n  action?: PDRActions;\n\n  @IsOptional()\n  @IsString()\n  @ApiPropertyOptional({\n    description: 'A note about the action',\n    example: 'Needs to improve time management skills.',\n  })\n  note?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  @IsString()\n  @ApiPropertyOptional({\n    description: 'The User ID',\n    example: '507f191e810c19729de860ea',\n  })\n  createby?: string;\n\n  @IsOptional()\n  @IsDateString()\n  @ApiPropertyOptional({\n    description: 'The date of the action',\n    example: '2023-03-19',\n    required: false,\n    type: String,\n  })\n  date?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeSpendingAuthDto.html":{"url":"classes/UpdateEmployeeSpendingAuthDto.html","title":"class - UpdateEmployeeSpendingAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeSpendingAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/Spending-Auth/Employee/Update-Emp-Spending-Auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  UpdateSpendingAuthDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                employee\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        employee\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: '507f191e810c19729de860ea', description: 'MongoDB ObjectId of the employee related to the spending authorization', required: true})@IsMongoId()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/Employee/Update-Emp-Spending-Auth.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { UpdateSpendingAuthDto } from '../update-Spending-Auth.dto';\nimport { IsMongoId, IsOptional, IsString } from 'class-validator';\n\nexport class UpdateEmployeeSpendingAuthDto extends PartialType(\n  UpdateSpendingAuthDto,\n) {\n  @ApiPropertyOptional({\n    example: '507f191e810c19729de860ea',\n    description:\n      'MongoDB ObjectId of the employee related to the spending authorization',\n    required: true,\n  })\n  @IsMongoId()\n  @IsString()\n  @IsOptional()\n  employee?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateInvoiceSpendingAuthDto.html":{"url":"classes/UpdateInvoiceSpendingAuthDto.html","title":"class - UpdateInvoiceSpendingAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateInvoiceSpendingAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/Spending-Auth/Invoice/Update-Invoice-Spending-Auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  UpdateSpendingAuthDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                invoice\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        invoice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: '507f191e810c19729de860ea', description: 'MongoDB ObjectId of the invoice related to the spending authorization', required: false})@IsMongoId()@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/Invoice/Update-Invoice-Spending-Auth.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { UpdateSpendingAuthDto } from '../update-Spending-Auth.dto';\nimport { IsMongoId, IsOptional, IsString } from 'class-validator';\n\nexport class UpdateInvoiceSpendingAuthDto extends PartialType(\n  UpdateSpendingAuthDto,\n) {\n  @ApiPropertyOptional({\n    example: '507f191e810c19729de860ea',\n    description:\n      'MongoDB ObjectId of the invoice related to the spending authorization',\n    required: false,\n  })\n  @IsMongoId()\n  @IsString()\n  @IsOptional()\n  invoice?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLocationDto.html":{"url":"classes/UpdateLocationDto.html","title":"class - UpdateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/update-location.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateLocationDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                building_Number\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                cordinates\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                district\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                floor\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                neighborhood\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                street_Address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        building_Number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '3C', name: 'building_Number'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Port Said', name: 'city'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        cordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateCordinatesDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: CreateCordinatesDto, name: 'cordinates'})@ValidateNested()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Egypt', name: 'country'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'the building next to the market', name: 'description'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        district\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Madient Nasr', name: 'district'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'third Or 3th', name: 'floor'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'My Home', name: 'name'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        neighborhood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Obour Area', name: 'neighborhood'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        street_Address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mohamed Ali Street', name: 'street_Address'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateCordinatesDto, CreateLocationDto } from './create-location.dto';\nimport { Type } from 'class-transformer';\nimport {\n  IsString,\n  ValidateNested,\n  IsOptional,\n  //   IsLongitude,\n  //   IsLatitude,\n} from 'class-validator';\n\n// class UpdateCordinatesDto extends PartialType(CreateCordinatesDto) {\n//   @IsOptional()\n//   @IsLongitude()\n//   long?: number;\n\n//   @IsOptional()\n//   @IsLatitude()\n//   lat?: number;\n// }\n\nexport class UpdateLocationDto extends PartialType(CreateLocationDto) {\n  @ApiProperty({\n    example: 'My Home',\n    name: 'name',\n  })\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @ApiProperty({\n    description: 'Egypt',\n    name: 'country',\n  })\n  @IsString()\n  @IsOptional()\n  country?: string;\n\n  @ApiProperty({\n    example: 'Port Said',\n    name: 'city',\n  })\n  @IsString()\n  @IsOptional()\n  city?: string;\n\n  @ApiProperty({\n    example: 'Madient Nasr',\n    name: 'district',\n  })\n  @IsString()\n  @IsOptional()\n  district?: string;\n\n  @ApiProperty({\n    example: 'Obour Area',\n    name: 'neighborhood',\n  })\n  @IsString()\n  @IsOptional()\n  neighborhood?: string;\n\n  @ApiProperty({\n    example: 'Mohamed Ali Street',\n    name: 'street_Address',\n  })\n  @IsString()\n  @IsOptional()\n  street_Address?: string;\n\n  @ApiProperty({\n    example: '3C',\n    name: 'building_Number',\n  })\n  @IsString()\n  @IsOptional()\n  building_Number?: string;\n\n  @ApiProperty({\n    example: 'third Or 3th',\n    name: 'floor',\n  })\n  @IsString()\n  @IsOptional()\n  floor?: string;\n\n  @ApiProperty({\n    example: 'the building next to the market',\n    name: 'description',\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    type: CreateCordinatesDto,\n    name: 'cordinates',\n  })\n  @ValidateNested()\n  @Type(() => CreateCordinatesDto)\n  @IsOptional()\n  cordinates?: CreateCordinatesDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMaterialDto.html":{"url":"classes/UpdateMaterialDto.html","title":"class - UpdateMaterialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMaterialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/dto/update-material.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateMaterialDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateMaterialDto } from './create-material.dto';\n\nexport class UpdateMaterialDto extends PartialType(CreateMaterialDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateNotificationDto.html":{"url":"classes/UpdateNotificationDto.html","title":"class - UpdateNotificationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateNotificationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/notifications/dto/update-notification.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateNotificationDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateNotificationDto } from './create-notification.dto';\n\nexport class UpdateNotificationDto extends PartialType(CreateNotificationDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOfferDto.html":{"url":"classes/UpdateOfferDto.html","title":"class - UpdateOfferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOfferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/dto/update-offer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateOfferDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                branches\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                items\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsString()@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-02', required: false})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsOptional()@IsArray()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Family Offer', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: false})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: false})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-02', required: false})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateOfferDto } from './create-offer.dto';\nimport {\n  IsArray,\n  IsDateString,\n  IsMongoId,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class UpdateOfferDto extends PartialType(CreateOfferDto) {\n  @ApiProperty({\n    example: 'Family Offer',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @ApiProperty({\n    example: ['65d5b8076bf8d67aee25ccd5', '65d5b8076bf8d67aee25ccd2'],\n    required: false,\n  })\n  @IsString()\n  @IsArray()\n  @IsOptional()\n  branches?: string[];\n\n  @ApiProperty({\n    example: '2020-02-02',\n    required: false,\n  })\n  @IsDateString()\n  @IsOptional()\n  from?: Date;\n\n  @ApiProperty({\n    example: '2020-02-02',\n    required: false,\n  })\n  @IsDateString()\n  @IsOptional()\n  to?: Date;\n\n  @ApiProperty({\n    example: 100,\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  quantity?: number;\n\n  @ApiProperty({\n    example: ['65d5b8076bf8d67aee25ccd5', '65d5b8076bf8d67aee25ccd2'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString()\n  @IsMongoId()\n  items?: string[];\n\n  @ApiProperty({\n    example: 100,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  price?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePayPalPaymentDto.html":{"url":"classes/UpdatePayPalPaymentDto.html","title":"class - UpdatePayPalPaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePayPalPaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/paypal/update-PayPal.payment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdatePaymentDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                payment_id\n                            \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                order_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        payment_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/paypal/update-PayPal.payment.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdatePaymentDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdatePaymentDto:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdatePaymentDto\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdatePaymentDto:13\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdatePaymentDto } from '../update-base-payment.dto';\n\nexport class UpdatePayPalPaymentDto extends UpdatePaymentDto {\n  payment_id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdatePayPalPaymentInterface.html":{"url":"interfaces/UpdatePayPalPaymentInterface.html","title":"interface - UpdatePayPalPaymentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdatePayPalPaymentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/interface/Paypal/Update-PayPal-Payment.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdateBasePaymentInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UpdateBasePaymentInterface } from '../Update-Base-Payment.interface';\n\nexport interface UpdatePayPalPaymentInterface\n  extends UpdateBasePaymentInterface {\n  payment_id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaymentDto.html":{"url":"classes/UpdatePaymentDto.html","title":"class - UpdatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/update-base-payment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateBasePaymentDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                order_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/update-base-payment.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        order_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/update-base-payment.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateBasePaymentDto } from './create-base-payment.dto';\nimport { IsMongoId, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class UpdatePaymentDto extends PartialType(CreateBasePaymentDto) {\n  @IsOptional()\n  @IsNumber()\n  amount: number;\n\n  @IsOptional()\n  @IsMongoId()\n  @IsString()\n  order_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                branch\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                can_deliver\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                components\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                is_extra\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                is_sensetive\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                production_price\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                size\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                subcategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'BRANCH ID', required: true})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        can_deliver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'true', required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:106\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: ProductCategory, required: true})@IsOptional()@IsEnum(ProductCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: ProductComponents, required: false})@IsOptional()@IsEnum(ProductComponents)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'http://example.com', required: false})@IsOptional()@IsArray()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        is_extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'true', required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        is_sensetive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'true', required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:114\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 'product 1', required: true})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 100, required: true})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        production_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 100, required: false})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: 100, required: true})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: ProductSize, required: true})@IsOptional()@IsEnum(ProductSize)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        subcategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSubCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({example: ProductSubCategory, required: true})@IsOptional()@IsEnum(ProductSubCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:73\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\nimport {\n  IsString,\n  IsNumber,\n  IsOptional,\n  IsEnum,\n  IsArray,\n  IsBoolean,\n  IsMongoId,\n} from 'class-validator';\nimport { ProductCategory } from '../enums/product-category.enums';\nimport { ProductComponents } from '../enums/product-components.enum';\nimport { ProductSubCategory } from '../enums/product-subcategory.enum';\nimport { ProductSize } from '../enums/size.enum';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {\n  @ApiPropertyOptional({\n    example: 'product 1',\n    required: true,\n  })\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @ApiPropertyOptional({\n    example: 100,\n    required: true,\n  })\n  @IsOptional()\n  @IsNumber()\n  price?: number;\n\n  @ApiPropertyOptional({\n    example: 100,\n    required: true,\n  })\n  @IsOptional()\n  @IsNumber()\n  quantity?: number;\n\n  @ApiPropertyOptional({\n    example: 100,\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  production_price?: number;\n\n  @ApiPropertyOptional({\n    example: 'BRANCH ID',\n    required: true,\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  branch?: string;\n\n  @ApiPropertyOptional({\n    example: ProductCategory,\n    required: true,\n  })\n  @IsOptional()\n  @IsEnum(ProductCategory)\n  category?: ProductCategory;\n\n  @ApiPropertyOptional({\n    example: ProductSubCategory,\n    required: true,\n  })\n  @IsOptional()\n  @IsEnum(ProductSubCategory)\n  subcategory?: ProductSubCategory;\n\n  @ApiPropertyOptional({\n    example: ProductSize,\n    required: true,\n  })\n  @IsOptional()\n  @IsEnum(ProductSize)\n  size?: ProductSize;\n\n  @ApiPropertyOptional({\n    example: ProductComponents,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(ProductComponents)\n  components?: ProductComponents[];\n\n  @ApiPropertyOptional({\n    example: 'http://example.com',\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString()\n  images?: string[];\n\n  @ApiPropertyOptional({\n    example: 'true',\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  can_deliver?: boolean;\n\n  @ApiPropertyOptional({\n    example: 'true',\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  is_sensetive?: boolean;\n\n  @ApiPropertyOptional({\n    example: 'true',\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  is_extra?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRefreshDto.html":{"url":"classes/UpdateRefreshDto.html","title":"class - UpdateRefreshDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRefreshDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/Update-refresh.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/Update-refresh.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateRefreshDto {\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSpendingAuthDto.html":{"url":"classes/UpdateSpendingAuthDto.html","title":"class - UpdateSpendingAuthDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSpendingAuthDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/Spending-Auth/update-Spending-Auth.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateSpendingAuthDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                createby\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                releasedby\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()@ApiProperty({example: 100, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/update-Spending-Auth.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsMongoId()@ApiProperty({example: '507f1f77bcf86cd799439012', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/update-Spending-Auth.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({example: 'Note about the authorization', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/update-Spending-Auth.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        releasedby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsMongoId()@ApiProperty({example: '507f1f77bcf86cd799439011', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/update-Spending-Auth.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SpendingAuthorizationStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsEnum(SpendingAuthorizationStatus)@ApiProperty({example: undefined, enum: SpendingAuthorizationStatus, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/update-Spending-Auth.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@ApiProperty({example: 'Type of authorization', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/billing/dto/Spending-Auth/update-Spending-Auth.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateSpendingAuthDto } from './create-Spending-Auth.dto';\nimport {\n  IsOptional,\n  IsString,\n  IsNumber,\n  IsEnum,\n  IsMongoId,\n} from 'class-validator';\nimport { SpendingAuthorizationStatus } from 'src/billing/enum/SpendingAuthorization-status.enum';\n\nexport class UpdateSpendingAuthDto extends PartialType(CreateSpendingAuthDto) {\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'Note about the authorization', required: false })\n  note?: string;\n\n  @IsOptional()\n  @IsString()\n  @ApiProperty({ example: 'Type of authorization', required: false })\n  type?: string;\n\n  @IsOptional()\n  @IsNumber()\n  @ApiProperty({ example: 100, required: false })\n  amount?: number;\n\n  @IsOptional()\n  @IsString()\n  @IsEnum(SpendingAuthorizationStatus)\n  @ApiProperty({\n    example: SpendingAuthorizationStatus.OPEN,\n    enum: SpendingAuthorizationStatus,\n    required: false,\n  })\n  status?: SpendingAuthorizationStatus;\n\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  @ApiProperty({ example: '507f1f77bcf86cd799439011', required: false })\n  releasedby?: string;\n\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  @ApiProperty({ example: '507f1f77bcf86cd799439012', required: false })\n  createby?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockDto.html":{"url":"classes/UpdateStockDto.html","title":"class - UpdateStockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock/update-stock.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateStockDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                branch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The ID of the branch to update', example: '507f1f77bcf86cd799439011'})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock/update-stock.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateStockDto } from './create-stock.dto';\nimport { IsString, IsMongoId, IsOptional } from 'class-validator';\n\nexport class UpdateStockDto extends PartialType(CreateStockDto) {\n  @ApiPropertyOptional({\n    description: 'The ID of the branch to update',\n    example: '507f1f77bcf86cd799439011',\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  branch?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockGardDto.html":{"url":"classes/UpdateStockGardDto.html","title":"class - UpdateStockGardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockGardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Gard/update-stock-gard.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateStockGardDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateStockItemQuantityDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: Array of stock item quantities to update', type: undefined})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Gard/update-stock-gard.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateStockGardDto } from './create-stock-gard.dto';\nimport { IsOptional, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CreateStockItemQuantityDto } from '../stock item quantity/create-stock-item-quantity.dto';\n\nexport class UpdateStockGardDto extends PartialType(CreateStockGardDto) {\n  @ApiPropertyOptional({\n    description: 'Optional: Array of stock item quantities to update',\n    type: [CreateStockItemQuantityDto],\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateStockItemQuantityDto)\n  items?: CreateStockItemQuantityDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockItemDto.html":{"url":"classes/UpdateStockItemDto.html","title":"class - UpdateStockItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Item/update-Stock-Item.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateStockItemDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockItemCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The category of the stock item', enum: StockItemCategory, example: StockItemCategory})@IsOptional()@IsEnum(StockItemCategory)@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item/update-Stock-Item.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: A new brief description of the stock item', example: 'An updated high-quality widget for all your widget needs'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item/update-Stock-Item.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: The new name of the stock item', example: 'Widget A Updated'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item/update-Stock-Item.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateStockItemDto } from './create-stock-item.dto';\nimport { IsEnum, IsOptional, IsString } from 'class-validator';\nimport { StockItemCategory } from 'src/stock/enums/Stock-Item-Category.enum';\n\nexport class UpdateStockItemDto extends PartialType(CreateStockItemDto) {\n  @ApiPropertyOptional({\n    description: 'Optional: The new name of the stock item',\n    example: 'Widget A Updated',\n  })\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @ApiPropertyOptional({\n    description: 'The category of the stock item',\n    enum: StockItemCategory,\n    example: StockItemCategory,\n  })\n  @IsOptional()\n  @IsEnum(StockItemCategory)\n  @IsString()\n  category?: StockItemCategory;\n\n  @ApiPropertyOptional({\n    description: 'Optional: A new brief description of the stock item',\n    example: 'An updated high-quality widget for all your widget needs',\n  })\n  @IsOptional()\n  @IsString()\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockItemLogsDto.html":{"url":"classes/UpdateStockItemLogsDto.html","title":"class - UpdateStockItemLogsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockItemLogsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Item Logs/update-Stock-item-Logs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  CreateStockItemLogsDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                createby\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                item\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                transaction\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                transaction_id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: CreateBy User'})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item Logs/update-Stock-item-Logs.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateStockItemQuantityDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: The stock item involved in the transaction to update', type: CreateStockItemQuantityDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item Logs/update-Stock-item-Logs.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockTransactionTYPE\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: The new type of transaction', enum: StockTransactionTYPE})@IsOptional()@IsString()@IsEnum(StockTransactionTYPE)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item Logs/update-Stock-item-Logs.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        transaction_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: Transaction Id'})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Item Logs/update-Stock-item-Logs.dto.ts:50\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateStockItemLogsDto } from './create-Stock-Item-Logs.dto';\nimport {\n  IsEnum,\n  IsMongoId,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { StockTransactionTYPE } from 'src/stock/enums/Stock-Transactions.enum';\nimport { CreateStockItemQuantityDto } from '../stock item quantity/create-stock-item-quantity.dto';\n\nexport class UpdateStockItemLogsDto extends PartialType(\n  CreateStockItemLogsDto,\n) {\n  @ApiPropertyOptional({\n    description:\n      'Optional: The stock item involved in the transaction to update',\n    type: CreateStockItemQuantityDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateStockItemQuantityDto)\n  item?: CreateStockItemQuantityDto;\n\n  @ApiPropertyOptional({\n    description: 'Optional: The new type of transaction',\n    enum: StockTransactionTYPE,\n  })\n  @IsOptional()\n  @IsString()\n  @IsEnum(StockTransactionTYPE)\n  transaction?: StockTransactionTYPE;\n\n  @ApiPropertyOptional({\n    description: 'Optional: CreateBy User',\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  createby?: string;\n\n  @ApiPropertyOptional({\n    description: 'Optional: Transaction Id',\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  transaction_id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockItemQuantityDto.html":{"url":"classes/UpdateStockItemQuantityDto.html","title":"class - UpdateStockItemQuantityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockItemQuantityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/stock item quantity/update-stock-item-quantity.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  CreateStockItemQuantityDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                stock_item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: The new quantity of the stock item', example: 50, type: Number})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/stock item quantity/update-stock-item-quantity.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        stock_item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Optional: The new MongoDB ObjectId of the stock item', example: '507f1f77bcf86cd799439011'})@IsMongoId()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/stock item quantity/update-stock-item-quantity.dto.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateStockItemQuantityDto } from './create-stock-item-quantity.dto';\nimport { IsMongoId, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class UpdateStockItemQuantityDto extends PartialType(\n  CreateStockItemQuantityDto,\n) {\n  @ApiPropertyOptional({\n    description: 'Optional: The new MongoDB ObjectId of the stock item',\n    example: '507f1f77bcf86cd799439011',\n  })\n  @IsMongoId()\n  @IsOptional()\n  @IsString()\n  stock_item?: string;\n\n  @ApiPropertyOptional({\n    description: 'Optional: The new quantity of the stock item',\n    example: 50,\n    type: Number,\n  })\n  @IsOptional()\n  @IsNumber()\n  quantity?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockTransactionDto.html":{"url":"classes/UpdateStockTransactionDto.html","title":"class - UpdateStockTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Transaction/update-Transaction.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateTransactionDto,\n)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                items_quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        items_quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateStockItemQuantityDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Array of stock item quantities involved in the transaction', type: undefined})@IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Transaction/update-Transaction.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockTransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'status of transacetion'})@IsEnum(StockTransactionStatus)@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Transaction/update-Transaction.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        stock\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The MongoDB ObjectId of the branch transferring to', example: '507f191e810c19729de860ea'})@IsMongoId()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock Transaction/update-Transaction.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateTransactionDto } from './create-Transaction.dto';\nimport {\n  IsEnum,\n  IsMongoId,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CreateStockItemQuantityDto } from '../stock item quantity/create-stock-item-quantity.dto';\nimport { StockTransactionStatus } from 'src/stock/enums/Stock-Transaction-Status.enum';\n\nexport class UpdateStockTransactionDto extends PartialType(\n  CreateTransactionDto,\n) {\n  @ApiPropertyOptional({\n    description: 'Array of stock item quantities involved in the transaction',\n    type: [CreateStockItemQuantityDto],\n  })\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => CreateStockItemQuantityDto)\n  items_quantity?: CreateStockItemQuantityDto[];\n\n  @ApiPropertyOptional({\n    description: 'The MongoDB ObjectId of the branch transferring to',\n    example: '507f191e810c19729de860ea',\n  })\n  @IsMongoId()\n  @IsOptional()\n  @IsString()\n  stock?: string;\n\n  @ApiPropertyOptional({\n    description: 'status of transacetion',\n  })\n  @IsEnum(StockTransactionStatus)\n  @IsOptional()\n  @IsString()\n  status?: StockTransactionStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSupplierDto.html":{"url":"classes/UpdateSupplierDto.html","title":"class - UpdateSupplierDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSupplierDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/dto/update-supplier.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSupplierDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                phones\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Location of the supplier', type: () => CreateLocationDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/update-supplier.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Name of the supplier', example: 'ABC Supplies'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/update-supplier.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Contact phone numbers for the supplier', example: undefined, type: undefined})@IsOptional()@IsString({each: true})@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/update-supplier.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateSupplierDto } from './create-supplier.dto';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class UpdateSupplierDto extends PartialType(CreateSupplierDto) {\n  @ApiPropertyOptional({\n    description: 'Name of the supplier',\n    example: 'ABC Supplies',\n  })\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @ApiPropertyOptional({\n    description: 'Contact phone numbers for the supplier',\n    example: ['+1234567890', '+0987654321'],\n    type: [String],\n  })\n  @IsOptional()\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(1)\n  phones?: string[];\n\n  @ApiPropertyOptional({\n    description: 'Location of the supplier',\n    type: () => CreateLocationDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  location?: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTicketDto.html":{"url":"classes/UpdateTicketDto.html","title":"class - UpdateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/update-ticket.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTicketDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                branch\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                createby\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                pool\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                segment\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The Mongo ID of the branch'})@IsOptional()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: TicketCategory, description: 'The category of the ticket'})@IsOptional()@IsEnum(TicketCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The Mongo ID of the user who created the ticket'})@IsOptional()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The description of the ticket'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        pool\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketsPool\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: TicketsPool, description: 'The Pool of the ticket'})@IsOptional()@IsEnum(TicketsPool)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        segment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketSegment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: TicketSegment, description: 'The segment of the ticket'})@IsOptional()@IsEnum(TicketSegment)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: TicketStatus, description: 'The status of the ticket'})@IsOptional()@IsEnum(TicketStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateTicketDto } from './create-ticket.dto';\nimport { IsEnum, IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { TicketSegment } from '../enums/Ticket-Segment.enum';\nimport { TicketCategory } from '../enums/Ticket-category.enum';\nimport { TicketStatus } from '../enums/ticket-status.enum';\nimport { TicketsPool } from '../enums/Ticket-Pool.enum';\n\nexport class UpdateTicketDto extends PartialType(CreateTicketDto) {\n  @ApiPropertyOptional({\n    enum: TicketStatus,\n    description: 'The status of the ticket',\n  })\n  @IsOptional()\n  @IsEnum(TicketStatus)\n  status?: TicketStatus;\n\n  @ApiPropertyOptional({\n    enum: TicketCategory,\n    description: 'The category of the ticket',\n  })\n  @IsOptional()\n  @IsEnum(TicketCategory)\n  category?: TicketCategory;\n\n  @ApiPropertyOptional({\n    enum: TicketSegment,\n    description: 'The segment of the ticket',\n  })\n  @IsOptional()\n  @IsEnum(TicketSegment)\n  segment?: TicketSegment;\n\n  @ApiPropertyOptional({\n    enum: TicketsPool,\n    description: 'The Pool of the ticket',\n  })\n  @IsOptional()\n  @IsEnum(TicketsPool)\n  pool?: TicketsPool;\n\n  @ApiPropertyOptional({\n    description: 'The Mongo ID of the user who created the ticket',\n  })\n  @IsOptional()\n  @IsMongoId()\n  @IsString()\n  createby?: string;\n\n  @ApiPropertyOptional({ description: 'The Mongo ID of the branch' })\n  @IsOptional()\n  @IsMongoId()\n  @IsString()\n  branch?: string;\n\n  @ApiPropertyOptional({ description: 'The description of the ticket' })\n  @IsString()\n  @IsOptional()\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTicketUpdatesDto.html":{"url":"classes/UpdateTicketUpdatesDto.html","title":"class - UpdateTicketUpdatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTicketUpdatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/update-ticket-updates.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTicketUpdateDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                createby\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                ticket\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The Id of the User That Create Update'})@IsOptional()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket-updates.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The description of the ticket'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket-updates.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        ticket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The Id of the ticket'})@IsOptional()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/update-ticket-updates.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsOptional, IsString } from 'class-validator';\nimport { CreateTicketUpdateDto } from './Create-Ticket-updates.dto';\nimport { PartialType, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class UpdateTicketUpdatesDto extends PartialType(CreateTicketUpdateDto) {\n  @ApiPropertyOptional({\n    description: 'The Id of the User That Create Update',\n  })\n  @IsOptional()\n  @IsMongoId()\n  @IsString()\n  createby?: string;\n\n  @ApiPropertyOptional({\n    description: 'The Id of the ticket',\n  })\n  @IsOptional()\n  @IsString()\n  @IsMongoId()\n  ticket?: string;\n\n  @ApiPropertyOptional({ description: 'The description of the ticket' })\n  @IsString()\n  @IsOptional()\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Roles)@ArrayMinSize(1)@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport {\n  IsEmail,\n  IsString,\n  IsEnum,\n  IsOptional,\n  ArrayMinSize,\n} from 'class-validator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @IsEmail()\n  @IsOptional()\n  email?: string;\n\n  @IsString()\n  @IsOptional()\n  password?: string;\n\n  @IsString()\n  @IsOptional()\n  username?: string;\n\n  @IsEnum(Roles)\n  @ArrayMinSize(1)\n  @IsString()\n  @IsOptional()\n  roles?: Roles[];\n\n  @IsString()\n  @IsOptional()\n  refreshToken?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateWalletDto.html":{"url":"classes/UpdateWalletDto.html","title":"class - UpdateWalletDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateWalletDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/dto/update-wallet.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateWalletDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateWalletDto } from './create-wallet.dto';\n\nexport class UpdateWalletDto extends PartialType(CreateWalletDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/Model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                is_valid_email\n                            \n                            \n                                    \n                                is_verified\n                            \n                            \n                                    \n                                isRegisteredWithGoogle\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_valid_email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        is_verified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isRegisteredWithGoogle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { AccountStatus } from 'src/users/enums/account-status.enums';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\n@Schema({\n  timestamps: true,\n})\nexport class User {\n  @Prop({ required: true, unique: true })\n  username: string;\n\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop({ default: Roles.USER })\n  roles: Roles[];\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ default: AccountStatus.ACTIVE, required: true })\n  status: AccountStatus;\n\n  @Prop({ required: true, default: false })\n  is_valid_email: boolean;\n\n  @Prop({ required: true, default: false })\n  is_verified: boolean;\n\n  @Prop({ required: true, default: false })\n  isRegisteredWithGoogle: boolean;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interfaces/User.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            is_valid_email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            is_verified\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isRegisteredWithGoogle\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            refreshToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            roles\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_valid_email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_valid_email:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isRegisteredWithGoogle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isRegisteredWithGoogle:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refreshToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refreshToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:         Roles[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Roles[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         AccountStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Roles } from 'src/auth/enums/roles.enums';\nimport { AccountStatus } from '../enums/account-status.enums';\n\nexport interface UserInterface {\n  username?: string;\n\n  email?: string;\n\n  password?: string;\n\n  roles?: Roles[];\n\n  refreshToken?: string;\n\n  status?: AccountStatus;\n  is_valid_email?: boolean;\n  is_verified?: boolean;\n  isRegisteredWithGoogle?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/controller/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                ConfirmverifyEmail\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByid\n                            \n                            \n                                    \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                    Async\n                                ResetPassword\n                            \n                            \n                                    \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                    Async\n                                UpdatePassword\n                            \n                            \n                                    \n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ConfirmverifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    ConfirmverifyEmail(req: Request, code: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('confirm-verify-email')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByid(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RolesGuard)@Role(Roles.SUPERUSER)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        ResetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    ResetPassword(email: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('forget-password')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(RolesGuard)@Role(Roles.SUPERUSER)@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        UpdatePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdatePassword(code: number, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@Post('update-forget-password')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('verify-email')\n                \n            \n\n                    \n                        \n                            Defined in src/users/controller/users.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  Req,\n} from '@nestjs/common';\nimport { CreateUserDto } from '../dto/create-user.dto';\nimport { UpdateUserDto } from '../dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { Role } from 'src/auth/decorator/roles.decorator';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { VerifyEmailService } from '../service/verify-email.service';\nimport { UsersService } from '../service/users.service';\nimport { Request } from 'express';\nimport { ResetPasswordService } from '../service/reset-password.service';\nimport { Public } from 'src/auth/decorator/IsPuplic.decorator';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(\n    private readonly usersService: UsersService,\n    private verifyEmailService: VerifyEmailService,\n    private resetPasswordService: ResetPasswordService,\n  ) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOneByid(@Param('id') id: string) {\n    return this.usersService.findOneByid(id);\n  }\n\n  @Post('verify-email')\n  verifyEmail(@Req() req: Request) {\n    return this.verifyEmailService.VerifyRequest((req as any).user._id);\n  }\n\n  @Post('confirm-verify-email')\n  ConfirmverifyEmail(@Req() req: Request, @Body('code') code: number) {\n    return this.verifyEmailService.VerifyAndUpdate((req as any).user._id, code);\n  }\n\n  @Public()\n  @Post('forget-password')\n  async ResetPassword(@Body('email') email: string): Promise {\n    return await this.resetPasswordService.RequestResetPassword(email);\n  }\n  @Public()\n  @Post('update-forget-password')\n  async UpdatePassword(\n    @Body('code') code: number,\n    @Body('password') password: string,\n  ): Promise {\n    return await this.resetPasswordService.VerifyAndUpdate(code, password);\n  }\n\n  @UseGuards(RolesGuard)\n  @Role(Roles.SUPERUSER)\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.updateOneByID(id, updateUserDto);\n  }\n\n  @UseGuards(RolesGuard)\n  @Role(Roles.SUPERUSER)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.removeOneUserByID(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nLocationModule\n\nLocationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nLocationModule->UsersModule\n\n\n\n\n\nMailModule\n\nMailModule\n\nUsersModule -->\n\nMailModule->UsersModule\n\n\n\n\n\nResetPasswordService \n\nResetPasswordService \n\nResetPasswordService  -->\n\nUsersModule->ResetPasswordService \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nResetPasswordService\n\nResetPasswordService\n\nUsersModule -->\n\nResetPasswordService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nVerifyEmailService\n\nVerifyEmailService\n\nUsersModule -->\n\nVerifyEmailService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ResetPasswordService\n                        \n                        \n                            UsersService\n                        \n                        \n                            VerifyEmailService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LocationModule\n                        \n                        \n                            MailModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResetPasswordService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './service/users.service';\nimport { UsersController } from './controller/users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './Model/user.model';\nimport { LocationModule } from 'src/location/location.module';\nimport { VerifyEmailService } from './service/verify-email.service';\nimport {\n  VerifyUserEmail,\n  VerifyUserEmailSchema,\n} from './Model/verify-user-email.model';\nimport { MailModule } from 'src/mail/mail.module';\nimport {\n  ResetPassword,\n  ResetPasswordSchema,\n} from './Model/Reset-Password.model';\nimport { ConfigModule } from '@nestjs/config';\nimport { ResetPasswordService } from './service/reset-password.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: User.name, schema: UserSchema },\n      {\n        name: VerifyUserEmail.name,\n        schema: VerifyUserEmailSchema,\n      },\n      { name: ResetPassword.name, schema: ResetPasswordSchema },\n    ]),\n    LocationModule,\n    MailModule,\n    ConfigModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, VerifyEmailService, ResetPasswordService],\n  exports: [UsersService, ResetPasswordService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/service/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddOneRoleToUser\n                            \n                            \n                                    Async\n                                BlockUser\n                            \n                            \n                                    Async\n                                ChangeUserStatus\n                            \n                            \n                                    Async\n                                CompareTextWithHash\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createWithGoogle\n                            \n                            \n                                    Async\n                                DeleteOneUserRefreshByUserID\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneByid\n                            \n                            \n                                    Async\n                                hashFunction\n                            \n                            \n                                    Async\n                                IsUserHaveOneRole\n                            \n                            \n                                    Async\n                                removeOneUserByID\n                            \n                            \n                                    Async\n                                UnAssignOneRoleFromUser\n                            \n                            \n                                    Async\n                                updateOneByemail\n                            \n                            \n                                    Async\n                                updateOneByID\n                            \n                            \n                                    Async\n                                updateRefresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/service/users.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddOneRoleToUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddOneRoleToUser(userid: string, newRole: Roles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newRole\n                                            \n                                                            Roles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        BlockUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    BlockUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:178\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeUserStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeUserStatus(id: string, changeUserStatusDTO: ChangeUserStatusDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changeUserStatusDTO\n                                            \n                                                            ChangeUserStatusDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CompareTextWithHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    CompareTextWithHash(text: string, HashedValue: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                HashedValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createData: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createData\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createWithGoogle\n                        \n                    \n                \n            \n            \n                \n                        \n                    createWithGoogle(email: string, name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteOneUserRefreshByUserID\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteOneUserRefreshByUserID(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByid(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashFunction\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashFunction(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsUserHaveOneRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsUserHaveOneRole(id: string, role: Roles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Roles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeOneUserByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeOneUserByID(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UnAssignOneRoleFromUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    UnAssignOneRoleFromUser(userid: string, RemovedRole: Roles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                RemovedRole\n                                            \n                                                            Roles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneByemail\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneByemail(email: string, newData: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneByID(id: string, newData: UserInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newData\n                                            \n                                                            UserInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRefresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRefresh(id: string, newRefresh: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/users.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newRefresh\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from '../Model/user.model';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { AccountStatus } from '../enums/account-status.enums';\nimport { ChangeUserStatusDTO } from '../dto/Change-User-Status.dto';\nimport { UserInterface } from '../interfaces/User.interface';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userRepo: Model) {}\n\n  async hashFunction(text: string): Promise {\n    try {\n      const salt = await bcrypt.genSalt();\n      return await bcrypt.hash(text, salt);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async create(createData: UserInterface): Promise {\n    try {\n      const user = new this.userRepo(createData);\n      user.password = await this.hashFunction(createData.password);\n      return await user.save();\n    } catch (err) {\n      if (err.code == 11000) {\n        throw new ConflictException(\"Can't Save , User Already Exist\");\n      }\n      throw err;\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.userRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneByid(id: string): Promise {\n    try {\n      return await this.userRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async createWithGoogle(email: string, name: string) {\n    // const stripeCustomer = await this.stripeService.createCustomer(name, email);\n\n    const newUser = await this.userRepo.create({\n      email,\n      name,\n      isRegisteredWithGoogle: true,\n      // stripeCustomerId: stripeCustomer.id,\n    });\n    return await newUser.save();\n  }\n\n  async findOneByEmail(email: string): Promise {\n    try {\n      return await this.userRepo.findOne({ email }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n  async updateOneByID(id: string, newData: UserInterface): Promise {\n    try {\n      if (newData.password) {\n        newData.password = await this.hashFunction(newData.password);\n      }\n      return await this.userRepo.findByIdAndUpdate(id, newData);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateOneByemail(email: string, newData: UserInterface): Promise {\n    try {\n      return await this.userRepo.findOneAndUpdate({ email: email }, newData);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async updateRefresh(id: string, newRefresh: string): Promise {\n    try {\n      await this.userRepo.updateOne(\n        { _id: id },\n        {\n          refreshToken: newRefresh,\n        },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteOneUserRefreshByUserID(user_id: string): Promise {\n    try {\n      await this.userRepo.findByIdAndUpdate(user_id, {\n        $unset: {\n          refreshToken: 1,\n        },\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async removeOneUserByID(user_id: string) {\n    try {\n      return await this.userRepo.findByIdAndDelete(user_id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async CompareTextWithHash(\n    text: string,\n    HashedValue: string,\n  ): Promise {\n    try {\n      return await bcrypt.compare(text, HashedValue);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async AddOneRoleToUser(userid: string, newRole: Roles): Promise {\n    try {\n      return await this.userRepo.findByIdAndUpdate(\n        userid,\n        { $push: { roles: newRole } },\n        { new: true },\n      );\n    } catch (err) {\n      if (err.status == 409) {\n        throw new ConflictException('Role Is Already Exist');\n      }\n      throw err;\n    }\n  }\n\n  async UnAssignOneRoleFromUser(\n    userid: string,\n    RemovedRole: Roles,\n  ): Promise {\n    try {\n      return await this.userRepo.findByIdAndUpdate(\n        userid,\n        { $pull: { roles: RemovedRole } },\n        { new: true },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsUserHaveOneRole(id: string, role: Roles): Promise {\n    try {\n      const isexist = await this.userRepo.find({\n        _id: id,\n        roles: { $in: [role] },\n      });\n      if (isexist.length > 0) return true;\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async BlockUser(id: string): Promise {\n    try {\n      return await this.userRepo.findByIdAndUpdate(id, {\n        status: AccountStatus.BLOCK,\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async ChangeUserStatus(\n    id: string,\n    changeUserStatusDTO: ChangeUserStatusDTO,\n  ): Promise {\n    try {\n      return await this.userRepo.findByIdAndUpdate(id, changeUserStatusDTO);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VerifyEmailService.html":{"url":"injectables/VerifyEmailService.html","title":"injectable - VerifyEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  VerifyEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/service/verify-email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                Create\n                            \n                            \n                                    Async\n                                DeleteOneByUserId\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                findOneByUserId\n                            \n                            \n                                    Async\n                                GenerateCode\n                            \n                            \n                                    Async\n                                IsValidCode\n                            \n                            \n                                    Async\n                                UpdateOneByUserId\n                            \n                            \n                                    Async\n                                VerifyAndUpdate\n                            \n                            \n                                    Async\n                                VerifyRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(verifyUserEmailRepo: Model, usersService: UsersService, mailService: MailService)\n                    \n                \n                        \n                            \n                                Defined in src/users/service/verify-email.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        verifyUserEmailRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailService\n                                                  \n                                                        \n                                                                        MailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Create\n                        \n                    \n                \n            \n            \n                \n                        \n                    Create(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteOneByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteOneByUserId(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUserId(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GenerateCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    GenerateCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCode(user_id: string, code: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:105\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateOneByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateOneByUserId(user_id: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        VerifyAndUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    VerifyAndUpdate(user_id: string, code: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        VerifyRequest\n                        \n                    \n                \n            \n            \n                \n                        \n                    VerifyRequest(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/service/verify-email.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { VerifyUserEmail } from '../Model/verify-user-email.model';\nimport { Model } from 'mongoose';\nimport { UsersService } from './users.service';\nimport { MailService } from 'src/mail/mail.service';\nimport { SendMailOption } from 'src/mail/type/SendMail-Option.type';\n\n@Injectable()\nexport class VerifyEmailService {\n  constructor(\n    @InjectModel(VerifyUserEmail.name)\n    private verifyUserEmailRepo: Model,\n    private usersService: UsersService,\n    private mailService: MailService,\n  ) {}\n\n  async GenerateCode() {\n    const min = 10000000;\n    const max = 99999999;\n    return await Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  async Create(data: { user: string; code: number }) {\n    try {\n      const newRow = new this.verifyUserEmailRepo(data);\n      return await newRow.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.verifyUserEmailRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneByUserId(user_id: string) {\n    try {\n      return await this.verifyUserEmailRepo.findOne({ user: user_id }).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateOneByUserId(user_id: string, data: object) {\n    try {\n      return await this.verifyUserEmailRepo\n        .findOneAndUpdate({ user: user_id }, data, { new: true })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteOneByUserId(user_id: string) {\n    try {\n      return await this.verifyUserEmailRepo\n        .findOneAndDelete({ user: user_id })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async VerifyRequest(user_id: string) {\n    try {\n      const user = await this.usersService.findOneByid(user_id);\n      if (!user) throw new NotFoundException('User not found');\n\n      if (user.is_valid_email)\n        throw new ConflictException('User Already Verified');\n      const GeneratedCode = await this.GenerateCode();\n\n      const verifyCodeRow = await this.findOneByUserId(user_id);\n      if (verifyCodeRow) {\n        await this.UpdateOneByUserId(user_id, { code: GeneratedCode });\n      } else {\n        await this.Create({ user: user_id, code: GeneratedCode });\n      }\n\n      const body = `Hello ${user.username}\\n\n      your verification Code is : ${GeneratedCode} \\n\n      Code Is Valid For 5 Mintue Only.`;\n\n      const Mailoption: SendMailOption = {\n        to: [user.email],\n        subject: 'Verify Email',\n        body: body,\n      };\n      return await this.mailService.sendMail(Mailoption);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidCode(user_id: string, code: number) {\n    try {\n      const fiveMinutesAgo = new Date(new Date().getTime() - 5 * 60000);\n      const is_Valid = await this.verifyUserEmailRepo\n        .findOne({\n          user: user_id,\n          code: code,\n          updatedAt: { $gte: fiveMinutesAgo },\n        })\n        .exec();\n\n      if (is_Valid) return true;\n      return false;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async VerifyAndUpdate(user_id: string, code: number) {\n    try {\n      const is_valid_email = await this.IsValidCode(user_id, code);\n      if (is_valid_email) {\n        await this.usersService.updateOneByID(user_id, {\n          is_valid_email: true,\n        });\n        await this.DeleteOneByUserId(user_id);\n        return { message: 'Success Verify' };\n      }\n      return new UnauthorizedException('Code Not Valid');\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyUserEmail.html":{"url":"classes/VerifyUserEmail.html","title":"class - VerifyUserEmail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyUserEmail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/Model/verify-user-email.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                code\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/verify-user-email.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/verify-user-email.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from './user.model';\n\n@Schema({ timestamps: true })\nexport class VerifyUserEmail {\n  @Prop({\n    type: mongoose.Types.ObjectId,\n    ref: User.name,\n    unique: true,\n    required: true,\n  })\n  user: string;\n\n  @Prop({ required: true, unique: true })\n  code: number;\n}\n\nexport const VerifyUserEmailSchema =\n  SchemaFactory.createForClass(VerifyUserEmail);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/VerifyandGenerateRefreshToken.html":{"url":"interfaces/VerifyandGenerateRefreshToken.html","title":"interface - VerifyandGenerateRefreshToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  VerifyandGenerateRefreshToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interface/VerifyandGenerateRefreshToken.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            userid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface VerifyandGenerateRefreshToken {\n  userid: string;\n\n  refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Wallet.html":{"url":"classes/Wallet.html","title":"class - Wallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Wallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/Model/wallet.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Wallet {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/WalletController.html":{"url":"controllers/WalletController.html","title":"controller - WalletController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  WalletController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/wallet.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                wallet\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createWalletDto: CreateWalletDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWalletDto\n                                            \n                                                            CreateWalletDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateWalletDto: UpdateWalletDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/wallet/wallet.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWalletDto\n                                            \n                                                            UpdateWalletDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { WalletService } from './wallet.service';\nimport { CreateWalletDto } from './dto/create-wallet.dto';\nimport { UpdateWalletDto } from './dto/update-wallet.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Wallet')\n@Controller('wallet')\nexport class WalletController {\n  constructor(private readonly walletService: WalletService) {}\n\n  @Post()\n  create(@Body() createWalletDto: CreateWalletDto) {\n    return this.walletService.create(createWalletDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.walletService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.walletService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateWalletDto: UpdateWalletDto) {\n    return this.walletService.update(+id, updateWalletDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.walletService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_providers\n\n\n\n\nWalletService\n\nWalletService\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nWalletService->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            WalletService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            WalletController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { WalletService } from './wallet.service';\nimport { WalletController } from './wallet.controller';\n\n@Module({\n  controllers: [WalletController],\n  providers: [WalletService],\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createWalletDto: CreateWalletDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createWalletDto\n                                            \n                                                            CreateWalletDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateWalletDto: UpdateWalletDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/wallet/wallet.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateWalletDto\n                                            \n                                                            UpdateWalletDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateWalletDto } from './dto/create-wallet.dto';\nimport { UpdateWalletDto } from './dto/update-wallet.dto';\n\n@Injectable()\nexport class WalletService {\n  create(createWalletDto: CreateWalletDto) {\n    return 'This action adds a new wallet';\n  }\n\n  findAll() {\n    return `This action returns all wallet`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} wallet`;\n  }\n\n  update(id: number, updateWalletDto: UpdateWalletDto) {\n    return `This action updates a #${id} wallet`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} wallet`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs-modules/mailer : ^1.11.2\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.2.0\n        \n            @paypal/checkout-server-sdk : ^1.0.3\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            googleapis : ^134.0.0\n        \n            joi : ^17.12.1\n        \n            moment : ^2.30.1\n        \n            mongoose : ^8.1.1\n        \n            nodemailer : ^6.9.12\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            paypal-rest-sdk : ^1.8.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountStatus   (src/.../account-status.enums.ts)\n                        \n                        \n                            AttendenceActions   (src/.../attendence-action.enums.ts)\n                        \n                        \n                            DelivereyMethod   (src/.../Deliverey-method.enums.ts)\n                        \n                        \n                            DeliveryPrice   (src/.../Deliver-price.enums.ts)\n                        \n                        \n                            DeliveryStatus   (src/.../delivery-status.enums.ts)\n                        \n                        \n                            Department   (src/.../department.enums.ts)\n                        \n                        \n                            MeasureUnits   (src/.../measure-units.enum.ts)\n                        \n                        \n                            OrderStatus   (src/.../Order-Status.enums.ts)\n                        \n                        \n                            OrderType   (src/.../Order-Types.enums.ts)\n                        \n                        \n                            PaymentCurrency   (src/.../payment-currency.enum.ts)\n                        \n                        \n                            PaymentStatus   (src/.../payment-status.enums.ts)\n                        \n                        \n                            PaymentType   (src/.../payment-type.enums.ts)\n                        \n                        \n                            PDRActions   (src/.../pdr-action.enum.ts)\n                        \n                        \n                            ProductCategory   (src/.../product-category.enums.ts)\n                        \n                        \n                            ProductComponents   (src/.../product-components.enum.ts)\n                        \n                        \n                            ProductSize   (src/.../size.enum.ts)\n                        \n                        \n                            ProductSubCategory   (src/.../product-subcategory.enum.ts)\n                        \n                        \n                            Roles   (src/.../roles.enums.ts)\n                        \n                        \n                            Sex   (src/.../Sex.enum.ts)\n                        \n                        \n                            SpendingAuthorizationStatus   (src/.../SpendingAuthorization-status.enum.ts)\n                        \n                        \n                            StockItemCategory   (src/.../Stock-Item-Category.enum.ts)\n                        \n                        \n                            StockTransactionStatus   (src/.../Stock-Transaction-Status.enum.ts)\n                        \n                        \n                            StockTransactionTYPE   (src/.../Stock-Transactions.enum.ts)\n                        \n                        \n                            TicketCategory   (src/.../Ticket-category.enum.ts)\n                        \n                        \n                            TicketSegment   (src/.../Ticket-Segment.enum.ts)\n                        \n                        \n                            TicketsPool   (src/.../Ticket-Pool.enum.ts)\n                        \n                        \n                            TicketStatus   (src/.../ticket-status.enum.ts)\n                        \n                        \n                            Transaction   (src/.../emp-transaction.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/enums/account-status.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 BLOCK\n                            \n                        \n                        \n                            \n                                Value : block\n                            \n                        \n                        \n                            \n                                 LOCKED\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n            \n        \n\n    src/employee/enums/attendence-action.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AttendenceActions\n                    \n                \n                        \n                            \n                                 SIGNIN\n                            \n                        \n                        \n                            \n                                Value : signin\n                            \n                        \n                        \n                            \n                                 SIGNOUT\n                            \n                        \n                        \n                            \n                                Value : signout\n                            \n                        \n            \n        \n\n    src/delivery/enums/Deliverey-method.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        DelivereyMethod\n                    \n                \n                        \n                            \n                                 BIKE\n                            \n                        \n                        \n                            \n                                Value : bike\n                            \n                        \n            \n        \n\n    src/delivery/enums/Deliver-price.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        DeliveryPrice\n                    \n                \n                        \n                            \n                                 FIVE\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 TEN\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 FIFTEEN\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n                        \n                            \n                                 TWENTY\n                            \n                        \n                        \n                            \n                                Value : 20\n                            \n                        \n                        \n                            \n                                 TWENTYFIVE\n                            \n                        \n                        \n                            \n                                Value : 25\n                            \n                        \n                        \n                            \n                                 THIRTY\n                            \n                        \n                        \n                            \n                                Value : 30\n                            \n                        \n                        \n                            \n                                 THIRTYFIVE\n                            \n                        \n                        \n                            \n                                Value : 35\n                            \n                        \n                        \n                            \n                                 FOURTY\n                            \n                        \n                        \n                            \n                                Value : 40\n                            \n                        \n                        \n                            \n                                 FOURTYFIVE\n                            \n                        \n                        \n                            \n                                Value : 45\n                            \n                        \n                        \n                            \n                                 FIFTY\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n            \n        \n\n    src/delivery/enums/delivery-status.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        DeliveryStatus\n                    \n                \n                        \n                            \n                                 WAITINGORDER\n                            \n                        \n                        \n                            \n                                Value : waitingorder\n                            \n                        \n                        \n                            \n                                 INDELIVER\n                            \n                        \n                        \n                            \n                                Value : indeliver\n                            \n                        \n                        \n                            \n                                 WAITINGCUSTOMER\n                            \n                        \n                        \n                            \n                                Value : waitingcustomer\n                            \n                        \n                        \n                            \n                                 COMPELETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/employee/enums/department.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        Department\n                    \n                \n                        \n                            \n                                 KITCHEN\n                            \n                        \n                        \n                            \n                                Value : kitchen\n                            \n                        \n                        \n                            \n                                 CASHIER\n                            \n                        \n                        \n                            \n                                Value : cashier\n                            \n                        \n                        \n                            \n                                 ACCOUNTING\n                            \n                        \n                        \n                            \n                                Value : accounting\n                            \n                        \n                        \n                            \n                                 DELIVEREY\n                            \n                        \n                        \n                            \n                                Value : deliverey\n                            \n                        \n            \n        \n\n    src/material/enums/measure-units.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MeasureUnits\n                    \n                \n                        \n                            \n                                 Kilo\n                            \n                        \n                        \n                            \n                                Value : kilo\n                            \n                        \n                        \n                            \n                                 Litre\n                            \n                        \n                        \n                            \n                                Value : litre\n                            \n                        \n            \n        \n\n    src/order/enums/Order-Status.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 PREPARING\n                            \n                        \n                        \n                            \n                                Value : perparing\n                            \n                        \n                        \n                            \n                                 COMPELETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/order/enums/Order-Types.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 DINEIN\n                            \n                        \n                        \n                            \n                                Value : dinein\n                            \n                        \n                        \n                            \n                                 TAKEAWAY\n                            \n                        \n                        \n                            \n                                Value : takeaway\n                            \n                        \n                        \n                            \n                                 DELIVEREY\n                            \n                        \n                        \n                            \n                                Value : deliverey\n                            \n                        \n            \n        \n\n    src/payment/enums/payment-currency.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentCurrency\n                    \n                \n                        \n                            \n                                 EG\n                            \n                        \n                        \n                            \n                                Value : eg\n                            \n                        \n            \n        \n\n    src/payment/enums/payment-status.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentStatus\n                    \n                \n                        \n                            \n                                 COMPELETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n            \n        \n\n    src/payment/enums/payment-type.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentType\n                    \n                \n                        \n                            \n                                 CASH\n                            \n                        \n                        \n                            \n                                Value : cash\n                            \n                        \n                        \n                            \n                                 PAYPAL\n                            \n                        \n                        \n                            \n                                Value : paypal\n                            \n                        \n            \n        \n\n    src/employee/enums/pdr-action.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PDRActions\n                    \n                \n                        \n                            \n                                 POSITIVE\n                            \n                        \n                        \n                            \n                                Value : positive\n                            \n                        \n                        \n                            \n                                 NEGATIVE\n                            \n                        \n                        \n                            \n                                Value : negative\n                            \n                        \n            \n        \n\n    src/product/enums/product-category.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductCategory\n                    \n                \n                        \n                            \n                                 PIZZA\n                            \n                        \n                        \n                            \n                                Value : pizza\n                            \n                        \n                        \n                            \n                                 PASTA\n                            \n                        \n                        \n                            \n                                Value : pasta\n                            \n                        \n            \n        \n\n    src/product/enums/product-components.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductComponents\n                    \n                \n                        \n                            \n                                 SASUAGE\n                            \n                        \n                        \n                            \n                                Value : sasuage\n                            \n                        \n            \n        \n\n    src/product/enums/size.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductSize\n                    \n                \n                        \n                            \n                                 XLARGE\n                            \n                        \n                        \n                            \n                                Value : XL\n                            \n                        \n                        \n                            \n                                 LARGE\n                            \n                        \n                        \n                            \n                                Value : L\n                            \n                        \n                        \n                            \n                                 MEDUIM\n                            \n                        \n                        \n                            \n                                Value : M\n                            \n                        \n            \n        \n\n    src/product/enums/product-subcategory.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductSubCategory\n                    \n                \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : لحوم\n                            \n                        \n                        \n                            \n                                 CHICKEN\n                            \n                        \n                        \n                            \n                                Value : فراخ\n                            \n                        \n            \n        \n\n    src/auth/enums/roles.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 SUPERUSER\n                            \n                        \n                        \n                            \n                                Value : superuser\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 CASHIER\n                            \n                        \n                        \n                            \n                                Value : cashier\n                            \n                        \n                        \n                            \n                                 CASHIERSENIOR\n                            \n                        \n                        \n                            \n                                Value : cashier_senior\n                            \n                        \n                        \n                            \n                                 KitchenAssistance\n                            \n                        \n                        \n                            \n                                Value : kitchen_assistance\n                            \n                        \n                        \n                            \n                                 KITCHENCHIEF\n                            \n                        \n                        \n                            \n                                Value : kitchen_chief\n                            \n                        \n                        \n                            \n                                 BRANCHMANAGER\n                            \n                        \n                        \n                            \n                                Value : branchmanager\n                            \n                        \n                        \n                            \n                                 DELIVEREY\n                            \n                        \n                        \n                            \n                                Value : deliverey\n                            \n                        \n            \n        \n\n    src/users/enums/Sex.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Sex\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : male\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : female\n                            \n                        \n            \n        \n\n    src/billing/enum/SpendingAuthorization-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        SpendingAuthorizationStatus\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : open\n                            \n                        \n                        \n                            \n                                 CLOSE\n                            \n                        \n                        \n                            \n                                Value : close\n                            \n                        \n            \n        \n\n    src/stock/enums/Stock-Item-Category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StockItemCategory\n                    \n                \n                        \n                            \n                                 COOKING_MATERIAL\n                            \n                        \n                        \n                            \n                                Value : cooking_material\n                            \n                        \n                        \n                            \n                                 COOKING_EQUIPMENT\n                            \n                        \n                        \n                            \n                                Value : cooking_equipment\n                            \n                        \n                        \n                            \n                                 SERVICE_EQUIPMENT\n                            \n                        \n                        \n                            \n                                Value : service_equipment\n                            \n                        \n            \n        \n\n    src/stock/enums/Stock-Transaction-Status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StockTransactionStatus\n                    \n                \n                        \n                            \n                                 COMPELETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 INPROGRESS\n                            \n                        \n                        \n                            \n                                Value : in_progress\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : canceled\n                            \n                        \n            \n        \n\n    src/stock/enums/Stock-Transactions.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StockTransactionTYPE\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                Value : add\n                            \n                        \n                        \n                            \n                                 USE\n                            \n                        \n                        \n                            \n                                Value : use\n                            \n                        \n                        \n                            \n                                 EXPIRE\n                            \n                        \n                        \n                            \n                                Value : expire\n                            \n                        \n                        \n                            \n                                 TRANSFER\n                            \n                        \n                        \n                            \n                                Value : transfer\n                            \n                        \n                        \n                            \n                                 STAFF_USE\n                            \n                        \n                        \n                            \n                                Value : staff_use\n                            \n                        \n            \n        \n\n    src/ticket/enums/Ticket-category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketCategory\n                    \n                \n                        \n                            \n                                 OUT_OF_STOCK\n                            \n                        \n                        \n                            \n                                Value : out_of_stock\n                            \n                        \n                        \n                            \n                                 IMPROVE\n                            \n                        \n                        \n                            \n                                Value : improve\n                            \n                        \n                        \n                            \n                                 REPLACE\n                            \n                        \n                        \n                            \n                                Value : replace\n                            \n                        \n                        \n                            \n                                 NEED\n                            \n                        \n                        \n                            \n                                Value : need\n                            \n                        \n            \n        \n\n    src/ticket/enums/Ticket-Segment.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketSegment\n                    \n                \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                Value : normal\n                            \n                        \n                        \n                            \n                                 IMPORTANT\n                            \n                        \n                        \n                            \n                                Value : important\n                            \n                        \n                        \n                            \n                                 URGENT\n                            \n                        \n                        \n                            \n                                Value : urgent\n                            \n                        \n            \n        \n\n    src/ticket/enums/Ticket-Pool.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketsPool\n                    \n                \n                        \n                            \n                                 HR\n                            \n                        \n                        \n                            \n                                Value : hr\n                            \n                        \n                        \n                            \n                                 ACCONTING\n                            \n                        \n                        \n                            \n                                Value : accounting\n                            \n                        \n                        \n                            \n                                 SALES\n                            \n                        \n                        \n                            \n                                Value : sales\n                            \n                        \n                        \n                            \n                                 STAFF\n                            \n                        \n                        \n                            \n                                Value : staff\n                            \n                        \n            \n        \n\n    src/ticket/enums/ticket-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketStatus\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : open\n                            \n                        \n                        \n                            \n                                 CLOSE\n                            \n                        \n                        \n                            \n                                Value : close\n                            \n                        \n            \n        \n\n    src/billing/enum/emp-transaction.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Transaction\n                    \n                \n                        \n                            \n                                 LOAN\n                            \n                        \n                        \n                            \n                                Value : loan\n                            \n                        \n                        \n                            \n                                 BONAS\n                            \n                        \n                        \n                            \n                                Value : bonas\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            isDateWithinRange   (src/.../Dates.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/functions/Dates.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDateWithinRange\n                        \n                    \n                \n            \n            \n                \nisDateWithinRange(dateToCheck: Date, startDate: Date, endDate: Date)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateToCheck\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BillingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BranchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CashierModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CouponModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OffersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaypalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StockModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SupplierModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TicketModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BillingModule\n\n\n\ncluster_BillingModule_providers\n\n\n\ncluster_BranchModule\n\n\n\ncluster_BranchModule_exports\n\n\n\ncluster_BranchModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CashierModule\n\n\n\ncluster_CashierModule_providers\n\n\n\ncluster_CouponModule\n\n\n\ncluster_CouponModule_exports\n\n\n\ncluster_CouponModule_providers\n\n\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_exports\n\n\n\ncluster_CustomerModule_providers\n\n\n\ncluster_DeliveryModule\n\n\n\ncluster_DeliveryModule_providers\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_exports\n\n\n\ncluster_EmployeeModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MailModule\n\n\n\ncluster_MailModule_exports\n\n\n\ncluster_MailModule_providers\n\n\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_providers\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_OffersModule\n\n\n\ncluster_OffersModule_exports\n\n\n\ncluster_OffersModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_exports\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_StockModule\n\n\n\ncluster_StockModule_exports\n\n\n\ncluster_StockModule_providers\n\n\n\ncluster_SupplierModule\n\n\n\ncluster_SupplierModule_providers\n\n\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBillingModule\n\nBillingModule\n\nAppModule -->\n\nBillingModule->AppModule\n\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nCouponModule\n\nCouponModule\n\nCouponModule -->\n\nBranchModule->CouponModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nBranchModule->EmployeeModule\n\n\n\n\n\nOffersModule\n\nOffersModule\n\nOffersModule -->\n\nBranchModule->OffersModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nBranchModule->OrderModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nBranchModule->PaymentModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nBranchModule->ProductModule\n\n\n\n\n\nStockModule\n\nStockModule\n\nStockModule -->\n\nBranchModule->StockModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nTicketModule -->\n\nBranchModule->TicketModule\n\n\n\nAppModule -->\n\nBranchModule->AppModule\n\n\n\n\n\nBranchService \n\nBranchService \n\nBranchService  -->\n\nBranchModule->BranchService \n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCashierModule\n\nCashierModule\n\nAppModule -->\n\nCashierModule->AppModule\n\n\n\nOrderModule -->\n\nCouponModule->OrderModule\n\n\n\nAppModule -->\n\nCouponModule->AppModule\n\n\n\n\n\nCouponService \n\nCouponService \n\nCouponService  -->\n\nCouponModule->CouponService \n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nOrderModule -->\n\nCustomerModule->OrderModule\n\n\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nCustomerLocationsService \n\nCustomerLocationsService \n\nCustomerLocationsService  -->\n\nCustomerModule->CustomerLocationsService \n\n\n\n\n\nCustomerService \n\nCustomerService \n\nCustomerService  -->\n\nCustomerModule->CustomerService \n\n\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nAppModule -->\n\nDeliveryModule->AppModule\n\n\n\nBillingModule -->\n\nEmployeeModule->BillingModule\n\n\n\nOrderModule -->\n\nEmployeeModule->OrderModule\n\n\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nEmployeeService \n\nEmployeeService \n\nEmployeeService  -->\n\nEmployeeModule->EmployeeService \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nCustomerModule -->\n\nLocationModule->CustomerModule\n\n\n\nEmployeeModule -->\n\nLocationModule->EmployeeModule\n\n\n\n\n\nSupplierModule\n\nSupplierModule\n\nSupplierModule -->\n\nLocationModule->SupplierModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nLocationModule->UsersModule\n\n\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nLocationService \n\nLocationService \n\nLocationService  -->\n\nLocationModule->LocationService \n\n\n\n\n\nMailModule\n\nMailModule\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nMailModule->NotificationsModule\n\n\n\nUsersModule -->\n\nMailModule->UsersModule\n\n\n\nAppModule -->\n\nMailModule->AppModule\n\n\n\n\n\nMailService \n\nMailService \n\nMailService  -->\n\nMailModule->MailService \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\nAppModule -->\n\nNotificationsModule->AppModule\n\n\n\nOrderModule -->\n\nOffersModule->OrderModule\n\n\n\nAppModule -->\n\nOffersModule->AppModule\n\n\n\n\n\nOffersService \n\nOffersService \n\nOffersService  -->\n\nOffersModule->OffersService \n\n\n\nPaymentModule -->\n\nOrderModule->PaymentModule\n\n\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nOrderService \n\nOrderService \n\nOrderService  -->\n\nOrderModule->OrderService \n\n\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nPaypalModule\n\nPaypalModule\n\nAppModule -->\n\nPaypalModule->AppModule\n\n\n\nOffersModule -->\n\nProductModule->OffersModule\n\n\n\nOrderModule -->\n\nProductModule->OrderModule\n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductService \n\nProductService \n\nProductService  -->\n\nProductModule->ProductService \n\n\n\nAppModule -->\n\nStockModule->AppModule\n\n\n\n\n\nStockItemService \n\nStockItemService \n\nStockItemService  -->\n\nStockModule->StockItemService \n\n\n\n\n\nStockService \n\nStockService \n\nStockService  -->\n\nStockModule->StockService \n\n\n\n\n\nStockTransactionService \n\nStockTransactionService \n\nStockTransactionService  -->\n\nStockModule->StockTransactionService \n\n\n\nAppModule -->\n\nSupplierModule->AppModule\n\n\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nBillingModule -->\n\nUsersModule->BillingModule\n\n\n\nBranchModule -->\n\nUsersModule->BranchModule\n\n\n\nCustomerModule -->\n\nUsersModule->CustomerModule\n\n\n\nEmployeeModule -->\n\nUsersModule->EmployeeModule\n\n\n\nPaymentModule -->\n\nUsersModule->PaymentModule\n\n\n\nStockModule -->\n\nUsersModule->StockModule\n\n\n\nTicketModule -->\n\nUsersModule->TicketModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nResetPasswordService \n\nResetPasswordService \n\nResetPasswordService  -->\n\nUsersModule->ResetPasswordService \n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nWalletModule\n\nWalletModule\n\nAppModule -->\n\nWalletModule->AppModule\n\n\n\n\n\nATStrategy\n\nATStrategy\n\nAuthModule -->\n\nATStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nGoogleService\n\nGoogleService\n\nAuthModule -->\n\nGoogleService->AuthModule\n\n\n\n\n\nBillingService\n\nBillingService\n\nBillingModule -->\n\nBillingService->BillingModule\n\n\n\n\n\nInvoiceService\n\nInvoiceService\n\nBillingModule -->\n\nInvoiceService->BillingModule\n\n\n\n\n\nSpendingAuthService\n\nSpendingAuthService\n\nBillingModule -->\n\nSpendingAuthService->BillingModule\n\n\n\n\n\nBranchService\n\nBranchService\n\nBranchModule -->\n\nBranchService->BranchModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nCashierService\n\nCashierService\n\nCashierModule -->\n\nCashierService->CashierModule\n\n\n\n\n\nCouponService\n\nCouponService\n\nCouponModule -->\n\nCouponService->CouponModule\n\n\n\n\n\nCustomerLocationsService\n\nCustomerLocationsService\n\nCustomerModule -->\n\nCustomerLocationsService->CustomerModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nDeliveryModule -->\n\nDeliveryService->DeliveryModule\n\n\n\nOrderModule -->\n\nDeliveryService->OrderModule\n\n\n\n\n\nAttendenceService\n\nAttendenceService\n\nEmployeeModule -->\n\nAttendenceService->EmployeeModule\n\n\n\n\n\nEmpPdrActionService\n\nEmpPdrActionService\n\nEmployeeModule -->\n\nEmpPdrActionService->EmployeeModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\nPdrService\n\nPdrService\n\nEmployeeModule -->\n\nPdrService->EmployeeModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nMailService\n\nMailService\n\nMailModule -->\n\nMailService->MailModule\n\n\n\n\n\nMaterialService\n\nMaterialService\n\nMaterialModule -->\n\nMaterialService->MaterialModule\n\n\n\n\n\nEmailService\n\nEmailService\n\nNotificationsModule -->\n\nEmailService->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nOffersService\n\nOffersService\n\nOffersModule -->\n\nOffersService->OffersModule\n\n\n\n\n\nDineInService\n\nDineInService\n\nOrderModule -->\n\nDineInService->OrderModule\n\n\n\n\n\nOnlineService\n\nOnlineService\n\nOrderModule -->\n\nOnlineService->OrderModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nTakeAwayService\n\nTakeAwayService\n\nOrderModule -->\n\nTakeAwayService->OrderModule\n\n\n\n\n\nCashService\n\nCashService\n\nPaymentModule -->\n\nCashService->PaymentModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nPaypalService\n\nPaypalService\n\nPaymentModule -->\n\nPaypalService->PaymentModule\n\n\n\nPaypalModule -->\n\nPaypalService->PaypalModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nStockGardService\n\nStockGardService\n\nStockModule -->\n\nStockGardService->StockModule\n\n\n\n\n\nStockItemLogsService\n\nStockItemLogsService\n\nStockModule -->\n\nStockItemLogsService->StockModule\n\n\n\n\n\nStockItemQuantityService\n\nStockItemQuantityService\n\nStockModule -->\n\nStockItemQuantityService->StockModule\n\n\n\n\n\nStockItemService\n\nStockItemService\n\nStockModule -->\n\nStockItemService->StockModule\n\n\n\n\n\nStockService\n\nStockService\n\nStockModule -->\n\nStockService->StockModule\n\n\n\n\n\nStockTransactionService\n\nStockTransactionService\n\nStockModule -->\n\nStockTransactionService->StockModule\n\n\n\n\n\nSupplierService\n\nSupplierService\n\nSupplierModule -->\n\nSupplierService->SupplierModule\n\n\n\n\n\nTicketService\n\nTicketService\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\nTicketUpdatesService\n\nTicketUpdatesService\n\nTicketModule -->\n\nTicketUpdatesService->TicketModule\n\n\n\n\n\nResetPasswordService\n\nResetPasswordService\n\nUsersModule -->\n\nResetPasswordService->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\nVerifyEmailService\n\nVerifyEmailService\n\nUsersModule -->\n\nVerifyEmailService->UsersModule\n\n\n\n\n\nWalletService\n\nWalletService\n\nWalletModule -->\n\nWalletService->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    40 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    49 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    126 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    34 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SendMailOption   (src/.../SendMail-Option.type.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mail/type/SendMail-Option.type.ts\n    \n    \n        \n            \n                \n                    \n                    SendMailOption\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AttendenceSchema   (src/.../attendence.model.ts)\n                        \n                        \n                            BranchSchema   (src/.../branch.model.ts)\n                        \n                        \n                            CashPaymentSchema   (src/.../Cash.payment.model.ts)\n                        \n                        \n                            CoordinatesSchema   (src/.../location.model.ts)\n                        \n                        \n                            CouponSchema   (src/.../coupon.model.ts)\n                        \n                        \n                            CustomerLocationsSchema   (src/.../customer-locations.model.ts)\n                        \n                        \n                            CustomerSchema   (src/.../customer.model.ts)\n                        \n                        \n                            DeliveryOrderSchema   (src/.../Delivery.model.ts)\n                        \n                        \n                            DeliverySchema   (src/.../delivery.model.ts)\n                        \n                        \n                            DineinOrderSchema   (src/.../DineIn.model.ts)\n                        \n                        \n                            EmployeeMonthlyPDRSchema   (src/.../emp-monthly-pdr.model.ts)\n                        \n                        \n                            EmployeePDRActionSchema   (src/.../emp-pdr-actions.model.ts)\n                        \n                        \n                            EmployeeSchema   (src/.../employee.model.ts)\n                        \n                        \n                            EmployeeSpendingAuthorizationSchema   (src/.../Emp-Spending-Auth.model.ts)\n                        \n                        \n                            EmployeeTransactionsSchema   (src/.../employee.model.ts)\n                        \n                        \n                            InvoiceSchema   (src/.../Invoice.model.ts)\n                        \n                        \n                            InvoiceSpendingAuthorizationSchema   (src/.../Invoice-Spending-Auth.model.ts)\n                        \n                        \n                            LocationSchema   (src/.../location.model.ts)\n                        \n                        \n                            OfferSchema   (src/.../offer.model.ts)\n                        \n                        \n                            OrderItemsSchema   (src/.../Order-Items.model.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.model.ts)\n                        \n                        \n                            PaymentSchema   (src/.../payment.model.ts)\n                        \n                        \n                            PayPalPaymentSchema   (src/.../PayPal.payment.model.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.model.ts)\n                        \n                        \n                            Public   (src/.../IsPuplic.decorator.ts)\n                        \n                        \n                            ResetPasswordSchema   (src/.../Reset-Password.model.ts)\n                        \n                        \n                            Role   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEYS   (src/.../roles.decorator.ts)\n                        \n                        \n                            SpendingAuthorizationSchema   (src/.../Spending-Authorization.model.ts)\n                        \n                        \n                            StockGardSchema   (src/.../Stock-Gard.model.ts)\n                        \n                        \n                            StockItemQuantitySchema   (src/.../Stock-item-quantity.model.ts)\n                        \n                        \n                            StockItemSchema   (src/.../Stock-Item.model.ts)\n                        \n                        \n                            StockItemslogsSchema   (src/.../Stock-item-logs.model.ts)\n                        \n                        \n                            StockSchema   (src/.../stock.model.ts)\n                        \n                        \n                            StockTransactionSchema   (src/.../Stock-Transaction.model.ts)\n                        \n                        \n                            SupplierSchema   (src/.../supplier.Model.ts)\n                        \n                        \n                            TakeAwayOrderSchema   (src/.../TakeAway.model.ts)\n                        \n                        \n                            TicketSchema   (src/.../ticket.model.ts)\n                        \n                        \n                            TicketUpdatesSchema   (src/.../ticket-updates.model.ts)\n                        \n                        \n                            UserSchema   (src/.../user.model.ts)\n                        \n                        \n                            VerifyUserEmailSchema   (src/.../verify-user-email.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/employee/Model/attendence.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AttendenceSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Attendence)\n                    \n                \n\n\n        \n    \n\n    src/branch/Model/branch.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BranchSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Branch)\n                    \n                \n\n\n        \n    \n\n    src/payment/Model/Cash.payment.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CashPaymentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(CashPayment)\n                    \n                \n\n\n        \n    \n\n    src/location/Model/location.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CoordinatesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Coordinates)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LocationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Location)\n                    \n                \n\n\n        \n    \n\n    src/coupon/Model/coupon.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CouponSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Coupon)\n                    \n                \n\n\n        \n    \n\n    src/customer/Model/customer-locations.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomerLocationsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(CustomerLocations)\n                    \n                \n\n\n        \n    \n\n    src/customer/Model/customer.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Customer)\n                    \n                \n\n\n        \n    \n\n    src/order/Model/Delivery.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeliveryOrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DeliveryOrder)\n                    \n                \n\n\n        \n    \n\n    src/delivery/Model/delivery.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeliverySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Delivery)\n                    \n                \n\n\n        \n    \n\n    src/order/Model/DineIn.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DineinOrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DineinOrder)\n                    \n                \n\n\n        \n    \n\n    src/employee/Model/emp-monthly-pdr.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeMonthlyPDRSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(EmployeeMonthlyPDR)\n                    \n                \n\n\n        \n    \n\n    src/employee/Model/emp-pdr-actions.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeePDRActionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(EmployeePDRAction)\n                    \n                \n\n\n        \n    \n\n    src/employee/Model/employee.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Employee)\n                    \n                \n\n\n        \n    \n\n    src/billing/Model/Spending Authorization/Emp-Spending-Auth.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeSpendingAuthorizationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(\n  EmployeeSpendingAuthorization,\n)\n                    \n                \n\n\n        \n    \n\n    src/billing/Model/employee.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EmployeeTransactionsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(EmployeeTransactions)\n                    \n                \n\n\n        \n    \n\n    src/billing/Model/Invoice.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InvoiceSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Invoice)\n                    \n                \n\n\n        \n    \n\n    src/billing/Model/Spending Authorization/Invoice-Spending-Auth.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        InvoiceSpendingAuthorizationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(\n  InvoiceSpendingAuthorization,\n)\n                    \n                \n\n\n        \n    \n\n    src/offers/Model/offer.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OfferSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Offer)\n                    \n                \n\n\n        \n    \n\n    src/order/Model/Order-Items.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderItemsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(OrderItems)\n                    \n                \n\n\n        \n    \n\n    src/order/Model/order.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n\n    src/payment/Model/payment.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Payment)\n                    \n                \n\n\n        \n    \n\n    src/payment/Model/PayPal.payment.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PayPalPaymentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(PayPalPayment)\n                    \n                \n\n\n        \n    \n\n    src/product/Model/product.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/IsPuplic.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata('isPublic', true)\n                    \n                \n\n\n        \n    \n\n    src/users/Model/Reset-Password.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ResetPasswordSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(ResetPassword)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Roles[]) => SetMetadata(ROLES_KEYS, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEYS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/billing/Model/Spending Authorization/Spending-Authorization.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SpendingAuthorizationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(\n  SpendingAuthorization,\n)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-Gard.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockGardSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockGard)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-item-quantity.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockItemQuantitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockItemQuantity)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-Item.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockItem)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-item-logs.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockItemslogsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockItemslogs)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/stock.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Stock)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-Transaction.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockTransactionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockTransaction)\n                    \n                \n\n\n        \n    \n\n    src/supplier/Model/supplier.Model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SupplierSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Supplier)\n                    \n                \n\n\n        \n    \n\n    src/order/Model/TakeAway.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TakeAwayOrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(TakeAwayOrder)\n                    \n                \n\n\n        \n    \n\n    src/ticket/Models/ticket.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TicketSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Ticket)\n                    \n                \n\n\n        \n    \n\n    src/ticket/Models/ticket-updates.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TicketUpdatesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(TicketUpdates)\n                    \n                \n\n\n        \n    \n\n    src/users/Model/user.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n    src/users/Model/verify-user-email.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        VerifyUserEmailSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(VerifyUserEmail)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
