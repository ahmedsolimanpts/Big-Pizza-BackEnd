var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/ATGuard.html",[0,1.308,1,3.981]],["body/injectables/ATGuard.html",[0,2.035,1,6.192,2,2.39,3,0.073,4,0.066,5,0.066,6,7.43,7,5.222,8,2.601,9,5.22,10,0.362,11,2.067,12,5.483,13,2.39,14,5.222,15,6.4,16,0.691,17,5.845,18,2.035,19,0.006,20,1.159,21,0.466,22,1.372,23,6.72,24,5.483,25,6.4,26,5.845,27,4.261,28,1.581,29,0.252,30,1.185,31,3.883,32,4.057,33,3.594,34,0.073,35,0.296,36,2.598,37,3.883,38,2.656,39,1.509,40,6.72,41,5.845,42,4.812,43,4.812,44,1.913,45,1.533,46,5.222,47,2.656,48,2.656,49,3.361,50,0.004,51,0.004]],["title/injectables/ATStrategy.html",[0,1.308,52,3.525]],["body/injectables/ATStrategy.html",[0,1.891,2,2.138,3,0.065,4,0.059,5,0.059,8,2.418,10,0.324,11,1.921,13,2.859,16,0.643,18,1.891,19,0.006,20,1.077,21,0.433,22,1.275,28,1.415,29,0.274,30,1.06,33,3.216,34,0.065,35,0.265,37,3.474,38,2.376,39,1.35,44,1.33,47,2.376,48,3.177,50,0.004,51,0.004,52,5.096,53,4.672,54,6.992,55,3.286,56,6.992,57,4.672,58,5.389,59,7.097,60,5.23,61,6.247,62,6.992,63,5.23,64,5.23,65,4.853,66,6.992,67,3.812,68,5.23,69,5.23,70,5.23,71,4.672,72,4.305,73,3.29,74,2.431,75,4.305,76,3.108,77,5.23,78,5.23,79,5.23,80,4.672,81,5.23,82,5.23,83,4.305,84,1.46,85,2.227,86,5.23,87,5.23,88,5.23,89,4.672,90,3.494,91,1.979]],["title/classes/AddTicketUpdateDto.html",[35,0.245,92,3.728]],["body/classes/AddTicketUpdateDto.html",[3,0.086,4,0.078,5,0.078,10,0.429,16,0.637,19,0.006,21,0.429,29,0.21,34,0.086,35,0.423,50,0.005,51,0.005,92,6.445,93,0.97,94,7.47,95,5.554,96,6.188,97,1.35,98,4.175,99,0.667,100,1.018,101,5.339,102,6.927,103,3.225,104,2.891,105,2.2]],["title/interfaces/AddTicketUpdatesInterface.html",[106,1.83,107,3.525]],["body/interfaces/AddTicketUpdatesInterface.html",[3,0.088,4,0.079,5,0.079,10,0.438,19,0.006,21,0.524,34,0.088,50,0.005,51,0.005,97,1.366,98,4.364,99,0.777,106,2.674,107,6.167,108,3.622,109,6.311,110,6.311,111,3.553]],["title/controllers/AdminController.html",[112,1.393,113,3.728]],["body/controllers/AdminController.html",[3,0.062,4,0.056,5,0.056,10,0.307,11,1.854,13,2.029,16,0.705,18,2.074,19,0.006,20,1.181,21,0.475,22,1.399,28,2.074,29,0.281,30,1.006,34,0.062,35,0.251,44,1.95,50,0.004,51,0.004,58,4.15,75,4.085,76,3,84,1.884,99,0.612,100,1.127,112,1.429,113,5.202,114,1.5,115,4.433,116,2.159,117,6.029,118,6.029,119,5.556,120,6.029,121,6.029,122,4.962,123,6.622,124,6.748,125,6.748,126,4.962,127,8.23,128,4.433,129,4.962,130,4.962,131,4.962,132,6.748,133,4.962,134,2.159,135,2.206,136,2.159,137,4.085,138,2.159,139,1.152,140,5.094,141,4.433,142,4.433,143,2.613,144,4.433,145,3.617,146,4.962,147,5.094,148,4.085,149,4.433,150,4.962,151,4.962,152,1.686,153,4.962,154,6.313,155,4.962,156,4.962,157,4.962,158,4.962,159,4.962,160,4.962,161,4.962]],["title/modules/AppModule.html",[162,1.536,163,3.728]],["body/modules/AppModule.html",[3,0.046,4,0.041,5,0.041,19,0.006,29,0.295,30,0.747,34,0.046,35,0.187,50,0.003,51,0.003,59,5.547,67,2.686,114,1.114,162,2.067,163,7.766,164,1.603,165,1.603,166,1.675,167,1.675,168,1.603,169,2.482,170,1.675,171,3.293,172,3.293,173,5.866,174,5.866,175,5.136,176,5.866,177,5.866,178,5.866,179,5.866,180,5.586,181,5.136,182,5.866,183,5.586,184,5.866,185,5.866,186,5.866,187,5.866,188,5.866,189,5.866,190,5.136,191,2.482,192,1.675,193,1.675,194,3.685,195,3.337,196,3.685,197,3.685,198,4.88,199,1.941,200,0.882,201,3.685,202,3.685,203,3.685,204,3.685,205,3.685,206,3.685,207,3.685,208,3.685,209,3.685,210,3.685,211,3.685,212,3.685,213,3.685,214,3.685,215,3.685,216,3.685,217,4.88,218,3.685,219,3.685,220,3.685,221,3.685,222,3.685,223,3.685,224,3.293,225,3.685,226,3.685,227,3.293]],["title/classes/AssignRoleDto.html",[35,0.245,123,3.525]],["body/classes/AssignRoleDto.html",[3,0.077,4,0.069,5,0.069,10,0.381,16,0.714,19,0.006,21,0.481,29,0.258,34,0.077,35,0.393,45,2.037,50,0.004,51,0.004,93,0.861,97,1.254,99,0.619,100,1.141,103,3.284,104,2.686,105,1.953,123,5.662,139,1.427,140,5.656,143,4.859,228,5.493,229,5.91,230,3.53,231,2.749,232,6.149,233,6.149,234,7.768,235,5.062,236,6.149,237,3.704,238,3.238,239,3.652,240,3.176,241,5.062]],["title/classes/Attendence.html",[35,0.245,242,3.212]],["body/classes/Attendence.html",[3,0.046,4,0.041,5,0.041,10,0.228,16,0.706,19,0.006,21,0.581,29,0.265,34,0.107,35,0.364,39,1.857,45,2.393,50,0.003,51,0.003,73,1.99,74,1.71,93,0.515,97,0.88,99,0.742,100,1.128,111,2.065,200,0.88,231,2.627,242,5.1,243,2.554,244,3.738,245,3.356,246,3.625,247,3.862,248,5.011,249,4.512,250,3.757,251,3.679,252,4.9,253,2.23,254,3.679,255,3.679,256,3.679,257,2.145,258,3.499,259,3.679,260,2.321,261,1.419,262,1.792,263,1.272,264,1.886,265,2.682,266,2.682,267,4.318,268,2.554,269,3.623,270,2.554,271,2.185,272,3.787,273,2.554,274,2.554,275,3.196,276,3.34,277,3.421,278,2.444,279,2.682,280,4.318,281,2.185,282,2.071,283,2.348,284,2.444,285,2.682,286,4.318,287,2.682,288,2.682,289,2.444,290,2.682,291,2.052,292,2.554,293,2.065,294,1.838,295,2.554,296,2.554,297,2.262,298,1.672,299,2.836,300,2.554,301,2.836,302,2.554,303,2.554,304,2.554,305,2.836,306,2.444,307,2.682]],["title/controllers/AuthController.html",[112,1.393,308,3.728]],["body/controllers/AuthController.html",[3,0.061,4,0.055,5,0.055,10,0.305,11,1.843,16,0.702,18,2.065,19,0.006,20,1.176,21,0.473,22,1.392,28,2.065,29,0.275,30,0.997,34,0.061,35,0.249,36,2.185,44,1.941,50,0.004,51,0.004,55,3.903,65,6.146,84,1.872,85,3.251,99,0.609,100,1.121,112,1.416,114,1.486,116,2.139,118,4.392,134,2.917,136,2.139,138,2.139,139,1.141,147,5.069,148,4.047,149,4.392,152,1.671,308,5.169,309,4.392,310,5.991,311,6.819,312,6.706,313,4.392,314,4.916,315,4.916,316,4.392,317,6.455,318,6.706,319,3.984,320,4.916,321,4.916,322,5.26,323,6.706,324,4.916,325,4.916,326,4.392,327,4.392,328,3.584,329,4.392,330,4.392,331,4.392,332,4.888,333,4.047,334,4.916,335,4.916,336,4.916,337,4.916,338,4.916,339,4.916,340,4.916,341,4.916]],["title/modules/AuthModule.html",[162,1.536,173,3.525]],["body/modules/AuthModule.html",[3,0.063,4,0.057,5,0.057,19,0.006,29,0.291,30,1.023,31,3.35,33,3.102,34,0.063,35,0.255,50,0.004,51,0.004,52,6.504,59,6.387,67,3.677,72,4.152,80,4.507,113,5.961,114,2.063,147,5.927,148,4.152,162,2.456,164,2.194,165,2.194,166,2.292,167,2.292,168,2.194,169,3.514,170,3.101,173,6.931,190,5.694,191,3.101,192,2.292,193,2.292,195,3.965,198,6.909,224,4.507,227,4.507,308,5.961,342,4.507,343,4.507,344,5.044,345,5.044,346,5.044,347,4.152,348,5.044,349,4.152,350,5.044,351,5.044,352,5.26,353,5.044,354,6.824,355,5.044,356,5.044,357,5.044,358,5.044,359,4.507,360,5.044,361,4.507,362,5.044,363,5.044,364,5.044]],["title/injectables/AuthService.html",[0,1.308,147,3.212]],["body/injectables/AuthService.html",[0,1.135,2,1.071,3,0.033,4,0.029,5,0.029,10,0.162,11,1.153,13,1.715,16,0.725,18,2.134,19,0.006,20,1.216,21,0.489,22,1.439,28,2.069,29,0.263,30,0.531,34,0.033,35,0.133,38,2.385,39,2.135,44,1.945,47,2.385,48,2.385,49,3.018,50,0.002,51,0.002,55,3.907,57,2.339,58,3.691,59,5.674,61,3.748,65,5.31,67,1.909,73,2.953,74,1.217,75,2.156,76,2.333,84,0.731,85,3.812,90,3.502,91,2.653,99,0.672,119,3.454,121,3.748,123,5.752,142,2.339,147,2.786,152,0.89,229,4.559,310,3.748,311,3.748,313,3.748,316,3.748,317,4.788,319,1.555,322,4.163,326,2.339,327,2.339,328,4.788,329,2.339,330,2.339,331,2.339,349,2.156,359,3.748,361,3.748,365,2.339,366,4.195,367,5.249,368,4.195,369,5.249,370,7.361,371,2.618,372,4.195,373,2.618,374,2.623,375,4.195,376,2.618,377,2.618,378,4.195,379,2.618,380,2.618,381,2.618,382,4.627,383,4.627,384,2.618,385,4.195,386,5.249,387,2.618,388,2.618,389,5.402,390,2.618,391,2.156,392,2.618,393,3.454,394,2.618,395,4.046,396,2.618,397,2.618,398,4.195,399,2.618,400,1.909,401,2.156,402,1.246,403,2.618,404,4.195,405,4.195,406,2.618,407,2.618,408,2.339,409,2.156,410,2.618,411,2.618,412,3.748,413,2.618,414,2.618,415,5.249,416,4.195,417,2.618,418,2.618,419,4.195,420,3.058,421,2.339,422,2.339,423,2.618,424,2.618,425,2.618,426,2.618,427,2.339,428,5.249,429,6.568,430,4.195,431,4.195,432,2.618,433,6.002,434,4.195,435,2.618,436,2.618,437,2.618,438,2.618,439,2.618,440,4.195,441,4.195,442,4.195,443,2.618,444,2.618,445,2.618,446,4.195,447,4.195,448,2.618]],["title/classes/Billing.html",[35,0.245,449,3.525]],["body/classes/Billing.html",[3,0.095,4,0.086,5,0.086,19,0.005,34,0.095,35,0.387,50,0.005,51,0.005,93,1.071,449,6.462,450,6.831]],["title/controllers/BillingController.html",[112,1.393,451,3.728]],["body/controllers/BillingController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,449,3.456,451,5.042,452,4.236,453,1.613,454,2.564,455,3.269,456,2.185,457,2.262,458,4.236,459,6.079,460,4.742,461,4.742,462,2.497,463,2.973,464,4.742,465,1.584,466,2.973,467,4.742,468,1.64,469,6.666,470,3.041,471,4.742,472,2.204,473,2.155,474,5.198,475,4.236,476,1.829,477,5.385,478,1.795,479,4.742,480,4.742,481,2.256,482,4.742,483,4.742,484,3.026,485,4.742,486,2.369,487,4.742,488,2.155,489,4.742]],["title/modules/BillingModule.html",[162,1.536,174,3.525]],["body/modules/BillingModule.html",[3,0.082,4,0.074,5,0.074,19,0.006,29,0.266,30,1.331,34,0.082,35,0.332,50,0.005,51,0.005,114,2.446,162,2.786,164,2.856,165,2.856,166,2.983,167,2.983,168,2.856,169,3.986,170,2.983,174,6.981,191,3.677,192,2.983,193,2.983,451,6.761,474,6.647,475,5.865,490,5.865,491,5.865,492,6.565,493,6.565]],["title/injectables/BillingService.html",[0,1.308,474,3.357]],["body/injectables/BillingService.html",[0,1.849,2,2.067,3,0.063,4,0.057,5,0.057,10,0.313,11,1.878,16,0.796,18,2.244,19,0.006,20,1.278,21,0.514,22,1.513,28,2.469,29,0.235,30,1.025,34,0.063,35,0.256,44,2.203,50,0.004,51,0.004,84,2.492,91,1.914,99,0.691,244,4.982,282,2.711,449,6.315,453,1.686,454,2.634,455,3.416,456,2.283,457,2.364,458,6.106,459,6.013,462,3.6,465,2.283,468,2.364,469,6.654,474,4.744,476,1.95,477,5.627,478,1.914,494,4.517,495,5.056,496,5.056,497,5.056,498,5.056,499,5.056,500,3.509,501,3.109,502,3.509]],["title/classes/Branch.html",[35,0.245,263,1.672]],["body/classes/Branch.html",[3,0.066,4,0.059,5,0.059,10,0.326,16,0.807,19,0.006,20,1.216,21,0.588,29,0.256,34,0.087,35,0.266,39,1.357,45,2.302,50,0.004,51,0.004,73,1.917,74,2.443,93,0.736,97,1.132,99,0.672,100,1.29,200,1.257,231,2.426,245,3.908,250,3.418,253,3.445,257,2.758,258,3.051,260,2.121,261,2.027,262,2.304,263,2.426,271,3.122,275,2.336,276,2.286,277,2.501,293,3.545,503,4.326,504,6.5,505,6.5,506,6.5,507,5.255,508,5.255,509,2.562,510,5.255,511,5.255,512,5.255,513,4.051,514,4.695]],["title/controllers/BranchController.html",[112,1.393,515,3.728]],["body/controllers/BranchController.html",[3,0.058,4,0.053,5,0.053,10,0.29,11,1.781,16,0.775,18,2.172,19,0.006,20,1.237,21,0.497,22,1.465,28,2.281,29,0.265,30,0.949,34,0.058,35,0.237,36,2.08,44,2.144,50,0.004,51,0.004,84,2.434,99,0.738,100,1.239,112,1.348,114,1.415,116,2.035,134,2.82,135,2.08,136,2.82,138,2.035,139,1.086,152,1.59,263,1.618,332,4.725,333,3.852,453,1.599,454,2.55,455,3.239,456,2.165,457,2.242,462,2.464,463,2.946,465,1.563,466,2.946,468,1.618,470,3.013,472,2.175,473,2.126,476,1.805,478,1.771,481,2.227,484,2.986,486,2.338,488,2.126,515,4.996,516,4.181,517,4.181,518,6.054,519,4.181,520,4.679,521,4.679,522,4.679,523,4.679,524,6.645,525,4.679,526,4.573,527,4.181,528,5.336,529,4.679,530,4.679,531,4.679,532,4.679,533,4.679,534,4.679,535,4.679]],["title/modules/BranchModule.html",[162,1.536,175,3.086]],["body/modules/BranchModule.html",[3,0.075,4,0.067,5,0.067,19,0.006,20,0.923,29,0.278,30,1.215,34,0.075,35,0.303,50,0.004,51,0.004,114,2.31,162,2.672,164,2.607,165,2.607,166,2.723,167,2.723,168,2.607,169,3.824,170,3.824,175,6.07,191,3.473,192,2.723,193,2.723,195,3.073,199,3.156,200,1.434,260,1.812,263,2.073,294,2.995,513,5.891,515,6.486,526,6.098,527,5.354,536,5.354,537,5.354,538,5.354,539,5.993,540,5.993,541,5.354,542,3.246]],["title/injectables/BranchService.html",[0,1.308,526,2.974]],["body/injectables/BranchService.html",[0,1.611,2,1.697,3,0.052,4,0.047,5,0.047,10,0.257,11,1.637,13,2.436,16,0.771,18,2.181,19,0.006,20,1.242,21,0.499,22,1.471,28,2.181,29,0.255,30,0.842,34,0.052,35,0.21,38,3.663,39,1.072,44,2.05,47,3.663,48,4.152,49,4.636,50,0.003,51,0.003,55,3.899,76,1.845,84,1.945,85,3.243,90,4.028,91,1.571,99,0.718,152,1.411,200,0.993,262,1.363,263,2.06,374,3.805,453,1.469,454,2.418,456,1.99,457,2.06,465,1.99,468,2.06,476,1.601,478,1.571,517,5.322,518,5.595,524,6.445,526,3.663,528,4.904,541,3.709,543,3.709,544,2.537,545,4.151,546,3.623,547,4.151,548,5.957,549,4.151,550,4.151,551,2.537,552,4.151,553,4.151,554,4.151,555,2.248,556,4.151,557,4.151,558,4.151,559,4.151,560,4.151,561,4.151,562,4.151]],["title/classes/Cart.html",[35,0.245,563,3.525]],["body/classes/Cart.html",[3,0.095,4,0.086,5,0.086,19,0.005,34,0.095,35,0.387,50,0.005,51,0.005,93,1.071,563,6.462,564,6.831]],["title/controllers/CartController.html",[112,1.393,565,3.728]],["body/controllers/CartController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,453,1.613,454,2.564,455,3.269,456,2.185,457,2.262,462,2.497,463,2.973,465,1.584,466,2.973,468,1.64,470,3.041,472,2.204,473,2.155,476,1.829,478,1.795,481,2.256,484,3.026,486,2.369,488,2.155,563,3.456,565,5.042,566,4.236,567,4.236,568,6.079,569,4.742,570,4.742,571,4.742,572,4.742,573,6.666,574,4.742,575,5.198,576,4.236,577,5.385,578,4.742,579,4.742,580,4.742,581,4.742,582,4.742,583,4.742,584,4.742]],["title/modules/CartModule.html",[162,1.536,176,3.525]],["body/modules/CartModule.html",[3,0.082,4,0.074,5,0.074,19,0.006,29,0.266,30,1.331,34,0.082,35,0.332,50,0.005,51,0.005,114,2.446,162,2.786,164,2.856,165,2.856,166,2.983,167,2.983,168,2.856,169,3.986,170,2.983,176,6.981,191,3.677,192,2.983,193,2.983,565,6.761,575,6.647,576,5.865,585,5.865,586,5.865,587,6.565,588,6.565]],["title/injectables/CartService.html",[0,1.308,575,3.357]],["body/injectables/CartService.html",[0,1.849,2,2.067,3,0.063,4,0.057,5,0.057,10,0.313,11,1.878,16,0.796,18,2.244,19,0.006,20,1.278,21,0.514,22,1.513,28,2.469,29,0.235,30,1.025,34,0.063,35,0.256,44,2.203,50,0.004,51,0.004,84,2.492,91,1.914,99,0.691,244,4.982,282,2.711,453,1.686,454,2.634,455,3.416,456,2.283,457,2.364,462,3.6,465,2.283,468,2.364,476,1.95,478,1.914,500,3.509,501,3.109,502,3.509,563,6.315,567,6.106,568,6.013,573,6.654,575,4.744,577,5.627,589,4.517,590,5.056,591,5.056,592,5.056,593,5.056,594,5.056]],["title/classes/ChangeUserStatusDTO.html",[35,0.245,595,3.728]],["body/classes/ChangeUserStatusDTO.html",[3,0.085,4,0.076,5,0.076,10,0.421,16,0.625,19,0.006,21,0.421,29,0.251,34,0.085,35,0.418,50,0.005,51,0.005,73,3.015,93,0.952,97,1.334,100,0.998,103,3.187,105,2.158,238,3.578,400,6.492,402,3.233,595,6.37,596,7.383,597,6.07,598,4.966,599,6.794,600,6.794,601,6.07,602,6.794]],["title/classes/Coordinates.html",[35,0.245,252,3.086]],["body/classes/Coordinates.html",[3,0.072,4,0.065,5,0.065,10,0.355,16,0.683,19,0.006,20,0.884,21,0.511,29,0.174,34,0.103,35,0.376,39,1.919,45,2.286,50,0.004,51,0.004,93,0.803,97,1.199,98,2.666,99,0.769,100,1.092,200,1.372,231,2.283,245,2.393,250,3.749,252,5.259,260,2.246,261,2.212,282,2.511,509,3.622,603,4.421,604,6.007,605,6.007,606,5.735,607,5.735,608,5.727,609,4.722,610,4.181,611,4.181,612,4.181,613,4.181,614,4.181,615,4.181,616,4.181,617,4.181,618,4.181,619,4.722]],["title/classes/Coupon.html",[35,0.245,620,2.357]],["body/classes/Coupon.html",[3,0.064,4,0.058,5,0.058,10,0.32,16,0.826,19,0.006,20,1.206,21,0.586,29,0.238,34,0.086,35,0.261,39,1.334,45,2.504,50,0.004,51,0.004,93,0.724,97,1.119,99,0.667,100,1.32,200,1.236,231,2.682,250,3.474,253,3.201,257,2.726,258,3.017,260,2.096,261,1.993,262,2.278,263,1.787,264,2.649,276,2.247,282,2.41,293,3.531,294,2.582,509,3.816,620,3.38,621,4.253,622,4.995,623,4.65,624,3.48,625,5.166,626,5.166,627,4.813,628,5.166,629,5.166,630,5.166,631,5.166,632,3.177,633,4.616]],["title/controllers/CouponController.html",[112,1.393,634,3.728]],["body/controllers/CouponController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,453,1.613,454,2.564,456,2.185,457,2.262,463,2.973,465,1.584,466,2.973,468,1.64,470,3.041,472,2.204,473,2.155,476,1.829,478,1.795,481,2.256,486,2.369,488,2.155,544,2.786,551,2.02,620,2.311,634,5.042,635,4.236,636,4.236,637,6.079,638,4.742,639,4.742,640,4.742,641,4.742,642,6.666,643,4.742,644,5.198,645,4.236,646,5.385,647,4.742,648,4.742,649,4.742,650,4.742,651,2.727,652,4.742,653,4.742,654,4.742]],["title/modules/CouponModule.html",[162,1.536,177,3.525]],["body/modules/CouponModule.html",[3,0.077,4,0.07,5,0.07,19,0.006,20,0.953,29,0.28,30,1.254,34,0.077,35,0.313,50,0.004,51,0.004,114,2.357,162,2.712,164,2.69,165,2.69,166,2.81,167,2.81,168,2.69,169,3.88,170,2.81,177,6.878,191,3.543,192,2.81,193,2.81,195,3.171,199,3.257,200,1.48,260,1.87,542,3.349,620,3.014,632,4.794,634,6.581,644,6.549,645,5.525,655,5.525,656,5.525,657,6.184,658,6.184,659,5.525,660,4.292]],["title/injectables/CouponService.html",[0,1.308,644,3.357]],["body/injectables/CouponService.html",[0,1.295,2,1.266,3,0.039,4,0.035,5,0.035,10,0.192,11,1.316,13,1.958,16,0.765,18,2.193,19,0.006,20,1.353,21,0.502,22,1.479,28,2.193,29,0.228,30,0.628,34,0.039,35,0.157,38,3.684,39,1.839,44,2.062,47,3.684,48,4.166,49,4.329,50,0.003,51,0.003,55,3.999,76,1.377,84,1.634,85,3.453,90,4.052,91,2.215,99,0.755,152,1.053,200,0.741,262,1.017,293,1.812,374,4.052,453,1.181,454,2.092,455,2.393,456,1.6,457,1.656,465,1.6,468,1.656,476,1.195,478,1.172,544,2.039,546,3.134,551,2.039,555,1.677,620,2.334,622,1.976,624,2.128,636,4.278,637,4.942,642,5.91,644,3.323,646,3.942,659,2.767,661,2.767,662,4.788,663,4.788,664,4.788,665,3.097,666,3.097,667,4.788,668,3.097,669,3.097,670,4.788,671,3.097,672,3.097,673,4.788,674,3.097,675,6.586,676,4.788,677,4.374,678,3.097,679,3.097,680,3.097,681,3.097,682,3.097,683,3.097,684,3.097,685,3.097,686,3.097,687,3.097,688,3.097,689,6.725,690,6.586,691,4.788,692,4.278,693,2.944,694,4.278,695,3.18,696,2.593]],["title/classes/CreateAdminUserDto.html",[35,0.245,382,3.728]],["body/classes/CreateAdminUserDto.html",[3,0.068,4,0.061,5,0.061,10,0.338,16,0.786,19,0.006,21,0.53,29,0.244,34,0.068,35,0.364,45,2.11,50,0.004,51,0.004,93,0.764,97,1.161,99,0.728,100,1.182,103,3.298,104,2.487,105,1.733,139,1.267,143,4.807,230,3.656,231,2.804,237,3.72,239,3.241,240,3.289,298,2.48,319,4.779,382,5.543,697,7.94,698,4.492,699,5.343,700,5.583,701,6.425,702,4.206,703,4.875,704,5.242,705,4.492,706,4.875,707,3.978,708,7.192,709,4.875,710,7.192,711,3.787,712,4.875,713,4.992,714,4.492,715,4.492]],["title/classes/CreateAttendActionDTO.html",[35,0.245,716,3.728]],["body/classes/CreateAttendActionDTO.html",[3,0.075,4,0.068,5,0.068,10,0.374,16,0.817,19,0.006,21,0.551,29,0.233,34,0.075,35,0.389,50,0.004,51,0.004,93,0.847,97,1.24,99,0.748,100,1.129,103,3.258,105,1.92,238,3.183,244,4.858,245,3.525,247,5.018,249,5.863,265,4.406,266,4.406,716,5.923,717,7.074,718,7.555,719,5.4,720,6.954,721,6.044,722,6.044,723,6.044,724,6.044,725,6.044,726,6.044,727,4.903,728,6.044]],["title/classes/CreateBaseOrderDto.html",[35,0.245,729,3.212]],["body/classes/CreateBaseOrderDto.html",[3,0.056,4,0.051,5,0.051,10,0.28,16,0.831,19,0.006,21,0.583,22,1.756,29,0.253,34,0.056,35,0.37,45,1.66,50,0.004,51,0.004,93,0.633,97,1.021,99,0.721,100,1.328,104,2.525,105,1.436,238,2.381,293,2.395,402,2.151,620,3.559,727,4.659,729,4.203,730,8.206,731,3.295,732,3.649,733,3.474,734,4.199,735,4.072,736,4.072,737,3.559,738,4.199,739,4.878,740,4.521,741,4.521,742,5.254,743,3.484,744,3.484,745,4.521,746,3.003,747,4.521,748,3.484,749,4.521,750,3.954,751,4.878,752,4.521,753,4.698,754,3.484,755,3.484,756,4.521,757,3.484,758,4.521,759,3.722,760,4.072,761,3.891,762,3.937,763,4.199,764,3.529,765,3.722,766,4.521,767,2.448,768,3.722,769,3.484,770,2.521,771,4.613,772,3.722]],["title/classes/CreateBillingDto.html",[35,0.245,459,3.357]],["body/classes/CreateBillingDto.html",[3,0.095,4,0.086,5,0.086,19,0.005,34,0.095,35,0.386,50,0.005,51,0.005,93,1.067,459,6.14,773,6.807,774,6.272]],["title/classes/CreateBranchDto.html",[35,0.245,518,3.357]],["body/classes/CreateBranchDto.html",[3,0.06,4,0.054,5,0.054,10,0.296,16,0.781,19,0.006,20,1.158,21,0.567,22,1.199,29,0.246,34,0.06,35,0.38,50,0.004,51,0.004,93,0.669,97,1.061,99,0.646,100,1.248,103,2.899,104,2.599,105,1.516,139,1.108,230,3.68,231,2.891,237,3.818,240,3.472,245,3.136,293,3.065,504,6.187,505,6.187,506,6.187,518,4.561,761,4.621,762,3.599,763,3.779,767,2.585,775,7.841,776,3.93,777,4.5,778,3.679,779,3.93,780,4.265,781,4.79,782,5.871,783,4.265,784,4.79,785,4.265,786,5.62,787,5.62,788,5.902,789,5.066,790,4.265,791,4.265,792,2.745,793,2.745,794,4.735]],["title/classes/CreateCartDto.html",[35,0.245,568,3.357]],["body/classes/CreateCartDto.html",[3,0.095,4,0.086,5,0.086,19,0.005,34,0.095,35,0.386,50,0.005,51,0.005,93,1.067,568,6.14,795,6.807,796,6.272]],["title/classes/CreateCordinatesDto.html",[35,0.245,797,3.525]],["body/classes/CreateCordinatesDto.html",[3,0.057,4,0.051,5,0.051,10,0.282,16,0.584,19,0.006,20,1.501,21,0.517,29,0.222,34,0.079,35,0.401,50,0.004,51,0.004,93,0.637,97,1.026,98,3.406,99,0.734,100,0.934,103,3.665,104,3.222,105,1.445,139,1.056,230,2.889,237,4.165,240,3.81,282,2.285,604,5.34,605,5.34,610,4.633,611,4.633,612,4.633,613,4.633,614,4.633,615,4.633,616,4.633,617,4.633,762,2.825,763,3.655,767,2.464,777,2.333,784,3.316,792,4.213,797,6.083,798,3.507,799,7.086,800,4.55,801,4.55,802,4.55,803,4.55,804,5.233,805,5.233,806,4.065,807,4.065,808,3.745,809,3.745,810,3.745,811,3.745,812,3.745,813,3.745,814,3.507,815,3.745,816,3.745,817,3.745,818,3.745,819,3.745,820,3.507,821,2.903,822,3.745]],["title/classes/CreateCouponDto.html",[35,0.245,637,3.357]],["body/classes/CreateCouponDto.html",[3,0.06,4,0.054,5,0.054,10,0.296,16,0.807,19,0.006,20,1.159,21,0.544,29,0.2,34,0.06,35,0.333,45,1.726,50,0.004,51,0.004,93,0.67,97,1.062,99,0.646,100,1.29,103,3.278,104,2.276,105,1.519,139,1.11,230,3.991,231,2.945,237,3.914,240,3.591,282,2.335,293,3.068,622,4.801,623,4.47,624,3.345,637,4.568,760,3.67,761,4.627,762,3.345,782,4.274,786,5.625,787,5.625,788,4.798,789,5.073,794,4.52,823,8.038,824,3.938,825,5.881,826,4.784,827,4.274,828,7.241,829,4.274,830,5.881,831,4.274,832,5.418,833,5.418,834,4.274,835,4.274,836,4.274,837,4.075]],["title/classes/CreateCustomerDto.html",[35,0.245,838,3.357]],["body/classes/CreateCustomerDto.html",[3,0.095,4,0.086,5,0.086,19,0.005,34,0.095,35,0.386,50,0.005,51,0.005,93,1.067,838,6.14,839,6.807,840,6.272]],["title/classes/CreateDelivereyOrderDto.html",[35,0.245,841,3.728]],["body/classes/CreateDelivereyOrderDto.html",[3,0.06,4,0.054,5,0.054,8,2.28,10,0.297,16,0.855,19,0.006,21,0.589,22,1.772,29,0.246,34,0.06,35,0.381,50,0.004,51,0.004,93,0.672,97,1.064,99,0.647,100,1.367,103,2.542,105,1.523,293,1.815,620,3.213,729,6.315,731,3.495,732,3.294,733,3.137,734,3.791,735,3.676,736,3.676,737,3.213,738,3.791,739,5.081,742,3.185,743,3.696,744,3.696,746,3.185,748,3.696,750,2.597,751,3.696,753,2.848,754,3.696,755,3.696,757,3.696,763,3.791,767,2.597,841,5.081,842,5.89,843,6.556,844,5.389,845,4.795,846,4.795,847,7.549,848,3.947,849,3.947,850,3.947,851,3.947,852,3.947,853,3.947,854,3.947,855,3.947,856,3.495,857,3.495,858,3.947,859,3.696]],["title/classes/CreateDeliveryDto.html",[35,0.245,844,3.212]],["body/classes/CreateDeliveryDto.html",[3,0.06,4,0.054,5,0.054,10,0.299,16,0.81,19,0.006,21,0.577,29,0.274,34,0.06,35,0.383,50,0.004,51,0.004,93,0.676,97,1.069,99,0.528,100,1.294,103,2.916,104,2.29,105,1.533,139,1.121,230,3.697,237,3.709,238,2.542,240,3.327,402,2.297,598,4.216,762,3.789,767,2.614,777,4.371,792,2.776,793,2.776,814,3.721,844,5.404,858,7.424,860,3.974,861,6.754,862,6.754,863,6.754,864,6.754,865,6.754,866,6.698,867,4.827,868,4.827,869,6.698,870,4.827,871,4.827,872,6.623,873,4.827,874,4.827,875,4.827,876,4.827,877,6.698,878,4.827,879,4.827,880,4.313,881,4.313,882,4.313,883,4.313,884,4.313,885,4.827,886,4.827,887,4.827]],["title/classes/CreateDineInOrderDto.html",[35,0.245,888,3.728]],["body/classes/CreateDineInOrderDto.html",[3,0.062,4,0.056,5,0.056,8,2.334,10,0.307,16,0.862,19,0.006,21,0.581,22,1.781,29,0.205,34,0.062,35,0.342,50,0.004,51,0.004,93,0.695,97,1.089,99,0.656,100,1.377,105,1.576,282,1.944,293,1.878,620,3.289,729,6.354,731,3.617,732,3.372,733,3.211,734,3.881,735,3.763,736,3.763,737,3.289,738,3.881,739,5.202,742,3.296,743,3.825,744,3.825,746,3.296,748,3.825,750,2.687,751,3.825,753,2.948,754,3.825,755,3.825,757,3.825,762,3,837,3.655,847,7.61,848,4.085,849,4.085,850,4.085,851,4.085,852,4.085,853,4.085,854,4.085,855,4.085,856,3.617,857,3.617,888,5.202,889,6.029,890,5.202,891,5.323,892,4.962,893,4.962]],["title/classes/CreateEmployeeDto.html",[35,0.245,894,3.728]],["body/classes/CreateEmployeeDto.html",[3,0.039,4,0.035,5,0.035,10,0.193,16,0.797,19,0.006,21,0.564,22,1.644,29,0.229,34,0.039,35,0.298,45,1.263,50,0.003,51,0.003,73,2.606,84,2.107,93,0.437,97,0.777,98,4.143,99,0.679,100,1.274,103,3.035,104,2.286,105,0.991,139,0.724,231,2.617,237,3.828,238,1.643,240,3.753,247,2.86,257,1.227,267,5.657,268,2.165,269,4.745,270,2.165,282,1.905,291,4.834,292,4.081,293,2.858,295,4.081,296,4.081,297,3.616,300,4.959,302,4.081,303,4.959,304,4.081,717,6.783,727,3.752,760,3.687,761,3.616,762,3.356,763,2.769,767,1.69,771,2.274,777,3.871,779,2.568,792,1.794,793,1.794,794,4.532,837,2.608,856,3.51,894,3.711,895,2.568,896,6.383,897,6.428,898,2.787,899,4.302,900,4.302,901,2.787,902,3.12,903,4.302,904,3.12,905,3.12,906,4.302,907,7.031,908,2.787,909,3.12,910,4.815,911,4.302,912,3.12,913,3.12,914,3.12,915,3.12,916,4.302,917,4.302,918,3.12,919,3.12,920,3.711,921,2.787,922,3.12,923,3.12,924,4.302,925,4.302,926,4.302,927,3.964,928,2.787,929,3.12,930,5.907,931,3.12,932,3.12,933,3.51,934,3.12,935,3.12,936,2.787,937,2.787,938,3.198,939,2.787,940,2.787,941,2.405,942,2.787,943,2.787,944,2.787]],["title/classes/CreateEmployeePDRDTO.html",[35,0.245,945,3.728]],["body/classes/CreateEmployeePDRDTO.html",[3,0.081,4,0.073,5,0.073,10,0.403,16,0.74,19,0.006,21,0.498,22,1.468,29,0.197,34,0.081,35,0.407,50,0.005,51,0.005,93,0.911,97,1.299,99,0.642,100,1.182,103,3.103,104,2.782,105,2.066,282,2.318,287,6.368,288,6.368,291,4.871,717,6.734,746,4.32,762,3.576,837,4.358,945,6.202,946,5.811,947,6.505,948,5.355,949,6.505]],["title/classes/CreateLocationDto.html",[35,0.245,777,2.48]],["body/classes/CreateLocationDto.html",[3,0.045,4,0.041,5,0.041,10,0.225,16,0.814,19,0.006,20,1.513,21,0.57,29,0.196,34,0.067,35,0.361,50,0.003,51,0.003,93,0.508,97,0.872,98,3.549,99,0.76,100,1.301,103,3.51,104,3.063,105,1.153,139,0.842,230,3.87,237,4.001,240,3.621,282,1.556,604,2.645,605,2.645,610,5.206,611,5.206,612,5.206,613,5.206,614,5.206,615,5.206,616,5.206,617,5.206,762,2.4,763,3.105,767,1.965,777,2.769,778,2.797,784,3.936,792,5.168,797,5.834,798,2.797,799,4.824,804,4.445,805,4.445,806,3.242,807,3.242,808,4.445,809,4.445,810,4.445,811,4.445,812,4.445,813,4.445,814,4.162,815,4.445,816,4.445,817,4.445,818,4.445,819,4.445,820,4.162,821,3.446,822,4.445,897,2.797,950,3.629,951,3.242,952,3.629,953,3.242,954,3.242,955,3.629,956,3.629,957,3.242,958,3.629,959,3.629,960,3.629,961,3.242,962,3.629,963,3.242,964,3.629,965,3.242,966,3.629,967,3.242,968,3.629,969,3.242]],["title/classes/CreateMaterialDto.html",[35,0.245,970,3.357]],["body/classes/CreateMaterialDto.html",[3,0.095,4,0.086,5,0.086,19,0.005,34,0.095,35,0.386,50,0.005,51,0.005,93,1.067,970,6.14,971,6.807,972,6.272]],["title/classes/CreateOfferDto.html",[35,0.245,973,3.357]],["body/classes/CreateOfferDto.html",[3,0.056,4,0.05,5,0.05,10,0.277,16,0.812,19,0.006,20,1.118,21,0.547,29,0.191,34,0.056,35,0.318,45,2.316,50,0.004,51,0.004,93,0.627,97,1.014,99,0.686,100,1.298,103,3.477,104,2.723,105,1.421,139,1.038,230,4.014,231,2.954,235,3.683,237,3.922,240,3.611,257,2.47,282,2.268,293,2.98,622,4.633,624,3.227,727,4.008,733,3.455,760,4.048,761,4.464,786,5.465,787,6.257,833,3.683,837,3.932,973,4.36,974,8.054,975,3.683,976,5.039,977,4.473,978,4.473,979,6.282,980,4.473,981,4.473,982,4.473,983,5.612,984,3.503,985,4.473,986,5.024,987,4.473,988,4.473,989,4.473,990,4.473,991,5.612,992,5.612]],["title/interfaces/CreateOrderInterface.html",[106,1.83,993,3.212]],["body/interfaces/CreateOrderInterface.html",[3,0.055,4,0.049,5,0.049,10,0.271,19,0.006,21,0.597,22,1.808,29,0.25,34,0.077,50,0.004,51,0.004,97,0.999,99,0.794,106,2.343,108,2.247,111,2.953,246,2.443,263,2.698,282,2.663,293,2.717,402,2.085,620,3.803,623,4.634,624,1.948,732,3.898,733,3.712,734,4.486,735,4.35,736,4.35,737,3.803,738,4.486,750,4.225,770,3.452,993,4.112,994,3.607,995,3.607,996,5.182,997,5.182,998,4.797,999,5.182,1000,6.013,1001,4.486,1002,5.687,1003,2.603,1004,3.094,1005,2.694,1006,3.452,1007,2.694,1008,2.519,1009,3.377,1010,3.915,1011,1.723,1012,2.796,1013,2.796,1014,2.796]],["title/classes/CreateOrderItemsDto.html",[35,0.245,742,3.212]],["body/classes/CreateOrderItemsDto.html",[3,0.063,4,0.057,5,0.057,10,0.315,16,0.822,19,0.006,21,0.554,22,1.696,29,0.236,34,0.063,35,0.347,50,0.004,51,0.004,93,0.712,97,1.107,99,0.713,100,1.314,101,5.285,103,3.205,104,2.874,105,1.613,238,2.676,246,4.328,282,1.975,624,3.45,742,4.554,746,3.374,760,4.328,762,3.694,764,5.097,765,7.524,837,3.714,948,4.182,1004,3.879,1005,3.124,1006,4.328,1007,3.124,1008,2.921,1011,3.051,1012,4.953,1013,4.953,1014,4.953,1015,8.166,1016,4.539,1017,5.08,1018,5.08,1019,5.08,1020,5.08,1021,5.08,1022,5.08,1023,5.08,1024,5.08,1025,5.08,1026,4.182]],["title/interfaces/CreateOrderItemsInterface.html",[106,1.83,1000,3.728]],["body/interfaces/CreateOrderItemsInterface.html",[3,0.065,4,0.059,5,0.059,10,0.322,19,0.006,21,0.558,22,1.705,29,0.265,34,0.087,50,0.004,51,0.004,97,1.125,99,0.79,106,2.638,108,2.668,111,1.97,246,4.68,263,1.8,282,2.594,293,1.97,402,2.476,620,2.537,623,3.091,624,3.73,732,2.601,733,2.476,734,2.993,735,2.902,736,2.902,737,2.537,738,2.993,750,3.774,770,3.886,993,3.457,994,4.284,995,4.284,996,3.457,997,3.457,998,3.2,999,3.457,1000,6.056,1001,4.007,1002,5.08,1003,3.091,1004,4.193,1005,3.2,1006,4.68,1007,3.2,1008,2.993,1009,4.011,1010,4.649,1011,3.299,1012,5.355,1013,5.355,1014,5.355]],["title/classes/CreatePaymentDto.html",[35,0.245,753,2.873]],["body/classes/CreatePaymentDto.html",[3,0.07,4,0.063,5,0.063,10,0.346,16,0.823,19,0.006,21,0.555,29,0.247,34,0.07,35,0.37,50,0.004,51,0.004,93,0.782,97,1.179,99,0.688,100,1.316,101,4.305,103,3.543,104,2.814,105,1.774,111,3.08,238,2.942,281,4.833,282,2.104,402,2.658,727,4.66,753,4.338,768,7.562,837,3.955,948,4.598,1027,4.598,1028,6.698,1029,6.698,1030,6.698,1031,5.585,1032,5.585,1033,5.585,1034,5.585,1035,6.272,1036,5.585,1037,5.585,1038,6.272,1039,5.585,1040,5.585,1041,6.012,1042,4.598,1043,5.585,1044,5.585]],["title/interfaces/CreatePaymentInterface.html",[106,1.83,1002,3.525]],["body/interfaces/CreatePaymentInterface.html",[3,0.078,4,0.07,5,0.07,10,0.388,19,0.006,21,0.575,29,0.238,34,0.078,50,0.005,51,0.005,97,1.268,99,0.755,106,2.368,108,3.208,111,3.407,281,5.347,282,2.473,402,2.977,1002,5.725,1009,4.823,1028,7.411,1029,7.411,1030,7.411,1035,6.939,1038,6.939,1041,6.465,1042,5.151,1045,5.59]],["title/classes/CreateProductDto.html",[35,0.245,1046,3.357]],["body/classes/CreateProductDto.html",[3,0.047,4,0.042,5,0.042,10,0.232,16,0.821,19,0.006,20,1.013,21,0.553,29,0.246,34,0.047,35,0.28,45,2.255,50,0.003,51,0.003,84,1.544,93,0.525,97,0.893,99,0.646,100,1.312,103,3.231,104,2.51,105,1.191,139,0.87,230,4.057,231,2.971,237,3.938,238,1.975,240,3.65,263,2.677,282,2.091,711,3.84,760,3.085,762,3.44,794,4.047,833,3.087,837,3.561,976,4.563,986,4.631,1004,2.765,1006,4.316,1008,2.156,1026,3.087,1046,3.84,1047,8.089,1048,3.087,1049,5.412,1050,4.195,1051,5.412,1052,5.412,1053,5.412,1054,5.412,1055,5.067,1056,3.75,1057,4.033,1058,3.75,1059,3.75,1060,5.372,1061,3.75,1062,3.351,1063,3.75,1064,3.75,1065,5.533,1066,3.75,1067,3.75,1068,3.53,1069,3.351,1070,3.75,1071,3.351,1072,3.75,1073,5.966,1074,3.75,1075,3.75,1076,5.642,1077,3.75,1078,3.75,1079,4.943,1080,4.792,1081,2.734,1082,2.891,1083,3.087,1084,3.351,1085,3.351,1086,3.351]],["title/classes/CreateStockDto.html",[35,0.245,1087,3.357]],["body/classes/CreateStockDto.html",[3,0.086,4,0.078,5,0.078,10,0.429,16,0.637,19,0.006,21,0.429,29,0.21,34,0.086,35,0.423,50,0.005,51,0.005,93,0.97,97,1.35,99,0.667,100,1.018,103,3.225,104,2.891,105,2.2,263,3.106,727,5.335,1087,5.803,1088,7.47,1089,5.702,1090,6.927,1091,6.927]],["title/classes/CreateStockItemDto.html",[35,0.245,1092,3.525]],["body/classes/CreateStockItemDto.html",[3,0.094,4,0.085,5,0.085,19,0.005,34,0.094,35,0.383,50,0.005,51,0.005,93,1.06,1092,6.422,1093,5.514,1094,6.228,1095,3.517,1096,6.228]],["title/classes/CreateStockItemLogsDto.html",[35,0.245,1097,3.525]],["body/classes/CreateStockItemLogsDto.html",[3,0.094,4,0.084,5,0.084,19,0.005,34,0.094,35,0.38,50,0.005,51,0.005,93,1.052,1011,3.449,1093,5.476,1095,3.492,1097,6.395,1098,6.184,1099,6.184]],["title/classes/CreateSuperUserDto.html",[35,0.245,383,3.728]],["body/classes/CreateSuperUserDto.html",[3,0.068,4,0.061,5,0.061,10,0.338,16,0.786,19,0.006,21,0.53,29,0.244,34,0.068,35,0.364,45,2.11,50,0.004,51,0.004,93,0.764,97,1.161,99,0.728,100,1.182,103,3.298,104,2.487,105,1.733,139,1.267,143,4.807,230,3.656,231,2.804,237,3.72,239,3.241,240,3.289,298,2.48,319,4.779,383,5.543,698,4.492,699,5.343,700,5.583,702,4.206,703,4.875,704,5.242,705,4.492,706,4.875,707,3.978,709,4.875,711,3.787,712,4.875,713,4.992,714,4.492,715,4.492,1100,7.94,1101,5.921,1102,7.192,1103,5.921]],["title/classes/CreateSupplierDto.html",[35,0.245,1104,3.357]],["body/classes/CreateSupplierDto.html",[3,0.064,4,0.058,5,0.058,10,0.317,16,0.716,19,0.006,20,1.34,21,0.584,22,1.257,29,0.253,34,0.064,35,0.394,45,1.342,50,0.004,51,0.004,93,0.717,97,1.112,98,3.621,99,0.694,100,1.145,103,3.004,104,2.694,105,1.625,139,1.188,237,3.389,240,3.408,245,3.63,247,4.093,257,2.012,297,4.79,759,4.212,760,3.842,762,3.063,763,3.962,767,2.771,771,3.73,772,4.212,777,4.46,792,2.942,793,2.942,897,5.311,920,5.311,941,3.944,1104,4.782,1105,7.446,1106,4.212,1107,4.212,1108,5.718,1109,4.571,1110,5.117,1111,6.156,1112,5.117,1113,5.117,1114,6.156,1115,5.117,1116,4.571,1117,5.117,1118,5.672,1119,4.571,1120,4.571]],["title/classes/CreateTakeAwayOrderDto.html",[35,0.245,1121,3.728]],["body/classes/CreateTakeAwayOrderDto.html",[3,0.066,4,0.059,5,0.059,8,2.426,10,0.326,16,0.861,19,0.006,21,0.58,22,1.795,29,0.159,34,0.066,35,0.266,50,0.004,51,0.004,93,0.736,97,1.132,99,0.672,100,1.376,293,1.989,620,3.419,729,6.417,731,3.831,732,3.505,733,3.338,734,4.034,735,3.912,736,3.912,737,3.419,738,4.034,739,5.407,742,3.491,743,4.051,744,4.051,746,3.491,748,4.051,750,2.846,751,4.051,753,3.122,754,4.051,755,4.051,757,4.051,847,7.711,848,4.326,849,4.326,850,4.326,851,4.326,852,4.326,853,4.326,854,4.326,855,4.326,856,3.831,857,3.831,1121,5.407,1122,4.695,1123,4.051]],["title/classes/CreateTicketDto.html",[35,0.245,1124,3.525]],["body/classes/CreateTicketDto.html",[3,0.072,4,0.065,5,0.065,10,0.357,16,0.803,19,0.006,21,0.541,29,0.265,34,0.072,35,0.377,50,0.004,51,0.004,93,0.808,97,1.203,98,3.841,99,0.595,100,1.283,103,3.489,104,2.578,105,1.831,238,3.037,598,4.607,1050,5.272,1124,5.435,1125,8.082,1126,4.747,1127,6.802,1128,6.369,1129,5.766,1130,5.766,1131,5.766,1132,5.766,1133,6.369,1134,5.766,1135,5.766,1136,5.735,1137,5.766,1138,5.766,1139,6.023,1140,4.747,1141,3.68,1142,4.747,1143,5.766,1144,5.766,1145,5.766]],["title/classes/CreateTransactionDto.html",[35,0.245,1146,3.525]],["body/classes/CreateTransactionDto.html",[3,0.095,4,0.086,5,0.086,19,0.005,34,0.095,35,0.386,50,0.005,51,0.005,93,1.067,1146,6.448,1147,6.807,1148,5.873]],["title/classes/CreateUserDto.html",[35,0.245,322,2.873]],["body/classes/CreateUserDto.html",[3,0.068,4,0.061,5,0.061,10,0.338,16,0.786,19,0.006,21,0.53,29,0.244,34,0.068,35,0.364,45,2.11,50,0.004,51,0.004,93,0.764,97,1.161,99,0.728,100,1.182,103,3.298,104,2.487,105,1.733,139,1.267,143,4.807,230,3.656,231,2.804,237,3.72,239,3.241,240,3.289,298,2.48,319,4.779,322,4.272,699,5.343,700,5.583,702,4.206,704,5.242,705,4.492,707,3.978,711,3.787,713,4.992,714,4.492,715,4.492,1101,5.921,1103,5.921,1149,7.94,1150,4.875,1151,5.457,1152,5.457,1153,6.425,1154,5.457,1155,5.457]],["title/classes/CreateUserDto-1.html",[35,0.204,322,2.39,1068,2.568]],["body/classes/CreateUserDto-1.html",[3,0.068,4,0.062,5,0.062,10,0.34,16,0.788,19,0.006,21,0.531,29,0.245,34,0.068,35,0.365,45,2.115,50,0.004,51,0.004,93,0.768,97,1.165,99,0.729,100,1.259,103,3.305,104,2.789,105,1.742,139,1.273,143,4.814,230,3.665,231,2.808,235,5.941,237,3.727,238,2.889,239,3.258,240,3.298,241,5.941,319,4.791,322,4.287,699,5.357,700,5.598,704,5.26,713,5.009,1101,5.941,1103,5.941,1156,7.953,1157,4.515,1158,5.485,1159,5.485,1160,5.485,1161,5.485,1162,5.485]],["title/classes/Customer.html",[35,0.245,732,2.417]],["body/classes/Customer.html",[3,0.071,4,0.064,5,0.064,10,0.354,16,0.801,19,0.006,20,1.268,21,0.559,29,0.225,34,0.092,35,0.29,39,1.477,45,2.424,50,0.004,51,0.004,93,0.801,97,1.197,99,0.737,100,1.28,200,1.369,231,2.676,245,3.927,247,4.889,250,3.499,253,2.339,257,2.916,260,2.242,261,2.206,271,3.398,283,5.252,298,3.37,509,3.615,732,3.706,1163,4.709,1164,5.72,1165,5.72,1166,5.72,1167,5.72,1168,4.709,1169,5.11]],["title/controllers/CustomerController.html",[112,1.393,1170,3.728]],["body/controllers/CustomerController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,453,1.613,454,2.564,455,3.269,456,2.185,457,2.262,462,2.497,463,2.973,465,1.584,466,2.973,468,1.64,470,3.041,472,2.204,473,2.155,476,1.829,478,1.795,481,2.256,484,3.026,486,2.369,488,2.155,732,2.369,838,6.079,1170,5.042,1171,4.236,1172,4.236,1173,4.742,1174,4.742,1175,4.742,1176,4.742,1177,6.666,1178,4.742,1179,5.198,1180,4.236,1181,5.385,1182,4.742,1183,4.742,1184,4.742,1185,4.742,1186,4.742,1187,4.742,1188,4.742]],["title/modules/CustomerModule.html",[162,1.536,178,3.525]],["body/modules/CustomerModule.html",[3,0.082,4,0.074,5,0.074,19,0.006,29,0.266,30,1.331,34,0.082,35,0.332,50,0.005,51,0.005,114,2.446,162,2.786,164,2.856,165,2.856,166,2.983,167,2.983,168,2.856,169,3.986,170,2.983,178,6.981,191,3.677,192,2.983,193,2.983,1170,6.761,1179,6.647,1180,5.865,1189,5.865,1190,5.865,1191,6.565,1192,6.565]],["title/injectables/CustomerService.html",[0,1.308,1179,3.357]],["body/injectables/CustomerService.html",[0,1.849,2,2.067,3,0.063,4,0.057,5,0.057,10,0.313,11,1.878,16,0.796,18,2.244,19,0.006,20,1.278,21,0.514,22,1.513,28,2.469,29,0.235,30,1.025,34,0.063,35,0.256,44,2.203,50,0.004,51,0.004,84,2.492,91,1.914,99,0.691,244,4.982,282,2.711,453,1.686,454,2.634,455,3.416,456,2.283,457,2.364,462,3.6,465,2.283,468,2.364,476,1.95,478,1.914,500,3.509,501,3.109,502,3.509,732,4.329,838,6.013,1172,6.106,1177,6.654,1179,4.744,1181,5.627,1193,4.517,1194,5.056,1195,5.056,1196,5.056,1197,5.056,1198,5.056]],["title/classes/DelivereyOrder.html",[35,0.245,1199,2.974]],["body/classes/DelivereyOrder.html",[3,0.06,4,0.054,5,0.054,10,0.297,16,0.808,19,0.006,21,0.589,29,0.273,34,0.082,35,0.243,39,1.238,45,2.44,50,0.004,51,0.004,73,1.749,74,2.229,93,0.672,97,1.064,99,0.526,100,1.291,200,1.147,231,2.493,245,3.882,250,3.471,253,1.961,257,2.962,258,2.868,260,1.993,261,1.849,262,2.165,271,2.848,275,2.131,276,2.086,277,2.282,298,2.996,402,2.282,509,3.954,598,4.201,861,6.731,862,6.731,863,6.731,864,6.731,865,6.731,866,6.202,869,6.202,877,6.202,880,4.284,881,4.284,882,4.284,883,4.284,884,4.284,1199,4.053,1200,3.947,1201,4.795,1202,4.795,1203,4.795,1204,4.795,1205,4.795,1206,4.795,1207,4.795,1208,3.696,1209,4.284]],["title/classes/DelivereyOrderType.html",[35,0.245,1210,2.974]],["body/classes/DelivereyOrderType.html",[3,0.033,4,0.03,5,0.03,8,1.842,10,0.166,16,0.246,19,0.006,21,0.516,29,0.264,34,0.099,35,0.336,39,2.322,44,1.086,45,1.948,50,0.002,51,0.002,55,1.117,73,0.977,74,1.245,85,2.269,91,1.616,93,0.375,97,0.689,99,0.664,100,0.393,111,1.013,200,0.641,231,1.868,246,1.493,250,3.586,253,1.095,258,3.355,260,2.14,261,1.033,262,1.75,263,1.842,264,1.373,275,1.19,276,3.355,277,2.032,282,2.039,293,2.016,294,1.338,298,2.421,402,1.274,546,2.893,620,2.597,623,1.591,624,1.19,632,2.626,660,1.858,693,4.084,695,1.778,696,1.45,732,2.134,733,1.274,734,1.54,735,1.493,736,1.493,737,2.597,738,1.54,750,2.313,764,3.39,770,2.381,821,2.725,891,1.858,938,1.778,984,2.381,986,3.399,996,1.778,997,1.778,998,2.626,999,1.778,1001,2.456,1003,1.591,1004,2.134,1005,1.646,1006,2.381,1007,1.646,1008,1.54,1011,1.053,1012,1.709,1013,1.709,1014,1.709,1068,1.709,1199,4.084,1210,2.626,1211,1.778,1212,3.538,1213,2.678,1214,1.952,1215,1.952,1216,1.952,1217,2.626,1218,1.952,1219,1.952,1220,3.538,1221,1.778,1222,1.952,1223,1.952,1224,1.952,1225,1.952,1226,1.858,1227,1.952,1228,1.952,1229,1.858,1230,1.709,1231,1.858,1232,1.709,1233,1.858,1234,1.646,1235,1.709,1236,1.858,1237,1.646,1238,1.858,1239,1.952,1240,1.709,1241,1.858,1242,1.952,1243,2.964,1244,1.952,1245,3.113,1246,1.952,1247,3.113,1248,1.952,1249,3.113,1250,1.952,1251,1.952,1252,3.113,1253,1.952,1254,1.952,1255,1.952,1256,1.952,1257,1.952,1258,1.952,1259,1.952,1260,1.952,1261,1.952,1262,1.952,1263,6.353,1264,3.113,1265,4.431,1266,3.113,1267,2.964,1268,1.952,1269,1.952,1270,1.858,1271,1.952,1272,1.952,1273,1.952,1274,1.952,1275,3.113,1276,1.952,1277,3.113,1278,3.113,1279,3.113,1280,1.858,1281,1.952,1282,1.952,1283,1.952,1284,1.952,1285,1.952,1286,1.952,1287,3.113,1288,1.952,1289,1.952,1290,3.113,1291,1.952]],["title/controllers/DeliveryController.html",[112,1.393,1292,3.728]],["body/controllers/DeliveryController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,453,1.613,454,2.564,455,3.269,456,2.185,457,2.262,462,2.497,463,2.973,465,1.584,466,2.973,468,1.64,470,3.041,472,2.204,473,2.155,476,1.829,478,1.795,481,2.256,484,3.026,486,2.369,488,2.155,844,5.817,859,5.042,1212,3.149,1292,5.042,1293,4.236,1294,4.236,1295,4.742,1296,4.742,1297,4.742,1298,4.742,1299,6.666,1300,4.742,1301,5.198,1302,4.236,1303,4.742,1304,4.742,1305,4.742,1306,4.742,1307,4.742,1308,4.742,1309,4.742]],["title/modules/DeliveryModule.html",[162,1.536,179,3.525]],["body/modules/DeliveryModule.html",[3,0.077,4,0.069,5,0.069,19,0.006,20,0.947,29,0.28,30,1.246,34,0.077,35,0.311,50,0.004,51,0.004,114,2.348,162,2.704,164,2.675,165,2.675,166,2.794,167,2.794,168,2.675,169,3.87,170,2.794,179,6.868,191,3.53,192,2.794,193,2.794,195,3.153,199,3.238,200,1.471,260,1.859,542,3.33,1199,3.781,1208,5.987,1292,6.563,1301,6.539,1302,5.493,1310,5.493,1311,5.493,1312,6.149,1313,6.149,1314,6.149,1315,6.149]],["title/injectables/DeliveryService.html",[0,1.308,1301,3.357]],["body/injectables/DeliveryService.html",[0,1.849,2,2.067,3,0.063,4,0.057,5,0.057,10,0.313,11,1.878,16,0.796,18,2.244,19,0.006,20,1.278,21,0.514,22,1.513,28,2.469,29,0.235,30,1.025,34,0.063,35,0.256,44,2.203,50,0.004,51,0.004,84,2.492,91,1.914,99,0.691,244,4.982,282,2.711,453,1.686,454,2.634,455,3.416,456,2.283,457,2.364,462,3.6,465,2.283,468,2.364,476,1.95,478,1.914,500,3.509,501,3.109,502,3.509,844,5.755,859,5.268,1212,5.755,1294,6.106,1299,6.654,1301,4.744,1316,4.517,1317,5.056,1318,5.056,1319,5.056,1320,5.056,1321,5.056]],["title/classes/DineinOrder.html",[35,0.245,1237,2.974]],["body/classes/DineinOrder.html",[3,0.033,4,0.03,5,0.03,8,1.827,10,0.164,16,0.389,19,0.006,21,0.523,29,0.264,34,0.099,35,0.334,39,2.316,44,1.075,45,1.938,50,0.002,51,0.002,55,1.103,73,0.965,74,1.229,85,2.25,91,1.6,93,0.37,97,0.683,99,0.673,100,0.621,111,1.001,200,0.633,231,1.855,246,1.475,250,3.593,258,3.34,260,2.128,261,1.02,262,1.735,263,1.827,264,1.356,275,1.175,276,3.34,277,2.012,282,2.129,293,2,294,1.321,298,2.401,402,1.258,546,2.872,620,2.575,623,1.571,624,1.175,632,2.6,660,1.835,693,4.059,695,1.756,696,1.432,732,2.113,733,1.258,734,1.521,735,1.475,736,1.475,737,2.575,738,1.521,750,2.29,764,3.366,770,2.358,821,2.698,891,3.667,938,1.756,984,2.358,986,3.371,996,1.756,997,1.756,998,2.6,999,1.756,1001,2.431,1003,1.571,1004,2.113,1005,1.626,1006,2.358,1007,1.626,1008,1.521,1011,1.04,1012,1.687,1013,1.687,1014,1.687,1068,1.687,1199,3.249,1210,1.626,1211,1.756,1212,1.756,1214,1.928,1215,1.928,1216,1.928,1217,2.6,1218,1.928,1219,1.928,1220,3.509,1221,1.756,1222,1.928,1223,1.928,1224,1.928,1225,1.928,1226,1.835,1227,1.928,1228,1.928,1229,1.835,1230,1.687,1231,1.835,1232,1.687,1233,1.835,1234,1.626,1235,1.687,1236,1.835,1237,2.6,1238,2.935,1239,3.851,1240,1.687,1241,1.835,1242,1.928,1243,2.935,1244,1.928,1245,3.082,1246,1.928,1247,3.082,1248,1.928,1249,3.082,1250,1.928,1251,1.928,1252,3.082,1253,1.928,1254,1.928,1255,1.928,1256,1.928,1257,1.928,1258,1.928,1259,1.928,1260,1.928,1261,1.928,1262,1.928,1263,6.334,1264,3.082,1265,4.4,1266,3.082,1267,2.935,1268,1.928,1269,1.928,1270,1.835,1271,1.928,1272,1.928,1273,1.928,1274,1.928,1275,3.082,1276,1.928,1277,3.082,1278,3.082,1279,3.082,1280,1.835,1281,1.928,1282,1.928,1283,1.928,1284,1.928,1285,1.928,1286,1.928,1287,3.082,1288,1.928,1289,1.928,1290,3.082,1291,1.928,1322,1.928,1323,2.644,1324,2.644]],["title/classes/Employee.html",[35,0.245,291,2.697]],["body/classes/Employee.html",[3,0.039,4,0.035,5,0.035,10,0.194,16,0.829,19,0.006,21,0.595,29,0.253,34,0.101,35,0.335,39,1.71,45,2.408,50,0.003,51,0.003,73,2.416,74,1.455,93,0.438,97,0.779,99,0.726,100,1.325,111,1.827,200,0.749,231,2.565,242,5.232,243,2.172,244,1.799,245,3.154,246,1.745,247,1.859,248,2.412,249,3.35,250,3.708,252,3.759,253,3.091,257,3.198,258,3.427,260,2.163,261,1.207,262,1.585,263,1.082,264,1.604,265,2.281,266,2.281,267,5.021,268,2.172,269,3.913,270,2.172,271,1.859,272,3.981,273,2.172,274,2.172,275,2.943,276,3.112,277,3.151,278,2.078,279,2.281,280,4.398,281,1.859,282,2.178,283,1.997,284,2.078,285,2.281,286,4.398,287,2.281,288,2.281,289,2.078,290,2.281,291,2.691,292,4.089,293,2.506,294,1.564,295,4.089,296,4.089,297,3.622,298,1.422,299,2.412,300,4.089,301,4.541,302,4.089,303,4.089,304,4.089,305,4.541,306,2.078,307,2.281,509,2.871,1322,2.281,1325,3.129,1326,3.129,1327,3.129,1328,3.129,1329,3.129,1330,3.129,1331,3.129,1332,3.129,1333,3.129,1334,3.129,1335,3.129,1336,3.129,1337,3.129,1338,3.129]],["title/controllers/EmployeeController.html",[112,1.393,1339,3.728]],["body/controllers/EmployeeController.html",[3,0.033,4,0.03,5,0.03,10,0.164,11,1.165,16,0.777,18,2.246,19,0.006,20,1.279,21,0.514,22,1.514,28,2.286,29,0.252,30,0.538,34,0.033,35,0.134,36,1.18,39,1.095,44,2.149,50,0.002,51,0.002,84,2.359,99,0.777,100,1.242,111,1.605,112,0.765,114,0.802,116,1.155,134,2.877,135,1.18,136,2.304,138,1.155,139,0.616,152,0.902,272,2.789,273,1.842,274,1.842,281,2.519,283,2.706,291,2.365,453,1.046,454,1.921,456,1.417,457,1.832,463,1.927,465,0.887,466,1.927,468,0.918,470,1.971,472,1.234,473,1.206,476,2.043,478,1.005,481,1.263,488,1.206,716,4.663,718,2.185,720,3.491,781,4.82,894,5.435,945,4.663,1339,3.269,1340,2.371,1341,4.241,1342,5.296,1343,5.296,1344,5.296,1345,3.789,1346,5.296,1347,5.296,1348,5.296,1349,2.654,1350,6.733,1351,6.256,1352,4.241,1353,2.654,1354,6.615,1355,2.654,1356,5.705,1357,4.241,1358,2.654,1359,2.654,1360,4.241,1361,2.654,1362,2.654,1363,4.241,1364,2.654,1365,2.654,1366,2.654,1367,2.654,1368,2.371,1369,2.654,1370,2.654,1371,2.654,1372,6.049,1373,4.241,1374,2.654,1375,7.401,1376,2.654,1377,6.049,1378,4.241,1379,2.654,1380,2.654,1381,4.241,1382,2.654,1383,5.296,1384,5.926,1385,2.654,1386,3.518,1387,2.185,1388,4.241,1389,2.654,1390,1.935,1391,2.654,1392,2.185,1393,4.082,1394,2.654,1395,2.371,1396,2.654,1397,2.654,1398,2.654,1399,2.654,1400,2.654,1401,2.654,1402,2.654,1403,4.36,1404,2.654,1405,2.654,1406,2.654,1407,2.654,1408,4.409,1409,2.706,1410,4.241,1411,4.241,1412,2.654,1413,4.241,1414,2.654,1415,4.241,1416,2.654,1417,2.654,1418,4.241,1419,2.654,1420,2.654,1421,2.654,1422,2.654,1423,2.654]],["title/modules/EmployeeModule.html",[162,1.536,180,3.357]],["body/modules/EmployeeModule.html",[3,0.067,4,0.06,5,0.06,19,0.006,20,1.309,29,0.276,30,1.09,34,0.067,35,0.272,50,0.004,51,0.004,114,2.152,162,2.536,164,2.338,165,2.338,166,2.442,167,2.442,168,2.338,169,3.628,170,3.628,180,6.612,181,5.799,191,3.235,192,2.442,193,2.442,195,3.651,199,2.831,200,1.286,242,3.57,260,2.57,278,4.729,280,3.57,284,4.729,286,3.57,289,4.729,291,2.997,306,4.729,542,2.911,1339,6.154,1386,6.484,1387,4.424,1424,4.802,1425,5.374,1426,4.802,1427,4.802,1428,5.374,1429,5.374,1430,5.374,1431,4.424,1432,5.374,1433,5.374,1434,5.374,1435,5.374]],["title/classes/EmployeePDR.html",[35,0.245,286,3.212]],["body/classes/EmployeePDR.html",[3,0.048,4,0.043,5,0.043,10,0.236,16,0.61,19,0.006,21,0.575,29,0.267,34,0.108,35,0.37,39,1.889,45,2.434,50,0.003,51,0.003,73,2.042,74,1.771,93,0.534,97,0.904,99,0.74,100,0.975,111,2.768,200,0.912,231,2.654,242,4.858,243,2.645,244,2.191,245,3.051,246,2.125,247,2.263,248,2.937,249,3.885,250,3.754,252,4.234,253,1.558,257,2.201,258,3.543,260,2.355,261,1.47,262,1.839,263,1.318,264,1.954,265,2.778,266,2.778,267,4.407,268,2.645,269,3.718,270,2.645,271,2.263,272,3.852,273,2.645,274,2.645,275,3.251,276,3.389,277,3.48,278,2.531,279,2.778,280,4.407,281,2.263,282,2.244,283,2.431,284,2.531,285,2.778,286,4.858,287,4.837,288,4.837,289,2.531,290,2.778,291,2.125,292,2.645,293,2.119,294,1.904,295,2.645,296,2.645,297,2.343,298,1.732,299,2.937,300,2.645,301,2.937,302,2.645,303,2.645,304,2.645,305,2.937,306,2.531,307,2.778,509,1.857,1436,3.81,1437,3.81,1438,3.81]],["title/classes/EmployeeTransactionDto.html",[35,0.245,1356,3.728]],["body/classes/EmployeeTransactionDto.html",[3,0.078,4,0.071,5,0.071,10,0.389,16,0.723,19,0.006,21,0.487,29,0.239,34,0.078,35,0.398,50,0.005,51,0.005,93,0.879,97,1.27,99,0.627,100,1.156,103,3.035,104,2.721,105,1.993,139,1.457,230,3.575,237,3.739,240,3.217,281,5.106,282,2.267,283,5.485,762,3.497,837,4.261,1148,4.837,1356,6.065,1439,7.679,1440,6.275,1441,6.275,1442,7.868,1443,6.275,1444,6.275,1445,6.275,1446,6.275]],["title/interfaces/EmployeeTransactionInterface.html",[106,1.83,1393,3.728]],["body/interfaces/EmployeeTransactionInterface.html",[3,0.079,4,0.072,5,0.072,10,0.395,19,0.006,21,0.578,29,0.193,34,0.079,50,0.005,51,0.005,97,1.282,99,0.784,106,2.41,108,3.266,111,3.429,272,5.133,273,4.42,274,4.42,281,5.381,282,2.493,283,5.781,720,7.458,1393,6.121,1447,5.69,1448,5.243]],["title/classes/EmployeeTransactions.html",[35,0.245,280,3.212]],["body/classes/EmployeeTransactions.html",[3,0.046,4,0.042,5,0.042,10,0.231,16,0.665,19,0.006,21,0.578,29,0.266,34,0.107,35,0.366,39,1.868,45,2.464,50,0.003,51,0.003,73,2.008,74,1.731,93,0.522,97,0.888,99,0.737,100,1.063,111,2.738,200,0.891,231,2.692,242,4.804,243,2.585,244,2.141,245,3.018,246,2.077,247,2.212,248,2.87,249,3.82,250,3.746,252,4.178,253,1.523,257,2.164,258,3.514,260,2.333,261,1.436,262,1.808,263,1.288,264,1.91,265,2.715,266,2.715,267,4.349,268,2.585,269,3.656,270,2.585,271,2.212,272,4.402,273,2.585,274,2.585,275,3.215,276,3.357,277,3.442,278,2.474,279,2.715,280,4.804,281,3.889,282,2.223,283,4.178,284,2.474,285,2.715,286,4.349,287,2.715,288,2.715,289,2.474,290,2.715,291,2.077,292,2.585,293,2.083,294,1.861,295,2.585,296,2.585,297,2.29,298,1.692,299,2.87,300,2.585,301,2.87,302,2.585,303,2.585,304,2.585,305,2.87,306,2.474,307,2.715,509,2.683,1449,3.724,1450,3.724,1451,3.724,1452,3.724]],["title/classes/IsEmployeeGuard.html",[35,0.245,1453,3.728]],["body/classes/IsEmployeeGuard.html",[3,0.069,4,0.062,5,0.062,8,2.508,9,5.034,10,0.342,11,1.993,12,5.901,13,2.966,15,6.676,16,0.667,18,1.962,19,0.006,20,1.117,21,0.449,22,1.323,24,4.029,25,6.265,27,5.287,28,1.495,29,0.271,30,1.121,31,3.671,32,3.836,33,3.399,34,0.069,35,0.28,37,3.671,38,2.512,39,1.427,44,1.844,47,2.512,48,2.512,49,3.179,50,0.004,51,0.004,65,5.034,73,2.016,76,3.224,93,0.774,794,3.082,1057,5.287,1386,5.709,1387,4.55,1453,5.591,1454,4.938,1455,4.938,1456,8.095,1457,5.528,1458,5.528,1459,8.095,1460,4.938,1461,4.938,1462,5.528]],["title/classes/IsWorkingInBranchGuard.html",[35,0.245,1463,3.981]],["body/classes/IsWorkingInBranchGuard.html",[3,0.068,4,0.062,5,0.062,8,2.491,9,5,10,0.339,11,1.979,12,5.251,13,2.946,14,4.888,15,6.24,16,0.662,18,1.949,19,0.006,20,1.11,21,0.446,22,1.314,23,6.436,24,5.251,25,6.24,27,3.988,28,1.48,29,0.27,30,1.109,31,3.634,32,3.797,33,3.364,34,0.068,35,0.277,37,3.634,38,2.486,39,2.08,44,1.832,47,2.486,48,2.486,49,3.146,50,0.004,51,0.004,76,3.202,93,0.766,263,2.491,781,3.988,794,3.051,933,5.871,1350,5.251,1351,3.988,1386,5.686,1390,3.988,1408,3.988,1463,5.931,1464,7.196,1465,4.888,1466,8.055,1467,5.471,1468,5.471,1469,4.888,1470,5.471,1471,5.471,1472,5.471]],["title/injectables/JWTGuard.html",[0,1.308,352,3.728]],["body/injectables/JWTGuard.html",[0,2.071,2,2.457,3,0.075,4,0.068,5,0.068,8,2.648,9,5.314,10,0.372,11,2.104,12,5.581,13,2.457,15,6.828,16,0.704,18,2.071,19,0.006,20,1.179,21,0.474,22,1.397,24,5.581,25,6.466,27,4.381,28,1.626,29,0.256,30,1.218,31,3.992,32,4.171,33,3.696,34,0.075,35,0.304,36,2.671,37,3.992,39,1.552,42,4.948,43,4.948,44,1.947,45,1.576,46,5.369,50,0.004,51,0.004,152,2.043,352,5.901,1455,5.369,1473,5.369,1474,6.01,1475,6.01,1476,7.656,1477,6.01]],["title/classes/Location.html",[35,0.245,245,2.018]],["body/classes/Location.html",[3,0.059,4,0.053,5,0.053,10,0.293,16,0.863,19,0.006,20,1.152,21,0.588,29,0.144,34,0.093,35,0.331,39,1.687,45,1.713,50,0.004,51,0.004,93,0.663,97,1.054,98,3.477,99,0.787,100,1.38,200,1.132,231,2.007,245,2.725,250,3.78,252,4.773,253,1.935,260,1.975,261,1.825,282,1.882,603,3.647,604,3.449,605,3.449,608,5.766,609,3.895,610,5.453,611,5.453,612,5.453,613,5.453,614,5.453,615,5.453,616,5.453,617,5.453,618,3.449,619,3.895,1478,4.731,1479,4.731,1480,4.731,1481,4.731,1482,4.731,1483,4.731,1484,4.731,1485,4.731,1486,4.731,1487,4.731]],["title/controllers/LocationController.html",[112,1.393,1488,3.728]],["body/controllers/LocationController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,245,1.978,453,1.613,454,2.564,455,3.269,456,2.185,457,2.262,462,2.497,463,2.973,465,1.584,466,2.973,468,1.64,470,3.041,472,2.204,473,2.155,476,1.829,478,1.795,481,2.256,484,3.026,486,2.369,488,2.155,777,4.491,793,3.762,1488,5.042,1489,4.236,1490,4.236,1491,4.742,1492,4.742,1493,4.742,1494,4.742,1495,6.666,1496,4.742,1497,4.975,1498,4.236,1499,4.742,1500,4.742,1501,4.742,1502,4.742,1503,4.742,1504,4.742,1505,4.742]],["title/modules/LocationModule.html",[162,1.536,181,3.086]],["body/modules/LocationModule.html",[3,0.074,4,0.067,5,0.067,19,0.006,20,0.918,29,0.277,30,1.208,34,0.074,35,0.302,50,0.004,51,0.004,114,2.302,162,2.665,164,2.592,165,2.592,166,2.708,167,2.708,168,2.592,169,3.814,170,3.814,181,6.062,191,3.461,192,2.708,193,2.708,195,3.056,199,3.139,200,1.426,245,2.487,260,1.802,542,3.228,618,5.551,1488,6.469,1497,6.582,1498,5.325,1506,5.325,1507,5.325,1508,5.325,1509,5.96,1510,5.96,1511,5.96,1512,5.96]],["title/injectables/LocationService.html",[0,1.308,1497,3.212]],["body/injectables/LocationService.html",[0,1.849,2,2.067,3,0.063,4,0.057,5,0.057,10,0.313,11,1.878,16,0.796,18,2.244,19,0.006,20,1.278,21,0.514,22,1.513,28,2.469,29,0.235,30,1.025,34,0.063,35,0.256,44,2.203,50,0.004,51,0.004,84,2.492,91,1.914,99,0.691,244,4.982,245,3.615,282,2.711,453,1.686,454,2.634,455,3.416,456,2.283,457,2.364,462,3.6,465,2.283,468,2.364,476,1.95,478,1.914,500,3.509,501,3.109,502,3.509,777,4.442,793,3.93,1490,6.106,1495,6.654,1497,4.54,1513,4.517,1514,5.056,1515,5.056,1516,5.056,1517,5.056,1518,5.056]],["title/classes/LogoutDto.html",[35,0.245,1519,3.981]],["body/classes/LogoutDto.html",[3,0.084,4,0.075,5,0.075,10,0.416,16,0.617,19,0.006,21,0.416,29,0.249,34,0.084,35,0.415,50,0.005,51,0.005,84,2.289,93,0.94,97,1.324,99,0.654,100,0.986,103,3.163,104,2.836,105,2.131,139,1.557,229,6.147,230,3.049,231,2.52,237,3.567,240,2.743,794,3.741,1519,6.751,1520,5.994,1521,6.709,1522,6.709]],["title/classes/Material.html",[35,0.245,1523,3.525]],["body/classes/Material.html",[3,0.082,4,0.074,5,0.074,10,0.405,16,0.742,19,0.006,20,1.349,21,0.543,29,0.245,34,0.082,35,0.331,50,0.005,51,0.005,93,0.917,97,1.304,99,0.644,100,1.187,200,1.566,250,3.462,253,2.676,260,2.442,1523,5.887,1524,5.847,1525,8.76,1526,8.395,1527,6.544,1528,6.544,1529,6.544,1530,6.544]],["title/controllers/MaterialController.html",[112,1.393,1531,3.728]],["body/controllers/MaterialController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,453,1.613,454,2.564,455,3.269,456,2.185,457,2.262,462,2.497,463,2.973,465,1.584,466,2.973,468,1.64,470,3.041,472,2.204,473,2.155,476,1.829,478,1.795,481,2.256,484,3.026,486,2.369,488,2.155,970,6.079,1523,3.456,1531,5.042,1532,4.236,1533,4.236,1534,4.742,1535,4.742,1536,4.742,1537,4.742,1538,6.666,1539,4.742,1540,5.198,1541,4.236,1542,5.385,1543,4.742,1544,4.742,1545,4.742,1546,4.742,1547,4.742,1548,4.742,1549,4.742]],["title/modules/MaterialModule.html",[162,1.536,182,3.525]],["body/modules/MaterialModule.html",[3,0.082,4,0.074,5,0.074,19,0.006,29,0.266,30,1.331,34,0.082,35,0.332,50,0.005,51,0.005,114,2.446,162,2.786,164,2.856,165,2.856,166,2.983,167,2.983,168,2.856,169,3.986,170,2.983,182,6.981,191,3.677,192,2.983,193,2.983,1531,6.761,1540,6.647,1541,5.865,1550,5.865,1551,5.865,1552,6.565,1553,6.565]],["title/injectables/MaterialService.html",[0,1.308,1540,3.357]],["body/injectables/MaterialService.html",[0,1.849,2,2.067,3,0.063,4,0.057,5,0.057,10,0.313,11,1.878,16,0.796,18,2.244,19,0.006,20,1.278,21,0.514,22,1.513,28,2.469,29,0.235,30,1.025,34,0.063,35,0.256,44,2.203,50,0.004,51,0.004,84,2.492,91,1.914,99,0.691,244,4.982,282,2.711,453,1.686,454,2.634,455,3.416,456,2.283,457,2.364,462,3.6,465,2.283,468,2.364,476,1.95,478,1.914,500,3.509,501,3.109,502,3.509,970,6.013,1523,6.315,1533,6.106,1538,6.654,1540,4.744,1542,5.627,1554,4.517,1555,5.056,1556,5.056,1557,5.056,1558,5.056,1559,5.056]],["title/classes/Offer.html",[35,0.245,984,2.697]],["body/classes/Offer.html",[3,0.06,4,0.054,5,0.054,10,0.298,16,0.829,19,0.006,20,1.163,21,0.594,29,0.247,34,0.082,35,0.244,39,1.244,45,2.516,50,0.004,51,0.004,93,0.675,97,1.067,99,0.702,100,1.324,200,1.152,231,2.704,250,3.475,253,3.088,257,3.195,258,3.536,260,1.999,261,1.858,262,2.172,263,1.666,264,2.47,276,2.876,282,2.342,293,3.475,294,2.407,509,3.962,622,4.818,624,3.356,627,4.59,733,3.593,976,5.241,984,3.687,1004,2.407,1005,2.962,1217,2.962,1221,3.199,1560,3.965,1561,4.817,1562,4.817,1563,4.817,1564,4.817,1565,4.817,1566,4.817,1567,4.817,1568,4.303]],["title/controllers/OffersController.html",[112,1.393,1569,3.728]],["body/controllers/OffersController.html",[3,0.056,4,0.05,5,0.05,10,0.277,11,1.726,16,0.791,18,2.243,19,0.006,20,1.278,21,0.514,22,1.513,28,2.326,29,0.252,30,0.907,34,0.056,35,0.226,36,1.988,44,2.187,50,0.004,51,0.004,84,2.4,99,0.756,100,1.264,112,1.289,114,1.352,116,1.946,134,2.733,135,1.988,136,3.158,138,1.946,139,1.038,152,1.52,453,1.549,454,2.5,456,2.099,457,2.172,463,2.855,465,1.494,466,2.855,468,1.547,470,2.92,472,2.079,473,2.033,476,1.725,478,1.693,481,2.129,486,2.235,488,2.033,544,2.676,551,1.905,651,2.572,735,2.494,973,5.969,1569,4.842,1570,3.997,1571,6.282,1572,3.997,1573,4.473,1574,4.473,1575,4.473,1576,6.282,1577,4.473,1578,6.282,1579,4.473,1580,4.473,1581,6.571,1582,4.473,1583,4.473,1584,5.039,1585,3.997,1586,5.171,1587,4.473,1588,4.473,1589,4.473,1590,4.473,1591,4.473,1592,4.473,1593,4.473,1594,4.473,1595,4.473]],["title/modules/OffersModule.html",[162,1.536,183,3.357]],["body/modules/OffersModule.html",[3,0.075,4,0.067,5,0.067,19,0.006,20,0.923,29,0.278,30,1.215,34,0.075,35,0.303,50,0.004,51,0.004,114,2.31,162,2.672,164,2.607,165,2.607,166,2.723,167,2.723,168,2.607,169,3.824,170,3.824,183,6.602,191,3.473,192,2.723,193,2.723,195,3.073,199,3.156,200,1.434,260,1.812,542,3.246,984,3.342,1217,4.699,1226,4.16,1569,6.486,1584,6.883,1585,5.354,1596,5.354,1597,5.354,1598,5.354,1599,5.993,1600,5.993,1601,5.354]],["title/injectables/OffersService.html",[0,1.308,1584,3.357]],["body/injectables/OffersService.html",[0,1.295,2,1.266,3,0.039,4,0.035,5,0.035,10,0.192,11,1.316,13,1.958,16,0.765,18,2.193,19,0.006,20,1.309,21,0.502,22,1.479,28,2.193,29,0.228,30,0.628,34,0.039,35,0.157,38,3.684,39,1.839,44,2.062,47,3.684,48,4.166,49,4.329,50,0.003,51,0.003,55,3.999,76,1.377,84,1.634,85,3.453,90,4.052,91,2.215,99,0.755,152,1.053,200,0.741,262,1.017,293,1.812,374,4.052,453,1.181,454,2.092,455,2.393,456,1.6,457,1.656,465,1.6,468,1.656,476,1.195,478,1.172,544,2.039,546,3.134,551,2.039,555,1.677,622,1.976,624,2.128,677,4.374,689,6.725,692,4.278,693,2.944,694,4.278,695,3.18,696,3.17,973,4.942,984,1.727,1270,4.571,1572,4.278,1581,5.91,1584,3.323,1586,3.942,1601,2.767,1602,2.767,1603,4.788,1604,4.788,1605,4.788,1606,3.097,1607,3.097,1608,4.788,1609,3.097,1610,3.097,1611,4.788,1612,3.097,1613,3.097,1614,4.788,1615,3.097,1616,4.788,1617,3.097,1618,3.097,1619,3.097,1620,3.097,1621,3.097,1622,3.097,1623,3.097,1624,3.097,1625,3.097,1626,3.097,1627,3.097,1628,3.097,1629,6.586,1630,4.788,1631,3.691]],["title/classes/Order.html",[35,0.245,764,2.697]],["body/classes/Order.html",[3,0.027,4,0.024,5,0.024,8,1.598,10,0.135,16,0.781,19,0.006,21,0.569,22,0.658,29,0.251,34,0.092,35,0.302,39,2.22,44,0.917,45,2.049,50,0.002,51,0.002,55,0.908,73,0.794,74,1.011,85,1.968,91,1.365,93,0.305,97,0.582,99,0.693,100,1.249,111,1.749,200,0.52,231,2.091,246,1.213,250,3.55,253,2.911,257,3.38,258,3.651,260,1.942,261,0.839,262,1.517,263,2.061,264,1.115,275,0.967,276,3.097,277,1.716,282,2.194,293,2.034,294,1.087,298,2.099,402,1.035,509,1.06,546,2.558,620,2.905,623,2.744,624,0.967,632,2.218,660,1.51,693,3.664,695,1.445,696,1.178,732,2.686,733,2.198,734,2.657,735,2.576,736,2.576,737,3.132,738,2.657,750,2.502,764,3.323,770,2.011,821,2.301,891,1.51,938,2.396,984,2.011,986,2.948,996,3.069,997,3.069,998,3.305,999,3.069,1001,2.657,1003,1.292,1004,1.802,1005,1.338,1006,2.011,1007,1.338,1008,1.251,1011,0.855,1012,1.388,1013,1.388,1014,1.388,1068,1.388,1199,2.841,1210,1.338,1211,1.445,1212,1.445,1214,1.586,1215,1.586,1216,1.586,1217,2.218,1218,1.586,1219,1.586,1220,3.57,1221,1.445,1222,1.586,1223,3.368,1224,1.586,1225,2.629,1226,1.51,1227,1.586,1228,1.586,1229,1.51,1230,1.388,1231,1.51,1232,1.388,1233,1.51,1234,1.338,1235,1.388,1236,1.51,1237,1.338,1238,1.51,1239,1.586,1240,1.388,1241,1.51,1242,1.586,1243,2.503,1244,1.586,1245,2.629,1246,1.586,1247,2.629,1248,1.586,1249,2.629,1250,1.586,1251,1.586,1252,2.629,1253,1.586,1254,1.586,1255,1.586,1256,1.586,1257,1.586,1258,1.586,1259,1.586,1260,1.586,1261,1.586,1262,1.586,1263,6.029,1264,2.629,1265,3.918,1266,2.629,1267,2.503,1268,1.586,1269,1.586,1270,1.51,1271,1.586,1272,1.586,1273,1.586,1274,1.586,1275,2.629,1276,1.586,1277,2.629,1278,2.629,1279,2.629,1280,1.51,1281,1.586,1282,1.586,1283,1.586,1284,1.586,1285,1.586,1286,1.586,1287,2.629,1288,1.586,1289,1.586,1290,2.629,1291,1.586,1322,2.629,1632,2.175,1633,2.175,1634,2.175,1635,2.175,1636,2.175,1637,2.175,1638,2.175,1639,2.175,1640,2.175,1641,2.175,1642,2.175,1643,2.175,1644,2.175,1645,2.175,1646,2.175,1647,2.175]],["title/controllers/OrderController.html",[112,1.393,1648,3.728]],["body/controllers/OrderController.html",[3,0.043,4,0.039,5,0.039,10,0.213,11,1.426,13,1.407,16,0.721,18,2.019,19,0.006,20,1.15,21,0.462,22,1.362,28,2.122,29,0.269,30,0.698,34,0.043,35,0.174,39,1.796,44,1.995,50,0.003,51,0.003,55,2.607,76,2.307,84,1.941,85,1.466,90,1.72,91,1.303,99,0.739,100,1.153,111,2.364,112,0.992,114,1.04,116,1.497,134,3.026,135,1.53,136,1.497,137,2.833,138,1.497,139,0.799,152,1.17,263,2.713,374,1.72,454,2.209,455,2.593,456,1.734,462,1.813,463,2.358,465,1.15,466,2.358,473,1.564,484,2.196,488,1.564,526,3.841,677,5.697,764,1.919,770,1.919,841,5.362,843,2.653,857,4.554,888,5.362,890,2.653,993,4.149,998,3.841,1001,1.979,1003,2.044,1121,5.362,1123,2.653,1350,6.808,1351,6.253,1408,4.554,1409,3.986,1453,2.653,1648,4,1649,3.075,1650,6.247,1651,6.247,1652,5.581,1653,3.442,1654,8.997,1655,5.19,1656,3.442,1657,3.442,1658,5.19,1659,3.442,1660,3.442,1661,5.19,1662,3.442,1663,3.442,1664,3.442,1665,3.442,1666,2.833,1667,4.336,1668,3.075,1669,3.442,1670,3.442,1671,3.442,1672,3.442,1673,3.075,1674,2.833,1675,2.833,1676,3.783,1677,3.075,1678,3.075,1679,3.442,1680,3.442,1681,3.442,1682,5.143,1683,3.442,1684,3.442,1685,3.442,1686,2.653,1687,3.442,1688,3.075,1689,5.19,1690,3.075,1691,3.442,1692,3.442,1693,3.442]],["title/classes/OrderItems.html",[35,0.245,1220,3.212]],["body/classes/OrderItems.html",[3,0.031,4,0.028,5,0.028,8,1.766,10,0.156,16,0.633,19,0.006,21,0.545,29,0.261,34,0.097,35,0.326,39,2.292,44,1.032,45,1.899,50,0.002,51,0.002,55,1.049,73,0.917,74,1.168,85,2.175,91,1.536,93,0.352,97,0.655,99,0.685,100,1.011,111,0.951,200,0.601,231,1.801,246,2.847,250,3.618,253,1.028,257,1.596,258,3.385,260,2.08,261,0.969,262,1.677,263,1.766,264,1.289,275,1.117,276,3.278,277,1.932,282,2.086,293,1.933,294,1.256,298,2.32,402,1.196,546,2.789,620,2.489,623,1.493,624,2.27,632,2.496,660,1.745,693,3.956,695,1.67,696,1.361,732,2.029,733,1.196,734,1.445,735,1.402,736,1.402,737,2.489,738,1.445,750,2.199,764,3.269,770,2.264,821,2.59,891,1.745,938,1.67,984,2.264,986,3.258,996,1.67,997,1.67,998,2.496,999,1.67,1001,2.334,1003,1.493,1004,2.552,1005,1.546,1006,2.847,1007,1.546,1008,1.445,1011,2.007,1012,3.258,1013,3.258,1014,3.258,1068,1.604,1199,3.14,1210,1.546,1211,1.67,1212,1.67,1214,1.832,1215,1.832,1216,1.832,1217,2.496,1218,1.832,1219,1.832,1220,3.894,1221,1.67,1222,1.832,1223,1.832,1224,1.832,1225,1.832,1226,1.745,1227,1.832,1228,1.832,1229,1.745,1230,1.604,1231,1.745,1232,1.604,1233,1.745,1234,1.546,1235,1.604,1236,1.745,1237,1.546,1238,1.745,1239,1.832,1240,1.604,1241,1.745,1242,1.832,1243,2.818,1244,1.832,1245,2.959,1246,1.832,1247,2.959,1248,1.832,1249,2.959,1250,1.832,1251,1.832,1252,2.959,1253,1.832,1254,1.832,1255,1.832,1256,1.832,1257,1.832,1258,1.832,1259,1.832,1260,1.832,1261,1.832,1262,1.832,1263,6.258,1264,2.959,1265,4.273,1266,2.959,1267,2.818,1268,1.832,1269,1.832,1270,1.745,1271,1.832,1272,1.832,1273,1.832,1274,1.832,1275,2.959,1276,1.832,1277,2.959,1278,2.959,1279,2.959,1280,1.745,1281,1.832,1282,1.832,1283,1.832,1284,1.832,1285,1.832,1286,1.832,1287,2.959,1288,1.832,1289,1.832,1290,2.959,1291,1.832,1694,2.514,1695,2.514,1696,2.514,1697,2.514,1698,2.514,1699,2.514]],["title/modules/OrderModule.html",[162,1.536,184,3.525]],["body/modules/OrderModule.html",[3,0.053,4,0.048,5,0.048,19,0.006,20,1.433,29,0.275,30,0.867,34,0.053,35,0.216,50,0.004,51,0.004,114,1.839,162,2.25,164,1.86,165,1.86,166,1.943,167,1.943,168,1.86,169,3.219,170,3.219,175,5.407,180,5.882,183,5.882,184,6.907,191,2.765,192,1.943,193,1.943,195,3.12,199,2.252,200,1.023,260,2.813,542,2.316,764,2.385,770,2.385,1001,2.459,1003,2.54,1210,2.629,1230,4.52,1232,4.924,1234,2.629,1235,4.924,1237,2.629,1240,4.924,1648,5.46,1667,6.522,1668,3.82,1686,3.296,1688,3.82,1690,3.82,1700,3.82,1701,3.82,1702,3.82,1703,4.276,1704,4.276,1705,4.276,1706,3.82,1707,3.52,1708,4.276,1709,4.276,1710,6.085,1711,7.717,1712,6.085,1713,6.085,1714,6.085]],["title/injectables/OrderService.html",[0,1.308,1667,3.357]],["body/injectables/OrderService.html",[0,1.03,2,0.951,3,0.029,4,0.026,5,0.026,10,0.144,11,1.047,13,1.558,16,0.734,18,2.048,19,0.006,20,1.166,21,0.469,22,1.381,28,2.107,29,0.236,30,0.471,34,0.029,35,0.118,38,3.54,39,1.595,44,2.108,47,3.54,48,4.072,50,0.002,51,0.002,55,3.936,73,0.848,76,2.949,83,3.984,84,1.063,85,3.399,90,3.893,91,2.652,99,0.681,111,0.88,152,1.902,200,0.556,229,2.644,245,2.019,262,1.251,263,0.804,291,3.7,374,3.783,402,1.106,454,1.778,456,1.273,465,1.273,526,4.308,544,1.623,546,3.945,551,1.623,555,1.259,677,2.53,696,2.621,729,3.718,736,3.121,750,3.031,764,2.699,770,1.296,857,1.695,933,3.528,993,3.718,1210,1.429,1234,1.429,1237,1.429,1386,4.653,1469,2.077,1652,3.404,1667,2.644,1673,2.077,1674,1.914,1675,1.914,1676,4.08,1677,2.077,1678,2.077,1686,3.731,1706,2.077,1715,2.077,1716,3.81,1717,3.81,1718,5.597,1719,3.81,1720,3.81,1721,3.81,1722,2.325,1723,4.84,1724,4.84,1725,4.84,1726,2.325,1727,3.81,1728,3.81,1729,2.325,1730,4.84,1731,3.81,1732,2.325,1733,3.81,1734,2.325,1735,2.325,1736,2.325,1737,3.81,1738,2.325,1739,3.81,1740,2.325,1741,2.325,1742,2.325,1743,3.81,1744,5,1745,2.325,1746,2.325,1747,2.325,1748,2.325,1749,2.325,1750,2.325,1751,2.325,1752,2.325,1753,2.325,1754,2.325,1755,5.597,1756,3.81,1757,5.597,1758,5.597,1759,3.81,1760,3.81,1761,3.81,1762,4.84,1763,4.84,1764,2.325,1765,4.84,1766,6.635,1767,3.81,1768,3.81,1769,2.325,1770,2.325,1771,4.84,1772,4.84,1773,2.325,1774,2.077,1775,2.325]],["title/classes/Payment.html",[35,0.245,737,2.357]],["body/classes/Payment.html",[3,0.065,4,0.059,5,0.059,10,0.324,16,0.806,19,0.006,21,0.559,29,0.266,34,0.087,35,0.265,39,1.35,45,2.298,50,0.004,51,0.004,73,1.908,74,2.431,93,0.732,97,1.129,99,0.671,100,1.288,111,2.981,200,1.251,231,2.148,250,3.541,253,2.138,257,3.306,258,3.041,260,2.114,261,2.017,262,2.296,275,2.324,276,2.275,277,2.488,281,4.679,282,2.014,298,3.821,402,2.488,509,3.408,737,3.408,1028,6.484,1029,6.484,1030,6.484,1035,6.071,1038,6.071,1041,5.756,1042,4.305,1776,4.305,1777,5.23,1778,5.23,1779,5.23,1780,5.23,1781,5.23,1782,5.23,1783,5.23,1784,4.031,1785,4.672]],["title/controllers/PaymentController.html",[112,1.393,1786,3.728]],["body/controllers/PaymentController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,453,1.613,454,2.564,456,2.185,457,2.262,463,2.973,465,1.584,466,2.973,468,1.64,470,3.041,472,2.204,473,2.155,476,1.829,478,1.795,481,2.256,486,2.369,488,2.155,544,2.786,551,2.02,651,2.727,737,2.311,753,5.202,769,5.042,1786,5.042,1787,4.236,1788,4.236,1789,4.742,1790,4.742,1791,4.742,1792,4.742,1793,6.666,1794,4.742,1795,5.198,1796,4.236,1797,4.742,1798,4.742,1799,4.742,1800,4.742,1801,4.742,1802,4.742,1803,4.742]],["title/modules/PaymentModule.html",[162,1.536,185,3.525]],["body/modules/PaymentModule.html",[3,0.077,4,0.07,5,0.07,19,0.006,20,0.953,29,0.28,30,1.254,34,0.077,35,0.313,50,0.004,51,0.004,114,2.357,162,2.712,164,2.69,165,2.69,166,2.81,167,2.81,168,2.69,169,3.88,170,2.81,185,6.878,191,3.543,192,2.81,193,2.81,195,3.171,199,3.257,200,1.48,260,1.87,542,3.349,737,3.014,1229,4.292,1784,6.009,1786,6.581,1795,6.549,1796,5.525,1804,5.525,1805,5.525,1806,6.184,1807,6.184,1808,5.525]],["title/injectables/PaymentService.html",[0,1.308,1795,3.357]],["body/injectables/PaymentService.html",[0,1.6,2,1.681,3,0.051,4,0.046,5,0.046,10,0.255,11,1.626,13,2.419,16,0.769,18,2.172,19,0.006,20,1.237,21,0.498,22,1.465,28,2.172,29,0.254,30,0.833,34,0.051,35,0.208,38,3.65,39,1.062,44,2.042,47,3.65,48,4.143,49,4.618,50,0.003,51,0.003,55,3.984,76,1.827,84,1.934,85,3.421,90,4.013,91,1.556,99,0.716,152,1.397,200,0.984,262,1.35,374,4.013,453,1.459,454,2.407,456,1.976,457,2.046,465,1.976,468,2.046,476,1.586,478,1.556,544,2.52,546,3.607,551,2.52,555,2.227,737,2.004,753,4.771,769,4.56,1788,5.286,1793,6.429,1795,4.106,1808,3.673,1809,3.673,1810,4.111,1811,4.111,1812,5.916,1813,4.111,1814,4.111,1815,4.111,1816,4.111,1817,4.111,1818,4.111,1819,4.111,1820,4.111,1821,4.111,1822,4.111,1823,4.111,1824,4.111,1825,4.111]],["title/classes/Product.html",[35,0.245,1004,2.417]],["body/classes/Product.html",[3,0.056,4,0.051,5,0.051,10,0.279,16,0.855,19,0.006,20,1.123,21,0.582,29,0.269,34,0.079,35,0.228,39,1.165,45,1.913,50,0.004,51,0.004,93,0.632,97,1.02,99,0.688,100,1.367,200,1.079,250,3.729,253,1.845,257,2.484,258,2.749,260,1.91,261,1.74,262,2.075,263,2.733,264,2.313,275,2.005,276,1.962,282,2.277,294,2.254,298,2.05,976,5.062,1004,3.158,1006,4.067,1008,2.594,1049,6.004,1050,4.654,1051,6.004,1052,6.004,1053,6.004,1054,6.004,1055,5.622,1057,4.606,1060,5.062,1073,5.622,1076,5.316,1080,5.316,1081,3.288,1082,3.477,1083,3.714,1322,3.288,1826,3.714,1827,4.511,1828,4.511,1829,4.511,1830,4.511,1831,4.511,1832,4.511,1833,4.511,1834,4.511,1835,4.511,1836,4.511,1837,3.477,1838,4.03]],["title/controllers/ProductController.html",[112,1.393,1839,3.728]],["body/controllers/ProductController.html",[3,0.048,4,0.044,5,0.044,10,0.24,11,1.556,16,0.778,18,2.216,19,0.006,20,1.262,21,0.508,22,1.494,28,2.289,29,0.273,30,0.785,34,0.048,35,0.196,36,1.721,44,2.152,50,0.003,51,0.003,84,2.287,99,0.754,100,1.243,112,1.116,114,1.171,116,1.685,134,2.464,135,1.721,136,2.464,137,3.188,138,1.685,139,0.899,140,2.572,143,2.04,145,2.823,152,1.316,154,6.456,239,2.3,332,5.372,333,3.188,453,1.397,454,2.341,456,1.892,457,1.959,463,1.76,465,1.294,466,1.76,468,1.339,470,1.8,472,1.8,473,1.76,476,1.494,478,1.466,481,1.843,486,1.935,488,1.76,519,3.46,544,2.413,551,1.649,651,2.227,677,5.209,1004,1.935,1046,5.686,1050,4.703,1060,5.115,1080,2.823,1081,2.823,1682,3.188,1839,4.366,1840,3.46,1841,5.665,1842,6.698,1843,3.46,1844,3.873,1845,3.873,1846,3.873,1847,3.873,1848,3.873,1849,3.873,1850,3.873,1851,3.873,1852,3.873,1853,3.873,1854,3.873,1855,3.873,1856,3.873,1857,6.324,1858,3.873,1859,3.873,1860,4.649,1861,3.46,1862,4.663,1863,3.873,1864,3.46,1865,3.873,1866,3.873,1867,3.873,1868,3.873,1869,3.873,1870,3.873,1871,3.873,1872,3.873,1873,3.873,1874,3.873,1875,3.873,1876,3.873,1877,3.873]],["title/modules/ProductModule.html",[162,1.536,186,3.525]],["body/modules/ProductModule.html",[3,0.077,4,0.07,5,0.07,19,0.006,20,0.953,29,0.28,30,1.254,34,0.077,35,0.313,50,0.004,51,0.004,114,2.357,162,2.712,164,2.69,165,2.69,166,2.81,167,2.81,168,2.69,169,3.88,170,2.81,186,6.878,191,3.543,192,2.81,193,2.81,195,3.171,199,3.257,200,1.48,260,1.87,542,3.349,1004,3.09,1221,4.108,1837,6.009,1839,6.581,1860,6.549,1861,5.525,1878,5.525,1879,5.525,1880,6.184,1881,6.184,1882,5.525]],["title/injectables/ProductService.html",[0,1.308,1860,3.357]],["body/injectables/ProductService.html",[0,1.329,2,1.31,3,0.04,4,0.036,5,0.036,10,0.198,11,1.35,13,1.31,16,0.773,18,2.217,19,0.006,20,1.263,21,0.508,22,1.495,28,2.217,29,0.249,30,0.65,34,0.04,35,0.162,38,3.725,39,0.827,44,2.084,47,3.725,48,3.725,49,4.714,50,0.003,51,0.003,55,4.016,65,6.402,76,1.424,83,2.638,84,1.871,85,3.491,91,1.213,99,0.746,200,0.767,262,1.052,263,2.068,453,1.212,454,2.129,456,1.642,457,2.068,465,1.642,468,1.108,476,1.236,478,1.213,544,2.093,546,3.19,551,2.093,555,1.735,677,5.445,696,3.238,1004,2.456,1046,5.019,1050,5.231,1055,5.168,1060,5.514,1076,4.887,1080,3.583,1081,2.336,1082,2.47,1843,4.391,1857,5.975,1860,3.411,1862,4.046,1882,2.863,1883,2.863,1884,4.915,1885,5.979,1886,5.979,1887,3.204,1888,3.204,1889,4.915,1890,3.204,1891,3.204,1892,3.204,1893,4.915,1894,3.204,1895,3.204,1896,3.204,1897,3.204,1898,3.204,1899,3.204,1900,3.204,1901,3.204,1902,3.204,1903,3.204,1904,3.204,1905,4.915,1906,3.204,1907,3.204,1908,3.204,1909,3.204]],["title/classes/RTGuard.html",[35,0.245,1910,3.981]],["body/classes/RTGuard.html",[3,0.088,4,0.08,5,0.08,8,2.932,9,5.884,13,3.709,16,0.652,19,0.006,29,0.215,32,4.919,33,4.358,34,0.088,35,0.359,37,4.708,50,0.005,51,0.005,93,0.993,395,6.534,1910,6.979,1911,7.574,1912,6.332,1913,7.088]],["title/injectables/RolesGuard.html",[0,1.308,145,3.525]],["body/injectables/RolesGuard.html",[0,1.962,2,2.26,3,0.069,4,0.062,5,0.062,8,2.508,9,5.034,10,0.342,11,1.993,12,5.287,13,2.26,15,6.265,16,0.667,18,1.962,19,0.006,20,1.117,21,0.449,22,1.323,24,5.287,25,6.265,27,4.029,28,1.495,29,0.271,30,1.121,31,3.671,32,3.836,33,3.399,34,0.069,35,0.28,36,2.457,37,3.671,38,2.512,39,1.873,40,4.938,42,4.55,43,4.55,44,2.059,47,2.512,48,2.512,49,3.179,50,0.004,51,0.004,55,3.378,73,2.646,141,4.938,143,2.911,144,4.938,145,5.287,374,2.762,794,4.045,1461,4.938,1914,4.938,1915,5.528,1916,5.528,1917,7.253,1918,5.528,1919,4.55,1920,5.528,1921,5.528,1922,5.528]],["title/classes/SignInByEmailDto.html",[35,0.245,317,3.525]],["body/classes/SignInByEmailDto.html",[3,0.077,4,0.07,5,0.07,10,0.383,16,0.717,19,0.006,21,0.483,29,0.237,34,0.077,35,0.395,45,2.044,50,0.004,51,0.004,93,0.866,97,1.258,99,0.715,100,1.146,103,3.293,104,2.696,105,1.964,139,1.435,230,3.543,231,2.755,237,3.714,240,3.188,317,5.683,319,5.072,699,5.671,701,6.965,702,4.767,704,5.683,711,4.292,713,5.411,1923,7.628,1924,5.525,1925,6.184,1926,6.184]],["title/classes/Stock.html",[35,0.245,1095,2.248]],["body/classes/Stock.html",[3,0.069,4,0.063,5,0.063,10,0.345,16,0.747,19,0.006,21,0.569,29,0.271,34,0.091,35,0.282,39,1.439,45,2.346,50,0.004,51,0.004,93,0.78,97,1.177,99,0.581,100,1.194,200,1.333,231,2.24,250,3.263,253,3.323,257,3.389,258,3.171,260,2.204,261,2.149,262,2.394,263,2.981,264,2.856,275,2.476,276,2.423,294,2.784,627,5.06,733,3.867,1011,2.19,1095,4.007,1927,4.586,1928,7.26,1929,5.571,1930,5.983,1931,5.571,1932,5.501,1933,5.571,1934,4.061,1935,4.586,1936,4.294,1937,4.977]],["title/controllers/StockController.html",[112,1.393,1938,3.728]],["body/controllers/StockController.html",[3,0.059,4,0.053,5,0.053,10,0.294,11,1.797,16,0.779,18,2.184,19,0.006,20,1.244,21,0.5,22,1.473,28,2.291,29,0.257,30,0.961,34,0.059,35,0.24,36,2.108,44,2.154,50,0.004,51,0.004,84,2.444,99,0.74,100,1.245,112,1.366,114,1.433,116,2.063,134,2.846,135,2.108,136,3.258,138,2.063,139,1.101,152,1.611,453,1.613,454,2.564,456,2.185,457,2.262,463,2.973,465,1.584,466,2.973,468,1.64,470,3.041,472,2.204,473,2.155,481,2.256,486,2.369,488,2.155,544,2.786,551,2.02,651,2.727,1087,6.079,1095,2.204,1938,5.042,1939,4.236,1940,4.742,1941,4.742,1942,4.742,1943,4.742,1944,4.742,1945,6.666,1946,4.742,1947,4.975,1948,4.236,1949,4.236,1950,5.385,1951,4.236,1952,3.655,1953,3.655,1954,4.742,1955,4.742,1956,4.742,1957,4.742,1958,4.742]],["title/classes/StockGard.html",[35,0.245,1930,3.357]],["body/classes/StockGard.html",[3,0.072,4,0.065,5,0.065,10,0.36,16,0.689,19,0.006,21,0.543,29,0.266,34,0.093,35,0.294,39,1.501,45,2.378,50,0.004,51,0.004,73,2.121,74,2.702,93,0.814,97,1.21,99,0.699,100,1.101,111,3.139,200,1.391,231,2.692,250,3.139,253,3.065,257,3.445,258,3.812,260,2.266,261,2.242,262,2.462,275,2.584,276,3.26,277,2.766,733,3.947,1011,2.286,1095,2.702,1930,5.202,1959,5.509,1960,4.786,1961,5.814,1962,5.814,1963,4.035,1964,4.786,1965,5.194,1966,4.481,1967,5.194]],["title/interfaces/StockGardInterface.html",[106,1.83,1968,3.981]],["body/interfaces/StockGardInterface.html",[3,0.084,4,0.076,5,0.076,10,0.417,19,0.006,21,0.549,22,1.758,34,0.084,50,0.005,51,0.005,97,1.326,99,0.791,106,2.547,108,3.451,111,3.496,263,3.194,1968,6.764,1969,4.671,1970,6.013,1971,7.603]],["title/interfaces/StockInterface.html",[106,1.83,1972,3.981]],["body/interfaces/StockInterface.html",[3,0.078,4,0.071,5,0.071,10,0.389,19,0.006,21,0.558,22,1.773,29,0.239,34,0.078,50,0.005,51,0.005,97,1.27,99,0.755,106,2.375,108,3.218,263,3.116,272,4.746,733,4.288,1011,2.467,1928,8.051,1930,6.255,1932,5.75,1934,4.574,1935,5.166,1972,6.477,1973,5.606,1974,5.461]],["title/classes/StockItem.html",[35,0.245,1975,3.212]],["body/classes/StockItem.html",[3,0.081,4,0.073,5,0.073,10,0.402,16,0.738,19,0.006,20,1.344,21,0.498,29,0.197,34,0.1,35,0.328,39,1.675,45,2.106,50,0.005,51,0.005,93,0.908,97,1.296,98,4.055,99,0.727,100,1.18,200,1.551,231,1.993,250,3.451,260,2.428,261,2.501,509,3.161,1959,5.795,1975,5.334,1976,5.338,1977,6.485,1978,6.485,1979,4.998,1980,5.794]],["title/controllers/StockItemController.html",[112,1.393,1981,3.728]],["body/controllers/StockItemController.html",[3,0.057,4,0.052,5,0.052,10,0.285,11,1.76,16,0.77,18,2.156,19,0.006,20,1.228,21,0.494,22,1.454,28,2.266,29,0.254,30,0.932,34,0.057,35,0.233,36,2.044,44,2.13,50,0.004,51,0.004,84,2.421,99,0.735,100,1.231,112,1.325,114,1.39,116,2,134,2.786,135,2.044,136,3.205,138,2,139,1.067,152,1.563,453,1.579,454,2.531,456,2.139,457,2.215,463,2.91,465,1.536,466,2.91,468,1.59,470,2.977,472,2.138,473,2.09,481,2.188,486,2.298,488,2.09,544,2.728,551,1.959,651,2.644,1011,2.897,1092,5.809,1094,3.786,1095,3.425,1354,4.936,1952,3.545,1953,3.545,1981,4.936,1982,6.687,1983,4.108,1984,3.786,1985,4.599,1986,4.599,1987,4.599,1988,4.599,1989,6.56,1990,6.142,1991,4.599,1992,4.894,1993,3.545,1994,3.786,1995,5.722,1996,5.722,1997,3.786,1998,4.599,1999,4.599,2000,4.599,2001,4.599,2002,4.599]],["title/interfaces/StockItemInterface.html",[106,1.83,2003,3.728]],["body/interfaces/StockItemInterface.html",[3,0.087,4,0.078,5,0.078,10,0.432,19,0.006,20,1.44,21,0.52,22,1.705,34,0.087,50,0.005,51,0.005,97,1.355,98,4.345,99,0.775,106,2.639,108,3.575,1969,4.839,2003,6.47,2004,6.229]],["title/controllers/StockItemLogsController.html",[112,1.393,2005,3.728]],["body/controllers/StockItemLogsController.html",[3,0.056,4,0.05,5,0.05,10,0.277,11,1.723,16,0.762,18,2.128,19,0.006,20,1.212,21,0.487,22,1.435,28,2.242,29,0.251,30,0.905,34,0.056,35,0.226,36,1.984,44,2.107,50,0.004,51,0.004,84,2.399,99,0.73,100,1.218,112,1.286,114,1.35,116,1.942,134,2.729,135,1.984,136,3.155,138,1.942,139,1.036,152,1.517,453,1.547,454,2.498,456,2.095,457,2.169,463,2.85,465,1.491,466,2.85,468,1.544,470,2.916,472,2.075,473,2.029,481,2.124,486,2.231,488,2.029,544,2.672,551,1.901,651,2.567,1011,3.778,1095,3.371,1097,5.734,1098,3.675,1354,4.835,1952,3.441,1953,3.441,1982,6.624,1984,3.675,1989,6.475,1993,3.441,1995,5.604,2005,4.835,2006,3.988,2007,7.252,2008,4.464,2009,4.464,2010,4.464,2011,4.464,2012,6.063,2013,4.464,2014,4.817,2015,3.675,2016,5.604,2017,3.675,2018,4.464,2019,4.464,2020,4.464,2021,4.464,2022,4.464]],["title/interfaces/StockItemLogsInterface.html",[106,1.83,2023,3.357]],["body/interfaces/StockItemLogsInterface.html",[3,0.077,4,0.069,5,0.069,10,0.382,19,0.006,21,0.572,22,1.796,29,0.187,34,0.077,50,0.004,51,0.004,97,1.256,99,0.779,106,2.334,108,3.162,111,3.389,272,4.716,282,2.456,624,3.98,1011,3.63,1969,4.28,2023,5.401,2024,5.509,2025,7.372,2026,6.902,2027,4.495,2028,5.076]],["title/injectables/StockItemLogsService.html",[0,1.308,2014,3.212]],["body/injectables/StockItemLogsService.html",[0,1.57,2,1.637,3,0.05,4,0.045,5,0.045,10,0.248,11,1.595,13,2.373,16,0.762,18,2.15,19,0.006,20,1.224,21,0.492,22,1.45,28,2.15,29,0.241,30,0.812,34,0.05,35,0.203,38,3.612,39,1.034,44,2.021,45,1.05,47,3.612,48,4.119,50,0.003,51,0.003,55,3.967,76,1.779,84,1.905,85,3.385,90,3.971,91,2.197,99,0.712,152,1.361,200,0.958,262,1.315,374,3.971,453,1.431,454,2.378,544,2.472,546,3.562,551,2.472,555,2.168,696,2.168,1011,3.509,1409,5.071,1932,2.555,1934,2.918,1974,2.779,2014,3.855,2023,5.934,2029,6.59,2030,3.577,2031,4.778,2032,4.778,2033,4.003,2034,4.003,2035,5.185,2036,4.473,2037,4.003,2038,4.778,2039,4.003,2040,4.003,2041,4.003,2042,4.778,2043,4.003,2044,3.086,2045,3.296,2046,3.577,2047,3.577,2048,4.003,2049,3.577,2050,4.003,2051,4.003,2052,4.003,2053,3.296,2054,4.003]],["title/classes/StockItemQuantity.html",[35,0.245,1963,3.357]],["body/classes/StockItemQuantity.html",[3,0.075,4,0.067,5,0.067,10,0.37,16,0.701,19,0.006,21,0.521,29,0.255,34,0.095,35,0.302,39,1.543,45,2.453,50,0.004,51,0.004,93,0.837,97,1.231,99,0.608,100,1.121,200,1.43,231,2.582,250,3.181,253,2.444,257,2.999,258,3.319,260,2.306,261,2.305,262,2.506,276,2.6,282,2.198,509,2.913,624,3.735,627,5.295,1011,3.304,1095,2.778,1959,5.582,1963,5.295,1975,3.97,2055,4.92,2056,7.508,2057,5.976,2058,5.976,2059,4.607,2060,4.92,2061,4.607,2062,5.339]],["title/interfaces/StockItemQuantityInterface.html",[106,1.83,2063,3.728]],["body/interfaces/StockItemQuantityInterface.html",[3,0.087,4,0.078,5,0.078,10,0.431,19,0.006,21,0.519,22,1.703,34,0.087,50,0.005,51,0.005,97,1.352,99,0.717,106,2.63,108,3.563,282,2.591,624,4.15,1011,2.732,1969,4.823,2056,8.342,2063,6.457,2064,6.209]],["title/injectables/StockItemService.html",[0,1.308,1992,3.212]],["body/injectables/StockItemService.html",[0,1.541,2,1.595,3,0.049,4,0.044,5,0.044,10,0.242,11,1.565,13,2.329,16,0.755,18,2.128,19,0.006,20,1.212,21,0.487,22,1.435,28,2.128,29,0.249,30,0.791,34,0.049,35,0.197,38,3.574,39,1.007,44,2,45,1.023,47,3.574,48,4.094,50,0.003,51,0.003,55,3.951,76,2.99,84,1.877,85,3.35,90,3.931,91,2.156,99,0.707,152,1.936,200,0.933,262,1.87,374,3.931,453,1.405,454,2.349,544,2.426,546,3.519,551,2.426,555,2.113,696,2.113,1409,5.019,1947,4.912,1974,2.708,1975,2.591,1992,3.783,2003,6.537,2029,6.537,2031,4.688,2032,4.688,2036,4.39,2038,4.688,2042,4.688,2044,3.007,2047,3.485,2049,3.485,2053,3.211,2059,3.007,2065,3.485,2066,3.901,2067,5.537,2068,5.537,2069,6.726,2070,3.901,2071,5.695,2072,3.901,2073,3.901,2074,3.901,2075,3.901,2076,3.901,2077,4.688,2078,3.901,2079,3.901,2080,3.901,2081,3.901,2082,3.901,2083,3.901,2084,3.901,2085,3.901]],["title/classes/StockItemslogs.html",[35,0.245,1932,3.086]],["body/classes/StockItemslogs.html",[3,0.067,4,0.06,5,0.06,10,0.333,16,0.781,19,0.006,21,0.563,29,0.268,34,0.089,35,0.272,39,1.388,45,1.409,50,0.004,51,0.004,73,1.961,74,2.498,93,0.753,97,1.149,99,0.678,100,1.249,111,3.022,200,1.286,250,3.509,253,2.911,257,3.342,258,3.698,260,2.152,261,2.073,262,2.338,272,4.205,275,2.389,276,3.097,277,2.557,282,2.051,624,3.549,1011,3.7,1095,2.498,1932,4.543,1959,5.874,1975,3.57,2026,6.154,2027,3.918,2028,4.424,2059,4.143,2060,4.424,2086,4.424,2087,5.374,2088,5.374,2089,5.374,2090,5.374,2091,4.143,2092,4.802]],["title/modules/StockModule.html",[162,1.536,187,3.525]],["body/modules/StockModule.html",[3,0.049,4,0.044,5,0.044,19,0.006,20,1.27,29,0.293,30,0.8,34,0.049,35,0.2,50,0.003,51,0.003,114,1.736,162,2.15,164,1.716,165,1.716,166,1.792,167,1.792,168,1.716,169,3.076,170,3.076,175,5.261,187,7.064,190,5.261,191,2.609,192,1.792,193,1.792,195,2.944,199,2.077,200,0.944,260,2.493,347,3.247,542,2.136,1011,2.923,1095,1.834,1707,3.247,1930,2.738,1932,2.517,1934,2.875,1935,3.247,1936,4.425,1938,5.217,1947,6.147,1948,3.524,1963,2.738,1964,3.247,1965,3.524,1966,4.425,1974,5.483,1975,2.62,1979,4.425,1981,5.217,1992,6.147,1993,5.217,1994,3.247,2005,5.217,2014,5.476,2015,3.247,2059,3.04,2060,3.247,2061,4.425,2091,4.425,2093,3.524,2094,3.524,2095,3.944,2096,3.524,2097,6.423,2098,3.944,2099,5.217,2100,3.944,2101,3.524,2102,4.425,2103,2.875,2104,3.524,2105,3.524,2106,6.769,2107,3.944,2108,3.944,2109,3.944,2110,3.944,2111,3.944,2112,3.944,2113,3.944]],["title/injectables/StockService.html",[0,1.308,1947,3.212]],["body/injectables/StockService.html",[0,1.435,2,1.449,3,0.044,4,0.04,5,0.04,10,0.22,11,1.458,13,2.169,16,0.756,18,2.146,19,0.006,20,1.222,21,0.491,22,1.447,28,2.146,29,0.257,30,0.719,34,0.044,35,0.179,38,3.605,39,1.642,44,2.017,47,3.605,48,4.115,50,0.003,51,0.003,55,3.965,76,2.826,84,1.775,85,3.379,90,3.964,91,2.008,99,0.69,152,2.161,200,0.848,262,1.743,374,3.964,454,2.242,456,1.772,457,1.835,465,1.772,468,1.835,544,2.26,546,3.914,551,2.26,555,1.92,733,1.687,1011,2.086,1087,5.247,1095,1.648,1409,3.386,1932,2.262,1934,2.584,1945,6.165,1947,3.524,1949,3.167,1950,4.368,1951,3.167,1974,2.46,2023,4.9,2025,2.918,2035,5.681,2044,2.732,2045,2.918,2046,3.167,2067,5.235,2068,5.235,2077,4.368,2101,3.167,2114,3.167,2115,5.306,2116,5.306,2117,3.545,2118,3.545,2119,5.306,2120,5.306,2121,3.545,2122,5.306,2123,3.545,2124,3.545,2125,3.545,2126,3.545,2127,3.545,2128,3.545,2129,3.545,2130,3.545,2131,3.545,2132,3.545,2133,5.306,2134,3.545,2135,3.545,2136,2.918,2137,3.545,2138,3.545,2139,3.545,2140,3.545]],["title/classes/StockTransaction.html",[35,0.245,2103,3.525]],["body/classes/StockTransaction.html",[3,0.06,4,0.054,5,0.054,10,0.297,16,0.782,19,0.006,21,0.576,29,0.267,34,0.082,35,0.243,39,1.238,45,2.44,50,0.004,51,0.004,73,1.749,74,2.229,93,0.672,97,1.064,99,0.701,100,1.25,111,2.851,200,1.147,231,2.766,250,3.326,253,3.317,257,3.605,258,3.823,260,1.993,261,1.849,262,2.165,263,1.658,264,2.459,272,2.525,275,2.131,276,3.277,277,2.282,294,3.294,298,2.996,509,2.337,598,4.201,1011,1.885,1095,2.229,1141,3.06,1959,5.837,1963,5.631,1964,3.947,1971,6.202,2027,3.495,2102,3.696,2103,4.805,2141,3.947,2142,6.731,2143,6.731,2144,4.795,2145,5.807,2146,4.795,2147,4.795,2148,4.795,2149,4.795,2150,4.795,2151,4.284]],["title/controllers/StockTransactionController.html",[112,1.393,2099,3.728]],["body/controllers/StockTransactionController.html",[3,0.057,4,0.052,5,0.052,10,0.285,11,1.76,13,1.88,16,0.77,18,2.156,19,0.006,20,1.228,21,0.494,22,1.454,28,2.266,29,0.254,30,0.932,34,0.057,35,0.233,44,2.13,50,0.004,51,0.004,76,2.044,84,2.421,99,0.735,100,1.231,112,1.325,114,1.39,116,2,134,2.786,135,2.044,136,3.205,138,2,139,1.067,152,1.563,272,3.881,453,1.579,454,2.531,456,2.139,457,2.548,463,2.91,465,1.536,466,2.91,468,1.59,470,2.977,472,2.138,473,2.09,481,2.188,488,2.09,544,2.728,551,1.959,651,2.644,1095,2.138,1146,5.809,1354,4.936,1392,5.272,1403,3.786,1952,3.545,1953,3.545,1982,6.687,1984,3.786,1989,6.56,1993,3.545,2097,5.114,2099,4.936,2105,4.108,2152,4.108,2153,4.599,2154,4.599,2155,4.599,2156,4.599,2157,6.142,2158,4.599,2159,4.599,2160,4.599,2161,4.599,2162,4.599,2163,4.599,2164,4.599,2165,4.599]],["title/interfaces/StockTransactionInterface.html",[106,1.83,2166,3.728]],["body/interfaces/StockTransactionInterface.html",[3,0.075,4,0.068,5,0.068,10,0.374,19,0.006,21,0.569,22,1.79,29,0.233,34,0.075,50,0.004,51,0.004,97,1.24,99,0.777,106,2.288,108,3.099,111,3.365,272,3.183,598,4.957,1011,2.376,1095,2.81,1141,3.857,1448,4.976,1969,4.195,1971,7.318,2027,4.406,2063,6.852,2142,7.942,2143,7.942,2145,6.852,2166,5.923,2167,6.044]],["title/injectables/StockTransactionService.html",[0,1.308,2097,3.357]],["body/injectables/StockTransactionService.html",[0,1.201,2,1.15,3,0.035,4,0.032,5,0.032,10,0.174,11,1.22,13,1.815,16,0.721,18,2.048,19,0.006,20,1.166,21,0.469,22,1.381,28,2.048,29,0.251,30,0.57,34,0.035,35,0.142,38,3.44,39,1.757,44,1.925,45,0.737,47,3.44,48,4.005,50,0.003,51,0.003,55,3.89,76,2.777,84,1.535,85,3.754,90,3.921,91,2.082,99,0.711,111,2.97,152,1.509,200,0.673,262,1.458,272,3.583,374,3.613,391,2.315,453,1.095,454,1.984,546,2.973,555,1.523,598,4.376,624,1.25,696,1.523,1011,2.456,1095,2.064,1141,1.794,1267,1.951,1345,3.966,1368,3.966,1395,2.512,1409,4.614,1974,1.951,1992,4.15,1994,2.315,2014,4.15,2015,2.315,2023,3.081,2025,2.315,2026,2.167,2027,3.236,2028,2.315,2029,6.225,2031,3.655,2032,3.655,2036,3.422,2038,3.655,2042,3.655,2044,3.422,2045,2.315,2053,2.315,2067,4.529,2068,4.529,2077,3.655,2097,3.081,2103,2.049,2104,2.512,2145,4.816,2166,6.374,2168,2.512,2169,5.501,2170,5.501,2171,2.812,2172,5.501,2173,5.501,2174,2.812,2175,4.439,2176,2.812,2177,2.812,2178,2.812,2179,2.812,2180,4.439,2181,2.812,2182,2.812,2183,2.812,2184,2.812,2185,2.812,2186,2.812,2187,2.812,2188,2.812,2189,2.812,2190,2.812,2191,2.812,2192,2.812,2193,2.512,2194,2.812,2195,4.439,2196,4.439,2197,4.439,2198,2.812,2199,4.439,2200,4.439,2201,2.812,2202,2.812,2203,2.812,2204,2.812,2205,2.812,2206,2.812,2207,2.812,2208,2.812,2209,2.812,2210,2.812,2211,2.812,2212,2.812,2213,2.812]],["title/classes/Supplier.html",[35,0.245,1108,3.086]],["body/classes/Supplier.html",[3,0.075,4,0.068,5,0.068,10,0.372,16,0.775,19,0.006,20,1.298,21,0.55,29,0.232,34,0.095,35,0.304,39,1.552,45,2.403,50,0.004,51,0.004,93,0.842,97,1.236,99,0.708,100,1.238,200,1.438,231,1.847,245,4.02,250,3.468,253,2.457,260,2.315,261,2.318,271,3.57,275,2.671,297,5.181,509,2.929,627,5.314,1108,4.885,2214,4.948,2215,6.01,2216,6.01,2217,6.01,2218,4.632,2219,5.369]],["title/controllers/SupplierController.html",[112,1.393,2220,3.728]],["body/controllers/SupplierController.html",[3,0.058,4,0.052,5,0.052,10,0.289,11,1.776,16,0.774,18,2.168,19,0.006,20,1.234,21,0.521,22,1.462,28,2.277,29,0.255,30,0.944,34,0.058,35,0.236,36,2.071,44,2.141,50,0.004,51,0.004,84,2.431,99,0.737,100,1.237,112,1.342,114,1.408,116,2.027,134,2.811,135,2.071,136,2.811,138,2.027,139,1.081,152,1.583,453,1.594,454,2.545,456,2.159,457,2.566,463,2.937,465,1.556,466,2.937,468,1.611,470,3.004,472,2.166,473,2.117,476,1.797,478,1.763,481,2.217,488,2.117,544,2.753,551,1.984,651,2.679,1104,6.321,1108,2.973,1403,3.835,2220,4.981,2221,4.162,2222,4.162,2223,4.659,2224,4.659,2225,4.659,2226,4.659,2227,4.659,2228,6.638,2229,4.659,2230,5.15,2231,4.162,2232,5.32,2233,6.462,2234,4.659,2235,4.659,2236,4.659,2237,4.659,2238,4.659,2239,4.659,2240,4.659]],["title/modules/SupplierModule.html",[162,1.536,188,3.525]],["body/modules/SupplierModule.html",[3,0.073,4,0.066,5,0.066,19,0.006,20,0.908,29,0.283,30,1.195,34,0.073,35,0.298,50,0.004,51,0.004,114,2.286,162,2.651,164,2.564,165,2.564,166,2.678,167,2.678,168,2.564,169,3.794,170,2.678,181,5.946,188,6.996,191,3.436,192,2.678,193,2.678,195,3.877,199,3.104,200,1.41,260,1.782,542,3.192,1108,3.761,1431,4.852,2218,5.828,2220,6.435,2230,6.468,2231,5.266,2241,5.266,2242,5.894,2243,5.266,2244,5.894,2245,5.894,2246,5.266,2247,5.894]],["title/injectables/SupplierService.html",[0,1.308,2230,3.357]],["body/injectables/SupplierService.html",[0,1.611,2,1.697,3,0.052,4,0.047,5,0.047,10,0.257,11,1.637,13,2.436,16,0.771,18,2.181,19,0.006,20,1.242,21,0.499,22,1.471,28,2.181,29,0.255,30,0.842,34,0.052,35,0.21,38,3.663,39,1.072,44,2.05,47,3.663,48,4.152,50,0.003,51,0.003,55,3.99,76,1.845,84,1.945,85,3.434,90,4.028,91,1.571,99,0.718,152,1.411,200,0.993,262,1.363,374,4.028,453,1.469,454,2.418,456,1.99,457,2.06,465,1.99,468,2.06,476,1.601,478,1.571,544,2.537,546,3.623,551,2.537,555,2.248,1104,5.595,1108,2.649,2222,5.322,2228,6.445,2230,4.135,2232,4.904,2246,3.709,2248,3.709,2249,4.151,2250,4.151,2251,5.957,2252,4.151,2253,4.151,2254,4.151,2255,4.151,2256,4.151,2257,4.151,2258,4.151,2259,4.151,2260,4.151,2261,4.151,2262,4.151,2263,4.151,2264,4.151]],["title/classes/TakeAwayOrder.html",[35,0.245,1234,2.974]],["body/classes/TakeAwayOrder.html",[3,0.034,4,0.031,5,0.031,8,1.864,19,0.006,21,0.508,29,0.266,34,0.1,35,0.339,39,2.33,44,1.101,45,1.961,50,0.002,51,0.002,55,1.137,73,0.994,74,1.267,85,2.296,91,1.639,93,0.382,99,0.667,111,1.032,200,0.652,231,1.887,246,1.52,250,3.594,258,3.376,260,2.157,261,1.051,262,1.77,263,1.864,264,1.397,275,1.211,276,3.376,277,2.061,282,2.055,293,2.04,294,1.362,298,2.449,402,1.297,546,2.922,620,2.627,623,1.619,624,1.211,632,2.663,660,1.892,693,4.12,695,1.81,696,1.476,732,2.164,733,1.297,734,1.567,735,1.52,736,1.52,737,2.627,738,1.567,750,2.346,764,3.424,770,2.415,821,2.764,891,1.892,938,1.81,984,2.415,986,3.439,996,1.81,997,1.81,998,2.663,999,1.81,1001,2.491,1003,1.619,1004,2.164,1005,1.676,1006,2.415,1007,1.676,1008,1.567,1011,1.071,1012,1.739,1013,1.739,1014,1.739,1068,1.739,1199,3.314,1210,1.676,1211,1.81,1212,1.81,1214,1.987,1215,1.987,1216,1.987,1217,2.663,1218,1.987,1219,1.987,1220,3.58,1221,1.81,1222,1.987,1223,1.987,1224,1.987,1225,1.987,1226,1.892,1227,1.987,1228,1.987,1229,1.892,1230,1.739,1231,1.892,1232,1.739,1233,1.892,1234,2.663,1235,1.739,1236,1.892,1237,1.676,1238,1.892,1239,1.987,1240,1.739,1241,1.892,1242,1.987,1243,3.006,1244,1.987,1245,3.157,1246,1.987,1247,3.157,1248,1.987,1249,3.157,1250,1.987,1251,1.987,1252,3.157,1253,1.987,1254,1.987,1255,1.987,1256,1.987,1257,1.987,1258,1.987,1259,1.987,1260,1.987,1261,1.987,1262,1.987,1263,6.379,1264,3.157,1265,4.476,1266,3.157,1267,3.006,1268,1.987,1269,1.987,1270,1.892,1271,1.987,1272,1.987,1273,1.987,1274,1.987,1275,3.157,1276,1.987,1277,3.157,1278,3.157,1279,3.157,1280,1.892,1281,1.987,1282,1.987,1283,1.987,1284,1.987,1285,1.987,1286,1.987,1287,3.157,1288,1.987,1289,1.987,1290,3.157,1291,1.987]],["title/interfaces/TakeAwayOrderInterface.html",[106,1.83,1676,3.525]],["body/interfaces/TakeAwayOrderInterface.html",[3,0.086,4,0.078,5,0.078,8,2.886,10,0.428,19,0.006,21,0.428,29,0.253,34,0.086,50,0.005,51,0.005,97,1.347,106,2.613,108,3.54,453,1.703,770,3.85,993,5.957,998,5.729,1001,3.97,1003,4.101,1674,5.684,1676,6.083,1686,6.913,2265,6.168,2266,6.168]],["title/classes/Ticket.html",[35,0.245,95,3.212]],["body/classes/Ticket.html",[3,0.055,4,0.05,5,0.05,10,0.274,16,0.809,19,0.006,21,0.574,29,0.273,34,0.078,35,0.224,39,1.141,45,2.499,50,0.004,51,0.004,73,1.612,74,2.054,93,0.619,95,4.79,97,1.005,98,3.352,99,0.683,100,1.293,111,2.729,200,1.057,231,2.761,250,3.401,253,2.949,257,3.533,258,3.406,260,1.882,261,1.704,262,2.045,263,2.708,264,2.265,275,1.964,276,2.709,277,2.102,294,2.208,298,3.892,501,4.434,509,3.817,598,4.021,1050,4.601,1127,5.936,1128,5.558,1133,5.558,1136,5.005,1139,5.256,1140,3.637,1141,2.819,1142,3.637,2267,3.637,2268,4.418,2269,4.418,2270,4.418,2271,4.418,2272,4.418,2273,4.418,2274,5.434,2275,4.418,2276,3.637,2277,4.418,2278,4.418,2279,4.418,2280,3.405,2281,3.947]],["title/controllers/TicketController.html",[112,1.393,2282,3.728]],["body/controllers/TicketController.html",[3,0.041,4,0.037,5,0.037,10,0.205,11,1.384,13,1.353,16,0.739,18,2.09,19,0.006,20,1.19,21,0.479,22,1.41,28,2.173,29,0.274,30,0.671,34,0.041,35,0.167,38,1.503,39,1.575,44,2.043,47,1.503,48,2.289,50,0.003,51,0.003,55,2.544,76,2.239,84,2.157,85,1.409,90,2.517,91,1.252,92,5.255,95,3.345,99,0.75,100,1.181,107,3.671,111,1.906,112,0.953,114,1,116,1.439,134,2.965,135,1.471,136,1.439,138,1.439,139,0.768,140,2.197,143,1.742,152,1.712,154,5.02,239,1.965,263,2.357,374,1.653,453,1.504,454,2.165,456,1.683,457,1.742,463,2.289,465,1.105,466,1.503,468,1.144,470,1.538,472,1.538,473,1.503,476,1.276,478,1.252,486,1.653,488,1.503,526,3.097,544,2.145,551,1.409,651,1.902,677,4.051,1124,6.036,1136,4.732,1139,2.412,1141,2.111,1350,6.411,1351,5.856,1390,2.412,1408,3.671,1409,3.891,1666,2.724,1675,2.724,1682,2.724,1744,6.091,1864,2.956,2282,3.882,2283,2.956,2284,6.098,2285,6.098,2286,3.308,2287,6.501,2288,5.037,2289,3.308,2290,6.817,2291,3.308,2292,5.037,2293,3.308,2294,3.308,2295,3.308,2296,3.308,2297,3.308,2298,3.308,2299,3.308,2300,3.308,2301,3.308,2302,3.308,2303,4.233,2304,2.956,2305,4.146,2306,3.671,2307,2.956,2308,3.308,2309,3.308,2310,2.956,2311,2.956,2312,3.308,2313,3.308,2314,3.308,2315,3.308,2316,3.308,2317,3.308,2318,3.308,2319,3.308,2320,5.037,2321,3.308,2322,3.308,2323,3.308,2324,3.308,2325,3.308,2326,3.308]],["title/interfaces/TicketInterface.html",[106,1.83,2306,3.525]],["body/interfaces/TicketInterface.html",[3,0.072,4,0.065,5,0.065,10,0.355,19,0.006,21,0.583,22,1.355,29,0.265,34,0.072,50,0.004,51,0.004,97,1.199,98,4.052,99,0.769,106,2.171,108,2.941,111,3.299,263,3.015,501,5.36,598,4.861,1050,5.563,1127,7.176,1128,6.719,1133,6.719,1136,6.05,1139,6.007,1140,4.722,1141,3.66,1142,4.722,2274,6.05,2276,4.722,2306,5.416,2327,5.124,2328,5.124]],["title/modules/TicketModule.html",[162,1.536,189,3.525]],["body/modules/TicketModule.html",[3,0.069,4,0.062,5,0.062,19,0.006,20,1.114,29,0.287,30,1.115,34,0.069,35,0.278,50,0.004,51,0.004,95,3.653,114,2.185,162,2.564,164,2.392,165,2.392,166,2.499,167,2.499,168,2.392,169,3.669,170,2.499,175,5.836,189,7.04,190,5.836,191,3.285,192,2.499,193,2.499,195,3.706,199,2.896,200,1.316,260,2.185,347,4.527,542,2.978,1707,4.527,2274,3.817,2276,4.527,2280,5.572,2282,6.224,2303,6.348,2304,4.913,2328,4.913,2329,4.913,2330,5.499,2331,4.913,2332,5.499,2333,5.499,2334,4.913,2335,5.572,2336,5.499,2337,5.499]],["title/injectables/TicketService.html",[0,1.308,2303,3.357]],["body/injectables/TicketService.html",[0,1.387,2,1.385,3,0.042,4,0.038,5,0.038,10,0.21,11,1.409,13,2.097,16,0.767,18,2.191,19,0.006,20,1.248,21,0.502,22,1.478,28,2.191,29,0.253,30,0.687,34,0.042,35,0.171,38,3.681,39,0.875,44,2.06,47,3.681,48,4.163,50,0.003,51,0.003,55,3.997,76,1.506,84,2.177,85,3.45,90,4.047,91,1.282,95,2.25,99,0.737,107,5.029,152,1.151,200,0.81,262,1.112,374,4.047,453,1.265,454,2.191,456,1.713,457,1.773,465,1.713,468,1.773,478,1.282,501,2.083,544,2.184,546,3.283,551,2.184,555,1.834,598,4.133,1136,4.789,1139,2.469,1141,2.161,1409,4.73,1631,2.611,1774,3.026,2036,3.952,2136,2.788,2287,6.08,2303,3.559,2305,2.788,2306,5.029,2307,3.026,2310,3.026,2311,3.026,2334,3.026,2338,3.026,2339,5.127,2340,5.127,2341,3.387,2342,3.387,2343,5.127,2344,5.127,2345,3.387,2346,5.127,2347,3.387,2348,3.387,2349,3.387,2350,3.387,2351,3.387,2352,3.387,2353,3.387,2354,3.387,2355,3.387,2356,3.387,2357,3.387,2358,3.387,2359,5.127,2360,3.387,2361,3.387,2362,3.387,2363,3.387]],["title/classes/TicketUpdates.html",[35,0.245,2274,3.357]],["body/classes/TicketUpdates.html",[3,0.077,4,0.07,5,0.07,10,0.384,16,0.718,19,0.006,21,0.53,29,0.259,34,0.097,35,0.314,39,1.602,45,1.626,50,0.005,51,0.005,73,3.274,74,2.883,93,0.869,97,1.261,98,3.974,99,0.716,100,1.148,200,1.484,250,3.397,253,2.536,257,3.071,258,3.398,260,2.361,261,2.392,262,2.565,275,2.757,276,2.698,277,2.951,2274,5.421,2335,4.781,2364,7.038,2365,5.106,2366,6.202,2367,6.202,2368,5.541]],["title/interfaces/Token.html",[106,1.83,328,3.525]],["body/interfaces/Token.html",[3,0.088,4,0.08,5,0.08,10,0.439,19,0.006,21,0.525,34,0.088,50,0.005,51,0.005,97,1.368,99,0.778,106,2.683,108,3.634,328,6.179,408,8.397,409,7.737,2369,6.332]],["title/classes/UpdateBillingDto.html",[35,0.245,469,3.525]],["body/classes/UpdateBillingDto.html",[3,0.09,4,0.081,5,0.081,8,2.967,19,0.006,29,0.26,34,0.09,35,0.366,50,0.005,51,0.005,93,1.013,139,1.679,453,1.784,459,5.019,469,6.254,477,5.953,774,5.953,2370,6.461,2371,8.58,2372,3.441]],["title/classes/UpdateBranchDto.html",[35,0.245,524,3.525]],["body/classes/UpdateBranchDto.html",[3,0.057,4,0.052,5,0.052,8,2.211,10,0.284,16,0.77,19,0.006,20,1.134,21,0.562,22,1.703,29,0.254,34,0.057,35,0.373,50,0.004,51,0.004,93,0.643,97,1.032,99,0.635,100,1.23,104,2.545,105,1.457,139,1.065,230,3.618,231,2.868,237,3.771,240,3.423,245,3.071,293,3.013,453,1.132,504,6.059,505,6.059,506,6.059,518,3.185,524,4.661,528,3.778,761,4.526,762,3.853,763,3.677,767,2.485,776,3.778,777,4.445,778,3.537,779,3.778,780,4.1,781,4.661,783,4.1,784,4.661,785,4.1,786,5.526,787,5.526,788,5.803,789,4.929,790,4.1,791,4.1,792,2.639,793,2.639,794,4.668,2372,2.184,2373,7.745,2374,6.395,2375,5.713]],["title/classes/UpdateCartDto.html",[35,0.245,573,3.525]],["body/classes/UpdateCartDto.html",[3,0.09,4,0.081,5,0.081,8,2.967,19,0.006,29,0.26,34,0.09,35,0.366,50,0.005,51,0.005,93,1.013,139,1.679,453,1.784,568,5.019,573,6.254,577,5.953,796,5.953,2372,3.441,2376,6.461,2377,8.58]],["title/classes/UpdateCouponDto.html",[35,0.245,642,3.525]],["body/classes/UpdateCouponDto.html",[3,0.058,4,0.053,5,0.053,8,2.242,10,0.29,16,0.802,19,0.006,20,1.146,21,0.54,29,0.226,34,0.058,35,0.328,45,1.7,50,0.004,51,0.004,93,0.655,97,1.046,99,0.64,100,1.282,104,2.242,105,1.486,139,1.086,230,3.964,231,2.934,237,3.89,240,3.567,282,2.313,293,3.039,453,1.154,622,4.746,623,4.418,624,3.306,637,3.248,642,4.725,646,3.852,760,3.615,761,4.573,762,3.975,786,5.572,787,5.572,788,4.725,789,4.996,794,4.477,824,3.852,825,5.791,827,4.181,828,7.173,829,4.181,830,5.791,831,4.181,832,5.336,834,4.181,835,4.181,836,4.181,837,4.028,2372,2.227,2375,4.181,2378,7.99,2379,6.482,2380,4.679,2381,6.482]],["title/classes/UpdateCustomerDto.html",[35,0.245,1177,3.525]],["body/classes/UpdateCustomerDto.html",[3,0.09,4,0.081,5,0.081,8,2.967,19,0.006,29,0.26,34,0.09,35,0.366,50,0.005,51,0.005,93,1.013,139,1.679,453,1.784,838,5.019,840,5.953,1177,6.254,1181,5.953,2372,3.441,2382,6.461,2383,8.58]],["title/classes/UpdateDeliveryDto.html",[35,0.245,1299,3.525]],["body/classes/UpdateDeliveryDto.html",[3,0.09,4,0.081,5,0.081,8,2.967,19,0.006,29,0.26,34,0.09,35,0.366,50,0.005,51,0.005,93,1.013,139,1.679,453,1.784,844,4.803,859,5.574,860,5.953,1299,6.254,2372,3.441,2384,6.461,2385,8.58]],["title/classes/UpdateEmployeeDto.html",[35,0.245,1384,3.728]],["body/classes/UpdateEmployeeDto.html",[3,0.039,4,0.036,5,0.036,10,0.196,16,0.8,19,0.006,21,0.565,22,1.739,29,0.23,34,0.039,35,0.3,45,1.277,50,0.003,51,0.003,73,2.624,84,2.12,93,0.443,97,0.786,98,4.157,99,0.682,100,1.279,104,2.304,105,1.006,139,0.735,238,1.667,240,3.763,245,3.001,247,2.893,257,1.245,267,5.68,268,2.197,269,4.777,270,2.197,271,1.881,282,1.919,291,4.852,292,4.119,293,2.875,295,4.119,296,4.119,297,3.649,300,4.992,302,4.119,303,4.992,304,4.119,727,3.787,760,3.715,761,3.649,762,3.925,763,2.8,767,1.715,771,2.308,837,2.637,856,3.55,895,2.606,896,6.426,898,2.829,899,4.351,900,4.351,901,2.829,903,4.351,906,4.351,907,6.785,911,4.351,916,4.351,917,4.351,920,3.754,921,2.829,924,4.351,925,4.351,926,4.351,927,4.009,928,2.829,930,5.953,933,3.55,936,2.829,937,2.829,938,3.235,939,2.829,940,2.829,941,2.44,942,2.829,943,2.829,944,2.829,1107,6.895,1118,7.269,1384,3.754,2386,7.889,2387,3.166,2388,3.166,2389,3.166,2390,3.166,2391,4.87,2392,3.166,2393,4.87,2394,3.166,2395,3.166,2396,3.166,2397,3.166,2398,3.166,2399,3.166,2400,3.166,2401,3.166,2402,3.166,2403,3.166,2404,3.166,2405,3.166]],["title/classes/UpdateLocationDto.html",[35,0.245,1495,3.525]],["body/classes/UpdateLocationDto.html",[3,0.043,4,0.039,5,0.039,8,2.165,10,0.214,16,0.804,19,0.006,20,1.496,21,0.564,22,1.744,29,0.211,34,0.043,35,0.353,50,0.003,51,0.003,93,0.484,97,0.84,98,3.475,99,0.755,100,1.285,104,3.025,105,1.097,139,0.801,230,3.813,237,3.865,240,3.431,282,1.499,453,0.852,604,2.517,605,2.517,610,5.079,611,5.079,612,5.079,613,5.079,614,5.079,615,5.079,616,5.079,617,5.079,762,4.048,763,2.992,767,1.87,777,1.771,778,2.661,784,3.792,793,1.986,797,5.726,798,2.661,804,4.283,805,4.283,808,4.283,809,4.283,810,4.283,811,4.283,812,4.283,813,4.283,814,4.01,815,4.283,816,4.283,817,4.283,818,4.283,819,4.283,820,4.01,821,3.32,822,4.283,897,2.661,951,3.085,953,3.085,954,3.085,957,3.085,961,3.085,963,3.085,965,3.085,967,3.085,969,3.085,1495,3.792,2372,1.643,2406,7.939,2407,5.202,2408,3.453,2409,3.453,2410,3.453,2411,3.453,2412,3.453,2413,3.453,2414,3.453,2415,3.453,2416,3.453,2417,3.453,2418,3.453,2419,3.453,2420,3.453]],["title/classes/UpdateMaterialDto.html",[35,0.245,1538,3.525]],["body/classes/UpdateMaterialDto.html",[3,0.09,4,0.081,5,0.081,8,2.967,19,0.006,29,0.26,34,0.09,35,0.366,50,0.005,51,0.005,93,1.013,139,1.679,453,1.784,970,5.019,972,5.953,1538,6.254,1542,5.953,2372,3.441,2421,6.461,2422,8.58]],["title/classes/UpdateOfferDto.html",[35,0.245,1581,3.525]],["body/classes/UpdateOfferDto.html",[3,0.053,4,0.048,5,0.048,8,2.095,10,0.263,16,0.8,19,0.006,20,1.088,21,0.539,22,1.74,29,0.214,34,0.053,35,0.307,50,0.003,51,0.003,93,0.595,97,0.978,99,0.675,100,1.279,104,2.661,105,1.35,139,0.987,230,3.955,231,2.93,237,3.871,240,3.559,257,2.382,282,2.217,293,2.913,453,1.048,622,4.505,624,3.138,727,3.866,733,3.359,760,3.937,761,4.341,762,3.955,786,5.341,787,6.176,794,4.853,837,3.824,908,5.413,973,2.95,975,3.499,976,4.9,983,5.413,984,3.379,986,4.911,991,5.413,992,5.413,1071,3.798,1581,4.416,1586,3.499,2372,2.023,2423,7.949,2424,6.059,2425,4.251,2426,4.251,2427,4.251,2428,4.251,2429,4.251,2430,4.251,2431,4.251,2432,4.251,2433,4.251,2434,4.251,2435,4.251]],["title/classes/UpdatePaymentDto.html",[35,0.245,1793,3.525]],["body/classes/UpdatePaymentDto.html",[3,0.09,4,0.081,5,0.081,8,2.967,19,0.006,29,0.26,34,0.09,35,0.366,50,0.005,51,0.005,93,1.013,139,1.679,453,1.784,753,4.296,769,5.574,1027,5.953,1793,6.254,2372,3.441,2436,6.461,2437,8.58]],["title/classes/UpdateProductDto.html",[35,0.245,1857,3.525]],["body/classes/UpdateProductDto.html",[3,0.053,4,0.048,5,0.048,8,2.092,10,0.263,16,0.844,19,0.006,20,1.086,21,0.569,22,1.791,29,0.264,34,0.053,35,0.306,50,0.003,51,0.003,93,0.594,97,0.977,99,0.674,100,1.349,104,2.439,105,1.347,139,0.985,238,2.234,263,2.439,282,2.215,453,1.046,746,2.818,760,3.374,762,4.171,837,3.819,976,4.895,1006,3.933,1008,2.439,1026,3.492,1046,2.944,1048,3.492,1049,5.806,1050,4.5,1051,5.806,1052,5.806,1053,5.806,1054,5.806,1055,5.436,1057,4.41,1060,4.895,1062,3.79,1069,3.79,1073,5.436,1076,5.141,1079,5.405,1080,5.141,1081,3.092,1082,3.27,1083,3.492,1084,3.79,1085,3.79,1086,3.79,1857,4.41,1862,3.492,2372,2.019,2438,8.3,2439,6.05,2440,4.242,2441,4.242,2442,4.242,2443,4.242,2444,4.242,2445,4.242,2446,4.242,2447,4.242,2448,4.242,2449,6.05,2450,4.242,2451,4.242,2452,4.242,2453,4.242,2454,4.242]],["title/classes/UpdateRefreshDto.html",[35,0.245,2455,3.981]],["body/classes/UpdateRefreshDto.html",[3,0.087,4,0.078,5,0.078,10,0.432,16,0.641,19,0.006,21,0.432,29,0.212,34,0.087,35,0.425,50,0.005,51,0.005,93,0.976,97,1.355,99,0.669,100,1.024,101,5.374,103,3.237,104,2.903,105,2.214,420,6.565,2455,6.91,2456,6.91,2457,6.229,2458,6.972]],["title/classes/UpdateStockDto.html",[35,0.245,1945,3.525]],["body/classes/UpdateStockDto.html",[3,0.09,4,0.081,5,0.081,8,2.967,19,0.006,29,0.26,34,0.09,35,0.366,50,0.005,51,0.005,93,1.013,139,1.679,453,1.784,1087,5.019,1089,5.953,1945,6.254,1950,5.953,2372,3.441,2459,6.461,2460,8.58]],["title/classes/UpdateStockItemDto.html",[35,0.245,1990,3.728]],["body/classes/UpdateStockItemDto.html",[3,0.089,4,0.081,5,0.081,8,2.949,19,0.006,29,0.259,34,0.089,35,0.362,50,0.005,51,0.005,93,1.003,139,1.662,453,1.766,1092,5.218,1093,5.218,1095,3.964,1096,5.894,1990,6.573,1996,6.396,1997,5.894,2372,3.407,2461,8.528]],["title/classes/UpdateStockItemLogsDto.html",[35,0.245,2012,3.728]],["body/classes/UpdateStockItemLogsDto.html",[3,0.087,4,0.079,5,0.079,8,2.909,19,0.006,29,0.255,34,0.087,35,0.354,50,0.005,51,0.005,93,0.98,139,1.624,453,1.725,1011,3.546,1093,5.099,1095,3.91,1097,6.574,1099,5.758,2012,6.483,2016,6.249,2017,5.758,2372,4.292]],["title/classes/UpdateStockTransactionDto.html",[35,0.245,2157,3.728]],["body/classes/UpdateStockTransactionDto.html",[3,0.089,4,0.08,5,0.08,8,2.943,19,0.006,29,0.258,34,0.089,35,0.361,50,0.005,51,0.005,93,0.999,139,1.656,453,1.76,1146,6.63,1148,5.5,1392,5.874,2157,6.56,2372,4.328,2462,6.375]],["title/classes/UpdateSupplierDto.html",[35,0.245,2228,3.525]],["body/classes/UpdateSupplierDto.html",[3,0.062,4,0.056,5,0.056,8,2.334,10,0.307,16,0.705,19,0.006,20,1.326,21,0.581,22,1.62,29,0.261,34,0.062,35,0.388,45,1.301,50,0.004,51,0.004,93,0.695,97,1.089,98,3.565,99,0.686,100,1.127,104,2.652,105,1.576,139,1.152,240,3.365,245,3.591,247,4.009,257,1.951,297,4.715,453,1.224,759,4.085,760,3.763,762,3.658,763,3.881,767,2.687,771,3.617,772,4.085,777,4.414,792,2.853,793,2.853,920,5.202,941,3.825,1104,3.444,1106,4.085,1107,6.313,1108,5.666,1109,4.433,1111,6.029,1114,6.029,1116,4.433,1118,6.775,1119,4.433,1120,4.433,2228,4.919,2232,4.085,2372,2.361,2463,7.353,2464,6.748,2465,4.962,2466,4.962,2467,4.962,2468,4.962,2469,4.962]],["title/classes/UpdateTicketDto.html",[35,0.245,2287,3.525]],["body/classes/UpdateTicketDto.html",[3,0.09,4,0.081,5,0.081,8,2.967,19,0.006,29,0.26,34,0.09,35,0.366,50,0.005,51,0.005,93,1.013,139,1.679,453,1.784,1124,5.271,1126,5.953,2287,6.254,2305,5.953,2372,3.441,2470,6.461,2471,8.58]],["title/classes/UpdateUserDto.html",[35,0.245,2472,3.525]],["body/classes/UpdateUserDto.html",[3,0.067,4,0.06,5,0.06,8,2.454,10,0.331,16,0.812,19,0.006,21,0.547,22,1.753,29,0.257,34,0.067,35,0.359,50,0.004,51,0.004,93,0.749,97,1.145,99,0.75,100,1.297,104,2.934,105,1.698,143,4.779,238,2.816,239,3.176,241,4.402,319,4.731,322,3.176,420,5.805,453,1.319,699,5.29,700,5.528,713,4.925,762,4.034,1157,4.402,2372,2.545,2456,7.471,2472,5.173,2473,7.096,2474,5.347,2475,5.347,2476,7.964,2477,5.347,2478,5.347,2479,5.347,2480,5.347,2481,5.347,2482,5.347,2483,5.347,2484,4.402]],["title/classes/User.html",[35,0.245,73,1.764]],["body/classes/User.html",[3,0.056,4,0.05,5,0.05,10,0.277,16,0.828,19,0.006,21,0.581,29,0.251,34,0.09,35,0.226,39,1.153,45,2.535,50,0.004,51,0.004,73,2.288,93,0.625,97,1.012,99,0.74,100,1.324,143,4.526,200,1.068,231,2.546,239,2.652,245,3.282,250,3.513,253,2.565,257,3.258,260,1.896,261,1.722,262,1.466,271,2.652,275,1.984,298,3.574,319,4.308,400,5.286,401,3.675,402,2.124,420,5.286,509,3.535,598,4.044,627,5.46,699,4.817,700,5.033,1153,3.988,1322,4.572,1631,5.59,2485,3.441,2486,6.479,2487,6.273,2488,4.464,2489,4.464,2490,4.464,2491,4.464,2492,4.464,2493,4.464,2494,4.464,2495,4.464,2496,5.604,2497,4.464,2498,3.675,2499,4.464,2500,4.464,2501,3.441,2502,3.988]],["title/controllers/UsersController.html",[112,1.393,2503,3.728]],["body/controllers/UsersController.html",[3,0.049,4,0.044,5,0.044,10,0.244,11,1.575,16,0.782,18,2.229,19,0.006,20,1.269,21,0.51,22,1.503,28,2.301,29,0.258,30,0.798,34,0.049,35,0.199,36,1.75,39,1.48,44,2.163,50,0.003,51,0.003,58,4.158,84,2.3,99,0.738,100,1.25,112,1.134,114,1.19,116,1.713,134,2.941,135,1.75,136,2.941,138,1.713,139,0.914,152,1.338,322,4.895,453,1.414,454,2.359,456,1.915,457,1.983,463,2.605,465,1.315,466,2.605,468,1.361,470,2.665,472,1.83,473,1.789,476,1.518,478,1.49,481,1.873,486,1.967,488,1.789,544,2.442,551,1.677,651,2.264,777,4.361,781,4.179,792,2.264,793,2.264,1350,6.669,1351,6.2,1390,2.87,1408,4.179,2472,6.353,2484,4.72,2503,4.419,2504,3.517,2505,3.937,2506,6.762,2507,5.733,2508,3.937,2509,5.733,2510,3.937,2511,3.517,2512,3.937,2513,3.937,2514,3.937,2515,3.937,2516,3.937,2517,5.733,2518,3.937,2519,6.041,2520,3.937,2521,3.517,2522,3.937,2523,3.937,2524,3.937,2525,3.937,2526,3.937,2527,3.937,2528,3.937,2529,3.937,2530,3.937,2531,3.937]],["title/modules/UsersModule.html",[162,1.536,190,3.086]],["body/modules/UsersModule.html",[3,0.072,4,0.065,5,0.065,19,0.006,20,0.886,29,0.281,30,1.166,34,0.072,35,0.291,50,0.004,51,0.004,58,6.063,73,2.098,114,2.25,162,2.621,164,2.502,165,2.502,166,2.613,167,2.613,168,2.502,169,3.75,170,3.75,181,5.908,190,6.158,191,3.382,192,2.613,193,2.613,195,3.816,199,3.029,200,1.376,260,1.739,277,2.737,542,3.115,1431,4.734,2501,5.737,2503,6.36,2521,5.138,2532,5.138,2533,5.751,2534,5.138,2535,5.138,2536,5.751,2537,5.751,2538,5.138]],["title/injectables/UsersService.html",[0,1.308,58,2.974]],["body/injectables/UsersService.html",[0,0.867,2,0.773,3,0.024,4,0.021,5,0.021,10,0.117,11,0.881,13,1.311,16,0.773,18,2.247,19,0.006,20,1.28,21,0.515,22,1.515,28,2.247,29,0.232,30,0.383,34,0.024,35,0.096,38,2.718,39,1.732,44,2.112,45,1.443,47,2.718,48,3.048,49,2.4,50,0.002,51,0.002,55,4.017,58,1.971,65,5.955,73,2.899,76,1.425,84,2.13,85,3.655,89,2.864,90,3.721,91,2.952,99,0.775,119,2.639,120,2.864,128,2.864,140,3.266,143,4.02,200,0.452,229,5.02,239,1.123,245,0.789,262,0.621,319,1.904,322,3.27,374,2.989,391,1.556,393,2.639,400,1.378,402,0.899,412,1.689,420,2.337,421,1.689,422,1.689,427,1.689,453,0.791,454,1.562,456,1.071,457,1.109,465,1.071,468,1.109,476,0.729,478,0.715,544,1.365,546,2.34,551,1.365,555,1.024,595,5.169,598,1.054,601,1.689,693,1.162,696,1.736,777,3.439,792,1.087,793,1.087,794,1.054,1068,1.206,1497,4.234,1631,4.243,1666,3.436,2136,1.556,2193,3.729,2472,5.564,2484,2.639,2486,2.864,2498,1.556,2511,2.864,2519,4.918,2538,1.689,2539,1.689,2540,4.174,2541,3.206,2542,4.174,2543,3.206,2544,3.206,2545,3.206,2546,3.206,2547,3.206,2548,4.174,2549,3.206,2550,1.89,2551,1.89,2552,3.206,2553,1.89,2554,1.89,2555,3.206,2556,4.174,2557,1.89,2558,1.89,2559,3.206,2560,1.89,2561,1.89,2562,4.917,2563,1.89,2564,4.174,2565,1.89,2566,3.206,2567,1.89,2568,1.89,2569,3.206,2570,1.89,2571,1.89,2572,3.206,2573,1.89,2574,3.206,2575,1.89,2576,1.89,2577,3.206,2578,1.89,2579,1.89,2580,4.917,2581,1.89,2582,1.89,2583,3.206,2584,1.89,2585,3.206,2586,1.89,2587,1.89,2588,1.89,2589,1.89,2590,3.206,2591,1.89,2592,1.89,2593,1.89,2594,1.89,2595,1.89,2596,1.89,2597,1.89,2598,1.89,2599,1.89,2600,4.174,2601,1.89,2602,1.89,2603,1.89,2604,4.174,2605,3.206,2606,1.89,2607,1.89,2608,1.89,2609,4.174,2610,1.89,2611,1.89,2612,3.206,2613,1.89,2614,1.89,2615,1.89,2616,3.206,2617,1.89,2618,1.89,2619,1.89,2620,1.89,2621,4.174,2622,1.89,2623,1.89,2624,1.89,2625,1.89,2626,1.89,2627,1.89,2628,1.89,2629,1.89]],["title/classes/VerifyandRefreshTokenDto.html",[35,0.245,389,3.728]],["body/classes/VerifyandRefreshTokenDto.html",[3,0.077,4,0.069,5,0.069,10,0.381,16,0.714,19,0.006,21,0.481,29,0.236,34,0.077,35,0.393,45,2.037,50,0.004,51,0.004,93,0.861,97,1.254,99,0.713,100,1.141,103,3.284,104,2.945,105,1.953,139,1.427,229,5.91,230,3.53,231,2.749,237,3.704,240,3.176,389,5.987,395,6.563,409,7.01,711,5.391,2630,7.608,2631,5.493,2632,7.768,2633,6.149,2634,7.768,2635,6.149]],["title/coverage.html",[2636,5.459]],["body/coverage.html",[0,2.268,1,1.167,5,0.016,6,1.266,7,1.266,19,0.006,21,0.088,35,0.498,50,0.001,51,0.001,52,1.033,53,1.266,58,0.871,73,0.911,91,0.536,92,1.092,94,1.266,95,1.66,96,1.266,106,2.792,107,1.033,109,1.266,110,1.266,112,2.35,113,1.092,115,1.266,123,1.033,140,0.941,145,1.033,147,0.941,168,0.616,228,1.266,242,0.941,243,4.054,245,1.042,252,0.904,263,0.49,278,0.941,280,0.941,284,0.941,286,0.941,289,0.941,291,1.393,306,0.941,308,1.092,309,1.266,317,1.033,322,1.484,328,1.033,332,1.033,352,1.092,365,1.266,382,1.092,383,1.092,389,1.092,395,1.092,449,1.033,450,1.266,451,1.092,452,1.266,459,0.984,469,1.033,474,0.984,494,1.266,503,2.057,513,1.092,515,1.092,516,1.266,518,0.984,524,1.033,526,0.871,543,1.266,563,1.033,564,1.266,565,1.092,566,1.266,568,0.984,573,1.033,575,0.984,589,1.266,595,1.092,596,1.266,597,1.266,603,3.114,608,1.092,618,1.033,620,0.691,621,2.057,632,0.871,634,1.092,635,1.266,637,0.984,642,1.033,644,0.984,661,1.266,693,6.266,697,1.266,698,2.057,716,1.092,717,2.583,718,1.167,719,1.266,729,0.941,730,1.266,731,2.945,732,0.708,737,0.691,742,0.941,753,0.842,764,1.393,765,1.167,768,1.167,773,1.266,774,2.057,775,1.266,776,2.057,777,0.727,792,1.437,795,1.266,796,2.057,797,1.033,798,2.583,823,1.266,824,2.057,838,0.984,839,1.266,840,2.057,841,1.092,842,1.266,843,1.092,844,0.941,858,1.167,860,2.057,888,1.092,889,1.266,890,1.092,894,1.092,895,2.057,933,1.033,945,1.092,946,1.266,970,0.984,971,1.266,972,2.057,973,0.984,974,1.266,975,2.057,984,0.79,993,0.941,994,2.057,995,2.057,1000,1.092,1002,1.033,1004,0.708,1009,1.092,1011,2.698,1015,1.266,1016,1.266,1027,2.057,1045,1.266,1046,0.984,1047,1.266,1048,2.057,1087,0.984,1088,1.266,1089,2.057,1092,1.033,1093,2.945,1094,1.167,1095,2.142,1096,2.057,1097,1.033,1098,1.167,1099,2.057,1100,1.266,1104,0.984,1105,1.266,1106,2.057,1108,0.904,1121,1.092,1122,1.266,1123,1.092,1124,1.033,1125,1.266,1126,2.057,1146,1.033,1147,1.266,1148,2.583,1149,1.266,1150,1.266,1156,1.266,1157,2.057,1163,2.057,1168,1.167,1170,1.092,1171,1.266,1177,1.033,1179,0.984,1193,1.266,1199,0.871,1200,2.057,1208,1.092,1210,0.871,1211,4.082,1217,0.871,1220,0.941,1230,0.904,1232,0.904,1234,0.871,1235,0.904,1237,0.871,1240,0.904,1243,1.734,1292,1.092,1293,1.266,1299,1.033,1301,0.984,1316,1.266,1339,1.092,1340,1.266,1356,1.092,1384,1.092,1386,0.941,1393,1.092,1439,1.266,1447,1.266,1448,2.057,1453,1.092,1454,1.266,1463,1.167,1464,1.266,1465,1.266,1473,1.266,1488,1.092,1489,1.266,1495,1.033,1497,0.941,1513,1.266,1519,1.167,1520,1.266,1523,1.033,1524,1.266,1531,1.092,1532,1.266,1538,1.033,1540,0.984,1554,1.266,1560,2.057,1569,1.092,1570,1.266,1581,1.033,1584,0.984,1602,1.266,1648,1.092,1649,1.266,1667,0.984,1676,1.033,1715,1.266,1776,2.057,1784,1.092,1786,1.092,1787,1.266,1793,1.033,1795,0.984,1809,1.266,1826,2.057,1837,1.092,1839,1.092,1840,1.266,1857,1.033,1860,0.984,1883,1.266,1910,1.167,1911,1.266,1912,1.266,1914,1.266,1919,1.167,1923,1.266,1924,1.266,1927,2.057,1930,0.984,1932,0.904,1936,1.092,1938,1.092,1939,1.266,1945,1.033,1947,0.941,1959,4.26,1960,2.057,1963,0.984,1966,1.092,1968,1.167,1969,3.198,1970,1.266,1972,1.167,1973,1.266,1975,0.941,1976,2.057,1979,1.092,1981,1.092,1982,2.583,1983,1.266,1990,1.092,1992,0.941,1997,1.167,2003,1.092,2004,1.266,2005,1.092,2006,1.266,2012,1.092,2014,0.941,2017,1.167,2023,0.984,2024,1.266,2029,2.583,2030,1.266,2055,2.057,2061,1.092,2063,1.092,2064,1.266,2065,1.266,2086,2.057,2091,1.092,2097,0.984,2099,1.092,2102,1.092,2103,1.033,2114,1.266,2141,2.057,2152,1.266,2157,1.092,2166,1.092,2168,1.266,2214,2.057,2218,1.092,2220,1.092,2221,1.266,2228,1.033,2230,0.984,2248,1.266,2265,1.266,2266,1.266,2267,2.057,2274,0.984,2280,1.092,2282,1.092,2283,1.266,2287,1.033,2303,0.984,2306,1.033,2327,1.266,2335,1.092,2338,1.266,2364,2.057,2365,2.057,2369,1.266,2370,1.266,2373,1.266,2376,1.266,2378,1.266,2382,1.266,2384,1.266,2386,1.266,2406,1.266,2421,1.266,2423,1.266,2436,1.266,2438,1.266,2455,1.167,2456,2.057,2457,1.266,2459,1.266,2462,1.266,2463,1.266,2470,1.266,2472,1.033,2485,1.926,2501,1.092,2503,1.092,2504,1.266,2539,1.266,2630,1.266,2631,1.266,2636,1.167,2637,1.417,2638,1.417,2639,1.417,2640,8.238,2641,5.842,2642,6.414,2643,5.492,2644,1.266,2645,8.681,2646,9.402,2647,2.232,2648,5.842,2649,8.778,2650,7.377,2651,1.266,2652,1.266,2653,1.417,2654,1.417,2655,3.351,2656,1.417,2657,1.417,2658,2.498,2659,5.085,2660,1.266,2661,6.146,2662,1.417,2663,1.417,2664,4.608,2665,1.417,2666,1.417]],["title/dependencies.html",[165,2.534,2667,3.595]],["body/dependencies.html",[19,0.006,30,1.303,31,4.268,33,3.951,35,0.404,50,0.005,51,0.005,67,4.684,71,7.135,72,5.29,105,2.041,139,1.492,165,2.795,200,1.537,217,5.741,262,2.111,349,5.29,393,5.29,767,3.48,1390,4.684,1460,5.741,2668,6.426,2669,6.426,2670,8.689,2671,6.426,2672,6.426,2673,6.426,2674,6.426,2675,6.426,2676,6.426,2677,6.426,2678,6.426,2679,6.426,2680,6.426,2681,6.426,2682,6.426,2683,6.426,2684,6.426,2685,6.426,2686,6.426,2687,6.426,2688,6.426,2689,6.426]],["title/miscellaneous/enumerations.html",[2690,2.568,2691,5.204]],["body/miscellaneous/enumerations.html",[10,0.187,19,0.006,50,0.003,51,0.003,73,1.71,117,4.188,143,2.469,249,3.254,267,3.114,269,3.114,272,3.418,400,3.417,401,2.481,707,7.442,750,2.539,788,2.197,832,2.481,843,5.738,866,3.859,869,3.859,877,3.859,890,3.614,927,2.481,1001,2.696,1006,2.614,1007,3.538,1035,3.614,1038,3.614,1060,3.254,1073,3.614,1076,3.417,1123,3.614,1128,3.614,1133,3.614,1136,3.254,1238,2.092,1280,3.254,1526,4.188,2026,3.614,2145,3.614,2690,1.923,2691,2.693,2692,3.014,2693,8.035,2694,3.014,2695,4.688,2696,3.014,2697,4.688,2698,3.014,2699,4.688,2700,3.014,2701,3.014,2702,3.014,2703,4.688,2704,4.688,2705,4.688,2706,4.688,2707,4.688,2708,5.753,2709,4.688,2710,4.688,2711,3.014,2712,4.688,2713,3.014,2714,3.014,2715,4.188,2716,6.491,2717,4.688,2718,5.14,2719,4.688,2720,4.688,2721,3.014,2722,4.688,2723,4.688,2724,4.688,2725,4.688,2726,7.445,2727,3.014,2728,4.688,2729,4.688,2730,3.014,2731,4.688,2732,3.014,2733,3.014,2734,3.014,2735,3.014,2736,3.014,2737,2.693,2738,3.014,2739,3.014,2740,2.693,2741,3.014,2742,3.014,2743,3.014,2744,3.014,2745,3.014,2746,3.014,2747,3.014,2748,3.014,2749,3.014,2750,4.688,2751,4.688,2752,4.688,2753,6.491,2754,6.491,2755,3.014,2756,4.688,2757,6.491,2758,4.688,2759,3.014,2760,4.688,2761,4.688,2762,4.688,2763,3.014,2764,3.014,2765,4.688,2766,4.688,2767,4.688,2768,4.688,2769,4.688,2770,4.688,2771,4.688,2772,3.014,2773,3.014,2774,3.014,2775,3.014,2776,3.014,2777,3.014,2778,3.014,2779,3.014,2780,3.014,2781,3.014,2782,4.688,2783,3.014,2784,3.014,2785,3.014,2786,3.014,2787,3.014,2788,3.014,2789,4.688,2790,3.014,2791,4.688,2792,4.688,2793,4.688,2794,3.014,2795,3.014,2796,4.688,2797,4.688,2798,4.688,2799,4.688,2800,4.688,2801,5.753,2802,4.688,2803,4.688,2804,4.688,2805,4.688,2806,4.688,2807,4.688,2808,4.688,2809,4.188,2810,4.688,2811,3.014,2812,4.688,2813,4.688]],["title/miscellaneous/functions.html",[2690,2.568,2814,5.204]],["body/miscellaneous/functions.html",[10,0.439,18,1.917,19,0.005,20,1.092,21,0.439,22,1.293,28,1.917,50,0.005,51,0.005,168,3.946,293,3.691,1057,5.166,2651,6.332,2652,7.574,2660,6.332,2690,4.523,2814,6.332,2815,7.088,2816,7.088,2817,7.088,2818,8.477,2819,8.477,2820,7.088]],["title/index.html",[10,0.249,2821,4.024,2822,4.024]],["body/index.html",[4,0.066,19,0.006,50,0.004,51,0.004,98,2.725,240,3.405,820,4.518,2636,4.825,2809,5.237,2823,5.861,2824,5.861,2825,7.535,2826,5.861,2827,5.861,2828,5.861,2829,5.861,2830,5.861,2831,8.327,2832,5.861,2833,5.861,2834,5.861,2835,5.861,2836,9.464,2837,5.861,2838,5.861,2839,5.861,2840,9.306,2841,5.861,2842,5.861,2843,7.535,2844,5.861,2845,5.861,2846,5.861,2847,5.861,2848,7.535,2849,7.535,2850,5.861,2851,5.861,2852,5.861,2853,7.535,2854,7.535,2855,5.861,2856,5.861,2857,5.861,2858,5.861,2859,5.237,2860,5.861,2861,5.861,2862,5.861,2863,5.861,2864,5.861,2865,5.861,2866,5.861,2867,5.861,2868,5.861,2869,5.861,2870,5.237,2871,5.861,2872,5.861,2873,5.861,2874,5.861,2875,5.861,2876,5.861,2877,5.237]],["title/modules.html",[164,2.884]],["body/modules.html",[19,0.004,50,0.004,51,0.004,163,4.506,164,2.543,173,4.261,174,4.261,175,3.73,176,4.261,177,4.261,178,4.261,179,4.261,180,4.057,181,3.73,182,4.261,183,4.057,184,4.261,185,4.261,186,4.261,187,4.261,188,4.261,189,4.261,190,3.73,2859,9.038,2878,10.117,2879,10.117,2880,10.117]],["title/overview.html",[2881,5.924]],["body/overview.html",[2,1.291,19,0.006,50,0.003,51,0.003,52,4.318,58,4.859,93,0.442,108,1.619,114,0.954,147,3.935,162,1.003,163,7.656,164,1.373,165,1.373,166,1.434,167,1.434,168,1.373,169,1.434,170,1.434,171,2.82,172,2.82,173,6.1,174,5.236,175,5.34,176,5.236,177,5.236,178,5.236,179,5.236,180,5.808,181,5.34,182,5.236,183,5.485,184,6.432,185,5.236,186,5.236,187,6.802,188,5.76,189,6.1,190,5.548,191,2.208,192,1.434,193,1.434,342,2.82,343,2.82,474,4.111,490,2.82,491,2.82,526,4.859,536,2.82,537,2.82,538,2.82,575,4.111,585,2.82,586,2.82,644,4.111,655,2.82,656,2.82,1179,4.111,1189,2.82,1190,2.82,1301,4.111,1310,2.82,1311,2.82,1386,5.249,1424,2.82,1426,2.82,1427,2.82,1497,5.249,1506,2.82,1507,2.82,1508,2.82,1540,4.111,1550,2.82,1551,2.82,1584,5.485,1596,2.82,1597,2.82,1598,2.82,1667,5.485,1700,2.82,1701,2.82,1702,2.82,1795,4.111,1804,2.82,1805,2.82,1860,4.111,1878,2.82,1879,2.82,1947,5.249,1992,5.249,2014,3.935,2093,2.82,2094,2.82,2096,2.82,2097,5.485,2230,4.111,2241,2.82,2243,2.82,2303,4.111,2329,2.82,2331,2.82,2532,2.82,2534,2.82,2535,2.82,2737,2.82,2740,2.82,2881,2.82,2882,3.157,2883,3.157,2884,3.157]],["title/properties.html",[97,0.94,2667,3.595]],["body/properties.html",[19,0.006,50,0.005,51,0.005,97,1.23,98,3.542,2870,6.807,2877,6.807,2885,7.619,2886,7.619,2887,7.619]],["title/miscellaneous/typealiases.html",[2690,2.568,2888,5.825]],["body/miscellaneous/typealiases.html",[10,0.475,19,0.005,21,0.475,50,0.005,51,0.005,2485,5.915,2496,6.856,2498,7.313,2690,4.897,2889,7.674,2890,6.856]],["title/miscellaneous/variables.html",[2690,2.568,2891,5.204]],["body/miscellaneous/variables.html",[10,0.249,19,0.006,21,0.249,45,1.056,50,0.003,51,0.003,99,0.321,140,3.871,143,3.953,243,2.794,278,3.871,279,2.935,284,3.871,285,2.935,289,3.871,290,2.935,298,4.546,306,3.871,307,2.935,332,4.248,503,3.314,513,4.492,514,3.597,603,3.103,608,4.492,609,3.314,618,4.248,619,3.314,621,3.314,632,3.583,633,3.597,707,7.293,1011,2.951,1163,3.314,1168,4.797,1169,3.597,1200,3.314,1208,4.492,1209,3.597,1211,2.674,1217,3.583,1230,3.718,1231,2.794,1232,3.718,1233,2.794,1235,3.718,1236,2.794,1240,3.718,1241,2.794,1560,3.314,1568,3.597,1776,3.314,1784,4.492,1785,3.597,1826,3.314,1837,4.492,1838,3.597,1919,4.797,1927,3.314,1936,4.492,1937,3.597,1959,5.291,1960,4.797,1966,4.492,1967,3.597,1976,4.797,1979,4.492,1980,3.597,2055,4.797,2061,4.492,2062,3.597,2086,4.797,2091,4.492,2092,3.597,2102,4.492,2141,4.797,2151,3.597,2214,3.314,2218,4.492,2219,3.597,2267,3.314,2280,4.492,2281,3.597,2335,4.492,2364,3.314,2365,4.797,2368,3.597,2485,3.103,2501,4.492,2502,3.597,2644,3.597,2647,3.597,2690,2.569,2715,7.116,2718,3.597,2890,3.597,2891,3.597,2892,7.506,2893,4.026,2894,5.827,2895,4.026,2896,4.026,2897,7.506,2898,4.026,2899,4.026,2900,4.026,2901,4.026,2902,4.026,2903,5.827,2904,4.026,2905,4.026,2906,4.026,2907,4.026,2908,4.026]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":693,"title":{},"body":{"injectables/CouponService.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2886,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":2688,"title":{},"body":{"dependencies.html":{}}}],["0.14.1",{"_index":2679,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":2678,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":2684,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2646,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2643,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2659,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2655,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2656,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2654,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2662,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2658,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2648,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2640,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2641,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2642,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2649,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2650,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2661,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":907,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["01'})@isdatestring()@isnotempty",{"_index":918,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["01'})@isdatestring()@isoptional",{"_index":2391,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["0121asd014",{"_index":234,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["0121asdasd21",{"_index":2634,"title":{},"body":{"classes/VerifyandRefreshTokenDto.html":{}}}],["01sdad.asdsds505.asda0wqeq05",{"_index":2632,"title":{},"body":{"classes/VerifyandRefreshTokenDto.html":{}}}],["02",{"_index":787,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{}}}],["03",{"_index":828,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["0987654321",{"_index":1120,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["1",{"_index":1068,"title":{"classes/CreateUserDto-1.html":{}},"body":{"classes/CreateProductDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"injectables/UsersService.html":{}}}],["1.1.23",{"_index":2669,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":832,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{},"miscellaneous/enumerations.html":{}}}],["10.0.0",{"_index":2670,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":2673,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":2674,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":2672,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":986,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateOfferDto.html":{}}}],["1000",{"_index":1445,"title":{},"body":{"classes/EmployeeTransactionDto.html":{}}}],["1000'})@isnumber()@isnotempty",{"_index":1440,"title":{},"body":{"classes/EmployeeTransactionDto.html":{}}}],["11000",{"_index":2597,"title":{},"body":{"injectables/UsersService.html":{}}}],["123",{"_index":926,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["123456789",{"_index":944,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["123456789'})@isoptional()@isstring",{"_index":901,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["1234567890",{"_index":941,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["14",{"_index":1225,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["15",{"_index":2737,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["17.1",{"_index":799,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{}}}],["17.12.1",{"_index":2680,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2882,"title":{},"body":{"overview.html":{}}}],["1990",{"_index":906,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["2.30.1",{"_index":2682,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":788,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"miscellaneous/enumerations.html":{}}}],["2020",{"_index":786,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{}}}],["2023",{"_index":917,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["22",{"_index":2883,"title":{},"body":{"overview.html":{}}}],["25",{"_index":2740,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.1.1",{"_index":2671,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1238,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/enumerations.html":{}}}],["35",{"_index":2743,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3c",{"_index":817,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["3th",{"_index":819,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["4.0.1",{"_index":2685,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":2745,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["404",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["409",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["45",{"_index":927,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"miscellaneous/enumerations.html":{}}}],["5",{"_index":2734,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["5.1.1",{"_index":2677,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2748,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["50000",{"_index":940,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["50000})@isnumber()@isnotempty",{"_index":904,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["50000})@isnumber()@isoptional",{"_index":2389,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860ea",{"_index":936,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860ea'})@ismongoid()@isoptional",{"_index":2402,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860ea'})@isoptional()@ismongoid",{"_index":931,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["507f191e810c19729de860eb",{"_index":937,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860eb'})@ismongoid()@isoptional",{"_index":2404,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["507f191e810c19729de860eb'})@isnotempty()@ismongoid",{"_index":934,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["59",{"_index":1249,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["65d5b8076bf8d67aee25ccd2",{"_index":992,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/UpdateOfferDto.html":{}}}],["65d5b8076bf8d67aee25ccd5",{"_index":991,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/UpdateOfferDto.html":{}}}],["6789",{"_index":943,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["6789'})@isoptional()@isstring",{"_index":928,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["7.2.0",{"_index":2676,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":2689,"title":{},"body":{"dependencies.html":{}}}],["8.1.1",{"_index":2683,"title":{},"body":{"dependencies.html":{}}}],["91",{"_index":2884,"title":{},"body":{"overview.html":{}}}],["999",{"_index":1250,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["_id",{"_index":1631,"title":{},"body":{"injectables/OffersService.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["abc",{"_index":1111,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["access_token",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Token.html":{}}}],["account",{"_index":900,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["accounting",{"_index":2758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accountstatus",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["accountstatus.active",{"_index":2500,"title":{},"body":{"classes/User.html":{}}}],["accountstatus.block",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["action",{"_index":244,"title":{},"body":{"classes/Attendence.html":{},"injectables/BillingService.html":{},"injectables/CartService.html":{},"classes/CreateAttendActionDTO.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{}}}],["action.dto",{"_index":1389,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["action.dto.ts",{"_index":719,"title":{},"body":{"classes/CreateAttendActionDTO.html":{},"coverage.html":{}}}],["action.dto.ts:10",{"_index":722,"title":{},"body":{"classes/CreateAttendActionDTO.html":{}}}],["action.dto.ts:12",{"_index":725,"title":{},"body":{"classes/CreateAttendActionDTO.html":{}}}],["action.dto.ts:13",{"_index":726,"title":{},"body":{"classes/CreateAttendActionDTO.html":{}}}],["action.dto.ts:7",{"_index":724,"title":{},"body":{"classes/CreateAttendActionDTO.html":{}}}],["action.enums",{"_index":266,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateAttendActionDTO.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{}}}],["action.enums.ts",{"_index":2695,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["active",{"_index":2723,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["add",{"_index":2797,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addattend",{"_index":1341,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addattend(@body",{"_index":1406,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addattend(createdto",{"_index":1349,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addbonas",{"_index":1342,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addbonas(id",{"_index":1355,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["added",{"_index":2202,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["addemppdr",{"_index":1343,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addemppdr(user_id",{"_index":1359,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addloan",{"_index":1344,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addloan(id",{"_index":1362,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["addlocation",{"_index":2506,"title":{},"body":{"controllers/UsersController.html":{}}}],["addlocation(createlocationdto",{"_index":2508,"title":{},"body":{"controllers/UsersController.html":{}}}],["addlocationtouser",{"_index":2540,"title":{},"body":{"injectables/UsersService.html":{}}}],["addlocationtouser(userid",{"_index":2553,"title":{},"body":{"injectables/UsersService.html":{}}}],["addrees",{"_index":301,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{}}}],["address",{"_index":896,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["addroletouser",{"_index":119,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["addroletouser(@body",{"_index":155,"title":{},"body":{"controllers/AdminController.html":{}}}],["addroletouser(assignroledto",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["addroletouser(asssignroledto",{"_index":122,"title":{},"body":{"controllers/AdminController.html":{}}}],["addroletouser(userid",{"_index":2555,"title":{},"body":{"injectables/UsersService.html":{}}}],["adds",{"_index":500,"title":{},"body":{"injectables/BillingService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{}}}],["addticketupdate",{"_index":2339,"title":{},"body":{"injectables/TicketService.html":{}}}],["addticketupdate(id",{"_index":2344,"title":{},"body":{"injectables/TicketService.html":{}}}],["addticketupdatedto",{"_index":92,"title":{"classes/AddTicketUpdateDto.html":{}},"body":{"classes/AddTicketUpdateDto.html":{},"controllers/TicketController.html":{},"coverage.html":{}}}],["addticketupdates",{"_index":2284,"title":{},"body":{"controllers/TicketController.html":{}}}],["addticketupdates(ticketid",{"_index":2286,"title":{},"body":{"controllers/TicketController.html":{}}}],["addticketupdatesinterface",{"_index":107,"title":{"interfaces/AddTicketUpdatesInterface.html":{}},"body":{"interfaces/AddTicketUpdatesInterface.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"coverage.html":{}}}],["addtransactiontostock",{"_index":2169,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["addtransactiontostock(transaction",{"_index":2176,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["admin",{"_index":117,"title":{},"body":{"controllers/AdminController.html":{},"miscellaneous/enumerations.html":{}}}],["admin/admin.controller",{"_index":355,"title":{},"body":{"modules/AuthModule.html":{}}}],["admin/dto/admin",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["admin/dto/superuser",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{}}}],["admincontroller",{"_index":113,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["ahmed",{"_index":1103,"title":{},"body":{"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}}}],["ahmed@gmail.com",{"_index":1101,"title":{},"body":{"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}}}],["ali",{"_index":815,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["aliases",{"_index":2889,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":2193,"title":{},"body":{"injectables/StockTransactionService.html":{},"injectables/UsersService.html":{}}}],["amazing",{"_index":2860,"title":{},"body":{"index.html":{}}}],["amount",{"_index":281,"title":{},"body":{"classes/Attendence.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/Payment.html":{}}}],["another",{"_index":1764,"title":{},"body":{"injectables/OrderService.html":{}}}],["any).user._id",{"_index":1408,"title":{},"body":{"controllers/EmployeeController.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/OrderController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["apibody",{"_index":2233,"title":{},"body":{"controllers/SupplierController.html":{}}}],["apiproperty",{"_index":237,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/EmployeeTransactionDto.html":{},"classes/LogoutDto.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["apiproperty({description",{"_index":897,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateLocationDto.html":{}}}],["apiproperty({enum",{"_index":910,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["apiproperty({example",{"_index":230,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/EmployeeTransactionDto.html":{},"classes/LogoutDto.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["apiproperty({type",{"_index":778,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateLocationDto.html":{}}}],["apipropertyoptional",{"_index":1118,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["apipropertyoptional({description",{"_index":1107,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["apipropertyoptional({enum",{"_index":2393,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["apitags",{"_index":138,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":149,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["apitags('billing",{"_index":479,"title":{},"body":{"controllers/BillingController.html":{}}}],["apitags('branch",{"_index":529,"title":{},"body":{"controllers/BranchController.html":{}}}],["apitags('cart",{"_index":578,"title":{},"body":{"controllers/CartController.html":{}}}],["apitags('coupon",{"_index":647,"title":{},"body":{"controllers/CouponController.html":{}}}],["apitags('customer",{"_index":1182,"title":{},"body":{"controllers/CustomerController.html":{}}}],["apitags('delivery",{"_index":1303,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["apitags('employee",{"_index":1397,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["apitags('location",{"_index":1499,"title":{},"body":{"controllers/LocationController.html":{}}}],["apitags('material",{"_index":1543,"title":{},"body":{"controllers/MaterialController.html":{}}}],["apitags('offers",{"_index":1587,"title":{},"body":{"controllers/OffersController.html":{}}}],["apitags('order",{"_index":1679,"title":{},"body":{"controllers/OrderController.html":{}}}],["apitags('payment",{"_index":1797,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apitags('product",{"_index":1865,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('stock",{"_index":1952,"title":{},"body":{"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["apitags('supplier",{"_index":2234,"title":{},"body":{"controllers/SupplierController.html":{}}}],["apitags('tickets",{"_index":2312,"title":{},"body":{"controllers/TicketController.html":{}}}],["apitags('users",{"_index":2522,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":2838,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":354,"title":{},"body":{"modules/AuthModule.html":{}}}],["applications",{"_index":2830,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":163,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approvedby",{"_index":996,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["area",{"_index":813,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["arrayminsize",{"_index":759,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["arrayminsize(1",{"_index":772,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["assignroledto",{"_index":123,"title":{"classes/AssignRoleDto.html":{}},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["assignroledto.role",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["assignroledto.userid",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["asssignroledto",{"_index":127,"title":{},"body":{"controllers/AdminController.html":{}}}],["assuming",{"_index":81,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["async",{"_index":55,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["atguard",{"_index":1,"title":{"injectables/ATGuard.html":{}},"body":{"injectables/ATGuard.html":{},"coverage.html":{}}}],["atstrategy",{"_index":52,"title":{"injectables/ATStrategy.html":{}},"body":{"injectables/ATStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["attend",{"_index":718,"title":{},"body":{"classes/CreateAttendActionDTO.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["attendence",{"_index":242,"title":{"classes/Attendence.html":{}},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"coverage.html":{}}}],["attendence.name",{"_index":1433,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["attendenceactions",{"_index":249,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateAttendActionDTO.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"miscellaneous/enumerations.html":{}}}],["attendenceid",{"_index":1372,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["attendenceschema",{"_index":278,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["attuide",{"_index":1446,"title":{},"body":{"classes/EmployeeTransactionDto.html":{}}}],["attuide'})@isstring()@isoptional",{"_index":1443,"title":{},"body":{"classes/EmployeeTransactionDto.html":{}}}],["auth",{"_index":118,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{}}}],["auth.controller",{"_index":351,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":148,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":308,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":32,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{}}}],["authguard('jwt",{"_index":9,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{}}}],["authmodule",{"_index":173,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2870,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":147,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":2487,"title":{},"body":{"classes/User.html":{}}}],["await",{"_index":85,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["ayani",{"_index":710,"title":{},"body":{"classes/CreateAdminUserDto.html":{}}}],["ayani@gmail.com",{"_index":701,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/SignInByEmailDto.html":{}}}],["backers",{"_index":2861,"title":{},"body":{"index.html":{}}}],["bank",{"_index":899,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["bank_account",{"_index":304,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["base",{"_index":856,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["base_salary",{"_index":296,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["bcrypt",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt.compare(pass",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.compare(text",{"_index":2608,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.gensalt",{"_index":2591,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(text",{"_index":2592,"title":{},"body":{"injectables/UsersService.html":{}}}],["bike",{"_index":2731,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["billing",{"_index":449,"title":{"classes/Billing.html":{}},"body":{"classes/Billing.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"coverage.html":{}}}],["billing.controller",{"_index":493,"title":{},"body":{"modules/BillingModule.html":{}}}],["billing.dto",{"_index":477,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/UpdateBillingDto.html":{}}}],["billing.dto.ts",{"_index":774,"title":{},"body":{"classes/CreateBillingDto.html":{},"classes/UpdateBillingDto.html":{},"coverage.html":{}}}],["billing.service",{"_index":475,"title":{},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{}}}],["billing/billing.module",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["billingcontroller",{"_index":451,"title":{"controllers/BillingController.html":{}},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{},"coverage.html":{}}}],["billingmodule",{"_index":174,"title":{"modules/BillingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BillingModule.html":{},"modules.html":{},"overview.html":{}}}],["billingservice",{"_index":474,"title":{"injectables/BillingService.html":{}},"body":{"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"coverage.html":{},"overview.html":{}}}],["birthdate",{"_index":303,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["block",{"_index":2724,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["blockuser",{"_index":120,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["blockuser(@param(':id",{"_index":160,"title":{},"body":{"controllers/AdminController.html":{}}}],["blockuser(id",{"_index":128,"title":{},"body":{"controllers/AdminController.html":{},"injectables/UsersService.html":{}}}],["boans",{"_index":1442,"title":{},"body":{"classes/EmployeeTransactionDto.html":{}}}],["body",{"_index":134,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["bonas",{"_index":2813,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":1057,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/IsEmployeeGuard.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":263,"title":{"classes/Branch.html":{}},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Coupon.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/IsWorkingInBranchGuard.html":{},"classes/Offer.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/Stock.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["branch.controller",{"_index":540,"title":{},"body":{"modules/BranchModule.html":{}}}],["branch.dto",{"_index":528,"title":{},"body":{"controllers/BranchController.html":{},"injectables/BranchService.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts",{"_index":776,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{},"coverage.html":{}}}],["branch.dto.ts:19",{"_index":785,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:27",{"_index":790,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:35",{"_index":791,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:43",{"_index":783,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.dto.ts:53",{"_index":780,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["branch.guard.ts",{"_index":1465,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{},"coverage.html":{}}}],["branch.guard.ts:14",{"_index":1468,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["branch.guard.ts:7",{"_index":1467,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["branch.name",{"_index":294,"title":{},"body":{"classes/Attendence.html":{},"modules/BranchModule.html":{},"classes/Coupon.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{}}}],["branch.save",{"_index":558,"title":{},"body":{"injectables/BranchService.html":{}}}],["branch.service",{"_index":527,"title":{},"body":{"controllers/BranchController.html":{},"modules/BranchModule.html":{}}}],["branch/branch.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["branch1,branch2",{"_index":825,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["branch_id",{"_index":2025,"title":{},"body":{"interfaces/StockItemLogsInterface.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["branchcontroller",{"_index":515,"title":{"controllers/BranchController.html":{}},"body":{"controllers/BranchController.html":{},"modules/BranchModule.html":{},"coverage.html":{}}}],["branches",{"_index":622,"title":{},"body":{"classes/Coupon.html":{},"injectables/CouponService.html":{},"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{}}}],["branchid",{"_index":677,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/TicketController.html":{}}}],["branchmanager",{"_index":2789,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["branchmodule",{"_index":175,"title":{"modules/BranchModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BranchModule.html":{},"modules/OrderModule.html":{},"modules/StockModule.html":{},"modules/TicketModule.html":{},"modules.html":{},"overview.html":{}}}],["branchrepo",{"_index":548,"title":{},"body":{"injectables/BranchService.html":{}}}],["branchschema",{"_index":513,"title":{},"body":{"classes/Branch.html":{},"modules/BranchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["branchservice",{"_index":526,"title":{"injectables/BranchService.html":{}},"body":{"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/TicketController.html":{},"coverage.html":{},"overview.html":{}}}],["brnachservice",{"_index":2314,"title":{},"body":{"controllers/TicketController.html":{}}}],["browse",{"_index":2880,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2878,"title":{},"body":{"modules.html":{}}}],["building",{"_index":820,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{},"index.html":{}}}],["building_number",{"_index":615,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["building_number'})@isstring()@isnotempty",{"_index":950,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["building_number'})@isstring()@isoptional",{"_index":2408,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["calculation",{"_index":1285,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["can_deliver",{"_index":1049,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["canactivate",{"_index":12,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["canactivate(context",{"_index":24,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["canceled",{"_index":2796,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cancelled",{"_index":2766,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cart",{"_index":563,"title":{"classes/Cart.html":{}},"body":{"classes/Cart.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"coverage.html":{}}}],["cart.controller",{"_index":588,"title":{},"body":{"modules/CartModule.html":{}}}],["cart.dto",{"_index":577,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/UpdateCartDto.html":{}}}],["cart.dto.ts",{"_index":796,"title":{},"body":{"classes/CreateCartDto.html":{},"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["cart.service",{"_index":576,"title":{},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{}}}],["cart/cart.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{}}}],["cartcontroller",{"_index":565,"title":{"controllers/CartController.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"coverage.html":{}}}],["cartmodule",{"_index":176,"title":{"modules/CartModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CartModule.html":{},"modules.html":{},"overview.html":{}}}],["cartservice",{"_index":575,"title":{"injectables/CartService.html":{}},"body":{"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"coverage.html":{},"overview.html":{}}}],["case",{"_index":88,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["cash",{"_index":2767,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cashier",{"_index":2757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cashier_senior",{"_index":2784,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cashiersenior",{"_index":2783,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["catch",{"_index":47,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["category",{"_index":1050,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateTicketDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/UpdateProductDto.html":{}}}],["category.enum",{"_index":1140,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{}}}],["category.enum.ts",{"_index":2719,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["category.enums",{"_index":1081,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["category.enums.ts",{"_index":2709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["changeticketstatus",{"_index":2340,"title":{},"body":{"injectables/TicketService.html":{}}}],["changeticketstatus(id",{"_index":2346,"title":{},"body":{"injectables/TicketService.html":{}}}],["changetransactionstatus",{"_index":2170,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["changetransactionstatus(transaction_id",{"_index":2178,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["changeuserstatus",{"_index":2541,"title":{},"body":{"injectables/UsersService.html":{}}}],["changeuserstatus(id",{"_index":2559,"title":{},"body":{"injectables/UsersService.html":{}}}],["changeuserstatusdto",{"_index":595,"title":{"classes/ChangeUserStatusDTO.html":{}},"body":{"classes/ChangeUserStatusDTO.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["check",{"_index":1758,"title":{},"body":{"injectables/OrderService.html":{}}}],["chicken",{"_index":2780,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["city",{"_index":611,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["city'})@isstring()@isnotempty",{"_index":952,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["city'})@isstring()@isoptional",{"_index":2409,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["class",{"_index":35,"title":{"classes/AddTicketUpdateDto.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Billing.html":{},"classes/Branch.html":{},"classes/Cart.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"classes/Location.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/RTGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyandRefreshTokenDto.html":{}},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":93,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Billing.html":{},"classes/Branch.html":{},"classes/Cart.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"classes/Location.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/RTGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyandRefreshTokenDto.html":{},"overview.html":{}}}],["close",{"_index":2810,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cluster_appmodule",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":342,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":344,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":343,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_billingmodule",{"_index":490,"title":{},"body":{"modules/BillingModule.html":{},"overview.html":{}}}],["cluster_billingmodule_providers",{"_index":491,"title":{},"body":{"modules/BillingModule.html":{},"overview.html":{}}}],["cluster_branchmodule",{"_index":536,"title":{},"body":{"modules/BranchModule.html":{},"overview.html":{}}}],["cluster_branchmodule_exports",{"_index":537,"title":{},"body":{"modules/BranchModule.html":{},"overview.html":{}}}],["cluster_branchmodule_providers",{"_index":538,"title":{},"body":{"modules/BranchModule.html":{},"overview.html":{}}}],["cluster_cartmodule",{"_index":585,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_cartmodule_providers",{"_index":586,"title":{},"body":{"modules/CartModule.html":{},"overview.html":{}}}],["cluster_couponmodule",{"_index":655,"title":{},"body":{"modules/CouponModule.html":{},"overview.html":{}}}],["cluster_couponmodule_providers",{"_index":656,"title":{},"body":{"modules/CouponModule.html":{},"overview.html":{}}}],["cluster_customermodule",{"_index":1189,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_providers",{"_index":1190,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_deliverymodule",{"_index":1310,"title":{},"body":{"modules/DeliveryModule.html":{},"overview.html":{}}}],["cluster_deliverymodule_providers",{"_index":1311,"title":{},"body":{"modules/DeliveryModule.html":{},"overview.html":{}}}],["cluster_employeemodule",{"_index":1424,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_exports",{"_index":1426,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_employeemodule_imports",{"_index":1425,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["cluster_employeemodule_providers",{"_index":1427,"title":{},"body":{"modules/EmployeeModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":1506,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_exports",{"_index":1508,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_providers",{"_index":1507,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_materialmodule",{"_index":1550,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_materialmodule_providers",{"_index":1551,"title":{},"body":{"modules/MaterialModule.html":{},"overview.html":{}}}],["cluster_offersmodule",{"_index":1596,"title":{},"body":{"modules/OffersModule.html":{},"overview.html":{}}}],["cluster_offersmodule_exports",{"_index":1598,"title":{},"body":{"modules/OffersModule.html":{},"overview.html":{}}}],["cluster_offersmodule_providers",{"_index":1597,"title":{},"body":{"modules/OffersModule.html":{},"overview.html":{}}}],["cluster_ordermodule",{"_index":1700,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_exports",{"_index":1702,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_ordermodule_imports",{"_index":1703,"title":{},"body":{"modules/OrderModule.html":{}}}],["cluster_ordermodule_providers",{"_index":1701,"title":{},"body":{"modules/OrderModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":1804,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_providers",{"_index":1805,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":1878,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":1879,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_stockmodule",{"_index":2093,"title":{},"body":{"modules/StockModule.html":{},"overview.html":{}}}],["cluster_stockmodule_exports",{"_index":2096,"title":{},"body":{"modules/StockModule.html":{},"overview.html":{}}}],["cluster_stockmodule_imports",{"_index":2095,"title":{},"body":{"modules/StockModule.html":{}}}],["cluster_stockmodule_providers",{"_index":2094,"title":{},"body":{"modules/StockModule.html":{},"overview.html":{}}}],["cluster_suppliermodule",{"_index":2241,"title":{},"body":{"modules/SupplierModule.html":{},"overview.html":{}}}],["cluster_suppliermodule_imports",{"_index":2242,"title":{},"body":{"modules/SupplierModule.html":{}}}],["cluster_suppliermodule_providers",{"_index":2243,"title":{},"body":{"modules/SupplierModule.html":{},"overview.html":{}}}],["cluster_ticketmodule",{"_index":2329,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_ticketmodule_imports",{"_index":2330,"title":{},"body":{"modules/TicketModule.html":{}}}],["cluster_ticketmodule_providers",{"_index":2331,"title":{},"body":{"modules/TicketModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":2532,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":2535,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":2533,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":2534,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["comparetextwithhash",{"_index":2542,"title":{},"body":{"injectables/UsersService.html":{}}}],["comparetextwithhash(text",{"_index":2561,"title":{},"body":{"injectables/UsersService.html":{}}}],["compeleted",{"_index":2753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["completed",{"_index":2754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["compodoc/compodoc",{"_index":2668,"title":{},"body":{"dependencies.html":{}}}],["components",{"_index":1051,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["components.enum",{"_index":1008,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateProductDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Product.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateProductDto.html":{}}}],["components.enum.ts",{"_index":2710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["configmodule",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":59,"title":{},"body":{"injectables/ATStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["configservice.get('jwt_secret",{"_index":80,"title":{},"body":{"injectables/ATStrategy.html":{},"modules/AuthModule.html":{}}}],["configservice.get('jwt_token_expirein",{"_index":362,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mongocluster",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["conflictexception",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"injectables/StockTransactionService.html":{},"injectables/UsersService.html":{}}}],["conflictexception(\"can't",{"_index":2598,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflictexception('role",{"_index":2612,"title":{},"body":{"injectables/UsersService.html":{}}}],["conflictexception('status",{"_index":2192,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["conflictexception(err.response.message",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["connection",{"_index":2067,"title":{},"body":{"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["console.log(err",{"_index":49,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OffersService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/UsersService.html":{}}}],["const",{"_index":39,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/Attendence.html":{},"injectables/AuthService.html":{},"classes/Branch.html":{},"injectables/BranchService.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"injectables/CouponService.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor",{"_index":13,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(product.name",{"_index":1901,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(branchrepo",{"_index":545,"title":{},"body":{"injectables/BranchService.html":{}}}],["constructor(couponrepo",{"_index":665,"title":{},"body":{"injectables/CouponService.html":{}}}],["constructor(offerrepo",{"_index":1606,"title":{},"body":{"injectables/OffersService.html":{}}}],["constructor(orderrepo",{"_index":1722,"title":{},"body":{"injectables/OrderService.html":{}}}],["constructor(paymentrepo",{"_index":1810,"title":{},"body":{"injectables/PaymentService.html":{}}}],["constructor(private",{"_index":36,"title":{},"body":{"injectables/ATGuard.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"injectables/RolesGuard.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/SupplierController.html":{},"controllers/UsersController.html":{}}}],["constructor(productrepo",{"_index":1887,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(reflactor",{"_index":1915,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["constructor(refleactor",{"_index":14,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsWorkingInBranchGuard.html":{}}}],["constructor(reflector",{"_index":1455,"title":{},"body":{"classes/IsEmployeeGuard.html":{},"injectables/JWTGuard.html":{}}}],["constructor(stockitemlogrepo",{"_index":2033,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["constructor(stockitemrepo",{"_index":2066,"title":{},"body":{"injectables/StockItemService.html":{}}}],["constructor(stockrepo",{"_index":2117,"title":{},"body":{"injectables/StockService.html":{}}}],["constructor(stocktransactionrepo",{"_index":2171,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["constructor(supplierrepo",{"_index":2249,"title":{},"body":{"injectables/SupplierService.html":{}}}],["constructor(ticketrepo",{"_index":2341,"title":{},"body":{"injectables/TicketService.html":{}}}],["constructor(userrepo",{"_index":2550,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(userservice",{"_index":57,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AuthService.html":{}}}],["contact",{"_index":1114,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["context",{"_index":27,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["context.getclass",{"_index":42,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["context.gethandler",{"_index":43,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1470,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":1461,"title":{},"body":{"classes/IsEmployeeGuard.html":{},"injectables/RolesGuard.html":{}}}],["controller",{"_index":112,"title":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":151,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('auth",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('billing",{"_index":480,"title":{},"body":{"controllers/BillingController.html":{}}}],["controller('branch",{"_index":530,"title":{},"body":{"controllers/BranchController.html":{}}}],["controller('cart",{"_index":579,"title":{},"body":{"controllers/CartController.html":{}}}],["controller('coupon",{"_index":648,"title":{},"body":{"controllers/CouponController.html":{}}}],["controller('customer",{"_index":1183,"title":{},"body":{"controllers/CustomerController.html":{}}}],["controller('delivery",{"_index":1304,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["controller('employee",{"_index":1398,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["controller('location",{"_index":1500,"title":{},"body":{"controllers/LocationController.html":{}}}],["controller('material",{"_index":1544,"title":{},"body":{"controllers/MaterialController.html":{}}}],["controller('offers",{"_index":1588,"title":{},"body":{"controllers/OffersController.html":{}}}],["controller('order",{"_index":1681,"title":{},"body":{"controllers/OrderController.html":{}}}],["controller('payment",{"_index":1798,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controller('product",{"_index":1866,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('stock",{"_index":1953,"title":{},"body":{"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["controller('supplier",{"_index":2235,"title":{},"body":{"controllers/SupplierController.html":{}}}],["controller('ticket",{"_index":2313,"title":{},"body":{"controllers/TicketController.html":{}}}],["controller('users",{"_index":2523,"title":{},"body":{"controllers/UsersController.html":{}}}],["controller/stock",{"_index":2106,"title":{},"body":{"modules/StockModule.html":{}}}],["controller/stock.controller",{"_index":2100,"title":{},"body":{"modules/StockModule.html":{}}}],["controllers",{"_index":114,"title":{},"body":{"controllers/AdminController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coordinates",{"_index":252,"title":{"classes/Coordinates.html":{}},"body":{"classes/Attendence.html":{},"classes/Coordinates.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"coverage.html":{}}}],["coordinatesschema",{"_index":608,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["copoun1",{"_index":830,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["cordinates",{"_index":617,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["cordinates'})@validatenested()@type(undefined)@isoptional",{"_index":954,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["count",{"_index":1252,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["countdocuments",{"_index":1253,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["country",{"_index":610,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["country'})@isstring()@isnotempty",{"_index":956,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["country'})@isstring()@isoptional",{"_index":2411,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["coupon",{"_index":620,"title":{"classes/Coupon.html":{}},"body":{"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["coupon.controller",{"_index":658,"title":{},"body":{"modules/CouponModule.html":{}}}],["coupon.dto",{"_index":646,"title":{},"body":{"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts",{"_index":824,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{},"coverage.html":{}}}],["coupon.dto.ts:18",{"_index":831,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:26",{"_index":827,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:34",{"_index":829,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:42",{"_index":836,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:50",{"_index":835,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.dto.ts:58",{"_index":834,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{}}}],["coupon.name",{"_index":660,"title":{},"body":{"modules/CouponModule.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["coupon.percent_discount",{"_index":1276,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["coupon.save",{"_index":683,"title":{},"body":{"injectables/CouponService.html":{}}}],["coupon.service",{"_index":645,"title":{},"body":{"controllers/CouponController.html":{},"modules/CouponModule.html":{}}}],["coupon/coupon.module",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["couponcontroller",{"_index":634,"title":{"controllers/CouponController.html":{}},"body":{"controllers/CouponController.html":{},"modules/CouponModule.html":{},"coverage.html":{}}}],["coupondiscount",{"_index":1275,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["couponmodel",{"_index":1260,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["couponmodel.findbyid(this.coupon).exec",{"_index":1274,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["couponmodule",{"_index":177,"title":{"modules/CouponModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CouponModule.html":{},"modules.html":{},"overview.html":{}}}],["couponname",{"_index":675,"title":{},"body":{"injectables/CouponService.html":{}}}],["couponrepo",{"_index":667,"title":{},"body":{"injectables/CouponService.html":{}}}],["couponschema",{"_index":632,"title":{},"body":{"classes/Coupon.html":{},"modules/CouponModule.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["couponservice",{"_index":644,"title":{"injectables/CouponService.html":{}},"body":{"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"coverage.html":{},"overview.html":{}}}],["coverage",{"_index":2636,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":453,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"interfaces/TakeAwayOrderInterface.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":481,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/UsersController.html":{}}}],["create(branchid",{"_index":2291,"title":{},"body":{"controllers/TicketController.html":{}}}],["create(createbillingdto",{"_index":458,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{}}}],["create(createbranchdto",{"_index":517,"title":{},"body":{"controllers/BranchController.html":{},"injectables/BranchService.html":{}}}],["create(createcartdto",{"_index":567,"title":{},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{}}}],["create(createcoupondto",{"_index":636,"title":{},"body":{"controllers/CouponController.html":{},"injectables/CouponService.html":{}}}],["create(createcustomerdto",{"_index":1172,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["create(createdeliverydto",{"_index":1294,"title":{},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{}}}],["create(createdto",{"_index":1984,"title":{},"body":{"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["create(createemployeedto",{"_index":1365,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["create(createlocationdto",{"_index":1490,"title":{},"body":{"controllers/LocationController.html":{},"injectables/LocationService.html":{}}}],["create(creatematerialdto",{"_index":1533,"title":{},"body":{"controllers/MaterialController.html":{},"injectables/MaterialService.html":{}}}],["create(createofferdto",{"_index":1572,"title":{},"body":{"controllers/OffersController.html":{},"injectables/OffersService.html":{}}}],["create(createpaymentdto",{"_index":1788,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["create(createproductdto",{"_index":1843,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["create(createstockdto",{"_index":1940,"title":{},"body":{"controllers/StockController.html":{}}}],["create(createsupplierdto",{"_index":2222,"title":{},"body":{"controllers/SupplierController.html":{},"injectables/SupplierService.html":{}}}],["create(createuserdto",{"_index":2511,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(data",{"_index":2036,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{},"injectables/TicketService.html":{}}}],["createadminuserdto",{"_index":382,"title":{"classes/CreateAdminUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateAdminUserDto.html":{},"coverage.html":{}}}],["createattendactiondto",{"_index":716,"title":{"classes/CreateAttendActionDTO.html":{}},"body":{"classes/CreateAttendActionDTO.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["createbaseorder",{"_index":1716,"title":{},"body":{"injectables/OrderService.html":{}}}],["createbaseorder(createorderdata",{"_index":1728,"title":{},"body":{"injectables/OrderService.html":{}}}],["createbaseorderdto",{"_index":729,"title":{"classes/CreateBaseOrderDto.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"injectables/OrderService.html":{},"coverage.html":{}}}],["createbaseorderdto:21",{"_index":850,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["createbaseorderdto:25",{"_index":855,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["createbaseorderdto:30",{"_index":852,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["createbaseorderdto:34",{"_index":848,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["createbaseorderdto:38",{"_index":851,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["createbaseorderdto:42",{"_index":849,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["createbaseorderdto:47",{"_index":854,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["createbaseorderdto:50",{"_index":853,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["createbillingdto",{"_index":459,"title":{"classes/CreateBillingDto.html":{}},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/CreateBillingDto.html":{},"classes/UpdateBillingDto.html":{},"coverage.html":{}}}],["createbranchdto",{"_index":518,"title":{"classes/CreateBranchDto.html":{}},"body":{"controllers/BranchController.html":{},"injectables/BranchService.html":{},"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{},"coverage.html":{}}}],["createby",{"_index":111,"title":{},"body":{"interfaces/AddTicketUpdatesInterface.html":{},"classes/Attendence.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{}}}],["createcartdto",{"_index":568,"title":{"classes/CreateCartDto.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/CreateCartDto.html":{},"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["createcordinatesdto",{"_index":797,"title":{"classes/CreateCordinatesDto.html":{}},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["createcoupondto",{"_index":637,"title":{"classes/CreateCouponDto.html":{}},"body":{"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/CreateCouponDto.html":{},"classes/UpdateCouponDto.html":{},"coverage.html":{}}}],["createcustomerdto",{"_index":838,"title":{"classes/CreateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["createdat",{"_index":1255,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["createdelivereyorder",{"_index":1650,"title":{},"body":{"controllers/OrderController.html":{}}}],["createdelivereyorder(branchid",{"_index":1653,"title":{},"body":{"controllers/OrderController.html":{}}}],["createdelivereyorderdto",{"_index":841,"title":{"classes/CreateDelivereyOrderDto.html":{}},"body":{"classes/CreateDelivereyOrderDto.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["createdeliverydto",{"_index":844,"title":{"classes/CreateDeliveryDto.html":{}},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/UpdateDeliveryDto.html":{},"coverage.html":{}}}],["createdineinorder",{"_index":1651,"title":{},"body":{"controllers/OrderController.html":{}}}],["createdineinorder(branchid",{"_index":1657,"title":{},"body":{"controllers/OrderController.html":{}}}],["createdineinorderdto",{"_index":888,"title":{"classes/CreateDineInOrderDto.html":{}},"body":{"classes/CreateDineInOrderDto.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["createdto",{"_index":1354,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["createdto.amount",{"_index":1410,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createdto.notes",{"_index":1411,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["createemployeedto",{"_index":894,"title":{"classes/CreateEmployeeDto.html":{}},"body":{"classes/CreateEmployeeDto.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["createemployeepdrdto",{"_index":945,"title":{"classes/CreateEmployeePDRDTO.html":{}},"body":{"classes/CreateEmployeePDRDTO.html":{},"controllers/EmployeeController.html":{},"coverage.html":{}}}],["createlocationdto",{"_index":777,"title":{"classes/CreateLocationDto.html":{}},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSupplierDto.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateSupplierDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createlocationdto})@isoptional()@validatenested()@type(undefined",{"_index":1109,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["creatematerialdto",{"_index":970,"title":{"classes/CreateMaterialDto.html":{}},"body":{"classes/CreateMaterialDto.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/UpdateMaterialDto.html":{},"coverage.html":{}}}],["createofferdto",{"_index":973,"title":{"classes/CreateOfferDto.html":{}},"body":{"classes/CreateOfferDto.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/UpdateOfferDto.html":{},"coverage.html":{}}}],["createorder",{"_index":1717,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorder(createorderdata",{"_index":1731,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdata",{"_index":1730,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdata.approvedby",{"_index":1761,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdata.createby",{"_index":1757,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdata.order_status",{"_index":1765,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdata.order_type",{"_index":1762,"title":{},"body":{"injectables/OrderService.html":{}}}],["createorderdto",{"_index":1654,"title":{},"body":{"controllers/OrderController.html":{}}}],["createorderinterface",{"_index":993,"title":{"interfaces/CreateOrderInterface.html":{}},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"interfaces/TakeAwayOrderInterface.html":{},"coverage.html":{}}}],["createorderitemsdto",{"_index":742,"title":{"classes/CreateOrderItemsDto.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"coverage.html":{}}}],["createorderitemsinterface",{"_index":1000,"title":{"interfaces/CreateOrderItemsInterface.html":{}},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"coverage.html":{}}}],["createpaymentdto",{"_index":753,"title":{"classes/CreatePaymentDto.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["createpaymentinterface",{"_index":1002,"title":{"interfaces/CreatePaymentInterface.html":{}},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"interfaces/CreatePaymentInterface.html":{},"coverage.html":{}}}],["createproductdto",{"_index":1046,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createstock",{"_index":2115,"title":{},"body":{"injectables/StockService.html":{}}}],["createstock(createstockdto",{"_index":2120,"title":{},"body":{"injectables/StockService.html":{}}}],["createstockdto",{"_index":1087,"title":{"classes/CreateStockDto.html":{}},"body":{"classes/CreateStockDto.html":{},"controllers/StockController.html":{},"injectables/StockService.html":{},"classes/UpdateStockDto.html":{},"coverage.html":{}}}],["createstockitemdto",{"_index":1092,"title":{"classes/CreateStockItemDto.html":{}},"body":{"classes/CreateStockItemDto.html":{},"controllers/StockItemController.html":{},"classes/UpdateStockItemDto.html":{},"coverage.html":{}}}],["createstockitemlog",{"_index":2116,"title":{},"body":{"injectables/StockService.html":{}}}],["createstockitemlog(data",{"_index":2122,"title":{},"body":{"injectables/StockService.html":{}}}],["createstockitemlogsdto",{"_index":1097,"title":{"classes/CreateStockItemLogsDto.html":{}},"body":{"classes/CreateStockItemLogsDto.html":{},"controllers/StockItemLogsController.html":{},"classes/UpdateStockItemLogsDto.html":{},"coverage.html":{}}}],["createsuperuserdto",{"_index":383,"title":{"classes/CreateSuperUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/CreateSuperUserDto.html":{},"coverage.html":{}}}],["createsupplierdto",{"_index":1104,"title":{"classes/CreateSupplierDto.html":{}},"body":{"classes/CreateSupplierDto.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"classes/UpdateSupplierDto.html":{},"coverage.html":{}}}],["createtakeawayorder",{"_index":1652,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["createtakeawayorder(branchid",{"_index":1660,"title":{},"body":{"controllers/OrderController.html":{}}}],["createtakeawayorder(createorderdata",{"_index":1733,"title":{},"body":{"injectables/OrderService.html":{}}}],["createtakeawayorderdto",{"_index":1121,"title":{"classes/CreateTakeAwayOrderDto.html":{}},"body":{"classes/CreateTakeAwayOrderDto.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["createticketdto",{"_index":1124,"title":{"classes/CreateTicketDto.html":{}},"body":{"classes/CreateTicketDto.html":{},"controllers/TicketController.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["createtransactiondto",{"_index":1146,"title":{"classes/CreateTransactionDto.html":{}},"body":{"classes/CreateTransactionDto.html":{},"controllers/StockTransactionController.html":{},"classes/UpdateStockTransactionDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":322,"title":{"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["currentdate",{"_index":689,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["customer",{"_index":732,"title":{"classes/Customer.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["customer.controller",{"_index":1192,"title":{},"body":{"modules/CustomerModule.html":{}}}],["customer.dto",{"_index":1181,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts",{"_index":840,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["customer.name",{"_index":1228,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["customer.service",{"_index":1180,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{}}}],["customer/customer.module",{"_index":210,"title":{},"body":{"modules/AppModule.html":{}}}],["customercontroller",{"_index":1170,"title":{"controllers/CustomerController.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"coverage.html":{}}}],["customermodule",{"_index":178,"title":{"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules.html":{},"overview.html":{}}}],["customerschema",{"_index":1168,"title":{},"body":{"classes/Customer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["customerservice",{"_index":1179,"title":{"injectables/CustomerService.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"overview.html":{}}}],["daily_orderid",{"_index":1223,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["data",{"_index":1409,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/OrderController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["data.status",{"_index":2191,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["date",{"_index":293,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coupon.html":{},"injectables/CouponService.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{},"miscellaneous/functions.html":{}}}],["datetocheck",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["declarations",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorator/roles.decorator",{"_index":141,"title":{},"body":{"controllers/AdminController.html":{},"injectables/RolesGuard.html":{}}}],["decorators",{"_index":100,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"classes/TicketUpdates.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["default",{"_index":298,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":357,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":16,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["delete",{"_index":473,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["delete(':id",{"_index":466,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["delete(':id')@role(roles.superuser",{"_index":1855,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete('attendance/:employeeid/:attendanceid",{"_index":1373,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["delete('attendance/:userid/:pdr_id",{"_index":1378,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["delete('location/:id",{"_index":2517,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete('transaction/:employeeid/:transactionid",{"_index":1381,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["deletebyid",{"_index":2031,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{}}}],["deletebyid(id",{"_index":2038,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{}}}],["deleterefresh",{"_index":2543,"title":{},"body":{"injectables/UsersService.html":{}}}],["deleterefresh(id",{"_index":2566,"title":{},"body":{"injectables/UsersService.html":{}}}],["deliverey",{"_index":843,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["deliverey_method",{"_index":861,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["delivereymethod",{"_index":866,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{},"miscellaneous/enumerations.html":{}}}],["delivereymethod})@isoptional()@isenum(delivereymethod",{"_index":867,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["delivereyorder",{"_index":1199,"title":{"classes/DelivereyOrder.html":{}},"body":{"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"modules/DeliveryModule.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["delivereyorder.name",{"_index":1315,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["delivereyordertype",{"_index":1210,"title":{"classes/DelivereyOrderType.html":{}},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["delivereyordertype.name",{"_index":1714,"title":{},"body":{"modules/OrderModule.html":{}}}],["delivereyordertypeschema",{"_index":1232,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["delivereyrepo",{"_index":1725,"title":{},"body":{"injectables/OrderService.html":{}}}],["delivery",{"_index":1212,"title":{},"body":{"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["delivery.controller",{"_index":1313,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["delivery.dto",{"_index":859,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/UpdateDeliveryDto.html":{}}}],["delivery.dto.ts",{"_index":860,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/UpdateDeliveryDto.html":{},"coverage.html":{}}}],["delivery.dto.ts:12",{"_index":876,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["delivery.dto.ts:15",{"_index":873,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["delivery.dto.ts:22",{"_index":875,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["delivery.dto.ts:29",{"_index":868,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["delivery.dto.ts:36",{"_index":879,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["delivery.dto.ts:43",{"_index":871,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["delivery.service",{"_index":1302,"title":{},"body":{"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{}}}],["delivery/delivery.module",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["delivery_price",{"_index":862,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["deliverycontroller",{"_index":1292,"title":{"controllers/DeliveryController.html":{}},"body":{"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"coverage.html":{}}}],["deliverymodule",{"_index":179,"title":{"modules/DeliveryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DeliveryModule.html":{},"modules.html":{},"overview.html":{}}}],["deliveryorderschema",{"_index":1208,"title":{},"body":{"classes/DelivereyOrder.html":{},"modules/DeliveryModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deliveryprice",{"_index":869,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{},"miscellaneous/enumerations.html":{}}}],["deliveryprice})@isoptional()@isenum(deliveryprice",{"_index":870,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["deliveryservice",{"_index":1301,"title":{"injectables/DeliveryService.html":{}},"body":{"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"coverage.html":{},"overview.html":{}}}],["deliverystatus",{"_index":877,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{},"miscellaneous/enumerations.html":{}}}],["deliverystatus.waitingorder",{"_index":1207,"title":{},"body":{"classes/DelivereyOrder.html":{}}}],["deliverystatus})@isoptional()@isenum(deliverystatus",{"_index":878,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["denied",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["department",{"_index":267,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{},"miscellaneous/enumerations.html":{}}}],["dependencies",{"_index":165,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":98,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/Location.html":{},"classes/StockItem.html":{},"interfaces/StockItemInterface.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/TicketUpdates.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateSupplierDto.html":{},"index.html":{},"properties.html":{}}}],["description'})@isstring()@isnotempty",{"_index":958,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["description'})@isstring()@isoptional",{"_index":2412,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["details",{"_index":288,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{}}}],["development",{"_index":2839,"title":{},"body":{"index.html":{}}}],["dinein",{"_index":890,"title":{},"body":{"classes/CreateDineInOrderDto.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["dineinorder",{"_index":1237,"title":{"classes/DineinOrder.html":{}},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["dineinorder.name",{"_index":1712,"title":{},"body":{"modules/OrderModule.html":{}}}],["dineinorderschema",{"_index":1240,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dineinrepo",{"_index":1724,"title":{},"body":{"injectables/OrderService.html":{}}}],["discount",{"_index":997,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["discriminatorkey",{"_index":1222,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["discriminators",{"_index":1711,"title":{},"body":{"modules/OrderModule.html":{}}}],["district",{"_index":612,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["district'})@isstring()@isnotempty",{"_index":960,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["district'})@isstring()@isoptional",{"_index":2413,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["document",{"_index":2609,"title":{},"body":{"injectables/UsersService.html":{}}}],["document.roles.includes(newrole",{"_index":2611,"title":{},"body":{"injectables/UsersService.html":{}}}],["document.roles.push(newrole",{"_index":2613,"title":{},"body":{"injectables/UsersService.html":{}}}],["document.save",{"_index":2614,"title":{},"body":{"injectables/UsersService.html":{}}}],["documentation",{"_index":2637,"title":{},"body":{"coverage.html":{}}}],["dto/add",{"_index":2308,"title":{},"body":{"controllers/TicketController.html":{}}}],["dto/assignrole.dto",{"_index":142,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{}}}],["dto/base",{"_index":1747,"title":{},"body":{"injectables/OrderService.html":{}}}],["dto/change",{"_index":2586,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/create",{"_index":476,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/delivery/create",{"_index":1671,"title":{},"body":{"controllers/OrderController.html":{}}}],["dto/dinein/create",{"_index":1670,"title":{},"body":{"controllers/OrderController.html":{}}}],["dto/emp",{"_index":1391,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["dto/signin",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/stock",{"_index":1995,"title":{},"body":{"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{}}}],["dto/stock/create",{"_index":1949,"title":{},"body":{"controllers/StockController.html":{},"injectables/StockService.html":{}}}],["dto/stock/update",{"_index":1951,"title":{},"body":{"controllers/StockController.html":{},"injectables/StockService.html":{}}}],["dto/takeaway/create",{"_index":1669,"title":{},"body":{"controllers/OrderController.html":{}}}],["dto/token.payload",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/transaction/create",{"_index":2159,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["dto/transaction/update",{"_index":2160,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["dto/update",{"_index":478,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/user",{"_index":326,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/verify",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":2850,"title":{},"body":{"index.html":{}}}],["each",{"_index":771,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["efficient",{"_index":2826,"title":{},"body":{"index.html":{}}}],["egypt",{"_index":809,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["email",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["email.dto",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["email.dto.ts",{"_index":1924,"title":{},"body":{"classes/SignInByEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:11",{"_index":1925,"title":{},"body":{"classes/SignInByEmailDto.html":{}}}],["email.dto.ts:19",{"_index":1926,"title":{},"body":{"classes/SignInByEmailDto.html":{}}}],["emp",{"_index":1755,"title":{},"body":{"injectables/OrderService.html":{}}}],["employee",{"_index":291,"title":{"classes/Employee.html":{}},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"injectables/OrderService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["employee'})@isenum(sex)@isnotempty",{"_index":914,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee'})@isenum(sex)@isoptional",{"_index":2396,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.controller",{"_index":1429,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.dto",{"_index":1388,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employee.dto.ts",{"_index":895,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["employee.dto.ts:104",{"_index":2388,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:107",{"_index":902,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:24",{"_index":2398,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:25",{"_index":919,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:32",{"_index":2403,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:34",{"_index":932,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:40",{"_index":2405,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:42",{"_index":935,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:48",{"_index":2395,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:50",{"_index":913,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:55",{"_index":905,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:56",{"_index":2390,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:65",{"_index":923,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:66",{"_index":2400,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:70",{"_index":915,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:71",{"_index":2397,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:80",{"_index":898,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:88",{"_index":2401,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:89",{"_index":929,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.dto.ts:96",{"_index":2392,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["employee.dto.ts:98",{"_index":909,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["employee.name",{"_index":1432,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employee.service",{"_index":1387,"title":{},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/IsEmployeeGuard.html":{}}}],["employee/employee.module",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["employee_id",{"_index":720,"title":{},"body":{"classes/CreateAttendActionDTO.html":{},"controllers/EmployeeController.html":{},"interfaces/EmployeeTransactionInterface.html":{}}}],["employeecontroller",{"_index":1339,"title":{"controllers/EmployeeController.html":{}},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"coverage.html":{}}}],["employeeid",{"_index":1375,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["employeemodule",{"_index":180,"title":{"modules/EmployeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["employeepdr",{"_index":286,"title":{"classes/EmployeePDR.html":{}},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"coverage.html":{}}}],["employeepdr.name",{"_index":1435,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeepdrschema",{"_index":289,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["employeeschema",{"_index":306,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["employeeservice",{"_index":1386,"title":{},"body":{"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["employeesservice",{"_index":1466,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["employeetransactiondto",{"_index":1356,"title":{"classes/EmployeeTransactionDto.html":{}},"body":{"controllers/EmployeeController.html":{},"classes/EmployeeTransactionDto.html":{},"coverage.html":{}}}],["employeetransactioninterface",{"_index":1393,"title":{"interfaces/EmployeeTransactionInterface.html":{}},"body":{"controllers/EmployeeController.html":{},"interfaces/EmployeeTransactionInterface.html":{},"coverage.html":{}}}],["employeetransactions",{"_index":280,"title":{"classes/EmployeeTransactions.html":{}},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"coverage.html":{}}}],["employeetransactions.name",{"_index":1434,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["employeetransactionsschema",{"_index":284,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["empservice",{"_index":1456,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["end_location",{"_index":863,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["enddate",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enum",{"_index":938,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateEmployeeDto.html":{}}}],["enumerations",{"_index":2691,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/account",{"_index":601,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{},"injectables/UsersService.html":{}}}],["enums/attendence",{"_index":265,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateAttendActionDTO.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{}}}],["enums/deliver",{"_index":880,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["enums/deliverey",{"_index":882,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["enums/delivery",{"_index":884,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["enums/department.enums",{"_index":268,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["enums/emp",{"_index":273,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{}}}],["enums/measure",{"_index":1529,"title":{},"body":{"classes/Material.html":{}}}],["enums/order",{"_index":770,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{}}}],["enums/payment",{"_index":1041,"title":{},"body":{"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/Payment.html":{}}}],["enums/product",{"_index":1080,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["enums/roles.enums",{"_index":144,"title":{},"body":{"controllers/AdminController.html":{},"injectables/RolesGuard.html":{}}}],["enums/size.enum",{"_index":1083,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["enums/stock",{"_index":2027,"title":{},"body":{"interfaces/StockItemLogsInterface.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{}}}],["enums/ticket",{"_index":1139,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{}}}],["err",{"_index":48,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["err.code",{"_index":2596,"title":{},"body":{"injectables/UsersService.html":{}}}],["err.response.statuscode",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{}}}],["err.status",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":240,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/EmployeeTransactionDto.html":{},"classes/LogoutDto.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/VerifyandRefreshTokenDto.html":{},"index.html":{}}}],["exec",{"_index":696,"title":{},"body":{"injectables/CouponService.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{},"classes/TakeAwayOrder.html":{},"injectables/UsersService.html":{}}}],["executioncontext",{"_index":25,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["exist",{"_index":2600,"title":{},"body":{"injectables/UsersService.html":{}}}],["expire",{"_index":2798,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["expiresin",{"_index":361,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["export",{"_index":34,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["exports",{"_index":170,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1390,"title":{},"body":{"controllers/EmployeeController.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["extends",{"_index":8,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{}}}],["extra",{"_index":1013,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["extractjwt",{"_index":70,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":78,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["false",{"_index":794,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"classes/LogoutDto.html":{},"injectables/RolesGuard.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{},"injectables/UsersService.html":{}}}],["false})@isdatestring()@isoptional",{"_index":908,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{}}}],["false})@isnotempty()@isarray",{"_index":826,"title":{},"body":{"classes/CreateCouponDto.html":{}}}],["false})@isnotempty()@isstring",{"_index":782,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{}}}],["false})@isnumber()@isoptional",{"_index":2432,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["false})@isoptional()@isarray",{"_index":2380,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["false})@isoptional()@isarray()@isstring",{"_index":1066,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["false})@isoptional()@isarray()@isstring()@ismongoid",{"_index":2428,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["false})@isoptional()@isboolean",{"_index":1058,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["false})@isoptional()@isdatestring",{"_index":789,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{}}}],["false})@isoptional()@isenum(productcomponents",{"_index":1063,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["false})@isoptional()@isnumber",{"_index":1071,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateOfferDto.html":{}}}],["false})@isoptional()@isstring",{"_index":2375,"title":{},"body":{"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{}}}],["false})@isoptional()@validatenested()@type(undefined",{"_index":779,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/UpdateBranchDto.html":{}}}],["false})@isstring()@isarray()@isoptional",{"_index":2425,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["false})@isstring()@isnotempty",{"_index":1521,"title":{},"body":{"classes/LogoutDto.html":{}}}],["false})@isstring()@isoptional",{"_index":2430,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["family",{"_index":983,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/UpdateOfferDto.html":{}}}],["female",{"_index":2792,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fifteen",{"_index":2736,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fifty",{"_index":2747,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{}}}],["find",{"_index":83,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/OrderService.html":{},"injectables/ProductService.html":{}}}],["findall",{"_index":454,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findallpendingorder",{"_index":1718,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallpendingorderbybranchid",{"_index":1719,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallpendingorderbybranchid(branchid",{"_index":1737,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallpendingorderbyuserid",{"_index":1720,"title":{},"body":{"injectables/OrderService.html":{}}}],["findallpendingorderbyuserid(userid",{"_index":1739,"title":{},"body":{"injectables/OrderService.html":{}}}],["findbycouponname",{"_index":662,"title":{},"body":{"injectables/CouponService.html":{}}}],["findbycouponname(name",{"_index":670,"title":{},"body":{"injectables/CouponService.html":{}}}],["findbyid",{"_index":1345,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/StockTransactionService.html":{}}}],["findbyid(@param('id",{"_index":1401,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["findbyid(id",{"_index":1368,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/StockTransactionService.html":{}}}],["findbyidandupdate",{"_index":2623,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyidandupdate(id",{"_index":2053,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{}}}],["findbyname",{"_index":1571,"title":{},"body":{"controllers/OffersController.html":{}}}],["findbyname(@query('name",{"_index":1592,"title":{},"body":{"controllers/OffersController.html":{}}}],["findbyname(offername",{"_index":1575,"title":{},"body":{"controllers/OffersController.html":{}}}],["findofferbyname",{"_index":1603,"title":{},"body":{"injectables/OffersService.html":{}}}],["findofferbyname(name",{"_index":1611,"title":{},"body":{"injectables/OffersService.html":{}}}],["findone",{"_index":455,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{}}}],["findone(@param('id",{"_index":484,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OrderController.html":{}}}],["findone(id",{"_index":462,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OrderController.html":{}}}],["findonebyemail",{"_index":2544,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyemail(email",{"_index":2569,"title":{},"body":{"injectables/UsersService.html":{}}}],["findonebyid",{"_index":544,"title":{},"body":{"injectables/BranchService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findonebyid(@param('id",{"_index":651,"title":{},"body":{"controllers/CouponController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["findonebyid(id",{"_index":551,"title":{},"body":{"injectables/BranchService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findproductbybranchid",{"_index":1841,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbybranchid(@param('branchid",{"_index":1868,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbybranchid(branchid",{"_index":1849,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbybranchidandcategory",{"_index":1842,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbybranchidandcategory(branchid",{"_index":1852,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductsbybranchid",{"_index":1884,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchid(branchid",{"_index":1893,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchidandcategory",{"_index":1885,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchidandcategory(branchid",{"_index":1895,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchidandcategoryandsubcategory",{"_index":1886,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductsbybranchidandcategoryandsubcategory(branchid",{"_index":1897,"title":{},"body":{"injectables/ProductService.html":{}}}],["five",{"_index":2733,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["floor",{"_index":616,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["floor'})@isstring()@isnotempty",{"_index":962,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["floor'})@isstring()@isoptional",{"_index":2414,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["forbiddenexception",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('access",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["forbiddenexception('accesss",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["found",{"_index":89,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/UsersService.html":{}}}],["fourty",{"_index":2744,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fourtyfive",{"_index":2746,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["framework",{"_index":2825,"title":{},"body":{"index.html":{}}}],["function",{"_index":1243,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["functions",{"_index":2814,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gard",{"_index":1928,"title":{},"body":{"classes/Stock.html":{},"interfaces/StockInterface.html":{}}}],["gard.interface.ts",{"_index":1970,"title":{},"body":{"interfaces/StockGardInterface.html":{},"coverage.html":{}}}],["gard.model",{"_index":1935,"title":{},"body":{"classes/Stock.html":{},"interfaces/StockInterface.html":{},"modules/StockModule.html":{}}}],["gard.model.ts",{"_index":1960,"title":{},"body":{"classes/StockGard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gard.model.ts:13",{"_index":1962,"title":{},"body":{"classes/StockGard.html":{}}}],["gard.model.ts:16",{"_index":1961,"title":{},"body":{"classes/StockGard.html":{}}}],["gender",{"_index":300,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["generatetokenandrefresh",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{}}}],["generatetokenandrefresh(userid",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(':branchid",{"_index":1867,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':branchid')@public",{"_index":1850,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':branchid/:category",{"_index":1870,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':branchid/:category')@public",{"_index":1853,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':id",{"_index":463,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@role(roles.superuser",{"_index":1847,"title":{},"body":{"controllers/ProductController.html":{}}}],["get('search",{"_index":1576,"title":{},"body":{"controllers/OffersController.html":{}}}],["get()@role(roles.superuser",{"_index":1845,"title":{},"body":{"controllers/ProductController.html":{}}}],["getting",{"_index":2821,"title":{"index.html":{}},"body":{}}],["grow",{"_index":2856,"title":{},"body":{"index.html":{}}}],["gt",{"_index":692,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["gte",{"_index":695,"title":{},"body":{"injectables/CouponService.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["guards/jwt.guard",{"_index":353,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/roles.guard",{"_index":146,"title":{},"body":{"controllers/AdminController.html":{}}}],["handle",{"_index":87,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["hashedvalue",{"_index":2562,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashfunction",{"_index":2545,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashfunction(text",{"_index":2572,"title":{},"body":{"injectables/UsersService.html":{}}}],["hashrefresh",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["here",{"_index":2867,"title":{},"body":{"index.html":{}}}],["home",{"_index":808,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["http://example.com",{"_index":1065,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["httpcode",{"_index":325,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://nestjs.com",{"_index":2874,"title":{},"body":{"index.html":{}}}],["hydrateddocument",{"_index":2496,"title":{},"body":{"classes/User.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":84,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateProductDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateEmployeeDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":2638,"title":{},"body":{"coverage.html":{}}}],["images",{"_index":1052,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["import",{"_index":29,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["important",{"_index":2807,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["imports",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BranchModule.html":{},"modules/CouponModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{}}}],["improve",{"_index":2803,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["in'})@isenum(department)@isoptional",{"_index":2394,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["in'})@isnotempty()@isenum(department",{"_index":912,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["in_progress",{"_index":2795,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["including",{"_index":1283,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["indeliver",{"_index":2751,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["inherited",{"_index":847,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["inject",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/BranchService.html":{},"injectables/CartService.html":{},"injectables/CouponService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/BranchService.html":{},"injectables/CartService.html":{},"injectables/CouponService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/BranchService.html":{},"injectables/CartService.html":{},"injectables/CouponService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/JWTGuard.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":2077,"title":{},"body":{"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["injectmodel",{"_index":555,"title":{},"body":{"injectables/BranchService.html":{},"injectables/CouponService.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(branch.name",{"_index":556,"title":{},"body":{"injectables/BranchService.html":{}}}],["injectmodel(coupon.name",{"_index":681,"title":{},"body":{"injectables/CouponService.html":{}}}],["injectmodel(delivereyordertype.name",{"_index":1751,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectmodel(dineinorder.name",{"_index":1750,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectmodel(offer.name",{"_index":1620,"title":{},"body":{"injectables/OffersService.html":{}}}],["injectmodel(order.name",{"_index":1748,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectmodel(payment.name",{"_index":1818,"title":{},"body":{"injectables/PaymentService.html":{}}}],["injectmodel(stock.name",{"_index":2128,"title":{},"body":{"injectables/StockService.html":{}}}],["injectmodel(stockitem.name",{"_index":2080,"title":{},"body":{"injectables/StockItemService.html":{}}}],["injectmodel(stockitemslogs.name",{"_index":2046,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{}}}],["injectmodel(stocktransaction.name",{"_index":2186,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["injectmodel(supplier.name",{"_index":2257,"title":{},"body":{"injectables/SupplierService.html":{}}}],["injectmodel(takeawayorder.name",{"_index":1749,"title":{},"body":{"injectables/OrderService.html":{}}}],["injectmodel(ticket.name",{"_index":2353,"title":{},"body":{"injectables/TicketService.html":{}}}],["injectmodel(user.name",{"_index":2589,"title":{},"body":{"injectables/UsersService.html":{}}}],["inprogress",{"_index":2794,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["installation",{"_index":2835,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":2837,"title":{},"body":{"index.html":{}}}],["interface",{"_index":106,"title":{"interfaces/AddTicketUpdatesInterface.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"interfaces/CreatePaymentInterface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{},"interfaces/TakeAwayOrderInterface.html":{},"interfaces/TicketInterface.html":{},"interfaces/Token.html":{}},"body":{"interfaces/AddTicketUpdatesInterface.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"interfaces/CreatePaymentInterface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{},"interfaces/TakeAwayOrderInterface.html":{},"interfaces/TicketInterface.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["interface/addticket",{"_index":2310,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["interface/create",{"_index":1673,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["interface/takeaway",{"_index":1677,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["interface/ticket.interface",{"_index":2307,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["interfaces",{"_index":108,"title":{},"body":{"interfaces/AddTicketUpdatesInterface.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"interfaces/CreatePaymentInterface.html":{},"interfaces/EmployeeTransactionInterface.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{},"interfaces/TakeAwayOrderInterface.html":{},"interfaces/TicketInterface.html":{},"interfaces/Token.html":{},"overview.html":{}}}],["interfaces/emp",{"_index":1394,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["interfaces/stock",{"_index":2044,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["internalservererrorexception",{"_index":2585,"title":{},"body":{"injectables/UsersService.html":{}}}],["internalservererrorexception(err",{"_index":2617,"title":{},"body":{"injectables/UsersService.html":{}}}],["is_public",{"_index":1476,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["isarray",{"_index":760,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["isboolean",{"_index":1079,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isdatestring",{"_index":761,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{}}}],["isdatewithinrange",{"_index":2652,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isdatewithinrange(datetocheck",{"_index":2817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isemail",{"_index":713,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateUserDto.html":{}}}],["isemail()@isoptional",{"_index":2474,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isemployeeguard",{"_index":1453,"title":{"classes/IsEmployeeGuard.html":{}},"body":{"classes/IsEmployeeGuard.html":{},"controllers/OrderController.html":{},"coverage.html":{}}}],["isenum",{"_index":238,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["isenum(accountstatus",{"_index":602,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{}}}],["isenum(attendenceactions",{"_index":728,"title":{},"body":{"classes/CreateAttendActionDTO.html":{}}}],["isenum(attendenceactions)@isnotempty",{"_index":721,"title":{},"body":{"classes/CreateAttendActionDTO.html":{}}}],["isenum(delivereymethod",{"_index":885,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["isenum(deliveryprice",{"_index":887,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["isenum(deliverystatus",{"_index":886,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["isenum(department",{"_index":939,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isenum(orderstatus",{"_index":751,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["isenum(paymentstatus",{"_index":1044,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["isenum(paymentstatus)@isnotempty",{"_index":1036,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["isenum(paymenttype",{"_index":1043,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["isenum(paymenttype)@isnotempty",{"_index":1039,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["isenum(product",{"_index":1025,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["isenum(productcategory",{"_index":1084,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(productcomponents",{"_index":1026,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(productsize",{"_index":1086,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(productsubcategory",{"_index":1085,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["isenum(roles",{"_index":241,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{}}}],["isenum(roles)@isoptional",{"_index":2479,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isenum(sex",{"_index":942,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["isenum(ticketcategory",{"_index":1144,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["isenum(ticketsegment",{"_index":1145,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["isenum(ticketstatus",{"_index":1143,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["isexist",{"_index":2618,"title":{},"body":{"injectables/UsersService.html":{}}}],["isexist.length",{"_index":2620,"title":{},"body":{"injectables/UsersService.html":{}}}],["islatitude",{"_index":804,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["islongitude",{"_index":805,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["ismatchpassword",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["ismongoid",{"_index":727,"title":{},"body":{"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateStockDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{}}}],["ismongoid()@isnotempty",{"_index":723,"title":{},"body":{"classes/CreateAttendActionDTO.html":{}}}],["isnotempty",{"_index":103,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"classes/AssignRoleDto.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/EmployeeTransactionDto.html":{},"classes/LogoutDto.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["isnotempty()@isenum(accountstatus",{"_index":599,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{}}}],["isnotempty()@isenum(ticketcategory",{"_index":1129,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["isnotempty()@isenum(ticketsegment",{"_index":1134,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["isnotempty()@isenum(ticketstatus",{"_index":1137,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["isnotempty()@ismongoid()@isstring",{"_index":1032,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["isnotempty()@isnumber",{"_index":948,"title":{},"body":{"classes/CreateEmployeePDRDTO.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{}}}],["isnotempty()@isstring",{"_index":101,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/UpdateRefreshDto.html":{}}}],["isnotempty()@isstring()@ismongoid",{"_index":1090,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["isnotempty()@type(undefined",{"_index":872,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["isnotempty()@validatenested()@type(undefined",{"_index":845,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{}}}],["isnumber",{"_index":837,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/EmployeeTransactionDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{}}}],["isnumber()@isoptional",{"_index":892,"title":{},"body":{"classes/CreateDineInOrderDto.html":{}}}],["isoptional",{"_index":762,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSupplierDto.html":{},"classes/EmployeeTransactionDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional()@isarray()@isstring",{"_index":2446,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["isoptional()@isboolean",{"_index":2441,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["isoptional()@isdatestring",{"_index":757,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["isoptional()@isenum(product)@isarray",{"_index":1017,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["isoptional()@isenum(productcategory",{"_index":2442,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["isoptional()@isenum(productcomponents",{"_index":2444,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["isoptional()@isenum(productcomponents)@isarray",{"_index":1023,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["isoptional()@isenum(productsize",{"_index":2451,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["isoptional()@isenum(productsubcategory",{"_index":2453,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["isoptional()@ismongoid",{"_index":739,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["isoptional()@isnumber",{"_index":2449,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["isoptional()@isstring",{"_index":746,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/UpdateProductDto.html":{}}}],["isoptional()@isstring()@isarray",{"_index":748,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["isoptional()@validatenested({each",{"_index":754,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["ispublic",{"_index":40,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/RolesGuard.html":{}}}],["ispublic.includes(role",{"_index":1922,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["isrefreshmatched",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["isstring",{"_index":104,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"classes/AssignRoleDto.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/EmployeeTransactionDto.html":{},"classes/LogoutDto.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["isstring()@isnotempty",{"_index":1131,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["isstring()@isoptional",{"_index":2476,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isuserhaverole",{"_index":2546,"title":{},"body":{"injectables/UsersService.html":{}}}],["isuserhaverole(id",{"_index":2574,"title":{},"body":{"injectables/UsersService.html":{}}}],["isvalidcouponbyid",{"_index":1604,"title":{},"body":{"injectables/OffersService.html":{}}}],["isvalidcouponbyid(offerid",{"_index":1614,"title":{},"body":{"injectables/OffersService.html":{}}}],["isvalidcouponbyname",{"_index":663,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidcouponbyname(couponname",{"_index":673,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidcouponinbranchbyname",{"_index":664,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidcouponinbranchbyname(couponname",{"_index":676,"title":{},"body":{"injectables/CouponService.html":{}}}],["isvalidofferinbranchbyid",{"_index":1605,"title":{},"body":{"injectables/OffersService.html":{}}}],["isvalidofferinbranchbyid(offerid",{"_index":1616,"title":{},"body":{"injectables/OffersService.html":{}}}],["isworkinginbranchguard",{"_index":1463,"title":{"classes/IsWorkingInBranchGuard.html":{}},"body":{"classes/IsWorkingInBranchGuard.html":{},"coverage.html":{}}}],["item",{"_index":1011,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"interfaces/StockInterface.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateStockItemLogsDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.controller",{"_index":2107,"title":{},"body":{"modules/StockModule.html":{}}}],["item.controller.ts",{"_index":1983,"title":{},"body":{"controllers/StockItemController.html":{},"coverage.html":{}}}],["item.controller.ts:21",{"_index":1985,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:26",{"_index":1986,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:31",{"_index":1987,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:36",{"_index":1991,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.controller.ts:41",{"_index":1988,"title":{},"body":{"controllers/StockItemController.html":{}}}],["item.dto",{"_index":1996,"title":{},"body":{"controllers/StockItemController.html":{},"classes/UpdateStockItemDto.html":{}}}],["item.dto.ts",{"_index":1096,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/UpdateStockItemDto.html":{},"coverage.html":{}}}],["item.interface",{"_index":2079,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.interface.ts",{"_index":2004,"title":{},"body":{"interfaces/StockItemInterface.html":{},"coverage.html":{}}}],["item.item.price",{"_index":1266,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["item.model",{"_index":2059,"title":{},"body":{"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{}}}],["item.model.ts",{"_index":1976,"title":{},"body":{"classes/StockItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["item.model.ts:6",{"_index":1978,"title":{},"body":{"classes/StockItem.html":{}}}],["item.model.ts:9",{"_index":1977,"title":{},"body":{"classes/StockItem.html":{}}}],["item.quantity",{"_index":1267,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/StockTransactionService.html":{},"classes/TakeAwayOrder.html":{}}}],["item.service",{"_index":1994,"title":{},"body":{"controllers/StockItemController.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{}}}],["item.service.ts",{"_index":2065,"title":{},"body":{"injectables/StockItemService.html":{},"coverage.html":{}}}],["item.service.ts:17",{"_index":2072,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:26",{"_index":2074,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:34",{"_index":2075,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:42",{"_index":2076,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:52",{"_index":2073,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.service.ts:9",{"_index":2070,"title":{},"body":{"injectables/StockItemService.html":{}}}],["item.stock_item",{"_index":2206,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["item/create",{"_index":1094,"title":{},"body":{"classes/CreateStockItemDto.html":{},"controllers/StockItemController.html":{},"coverage.html":{}}}],["item/update",{"_index":1997,"title":{},"body":{"controllers/StockItemController.html":{},"classes/UpdateStockItemDto.html":{},"coverage.html":{}}}],["item_price",{"_index":1265,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["items",{"_index":733,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"interfaces/StockInterface.html":{},"injectables/StockService.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateOfferDto.html":{}}}],["items.dto",{"_index":766,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["items.dto.ts",{"_index":1016,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"coverage.html":{}}}],["items.dto.ts:15",{"_index":1019,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:19",{"_index":1022,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:22",{"_index":1021,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:26",{"_index":1020,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:31",{"_index":1018,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items.dto.ts:36",{"_index":1024,"title":{},"body":{"classes/CreateOrderItemsDto.html":{}}}],["items/create",{"_index":765,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateOrderItemsDto.html":{},"coverage.html":{}}}],["joi",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.object",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":2863,"title":{},"body":{"index.html":{}}}],["join_at",{"_index":292,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["joined",{"_index":916,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["jwt",{"_index":72,"title":{},"body":{"injectables/ATStrategy.html":{},"modules/AuthModule.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":77,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["jwtguard",{"_index":352,"title":{"injectables/JWTGuard.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JWTGuard.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":348,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":358,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{}}}],["kamil",{"_index":2871,"title":{},"body":{"index.html":{}}}],["kilo",{"_index":2760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchen",{"_index":2756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchen_assistance",{"_index":2786,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchen_chief",{"_index":2788,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchen_notes",{"_index":734,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["kitchenassistance",{"_index":2785,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["kitchenchief",{"_index":2787,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["l",{"_index":2776,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["large",{"_index":2775,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lat",{"_index":604,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["latitude",{"_index":807,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{}}}],["latitude'})@isnotempty()@islatitude",{"_index":800,"title":{},"body":{"classes/CreateCordinatesDto.html":{}}}],["legend",{"_index":166,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":2877,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2854,"title":{},"body":{"index.html":{}}}],["litre",{"_index":2761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["loan",{"_index":2812,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["location",{"_index":245,"title":{"classes/Location.html":{}},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coordinates.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBranchDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/OrderService.html":{},"classes/Supplier.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["location.controller",{"_index":1510,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.dto",{"_index":793,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateSupplierDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["location.dto.ts",{"_index":798,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["location.dto.ts:101",{"_index":959,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:102",{"_index":2410,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:110",{"_index":955,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["location.dto.ts:19",{"_index":803,"title":{},"body":{"classes/CreateCordinatesDto.html":{}}}],["location.dto.ts:27",{"_index":801,"title":{},"body":{"classes/CreateCordinatesDto.html":{}}}],["location.dto.ts:29",{"_index":2416,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:37",{"_index":965,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:45",{"_index":957,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:53",{"_index":953,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:61",{"_index":961,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:69",{"_index":967,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:77",{"_index":969,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:85",{"_index":951,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.dto.ts:93",{"_index":963,"title":{},"body":{"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["location.name",{"_index":1512,"title":{},"body":{"modules/LocationModule.html":{}}}],["location.service",{"_index":1498,"title":{},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{}}}],["location/location.module",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["locationcontroller",{"_index":1488,"title":{"controllers/LocationController.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"coverage.html":{}}}],["locationid",{"_index":2519,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["locationmodule",{"_index":181,"title":{"modules/LocationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/SupplierModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["locations",{"_index":2486,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["locations._id",{"_index":2627,"title":{},"body":{"injectables/UsersService.html":{}}}],["locationschema",{"_index":618,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationservice",{"_index":1497,"title":{"injectables/LocationService.html":{}},"body":{"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["location})@isoptional()@validatenested()@type(undefined",{"_index":2387,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["locked",{"_index":2725,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["logout",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logout(@body('id",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["logout(id",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logoutdto",{"_index":1519,"title":{"classes/LogoutDto.html":{}},"body":{"classes/LogoutDto.html":{},"coverage.html":{}}}],["logs",{"_index":2007,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.controller",{"_index":2109,"title":{},"body":{"modules/StockModule.html":{}}}],["logs.controller.ts",{"_index":2006,"title":{},"body":{"controllers/StockItemLogsController.html":{},"coverage.html":{}}}],["logs.controller.ts:21",{"_index":2008,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.controller.ts:26",{"_index":2009,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.controller.ts:31",{"_index":2010,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.controller.ts:36",{"_index":2013,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.controller.ts:41",{"_index":2011,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["logs.dto",{"_index":2016,"title":{},"body":{"controllers/StockItemLogsController.html":{},"classes/UpdateStockItemLogsDto.html":{}}}],["logs.dto.ts",{"_index":1099,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"coverage.html":{}}}],["logs.interface",{"_index":2045,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["logs.interface.ts",{"_index":2024,"title":{},"body":{"interfaces/StockItemLogsInterface.html":{},"coverage.html":{}}}],["logs.model",{"_index":1934,"title":{},"body":{"classes/Stock.html":{},"interfaces/StockInterface.html":{},"injectables/StockItemLogsService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{}}}],["logs.model.ts",{"_index":2086,"title":{},"body":{"classes/StockItemslogs.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logs.model.ts:10",{"_index":2088,"title":{},"body":{"classes/StockItemslogs.html":{}}}],["logs.model.ts:13",{"_index":2089,"title":{},"body":{"classes/StockItemslogs.html":{}}}],["logs.model.ts:16",{"_index":2087,"title":{},"body":{"classes/StockItemslogs.html":{}}}],["logs.model.ts:19",{"_index":2090,"title":{},"body":{"classes/StockItemslogs.html":{}}}],["logs.service",{"_index":2015,"title":{},"body":{"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{}}}],["logs.service.ts",{"_index":2030,"title":{},"body":{"injectables/StockItemLogsService.html":{},"coverage.html":{}}}],["logs.service.ts:14",{"_index":2037,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:23",{"_index":2040,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:31",{"_index":2041,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:39",{"_index":2043,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:49",{"_index":2039,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs.service.ts:8",{"_index":2034,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["logs/create",{"_index":1098,"title":{},"body":{"classes/CreateStockItemLogsDto.html":{},"controllers/StockItemLogsController.html":{},"coverage.html":{}}}],["logs/update",{"_index":2017,"title":{},"body":{"controllers/StockItemLogsController.html":{},"classes/UpdateStockItemLogsDto.html":{},"coverage.html":{}}}],["long",{"_index":605,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["longitude",{"_index":806,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{}}}],["longitude'})@islongitude()@isnotempty",{"_index":802,"title":{},"body":{"classes/CreateCordinatesDto.html":{}}}],["lt",{"_index":1256,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["lte",{"_index":694,"title":{},"body":{"injectables/CouponService.html":{},"injectables/OffersService.html":{}}}],["m",{"_index":2778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["madient",{"_index":810,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["male",{"_index":2791,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manager",{"_index":504,"title":{},"body":{"classes/Branch.html":{},"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["market",{"_index":822,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["matching",{"_index":51,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1523,"title":{"classes/Material.html":{}},"body":{"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"coverage.html":{}}}],["material.controller",{"_index":1553,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.dto",{"_index":1542,"title":{},"body":{"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/UpdateMaterialDto.html":{}}}],["material.dto.ts",{"_index":972,"title":{},"body":{"classes/CreateMaterialDto.html":{},"classes/UpdateMaterialDto.html":{},"coverage.html":{}}}],["material.service",{"_index":1541,"title":{},"body":{"controllers/MaterialController.html":{},"modules/MaterialModule.html":{}}}],["material/material.module",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["materialcontroller",{"_index":1531,"title":{"controllers/MaterialController.html":{}},"body":{"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"coverage.html":{}}}],["materialmodule",{"_index":182,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["materialservice",{"_index":1540,"title":{"injectables/MaterialService.html":{}},"body":{"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"coverage.html":{},"overview.html":{}}}],["measure_by",{"_index":1525,"title":{},"body":{"classes/Material.html":{}}}],["measureunits",{"_index":1526,"title":{},"body":{"classes/Material.html":{},"miscellaneous/enumerations.html":{}}}],["meat",{"_index":2779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["meduim",{"_index":2777,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["metadata",{"_index":2687,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":82,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["method.enums",{"_index":883,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["method.enums.ts",{"_index":2697,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["methods",{"_index":11,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":714,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(8",{"_index":715,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":2690,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2853,"title":{},"body":{"index.html":{}}}],["mode",{"_index":2843,"title":{},"body":{"index.html":{}}}],["model",{"_index":546,"title":{},"body":{"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["model/branch.model",{"_index":541,"title":{},"body":{"modules/BranchModule.html":{},"injectables/BranchService.html":{}}}],["model/coupon.model",{"_index":659,"title":{},"body":{"modules/CouponModule.html":{},"injectables/CouponService.html":{}}}],["model/delivery.model",{"_index":1314,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["model/employee.model",{"_index":1430,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["model/location.model",{"_index":1511,"title":{},"body":{"modules/LocationModule.html":{}}}],["model/offer.model",{"_index":1601,"title":{},"body":{"modules/OffersModule.html":{},"injectables/OffersService.html":{}}}],["model/order.model",{"_index":1706,"title":{},"body":{"modules/OrderModule.html":{},"injectables/OrderService.html":{}}}],["model/payment.model",{"_index":1808,"title":{},"body":{"modules/PaymentModule.html":{},"injectables/PaymentService.html":{}}}],["model/product.model",{"_index":1882,"title":{},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["model/stock",{"_index":1974,"title":{},"body":{"interfaces/StockInterface.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["model/stock.model",{"_index":2101,"title":{},"body":{"modules/StockModule.html":{},"injectables/StockService.html":{}}}],["model/supplier.model",{"_index":2246,"title":{},"body":{"modules/SupplierModule.html":{},"injectables/SupplierService.html":{}}}],["model/user.model",{"_index":2538,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["models/ticket",{"_index":2328,"title":{},"body":{"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{}}}],["models/ticket.model",{"_index":2334,"title":{},"body":{"modules/TicketModule.html":{},"injectables/TicketService.html":{}}}],["module",{"_index":162,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":164,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":814,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["mohamed'})@isoptional()@isstring",{"_index":874,"title":{},"body":{"classes/CreateDeliveryDto.html":{}}}],["moment",{"_index":2681,"title":{},"body":{"dependencies.html":{}}}],["mongocluster",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb",{"_index":930,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["mongoose",{"_index":262,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"injectables/BranchService.html":{},"classes/Coupon.html":{},"injectables/CouponService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.connection",{"_index":2068,"title":{},"body":{"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{}}}],["mongoose.model(coupon.name",{"_index":1261,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["mongoose.model(offer.name",{"_index":1259,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["mongoose.types.objectid",{"_index":276,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coupon.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{}}}],["mongoose.types.objectid(createorderdata.branch",{"_index":1760,"title":{},"body":{"injectables/OrderService.html":{}}}],["mongoose.types.objectid(emp.working_in",{"_index":1759,"title":{},"body":{"injectables/OrderService.html":{}}}],["mongoosemodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/BranchModule.html":{},"modules/CouponModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":542,"title":{},"body":{"modules/BranchModule.html":{},"modules/CouponModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["monthly_pdr",{"_index":305,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{}}}],["more",{"_index":2866,"title":{},"body":{"index.html":{}}}],["msg",{"_index":2201,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["mypassword",{"_index":704,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{}}}],["myśliwiec",{"_index":2872,"title":{},"body":{"index.html":{}}}],["name",{"_index":20,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"controllers/StockController.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSupplierDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name'})@isstring()@isnotempty",{"_index":964,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["name'})@isstring()@isoptional",{"_index":2415,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["nasr",{"_index":811,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["ne",{"_index":2361,"title":{},"body":{"injectables/TicketService.html":{}}}],["need",{"_index":2805,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["neighborhood",{"_index":613,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["neighborhood'})@isstring()@isnotempty",{"_index":966,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["neighborhood'})@isstring()@isoptional",{"_index":2417,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["nest",{"_index":2831,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":2876,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":67,"title":{},"body":{"injectables/ATStrategy.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":31,"title":{},"body":{"injectables/ATGuard.html":{},"modules/AuthModule.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":349,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":2482,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["nestjs/mongoose",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"classes/Attendence.html":{},"classes/Branch.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"modules/DeliveryModule.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"modules/LocationModule.html":{},"classes/Material.html":{},"classes/Offer.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":33,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"modules/AuthModule.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":2675,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":139,"title":{},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"classes/EmployeeTransactionDto.html":{},"controllers/LocationController.html":{},"classes/LogoutDto.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"classes/SignInByEmailDto.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"controllers/UsersController.html":{},"classes/VerifyandRefreshTokenDto.html":{},"dependencies.html":{}}}],["new",{"_index":91,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BillingService.html":{},"injectables/BranchService.html":{},"injectables/CartService.html":{},"injectables/CouponService.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrderType.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["newitem",{"_index":2047,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{}}}],["newitem.save",{"_index":2049,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{}}}],["newlogdata",{"_index":2205,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["newoffer",{"_index":1621,"title":{},"body":{"injectables/OffersService.html":{}}}],["newoffer.save",{"_index":1623,"title":{},"body":{"injectables/OffersService.html":{}}}],["neworder",{"_index":1752,"title":{},"body":{"injectables/OrderService.html":{}}}],["neworder.save",{"_index":1754,"title":{},"body":{"injectables/OrderService.html":{}}}],["newpayment",{"_index":1819,"title":{},"body":{"injectables/PaymentService.html":{}}}],["newpayment.save",{"_index":1821,"title":{},"body":{"injectables/PaymentService.html":{}}}],["newrole",{"_index":2556,"title":{},"body":{"injectables/UsersService.html":{}}}],["newstatus",{"_index":1744,"title":{},"body":{"injectables/OrderService.html":{},"controllers/TicketController.html":{}}}],["newstckitemlog",{"_index":2133,"title":{},"body":{"injectables/StockService.html":{}}}],["newstock",{"_index":2129,"title":{},"body":{"injectables/StockService.html":{}}}],["newstock.save",{"_index":2131,"title":{},"body":{"injectables/StockService.html":{}}}],["newsupplier",{"_index":2258,"title":{},"body":{"injectables/SupplierService.html":{}}}],["newsupplier.save",{"_index":2260,"title":{},"body":{"injectables/SupplierService.html":{}}}],["newticket",{"_index":2354,"title":{},"body":{"injectables/TicketService.html":{}}}],["newticket.save",{"_index":2356,"title":{},"body":{"injectables/TicketService.html":{}}}],["newtransactin",{"_index":2187,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["newtransactin.save",{"_index":2189,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["next",{"_index":821,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateLocationDto.html":{}}}],["node.js",{"_index":2824,"title":{},"body":{"index.html":{}}}],["normal",{"_index":2806,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["note",{"_index":246,"title":{},"body":{"classes/Attendence.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["notes",{"_index":283,"title":{},"body":{"classes/Attendence.html":{},"classes/Customer.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{}}}],["notfoundexception",{"_index":1666,"title":{},"body":{"controllers/OrderController.html":{},"controllers/TicketController.html":{},"injectables/UsersService.html":{}}}],["notfoundexception('not",{"_index":1684,"title":{},"body":{"controllers/OrderController.html":{}}}],["notfoundexception('unvalid",{"_index":2316,"title":{},"body":{"controllers/TicketController.html":{}}}],["notfoundexception('user",{"_index":2629,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception(`no",{"_index":2625,"title":{},"body":{"injectables/UsersService.html":{}}}],["npm",{"_index":2836,"title":{},"body":{"index.html":{}}}],["null",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":282,"title":{},"body":{"classes/Attendence.html":{},"injectables/BillingService.html":{},"injectables/CartService.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrderType.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"interfaces/StockItemLogsInterface.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"classes/StockItemslogs.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{}}}],["numbers",{"_index":920,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["object.values(ordertype",{"_index":1224,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["obour",{"_index":812,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["observable",{"_index":1459,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["offer",{"_index":984,"title":{"classes/Offer.html":{}},"body":{"classes/CreateOfferDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Offer.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateOfferDto.html":{},"coverage.html":{}}}],["offer.dto",{"_index":1586,"title":{},"body":{"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts",{"_index":975,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/UpdateOfferDto.html":{},"coverage.html":{}}}],["offer.dto.ts:18",{"_index":985,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:19",{"_index":2431,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:27",{"_index":978,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:28",{"_index":2426,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:35",{"_index":980,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:36",{"_index":2427,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:43",{"_index":990,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:44",{"_index":2435,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:51",{"_index":989,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:52",{"_index":2434,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:61",{"_index":982,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:62",{"_index":2429,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.dto.ts:69",{"_index":988,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["offer.dto.ts:70",{"_index":2433,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["offer.name",{"_index":1226,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"modules/OffersModule.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["offer.price",{"_index":1272,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["offerid",{"_index":1270,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["offermodel",{"_index":1258,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["offermodel.findbyid(offerid).exec",{"_index":1271,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["offername",{"_index":1578,"title":{},"body":{"controllers/OffersController.html":{}}}],["offerrepo",{"_index":1608,"title":{},"body":{"injectables/OffersService.html":{}}}],["offers",{"_index":735,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"controllers/OffersController.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["offers.controller",{"_index":1600,"title":{},"body":{"modules/OffersModule.html":{}}}],["offers.service",{"_index":1585,"title":{},"body":{"controllers/OffersController.html":{},"modules/OffersModule.html":{}}}],["offers/offers.module",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["offerschema",{"_index":1217,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Offer.html":{},"modules/OffersModule.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["offerscontroller",{"_index":1569,"title":{"controllers/OffersController.html":{}},"body":{"controllers/OffersController.html":{},"modules/OffersModule.html":{},"coverage.html":{}}}],["offersmodule",{"_index":183,"title":{"modules/OffersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["offersservice",{"_index":1584,"title":{"injectables/OffersService.html":{}},"body":{"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"coverage.html":{},"overview.html":{}}}],["open",{"_index":2809,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"controllers/StockController.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":764,"title":{"classes/Order.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["order.controller",{"_index":1705,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.dto",{"_index":857,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.dto.ts",{"_index":731,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:10",{"_index":846,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{}}}],["order.dto.ts:21",{"_index":745,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:25",{"_index":758,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:30",{"_index":749,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:34",{"_index":740,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:38",{"_index":747,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:42",{"_index":741,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:47",{"_index":756,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:50",{"_index":752,"title":{},"body":{"classes/CreateBaseOrderDto.html":{}}}],["order.dto.ts:7",{"_index":893,"title":{},"body":{"classes/CreateDineInOrderDto.html":{}}}],["order.interface",{"_index":1674,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"interfaces/TakeAwayOrderInterface.html":{}}}],["order.interface.ts",{"_index":995,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"coverage.html":{}}}],["order.interfce",{"_index":1678,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{}}}],["order.interfce.ts",{"_index":2266,"title":{},"body":{"interfaces/TakeAwayOrderInterface.html":{},"coverage.html":{}}}],["order.name",{"_index":1710,"title":{},"body":{"modules/OrderModule.html":{}}}],["order.save",{"_index":1768,"title":{},"body":{"injectables/OrderService.html":{}}}],["order.service",{"_index":1668,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["order/order.module",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["order_status",{"_index":736,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/TakeAwayOrder.html":{}}}],["order_type",{"_index":998,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{}}}],["ordercontroller",{"_index":1648,"title":{"controllers/OrderController.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"coverage.html":{}}}],["orderid",{"_index":1746,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderitems",{"_index":1220,"title":{"classes/OrderItems.html":{}},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["ordermodule",{"_index":184,"title":{"modules/OrderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrderModule.html":{},"modules.html":{},"overview.html":{}}}],["orderrepo",{"_index":1727,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderschema",{"_index":1230,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["orderschema.pre('save",{"_index":1242,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["orderschema.set('tojson",{"_index":1289,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["orderschema.set('toobject",{"_index":1291,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["orderschema.virtual('total').get(function",{"_index":1286,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["orderschema.virtual('total_without_tax').get(async",{"_index":1262,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["orderservice",{"_index":1667,"title":{"injectables/OrderService.html":{}},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"coverage.html":{},"overview.html":{}}}],["orderstatus",{"_index":750,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/enumerations.html":{}}}],["orderstatus.pending",{"_index":1766,"title":{},"body":{"injectables/OrderService.html":{}}}],["orderstatus.preparing",{"_index":1227,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["ordertax",{"_index":1287,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["ordertype",{"_index":1001,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"miscellaneous/enumerations.html":{}}}],["ordertype.deliverey",{"_index":1688,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["ordertype.dinein",{"_index":1690,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{}}}],["ordertype.takeaway",{"_index":1686,"title":{},"body":{"controllers/OrderController.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"interfaces/TakeAwayOrderInterface.html":{}}}],["out",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["out_of_stock",{"_index":2802,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["overview",{"_index":2881,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":2667,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":135,"title":{},"body":{"controllers/AdminController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["param('attendanceid",{"_index":1420,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["param('branchid",{"_index":1682,"title":{},"body":{"controllers/OrderController.html":{},"controllers/ProductController.html":{},"controllers/TicketController.html":{}}}],["param('category",{"_index":1871,"title":{},"body":{"controllers/ProductController.html":{}}}],["param('employeeid",{"_index":1418,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["param('id",{"_index":1403,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{}}}],["param('newstatus",{"_index":2323,"title":{},"body":{"controllers/TicketController.html":{}}}],["param('pdr_id",{"_index":1422,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["param('ticketid",{"_index":2320,"title":{},"body":{"controllers/TicketController.html":{}}}],["param('transactionid",{"_index":1417,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["param('userid",{"_index":1415,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["partialtype",{"_index":2372,"title":{},"body":{"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createbillingdto",{"_index":2371,"title":{},"body":{"classes/UpdateBillingDto.html":{}}}],["partialtype(createbranchdto",{"_index":2374,"title":{},"body":{"classes/UpdateBranchDto.html":{}}}],["partialtype(createcartdto",{"_index":2377,"title":{},"body":{"classes/UpdateCartDto.html":{}}}],["partialtype(createcordinatesdto",{"_index":2420,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["partialtype(createcoupondto",{"_index":2379,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["partialtype(createcustomerdto",{"_index":2383,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["partialtype(createdeliverydto",{"_index":2385,"title":{},"body":{"classes/UpdateDeliveryDto.html":{}}}],["partialtype(createlocationdto",{"_index":2407,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["partialtype(creatematerialdto",{"_index":2422,"title":{},"body":{"classes/UpdateMaterialDto.html":{}}}],["partialtype(createofferdto",{"_index":2424,"title":{},"body":{"classes/UpdateOfferDto.html":{}}}],["partialtype(createpaymentdto",{"_index":2437,"title":{},"body":{"classes/UpdatePaymentDto.html":{}}}],["partialtype(createproductdto",{"_index":2439,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createstockdto",{"_index":2460,"title":{},"body":{"classes/UpdateStockDto.html":{}}}],["partialtype(createstockitemdto",{"_index":2461,"title":{},"body":{"classes/UpdateStockItemDto.html":{}}}],["partialtype(createsupplierdto",{"_index":2464,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["partialtype(createticketdto",{"_index":2471,"title":{},"body":{"classes/UpdateTicketDto.html":{}}}],["partialtype(createuserdto",{"_index":2473,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["pass",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":71,"title":{},"body":{"injectables/ATStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":346,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register",{"_index":356,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":68,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["passportstrategy(strategy",{"_index":54,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["password",{"_index":699,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["pasta",{"_index":2770,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["patch",{"_index":472,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":470,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["patch(':id')@role(roles.superuser",{"_index":1858,"title":{},"body":{"controllers/ProductController.html":{}}}],["patch('status/:ticketid/:newstatus",{"_index":2322,"title":{},"body":{"controllers/TicketController.html":{}}}],["payload",{"_index":64,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["payment",{"_index":737,"title":{"classes/Payment.html":{}},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["payment.controller",{"_index":1807,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.dto",{"_index":769,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{}}}],["payment.dto.ts",{"_index":1027,"title":{},"body":{"classes/CreatePaymentDto.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["payment.dto.ts:14",{"_index":1040,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:18",{"_index":1037,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:22",{"_index":1034,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:26",{"_index":1031,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.dto.ts:31",{"_index":1033,"title":{},"body":{"classes/CreatePaymentDto.html":{}}}],["payment.interface",{"_index":1010,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{}}}],["payment.interface.ts",{"_index":1045,"title":{},"body":{"interfaces/CreatePaymentInterface.html":{},"coverage.html":{}}}],["payment.name",{"_index":1229,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/PaymentModule.html":{},"classes/TakeAwayOrder.html":{}}}],["payment.service",{"_index":1796,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment/payment.module",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["payment_id",{"_index":1028,"title":{},"body":{"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/Payment.html":{}}}],["payment_status",{"_index":1029,"title":{},"body":{"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/Payment.html":{}}}],["payment_type",{"_index":1030,"title":{},"body":{"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/Payment.html":{}}}],["paymentcontroller",{"_index":1786,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":185,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentrepo",{"_index":1812,"title":{},"body":{"injectables/PaymentService.html":{}}}],["paymentschema",{"_index":1784,"title":{},"body":{"classes/Payment.html":{},"modules/PaymentModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["paymentservice",{"_index":1795,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["paymentstatus",{"_index":1035,"title":{},"body":{"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/Payment.html":{},"miscellaneous/enumerations.html":{}}}],["paymentstatus.pending",{"_index":1783,"title":{},"body":{"classes/Payment.html":{}}}],["paymenttype",{"_index":1038,"title":{},"body":{"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/Payment.html":{},"miscellaneous/enumerations.html":{}}}],["paymenttype.cash",{"_index":1782,"title":{},"body":{"classes/Payment.html":{}}}],["paypall",{"_index":2768,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pdr",{"_index":287,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{}}}],["pdr.dto",{"_index":1396,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["pdr.dto.ts",{"_index":946,"title":{},"body":{"classes/CreateEmployeePDRDTO.html":{},"coverage.html":{}}}],["pdr.dto.ts:10",{"_index":947,"title":{},"body":{"classes/CreateEmployeePDRDTO.html":{}}}],["pdr.dto.ts:6",{"_index":949,"title":{},"body":{"classes/CreateEmployeePDRDTO.html":{}}}],["pdr_id",{"_index":1377,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["pending",{"_index":2726,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["percent",{"_index":1279,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["percent_discount",{"_index":623,"title":{},"body":{"classes/Coupon.html":{},"classes/CreateCouponDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateCouponDto.html":{}}}],["perparing",{"_index":2764,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["phone",{"_index":247,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Customer.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["phones",{"_index":297,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Supplier.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["pilot",{"_index":864,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["pizza",{"_index":2769,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":2864,"title":{},"body":{"index.html":{}}}],["populate('items.item",{"_index":1772,"title":{},"body":{"injectables/OrderService.html":{}}}],["port",{"_index":784,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateLocationDto.html":{}}}],["post",{"_index":136,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["post(':branchid",{"_index":2292,"title":{},"body":{"controllers/TicketController.html":{}}}],["post(':branchid/deliverey",{"_index":1655,"title":{},"body":{"controllers/OrderController.html":{}}}],["post(':branchid/dinein",{"_index":1658,"title":{},"body":{"controllers/OrderController.html":{}}}],["post(':branchid/takeaway",{"_index":1661,"title":{},"body":{"controllers/OrderController.html":{}}}],["post('assign",{"_index":124,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('attend",{"_index":1352,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('block/:id",{"_index":159,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('block/:id')@role(roles.superuser",{"_index":129,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('bonas/:id",{"_index":1357,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('loan/:id",{"_index":1363,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('location",{"_index":2509,"title":{},"body":{"controllers/UsersController.html":{}}}],["post('logout",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('logout')@httpcode(200",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('pdr/:userid",{"_index":1360,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["post('signin",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":323,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('unassign",{"_index":132,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('updates/:ticketid",{"_index":2288,"title":{},"body":{"controllers/TicketController.html":{}}}],["post()@apibody({type",{"_index":2223,"title":{},"body":{"controllers/SupplierController.html":{}}}],["post()@public",{"_index":519,"title":{},"body":{"controllers/BranchController.html":{},"controllers/ProductController.html":{}}}],["prefix",{"_index":116,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["preparing",{"_index":2763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["price",{"_index":976,"title":{},"body":{"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/Offer.html":{},"classes/Product.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{}}}],["price.enums",{"_index":881,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["price.enums.ts",{"_index":2699,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["private",{"_index":76,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["product",{"_index":1004,"title":{"classes/Product.html":{}},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateProductDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["product.controller",{"_index":1881,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":1862,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":1048,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:19",{"_index":2448,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:23",{"_index":1069,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:27",{"_index":2450,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:30",{"_index":2440,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:31",{"_index":1070,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:34",{"_index":2443,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:38",{"_index":2454,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:39",{"_index":1072,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:42",{"_index":2452,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:46",{"_index":2445,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:47",{"_index":1056,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:51",{"_index":2447,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["product.dto.ts:55",{"_index":1062,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts:63",{"_index":1078,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:71",{"_index":1075,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:79",{"_index":1064,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:88",{"_index":1067,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:96",{"_index":1059,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.name",{"_index":1221,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/ProductModule.html":{},"classes/TakeAwayOrder.html":{}}}],["product.save",{"_index":1903,"title":{},"body":{"injectables/ProductService.html":{}}}],["product.service",{"_index":1861,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["productcategory",{"_index":1060,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["productcomponents",{"_index":1006,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateProductDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Product.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["productcontroller",{"_index":1839,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["production",{"_index":2845,"title":{},"body":{"index.html":{}}}],["production_price",{"_index":1053,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["productmodule",{"_index":186,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productrepo",{"_index":1889,"title":{},"body":{"injectables/ProductService.html":{}}}],["productschema",{"_index":1837,"title":{},"body":{"classes/Product.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productservice",{"_index":1860,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["productsize",{"_index":1073,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["productsubcategory",{"_index":1076,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["progressive",{"_index":2823,"title":{},"body":{"index.html":{}}}],["project",{"_index":2855,"title":{},"body":{"index.html":{}}}],["promise",{"_index":65,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/IsEmployeeGuard.html":{},"injectables/ProductService.html":{},"injectables/UsersService.html":{}}}],["promise.all",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{}}}],["prop",{"_index":250,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"classes/Material.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{}}}],["prop({default",{"_index":1322,"title":{},"body":{"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/Order.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["prop({required",{"_index":509,"title":{},"body":{"classes/Branch.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/Payment.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/Ticket.html":{},"classes/User.html":{}}}],["prop({type",{"_index":253,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"classes/Material.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Branch.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"classes/Supplier.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyandRefreshTokenDto.html":{},"properties.html":{}}}],["provide",{"_index":363,"title":{},"body":{"modules/AuthModule.html":{}}}],["providers",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BranchController.html":{},"controllers/ProductController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pull",{"_index":2616,"title":{},"body":{"injectables/UsersService.html":{}}}],["push",{"_index":2136,"title":{},"body":{"injectables/StockService.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["quantity",{"_index":624,"title":{},"body":{"classes/Coupon.html":{},"injectables/CouponService.html":{},"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Offer.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"interfaces/StockItemLogsInterface.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"classes/StockItemslogs.html":{},"injectables/StockTransactionService.html":{},"classes/TakeAwayOrder.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{}}}],["quantity.interface",{"_index":2167,"title":{},"body":{"interfaces/StockTransactionInterface.html":{}}}],["quantity.interface.ts",{"_index":2064,"title":{},"body":{"interfaces/StockItemQuantityInterface.html":{},"coverage.html":{}}}],["quantity.model",{"_index":1964,"title":{},"body":{"classes/StockGard.html":{},"modules/StockModule.html":{},"classes/StockTransaction.html":{}}}],["quantity.model.ts",{"_index":2055,"title":{},"body":{"classes/StockItemQuantity.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["quantity.model.ts:13",{"_index":2058,"title":{},"body":{"classes/StockItemQuantity.html":{}}}],["quantity.model.ts:16",{"_index":2057,"title":{},"body":{"classes/StockItemQuantity.html":{}}}],["query",{"_index":1583,"title":{},"body":{"controllers/OffersController.html":{}}}],["read",{"_index":2865,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":152,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{}}}],["readyat",{"_index":738,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["ref",{"_index":258,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coupon.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{}}}],["reflactor",{"_index":1917,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["refleactor",{"_index":23,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsWorkingInBranchGuard.html":{}}}],["reflect",{"_index":2686,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":15,"title":{},"body":{"injectables/ATGuard.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"injectables/RolesGuard.html":{}}}],["refresh",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{},"classes/RTGuard.html":{},"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{}}}],["refresh.dto.ts",{"_index":2457,"title":{},"body":{"classes/UpdateRefreshDto.html":{},"coverage.html":{}}}],["refresh.dto.ts:6",{"_index":2458,"title":{},"body":{"classes/UpdateRefreshDto.html":{}}}],["refresh_token",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Token.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["refreshtoken",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["remove",{"_index":456,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":488,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/OrderController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":465,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removeattend",{"_index":1346,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["removeattend(employeeid",{"_index":1371,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["removedrole",{"_index":2580,"title":{},"body":{"injectables/UsersService.html":{}}}],["removeemppdr",{"_index":1347,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["removeemppdr(user_id",{"_index":1376,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["removelocation",{"_index":2507,"title":{},"body":{"controllers/UsersController.html":{}}}],["removelocation(@param('id",{"_index":2530,"title":{},"body":{"controllers/UsersController.html":{}}}],["removelocation(locationid",{"_index":2516,"title":{},"body":{"controllers/UsersController.html":{}}}],["removelocationfromuser",{"_index":2547,"title":{},"body":{"injectables/UsersService.html":{}}}],["removelocationfromuser(userid",{"_index":2577,"title":{},"body":{"injectables/UsersService.html":{}}}],["removerolefromuser",{"_index":121,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AuthService.html":{}}}],["removerolefromuser(@body",{"_index":157,"title":{},"body":{"controllers/AdminController.html":{}}}],["removerolefromuser(assignroledto",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{}}}],["removerolefromuser(asssignroledto",{"_index":131,"title":{},"body":{"controllers/AdminController.html":{}}}],["removes",{"_index":502,"title":{},"body":{"injectables/BillingService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{}}}],["removetransaction",{"_index":1348,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["removetransaction(transactionid",{"_index":1380,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["replace",{"_index":2804,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["repository",{"_index":2834,"title":{},"body":{"index.html":{}}}],["req",{"_index":1350,"title":{},"body":{"controllers/EmployeeController.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/OrderController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["req.params.branchid",{"_index":1471,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["request",{"_index":1351,"title":{},"body":{"controllers/EmployeeController.html":{},"classes/IsWorkingInBranchGuard.html":{},"controllers/OrderController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["required",{"_index":231,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"classes/LogoutDto.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateOfferDto.html":{},"classes/User.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["reset",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["results",{"_index":50,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":44,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"controllers/EmployeeController.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":28,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["role",{"_index":140,"title":{},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"controllers/ProductController.html":{},"controllers/TicketController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role')@role(roles.superuser",{"_index":125,"title":{},"body":{"controllers/AdminController.html":{}}}],["role(roles.superuser",{"_index":154,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/TicketController.html":{}}}],["role(roles.superuser)@delete(':id",{"_index":2296,"title":{},"body":{"controllers/TicketController.html":{}}}],["role(roles.superuser)@patch(':id",{"_index":2298,"title":{},"body":{"controllers/TicketController.html":{}}}],["role(roles.superuser)@patch('status/:ticketid/:newstatus",{"_index":2301,"title":{},"body":{"controllers/TicketController.html":{}}}],["roles",{"_index":143,"title":{},"body":{"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"controllers/ProductController.html":{},"injectables/RolesGuard.html":{},"controllers/TicketController.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["roles.admin",{"_index":708,"title":{},"body":{"classes/CreateAdminUserDto.html":{}}}],["roles.superuser",{"_index":1102,"title":{},"body":{"classes/CreateSuperUserDto.html":{}}}],["roles.user",{"_index":1153,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["roles_keys",{"_index":1919,"title":{},"body":{"injectables/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rolesguard",{"_index":145,"title":{"injectables/RolesGuard.html":{}},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"injectables/RolesGuard.html":{},"coverage.html":{}}}],["rtguard",{"_index":1910,"title":{"classes/RTGuard.html":{}},"body":{"classes/RTGuard.html":{},"coverage.html":{}}}],["run",{"_index":2840,"title":{},"body":{"index.html":{}}}],["runvalidators",{"_index":2624,"title":{},"body":{"injectables/UsersService.html":{}}}],["rxjs",{"_index":1460,"title":{},"body":{"classes/IsEmployeeGuard.html":{},"dependencies.html":{}}}],["salary",{"_index":903,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["salt",{"_index":2590,"title":{},"body":{"injectables/UsersService.html":{}}}],["sasuage",{"_index":2771,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["save",{"_index":2599,"title":{},"body":{"injectables/UsersService.html":{}}}],["scalable",{"_index":2827,"title":{},"body":{"index.html":{}}}],["schema",{"_index":260,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"modules/BranchModule.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"modules/CouponModule.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"modules/DeliveryModule.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"modules/LocationModule.html":{},"classes/Material.html":{},"classes/Offer.html":{},"modules/OffersModule.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"modules/SupplierModule.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"modules/TicketModule.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":261,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(attendence",{"_index":279,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(branch",{"_index":514,"title":{},"body":{"classes/Branch.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(coordinates",{"_index":609,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(coupon",{"_index":633,"title":{},"body":{"classes/Coupon.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(customer",{"_index":1169,"title":{},"body":{"classes/Customer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(delivereyorder",{"_index":1209,"title":{},"body":{"classes/DelivereyOrder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(delivereyordertype",{"_index":1233,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(dineinorder",{"_index":1241,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employee",{"_index":307,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employeepdr",{"_index":290,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(employeetransactions",{"_index":285,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(location",{"_index":619,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(offer",{"_index":1568,"title":{},"body":{"classes/Offer.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(order",{"_index":1231,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(payment",{"_index":1785,"title":{},"body":{"classes/Payment.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(product",{"_index":1838,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stock",{"_index":1937,"title":{},"body":{"classes/Stock.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stockgard",{"_index":1967,"title":{},"body":{"classes/StockGard.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stockitem",{"_index":1980,"title":{},"body":{"classes/StockItem.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stockitemquantity",{"_index":2062,"title":{},"body":{"classes/StockItemQuantity.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stockitemslogs",{"_index":2092,"title":{},"body":{"classes/StockItemslogs.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(stocktransaction",{"_index":2151,"title":{},"body":{"classes/StockTransaction.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(supplier",{"_index":2219,"title":{},"body":{"classes/Supplier.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(takeawayorder",{"_index":1236,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(ticket",{"_index":2281,"title":{},"body":{"classes/Ticket.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(ticketupdates",{"_index":2368,"title":{},"body":{"classes/TicketUpdates.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":2502,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schematypes",{"_index":2497,"title":{},"body":{"classes/User.html":{}}}],["schematypes.objectid",{"_index":2499,"title":{},"body":{"classes/User.html":{}}}],["secret",{"_index":359,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["secretorkey",{"_index":79,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["security",{"_index":925,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["segment",{"_index":1127,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{}}}],["segment.enum",{"_index":1142,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{}}}],["segment.enum.ts",{"_index":2720,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":2828,"title":{},"body":{"index.html":{}}}],["service/stock",{"_index":1993,"title":{},"body":{"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{},"controllers/StockTransactionController.html":{}}}],["service/stock.service",{"_index":1948,"title":{},"body":{"controllers/StockController.html":{},"modules/StockModule.html":{}}}],["service_price",{"_index":1239,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["session",{"_index":2195,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["session.endsession",{"_index":2200,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["session.withtransaction(async",{"_index":2197,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["set",{"_index":1774,"title":{},"body":{"injectables/OrderService.html":{},"injectables/TicketService.html":{}}}],["setmetadata('ispublic",{"_index":2907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(roles_keys",{"_index":2908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sex",{"_index":269,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{},"miscellaneous/enumerations.html":{}}}],["sex.male",{"_index":299,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{}}}],["side",{"_index":2829,"title":{},"body":{"index.html":{}}}],["signby",{"_index":248,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{}}}],["signin",{"_index":2728,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["signinbyemail",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinbyemail(signinbyemaildto",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signinbyemaildto",{"_index":317,"title":{"classes/SignInByEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SignInByEmailDto.html":{},"coverage.html":{}}}],["signinbyemaildto.email",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["signinbyemaildto.password",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":360,"title":{},"body":{"modules/AuthModule.html":{}}}],["signout",{"_index":2729,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["signup",{"_index":312,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(@body",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createuserdto",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup.dto",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup.dto.ts",{"_index":698,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"coverage.html":{}}}],["signup.dto.ts:12",{"_index":703,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{}}}],["signup.dto.ts:20",{"_index":712,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{}}}],["signup.dto.ts:28",{"_index":706,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{}}}],["signup.dto.ts:30",{"_index":709,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{}}}],["singup.dto",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["singup.dto.ts",{"_index":1150,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["singup.dto.ts:12",{"_index":1151,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["singup.dto.ts:20",{"_index":1155,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["singup.dto.ts:28",{"_index":1152,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["singup.dto.ts:30",{"_index":1154,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["size",{"_index":1054,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"classes/UpdateProductDto.html":{}}}],["social",{"_index":924,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"modules/AppModule.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Billing.html":{},"controllers/BillingController.html":{},"modules/BillingModule.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"modules/BranchModule.html":{},"injectables/BranchService.html":{},"classes/Cart.html":{},"controllers/CartController.html":{},"modules/CartModule.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"modules/CouponModule.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBillingDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCartDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateCustomerDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateMaterialDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateTransactionDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"modules/DeliveryModule.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"modules/EmployeeModule.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"modules/LocationModule.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"modules/MaterialModule.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"modules/OffersModule.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBillingDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCartDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateCustomerDto.html":{},"classes/UpdateDeliveryDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateMaterialDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdatePaymentDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateStockDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"classes/UpdateStockTransactionDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateTicketDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"index.html":{}}}],["sponsors",{"_index":2858,"title":{},"body":{"index.html":{}}}],["src/.../account",{"_index":2692,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../attendence",{"_index":2694,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../branch.model.ts",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../coupon.model.ts",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../customer.model.ts",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dates.ts",{"_index":2816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../deliver",{"_index":2698,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../deliverey",{"_index":2696,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../delivery",{"_index":2700,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../delivery.model.ts",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../department.enums.ts",{"_index":2701,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../emp",{"_index":2721,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../employee.model.ts",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ispuplic.decorator.ts",{"_index":2902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../location.model.ts",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../measure",{"_index":2702,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../offer.model.ts",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../order",{"_index":2704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../order.model.ts",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../payment",{"_index":2706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../payment.model.ts",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product",{"_index":2708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../product.model.ts",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":2903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.enums.ts",{"_index":2713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../sex.enum.ts",{"_index":2714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../size.enum.ts",{"_index":2711,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../stock",{"_index":2715,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../stock.model.ts",{"_index":2904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../supplier.model.ts",{"_index":2905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ticket",{"_index":2718,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../ticket.model.ts",{"_index":2906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.model.ts",{"_index":2890,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/admin/admin.controller.ts",{"_index":115,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/auth/admin/admin.controller.ts:22",{"_index":126,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/auth/admin/admin.controller.ts:28",{"_index":133,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/auth/admin/admin.controller.ts:34",{"_index":130,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/auth/admin/dto/admin",{"_index":697,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"coverage.html":{}}}],["src/auth/admin/dto/superuser",{"_index":1100,"title":{},"body":{"classes/CreateSuperUserDto.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:16",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:21",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:29",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":345,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:100",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:107",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:124",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:130",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:28",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:50",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:57",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:76",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorator/ispuplic.decorator",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BranchController.html":{},"controllers/ProductController.html":{}}}],["src/auth/decorator/ispuplic.decorator.ts",{"_index":2644,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorator/roles.decorator",{"_index":1864,"title":{},"body":{"controllers/ProductController.html":{},"controllers/TicketController.html":{}}}],["src/auth/decorator/roles.decorator.ts",{"_index":2647,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/assignrole.dto.ts",{"_index":228,"title":{},"body":{"classes/AssignRoleDto.html":{},"coverage.html":{}}}],["src/auth/dto/assignrole.dto.ts:12",{"_index":236,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["src/auth/dto/assignrole.dto.ts:20",{"_index":233,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["src/auth/dto/logout.dto.ts",{"_index":1520,"title":{},"body":{"classes/LogoutDto.html":{},"coverage.html":{}}}],["src/auth/dto/logout.dto.ts:11",{"_index":1522,"title":{},"body":{"classes/LogoutDto.html":{}}}],["src/auth/dto/signin",{"_index":1923,"title":{},"body":{"classes/SignInByEmailDto.html":{},"coverage.html":{}}}],["src/auth/dto/token.payload.ts",{"_index":2369,"title":{},"body":{"interfaces/Token.html":{},"coverage.html":{}}}],["src/auth/dto/user",{"_index":1149,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/auth/dto/verify",{"_index":2630,"title":{},"body":{"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{}}}],["src/auth/enums/roles.enums",{"_index":239,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"controllers/ProductController.html":{},"controllers/TicketController.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["src/auth/enums/roles.enums.ts",{"_index":2781,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/guards/access",{"_index":6,"title":{},"body":{"injectables/ATGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts",{"_index":1473,"title":{},"body":{"injectables/JWTGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.guard.ts:11",{"_index":1475,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["src/auth/guards/jwt.guard.ts:6",{"_index":1474,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["src/auth/guards/refresh",{"_index":1911,"title":{},"body":{"classes/RTGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard",{"_index":1863,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/auth/guards/roles.guard.ts",{"_index":1914,"title":{},"body":{"injectables/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/roles.guard.ts:12",{"_index":1918,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["src/auth/guards/roles.guard.ts:8",{"_index":1916,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["src/auth/strategy/at.strategy.ts",{"_index":53,"title":{},"body":{"injectables/ATStrategy.html":{},"coverage.html":{}}}],["src/auth/strategy/at.strategy.ts:20",{"_index":63,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["src/auth/strategy/at.strategy.ts:9",{"_index":60,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["src/billing/billing.controller.ts",{"_index":452,"title":{},"body":{"controllers/BillingController.html":{},"coverage.html":{}}}],["src/billing/billing.controller.ts:21",{"_index":460,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/billing.controller.ts:26",{"_index":461,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/billing.controller.ts:31",{"_index":464,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/billing.controller.ts:36",{"_index":471,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/billing.controller.ts:41",{"_index":467,"title":{},"body":{"controllers/BillingController.html":{}}}],["src/billing/billing.module.ts",{"_index":492,"title":{},"body":{"modules/BillingModule.html":{}}}],["src/billing/billing.service.ts",{"_index":494,"title":{},"body":{"injectables/BillingService.html":{},"coverage.html":{}}}],["src/billing/billing.service.ts:11",{"_index":496,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/billing.service.ts:15",{"_index":497,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/billing.service.ts:19",{"_index":499,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/billing.service.ts:23",{"_index":498,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/billing.service.ts:7",{"_index":495,"title":{},"body":{"injectables/BillingService.html":{}}}],["src/billing/dto/create",{"_index":773,"title":{},"body":{"classes/CreateBillingDto.html":{},"coverage.html":{}}}],["src/billing/dto/update",{"_index":2370,"title":{},"body":{"classes/UpdateBillingDto.html":{},"coverage.html":{}}}],["src/billing/entities/billing.entity.ts",{"_index":450,"title":{},"body":{"classes/Billing.html":{},"coverage.html":{}}}],["src/branch/branch.controller.ts",{"_index":516,"title":{},"body":{"controllers/BranchController.html":{},"coverage.html":{}}}],["src/branch/branch.controller.ts:23",{"_index":520,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:28",{"_index":521,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:33",{"_index":522,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:38",{"_index":525,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.controller.ts:43",{"_index":523,"title":{},"body":{"controllers/BranchController.html":{}}}],["src/branch/branch.module",{"_index":1707,"title":{},"body":{"modules/OrderModule.html":{},"modules/StockModule.html":{},"modules/TicketModule.html":{}}}],["src/branch/branch.module.ts",{"_index":539,"title":{},"body":{"modules/BranchModule.html":{}}}],["src/branch/branch.service",{"_index":1675,"title":{},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"controllers/TicketController.html":{}}}],["src/branch/branch.service.ts",{"_index":543,"title":{},"body":{"injectables/BranchService.html":{},"coverage.html":{}}}],["src/branch/branch.service.ts:13",{"_index":549,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:23",{"_index":550,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:32",{"_index":552,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:41",{"_index":554,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:50",{"_index":553,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/branch.service.ts:9",{"_index":547,"title":{},"body":{"injectables/BranchService.html":{}}}],["src/branch/dto/create",{"_index":775,"title":{},"body":{"classes/CreateBranchDto.html":{},"coverage.html":{}}}],["src/branch/dto/update",{"_index":2373,"title":{},"body":{"classes/UpdateBranchDto.html":{},"coverage.html":{}}}],["src/branch/model/branch.model",{"_index":264,"title":{},"body":{"classes/Attendence.html":{},"classes/Coupon.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{}}}],["src/branch/model/branch.model.ts",{"_index":503,"title":{},"body":{"classes/Branch.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/branch/model/branch.model.ts:12",{"_index":511,"title":{},"body":{"classes/Branch.html":{}}}],["src/branch/model/branch.model.ts:15",{"_index":512,"title":{},"body":{"classes/Branch.html":{}}}],["src/branch/model/branch.model.ts:18",{"_index":508,"title":{},"body":{"classes/Branch.html":{}}}],["src/branch/model/branch.model.ts:21",{"_index":507,"title":{},"body":{"classes/Branch.html":{}}}],["src/branch/model/branch.model.ts:9",{"_index":510,"title":{},"body":{"classes/Branch.html":{}}}],["src/cart/cart.controller.ts",{"_index":566,"title":{},"body":{"controllers/CartController.html":{},"coverage.html":{}}}],["src/cart/cart.controller.ts:21",{"_index":569,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:26",{"_index":570,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:31",{"_index":571,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:36",{"_index":574,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.controller.ts:41",{"_index":572,"title":{},"body":{"controllers/CartController.html":{}}}],["src/cart/cart.module.ts",{"_index":587,"title":{},"body":{"modules/CartModule.html":{}}}],["src/cart/cart.service.ts",{"_index":589,"title":{},"body":{"injectables/CartService.html":{},"coverage.html":{}}}],["src/cart/cart.service.ts:11",{"_index":591,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:15",{"_index":592,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:19",{"_index":594,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:23",{"_index":593,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/cart.service.ts:7",{"_index":590,"title":{},"body":{"injectables/CartService.html":{}}}],["src/cart/dto/create",{"_index":795,"title":{},"body":{"classes/CreateCartDto.html":{},"coverage.html":{}}}],["src/cart/dto/update",{"_index":2376,"title":{},"body":{"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["src/cart/entities/cart.entity.ts",{"_index":564,"title":{},"body":{"classes/Cart.html":{},"coverage.html":{}}}],["src/common/functions/dates.ts",{"_index":2651,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/interfaces/location.interface.ts",{"_index":2653,"title":{},"body":{"coverage.html":{}}}],["src/coupon/coupon.controller.ts",{"_index":635,"title":{},"body":{"controllers/CouponController.html":{},"coverage.html":{}}}],["src/coupon/coupon.controller.ts:21",{"_index":638,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:26",{"_index":639,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:31",{"_index":640,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:36",{"_index":643,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.controller.ts:41",{"_index":641,"title":{},"body":{"controllers/CouponController.html":{}}}],["src/coupon/coupon.module.ts",{"_index":657,"title":{},"body":{"modules/CouponModule.html":{}}}],["src/coupon/coupon.service.ts",{"_index":661,"title":{},"body":{"injectables/CouponService.html":{},"coverage.html":{}}}],["src/coupon/coupon.service.ts:14",{"_index":668,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:24",{"_index":671,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:32",{"_index":669,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:41",{"_index":672,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:50",{"_index":680,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:59",{"_index":679,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:68",{"_index":674,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:87",{"_index":678,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/coupon.service.ts:9",{"_index":666,"title":{},"body":{"injectables/CouponService.html":{}}}],["src/coupon/dto/create",{"_index":823,"title":{},"body":{"classes/CreateCouponDto.html":{},"coverage.html":{}}}],["src/coupon/dto/update",{"_index":2378,"title":{},"body":{"classes/UpdateCouponDto.html":{},"coverage.html":{}}}],["src/coupon/model/coupon.model",{"_index":1216,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["src/coupon/model/coupon.model.ts",{"_index":621,"title":{},"body":{"classes/Coupon.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/coupon/model/coupon.model.ts:11",{"_index":625,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:14",{"_index":626,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:17",{"_index":631,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:20",{"_index":630,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:23",{"_index":629,"title":{},"body":{"classes/Coupon.html":{}}}],["src/coupon/model/coupon.model.ts:8",{"_index":628,"title":{},"body":{"classes/Coupon.html":{}}}],["src/customer/customer.controller.ts",{"_index":1171,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{}}}],["src/customer/customer.controller.ts:13",{"_index":1173,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:18",{"_index":1174,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:23",{"_index":1175,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:28",{"_index":1178,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:33",{"_index":1176,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.module.ts",{"_index":1191,"title":{},"body":{"modules/CustomerModule.html":{}}}],["src/customer/customer.service.ts",{"_index":1193,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/customer/customer.service.ts:11",{"_index":1195,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:15",{"_index":1196,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:19",{"_index":1198,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:23",{"_index":1197,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:7",{"_index":1194,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/dto/create",{"_index":839,"title":{},"body":{"classes/CreateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/dto/update",{"_index":2382,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/model/customer.model",{"_index":1214,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["src/customer/model/customer.model.ts",{"_index":1163,"title":{},"body":{"classes/Customer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/customer/model/customer.model.ts:10",{"_index":1167,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/model/customer.model.ts:13",{"_index":1164,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/model/customer.model.ts:16",{"_index":1166,"title":{},"body":{"classes/Customer.html":{}}}],["src/customer/model/customer.model.ts:7",{"_index":1165,"title":{},"body":{"classes/Customer.html":{}}}],["src/delivery/delivery.controller.ts",{"_index":1293,"title":{},"body":{"controllers/DeliveryController.html":{},"coverage.html":{}}}],["src/delivery/delivery.controller.ts:13",{"_index":1295,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:18",{"_index":1296,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:23",{"_index":1297,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:28",{"_index":1300,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.controller.ts:33",{"_index":1298,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["src/delivery/delivery.module.ts",{"_index":1312,"title":{},"body":{"modules/DeliveryModule.html":{}}}],["src/delivery/delivery.service.ts",{"_index":1316,"title":{},"body":{"injectables/DeliveryService.html":{},"coverage.html":{}}}],["src/delivery/delivery.service.ts:11",{"_index":1318,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:15",{"_index":1319,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:19",{"_index":1321,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:23",{"_index":1320,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/delivery.service.ts:7",{"_index":1317,"title":{},"body":{"injectables/DeliveryService.html":{}}}],["src/delivery/dto/create",{"_index":858,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"coverage.html":{}}}],["src/delivery/dto/update",{"_index":2384,"title":{},"body":{"classes/UpdateDeliveryDto.html":{},"coverage.html":{}}}],["src/delivery/enums/deliver",{"_index":2732,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/delivery/enums/deliverey",{"_index":2730,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/delivery/enums/delivery",{"_index":2749,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/delivery/model/delivery.model",{"_index":1219,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["src/delivery/model/delivery.model.ts",{"_index":1200,"title":{},"body":{"classes/DelivereyOrder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/delivery/model/delivery.model.ts:12",{"_index":1205,"title":{},"body":{"classes/DelivereyOrder.html":{}}}],["src/delivery/model/delivery.model.ts:15",{"_index":1203,"title":{},"body":{"classes/DelivereyOrder.html":{}}}],["src/delivery/model/delivery.model.ts:18",{"_index":1204,"title":{},"body":{"classes/DelivereyOrder.html":{}}}],["src/delivery/model/delivery.model.ts:21",{"_index":1201,"title":{},"body":{"classes/DelivereyOrder.html":{}}}],["src/delivery/model/delivery.model.ts:24",{"_index":1206,"title":{},"body":{"classes/DelivereyOrder.html":{}}}],["src/delivery/model/delivery.model.ts:27",{"_index":1202,"title":{},"body":{"classes/DelivereyOrder.html":{}}}],["src/employee/dto/create",{"_index":717,"title":{},"body":{"classes/CreateAttendActionDTO.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"coverage.html":{}}}],["src/employee/dto/emp",{"_index":1439,"title":{},"body":{"classes/EmployeeTransactionDto.html":{},"coverage.html":{}}}],["src/employee/dto/update",{"_index":2386,"title":{},"body":{"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["src/employee/employee.controller.ts",{"_index":1340,"title":{},"body":{"controllers/EmployeeController.html":{},"coverage.html":{}}}],["src/employee/employee.controller.ts:111",{"_index":1382,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:122",{"_index":1374,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:133",{"_index":1379,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:28",{"_index":1366,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:33",{"_index":1367,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:38",{"_index":1369,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:43",{"_index":1385,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:51",{"_index":1370,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:56",{"_index":1353,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:64",{"_index":1364,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:81",{"_index":1358,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.controller.ts:98",{"_index":1361,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["src/employee/employee.module",{"_index":1708,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/employee/employee.module.ts",{"_index":1428,"title":{},"body":{"modules/EmployeeModule.html":{}}}],["src/employee/employee.service",{"_index":1469,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{},"injectables/OrderService.html":{}}}],["src/employee/employee.service.ts",{"_index":2657,"title":{},"body":{"coverage.html":{}}}],["src/employee/enums/attendence",{"_index":2727,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/employee/enums/department.enums.ts",{"_index":2755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/employee/enums/emp",{"_index":2811,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/employee/guards/isemployee.guard",{"_index":1672,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/employee/guards/isemployee.guard.ts",{"_index":1454,"title":{},"body":{"classes/IsEmployeeGuard.html":{},"coverage.html":{}}}],["src/employee/guards/isemployee.guard.ts:14",{"_index":1458,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["src/employee/guards/isemployee.guard.ts:7",{"_index":1457,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["src/employee/interfaces/emp",{"_index":1447,"title":{},"body":{"interfaces/EmployeeTransactionInterface.html":{},"coverage.html":{}}}],["src/employee/model/employee.model.ts",{"_index":243,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/employee/model/employee.model.ts:101",{"_index":1329,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:104",{"_index":1327,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:107",{"_index":1333,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:14",{"_index":251,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/employee.model.ts:17",{"_index":254,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/employee.model.ts:20",{"_index":259,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/employee.model.ts:23",{"_index":256,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/employee.model.ts:26",{"_index":255,"title":{},"body":{"classes/Attendence.html":{}}}],["src/employee/model/employee.model.ts:34",{"_index":1449,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/employee/model/employee.model.ts:37",{"_index":1450,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/employee/model/employee.model.ts:40",{"_index":1452,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/employee/model/employee.model.ts:43",{"_index":1451,"title":{},"body":{"classes/EmployeeTransactions.html":{}}}],["src/employee/model/employee.model.ts:52",{"_index":1438,"title":{},"body":{"classes/EmployeePDR.html":{}}}],["src/employee/model/employee.model.ts:55",{"_index":1437,"title":{},"body":{"classes/EmployeePDR.html":{}}}],["src/employee/model/employee.model.ts:58",{"_index":1436,"title":{},"body":{"classes/EmployeePDR.html":{}}}],["src/employee/model/employee.model.ts:66",{"_index":1332,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:69",{"_index":1337,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:72",{"_index":1338,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:75",{"_index":1326,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:78",{"_index":1330,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:81",{"_index":1328,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:86",{"_index":1336,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:89",{"_index":1334,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:92",{"_index":1331,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:95",{"_index":1325,"title":{},"body":{"classes/Employee.html":{}}}],["src/employee/model/employee.model.ts:98",{"_index":1335,"title":{},"body":{"classes/Employee.html":{}}}],["src/location/dto/create",{"_index":792,"title":{},"body":{"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateSupplierDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["src/location/dto/update",{"_index":2406,"title":{},"body":{"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["src/location/location.controller.ts",{"_index":1489,"title":{},"body":{"controllers/LocationController.html":{},"coverage.html":{}}}],["src/location/location.controller.ts:13",{"_index":1491,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.controller.ts:18",{"_index":1492,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.controller.ts:23",{"_index":1493,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.controller.ts:28",{"_index":1496,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.controller.ts:33",{"_index":1494,"title":{},"body":{"controllers/LocationController.html":{}}}],["src/location/location.module",{"_index":1431,"title":{},"body":{"modules/EmployeeModule.html":{},"modules/SupplierModule.html":{},"modules/UsersModule.html":{}}}],["src/location/location.module.ts",{"_index":1509,"title":{},"body":{"modules/LocationModule.html":{}}}],["src/location/location.service",{"_index":2588,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/location/location.service.ts",{"_index":1513,"title":{},"body":{"injectables/LocationService.html":{},"coverage.html":{}}}],["src/location/location.service.ts:11",{"_index":1515,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:15",{"_index":1516,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:19",{"_index":1518,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:23",{"_index":1517,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/location.service.ts:7",{"_index":1514,"title":{},"body":{"injectables/LocationService.html":{}}}],["src/location/model/location.model",{"_index":271,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Supplier.html":{},"classes/UpdateEmployeeDto.html":{},"classes/User.html":{}}}],["src/location/model/location.model.ts",{"_index":603,"title":{},"body":{"classes/Coordinates.html":{},"classes/Location.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/location/model/location.model.ts:15",{"_index":1485,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:18",{"_index":1481,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:21",{"_index":1479,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:24",{"_index":1483,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:27",{"_index":1486,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:30",{"_index":1487,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:33",{"_index":1478,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:36",{"_index":1484,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:39",{"_index":1482,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:4",{"_index":607,"title":{},"body":{"classes/Coordinates.html":{}}}],["src/location/model/location.model.ts:42",{"_index":1480,"title":{},"body":{"classes/Location.html":{}}}],["src/location/model/location.model.ts:7",{"_index":606,"title":{},"body":{"classes/Coordinates.html":{}}}],["src/main.ts",{"_index":2660,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/material/dto/create",{"_index":971,"title":{},"body":{"classes/CreateMaterialDto.html":{},"coverage.html":{}}}],["src/material/dto/update",{"_index":2421,"title":{},"body":{"classes/UpdateMaterialDto.html":{},"coverage.html":{}}}],["src/material/enums/measure",{"_index":2759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/material/material.controller.ts",{"_index":1532,"title":{},"body":{"controllers/MaterialController.html":{},"coverage.html":{}}}],["src/material/material.controller.ts:13",{"_index":1534,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:18",{"_index":1535,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:23",{"_index":1536,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:28",{"_index":1539,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.controller.ts:33",{"_index":1537,"title":{},"body":{"controllers/MaterialController.html":{}}}],["src/material/material.module.ts",{"_index":1552,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/material/material.service.ts",{"_index":1554,"title":{},"body":{"injectables/MaterialService.html":{},"coverage.html":{}}}],["src/material/material.service.ts:11",{"_index":1556,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:15",{"_index":1557,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:19",{"_index":1559,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:23",{"_index":1558,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/material.service.ts:7",{"_index":1555,"title":{},"body":{"injectables/MaterialService.html":{}}}],["src/material/model/material.model.ts",{"_index":1524,"title":{},"body":{"classes/Material.html":{},"coverage.html":{}}}],["src/material/model/material.model.ts:10",{"_index":1527,"title":{},"body":{"classes/Material.html":{}}}],["src/material/model/material.model.ts:7",{"_index":1528,"title":{},"body":{"classes/Material.html":{}}}],["src/offers/dto/create",{"_index":974,"title":{},"body":{"classes/CreateOfferDto.html":{},"coverage.html":{}}}],["src/offers/dto/update",{"_index":2423,"title":{},"body":{"classes/UpdateOfferDto.html":{},"coverage.html":{}}}],["src/offers/model/offer.model",{"_index":1218,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["src/offers/model/offer.model.ts",{"_index":1560,"title":{},"body":{"classes/Offer.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/offers/model/offer.model.ts:12",{"_index":1561,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:15",{"_index":1562,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:18",{"_index":1567,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:21",{"_index":1566,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:24",{"_index":1563,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:27",{"_index":1565,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/model/offer.model.ts:9",{"_index":1564,"title":{},"body":{"classes/Offer.html":{}}}],["src/offers/offers.controller.ts",{"_index":1570,"title":{},"body":{"controllers/OffersController.html":{},"coverage.html":{}}}],["src/offers/offers.controller.ts:22",{"_index":1573,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:27",{"_index":1574,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:32",{"_index":1579,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:37",{"_index":1577,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:42",{"_index":1582,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.controller.ts:47",{"_index":1580,"title":{},"body":{"controllers/OffersController.html":{}}}],["src/offers/offers.module",{"_index":1709,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/offers/offers.module.ts",{"_index":1599,"title":{},"body":{"modules/OffersModule.html":{}}}],["src/offers/offers.service.ts",{"_index":1602,"title":{},"body":{"injectables/OffersService.html":{},"coverage.html":{}}}],["src/offers/offers.service.ts:13",{"_index":1609,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:23",{"_index":1610,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:32",{"_index":1613,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:41",{"_index":1612,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:50",{"_index":1619,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:59",{"_index":1618,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:68",{"_index":1615,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:87",{"_index":1617,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/offers/offers.service.ts:9",{"_index":1607,"title":{},"body":{"injectables/OffersService.html":{}}}],["src/order/dto/base",{"_index":730,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/delivery/create",{"_index":842,"title":{},"body":{"classes/CreateDelivereyOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/dinein/create",{"_index":889,"title":{},"body":{"classes/CreateDineInOrderDto.html":{},"coverage.html":{}}}],["src/order/dto/order",{"_index":1015,"title":{},"body":{"classes/CreateOrderItemsDto.html":{},"coverage.html":{}}}],["src/order/dto/takeaway/create",{"_index":1122,"title":{},"body":{"classes/CreateTakeAwayOrderDto.html":{},"coverage.html":{}}}],["src/order/enums/order",{"_index":2762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/order/guards/is",{"_index":1464,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{},"coverage.html":{}}}],["src/order/interface/create",{"_index":994,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"coverage.html":{}}}],["src/order/interface/takeaway",{"_index":2265,"title":{},"body":{"interfaces/TakeAwayOrderInterface.html":{},"coverage.html":{}}}],["src/order/model/order.model.ts",{"_index":1211,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/order/model/order.model.ts:110",{"_index":1323,"title":{},"body":{"classes/DineinOrder.html":{}}}],["src/order/model/order.model.ts:113",{"_index":1324,"title":{},"body":{"classes/DineinOrder.html":{}}}],["src/order/model/order.model.ts:19",{"_index":1698,"title":{},"body":{"classes/OrderItems.html":{}}}],["src/order/model/order.model.ts:22",{"_index":1695,"title":{},"body":{"classes/OrderItems.html":{}}}],["src/order/model/order.model.ts:25",{"_index":1697,"title":{},"body":{"classes/OrderItems.html":{}}}],["src/order/model/order.model.ts:28",{"_index":1696,"title":{},"body":{"classes/OrderItems.html":{}}}],["src/order/model/order.model.ts:31",{"_index":1694,"title":{},"body":{"classes/OrderItems.html":{}}}],["src/order/model/order.model.ts:34",{"_index":1699,"title":{},"body":{"classes/OrderItems.html":{}}}],["src/order/model/order.model.ts:40",{"_index":1637,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:43",{"_index":1639,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:46",{"_index":1633,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:52",{"_index":1643,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:55",{"_index":1646,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:58",{"_index":1647,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:61",{"_index":1638,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:64",{"_index":1645,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:67",{"_index":1641,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:70",{"_index":1634,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:73",{"_index":1632,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:76",{"_index":1635,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:79",{"_index":1642,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:82",{"_index":1640,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:85",{"_index":1636,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:88",{"_index":1644,"title":{},"body":{"classes/Order.html":{}}}],["src/order/model/order.model.ts:96",{"_index":1213,"title":{},"body":{"classes/DelivereyOrderType.html":{}}}],["src/order/order.controller.ts",{"_index":1649,"title":{},"body":{"controllers/OrderController.html":{},"coverage.html":{}}}],["src/order/order.controller.ts:33",{"_index":1662,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:50",{"_index":1656,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:65",{"_index":1659,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:80",{"_index":1663,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:85",{"_index":1664,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.controller.ts:90",{"_index":1665,"title":{},"body":{"controllers/OrderController.html":{}}}],["src/order/order.module.ts",{"_index":1704,"title":{},"body":{"modules/OrderModule.html":{}}}],["src/order/order.service.ts",{"_index":1715,"title":{},"body":{"injectables/OrderService.html":{},"coverage.html":{}}}],["src/order/order.service.ts:101",{"_index":1735,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:109",{"_index":1741,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:117",{"_index":1736,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:128",{"_index":1738,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:139",{"_index":1740,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:150",{"_index":1745,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:160",{"_index":1742,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:18",{"_index":1726,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:31",{"_index":1729,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:40",{"_index":1732,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/order/order.service.ts:76",{"_index":1734,"title":{},"body":{"injectables/OrderService.html":{}}}],["src/payment/dto/create",{"_index":768,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreatePaymentDto.html":{},"coverage.html":{}}}],["src/payment/dto/update",{"_index":2436,"title":{},"body":{"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["src/payment/enums/payment",{"_index":2765,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/payment/interface/create",{"_index":1009,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"interfaces/CreatePaymentInterface.html":{},"coverage.html":{}}}],["src/payment/model/payment.model",{"_index":1215,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["src/payment/model/payment.model.ts",{"_index":1776,"title":{},"body":{"classes/Payment.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/payment/model/payment.model.ts:10",{"_index":1781,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:13",{"_index":1780,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:16",{"_index":1779,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:19",{"_index":1777,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/model/payment.model.ts:22",{"_index":1778,"title":{},"body":{"classes/Payment.html":{}}}],["src/payment/payment.controller.ts",{"_index":1787,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/payment/payment.controller.ts:21",{"_index":1789,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:26",{"_index":1790,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:31",{"_index":1791,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:36",{"_index":1794,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.controller.ts:41",{"_index":1792,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/payment/payment.module.ts",{"_index":1806,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/payment/payment.service.ts",{"_index":1809,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/payment/payment.service.ts:13",{"_index":1813,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:23",{"_index":1814,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:32",{"_index":1815,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:41",{"_index":1817,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:50",{"_index":1816,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/payment/payment.service.ts:9",{"_index":1811,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/product/dto/create",{"_index":1047,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":2438,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/enums/product",{"_index":1007,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/enumerations.html":{}}}],["src/product/enums/size.enum.ts",{"_index":2772,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/product/model/product.model",{"_index":1005,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["src/product/model/product.model.ts",{"_index":1826,"title":{},"body":{"classes/Product.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/product/model/product.model.ts:12",{"_index":1832,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:15",{"_index":1833,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:18",{"_index":1834,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:21",{"_index":1827,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:24",{"_index":1829,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:27",{"_index":1836,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:30",{"_index":1835,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:33",{"_index":1830,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:36",{"_index":1831,"title":{},"body":{"classes/Product.html":{}}}],["src/product/model/product.model.ts:39",{"_index":1828,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":1840,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:28",{"_index":1851,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:34",{"_index":1854,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:47",{"_index":1844,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:53",{"_index":1846,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:59",{"_index":1848,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:65",{"_index":1859,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:71",{"_index":1856,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":1880,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service.ts",{"_index":1883,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:11",{"_index":1888,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:14",{"_index":1890,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:23",{"_index":1891,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:30",{"_index":1894,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:38",{"_index":1896,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:49",{"_index":1898,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:63",{"_index":1892,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:71",{"_index":1900,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:82",{"_index":1899,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/stock/controller/stock",{"_index":1982,"title":{},"body":{"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{},"coverage.html":{}}}],["src/stock/controller/stock.controller.ts",{"_index":1939,"title":{},"body":{"controllers/StockController.html":{},"coverage.html":{}}}],["src/stock/controller/stock.controller.ts:21",{"_index":1941,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:26",{"_index":1942,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:31",{"_index":1943,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:36",{"_index":1946,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/controller/stock.controller.ts:41",{"_index":1944,"title":{},"body":{"controllers/StockController.html":{}}}],["src/stock/dto/stock",{"_index":1093,"title":{},"body":{"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"coverage.html":{}}}],["src/stock/dto/stock/create",{"_index":1088,"title":{},"body":{"classes/CreateStockDto.html":{},"coverage.html":{}}}],["src/stock/dto/stock/update",{"_index":2459,"title":{},"body":{"classes/UpdateStockDto.html":{},"coverage.html":{}}}],["src/stock/dto/transaction/create",{"_index":1147,"title":{},"body":{"classes/CreateTransactionDto.html":{},"coverage.html":{}}}],["src/stock/dto/transaction/update",{"_index":2462,"title":{},"body":{"classes/UpdateStockTransactionDto.html":{},"coverage.html":{}}}],["src/stock/enums/stock",{"_index":2793,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/stock/interfaces/stock",{"_index":1969,"title":{},"body":{"interfaces/StockGardInterface.html":{},"interfaces/StockItemInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{},"coverage.html":{}}}],["src/stock/interfaces/stock.interface.ts",{"_index":1973,"title":{},"body":{"interfaces/StockInterface.html":{},"coverage.html":{}}}],["src/stock/model/stock",{"_index":1959,"title":{},"body":{"classes/StockGard.html":{},"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stock/model/stock.model.ts",{"_index":1927,"title":{},"body":{"classes/Stock.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/stock/model/stock.model.ts:15",{"_index":1929,"title":{},"body":{"classes/Stock.html":{}}}],["src/stock/model/stock.model.ts:18",{"_index":1933,"title":{},"body":{"classes/Stock.html":{}}}],["src/stock/model/stock.model.ts:21",{"_index":1931,"title":{},"body":{"classes/Stock.html":{}}}],["src/stock/service/stock",{"_index":2029,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{},"coverage.html":{}}}],["src/stock/service/stock.service.ts",{"_index":2114,"title":{},"body":{"injectables/StockService.html":{},"coverage.html":{}}}],["src/stock/service/stock.service.ts:11",{"_index":2118,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:19",{"_index":2121,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:28",{"_index":2123,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:40",{"_index":2124,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:48",{"_index":2125,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:56",{"_index":2127,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/service/stock.service.ts:64",{"_index":2126,"title":{},"body":{"injectables/StockService.html":{}}}],["src/stock/stock.module.ts",{"_index":2098,"title":{},"body":{"modules/StockModule.html":{}}}],["src/supplier/dto/create",{"_index":1105,"title":{},"body":{"classes/CreateSupplierDto.html":{},"coverage.html":{}}}],["src/supplier/dto/update",{"_index":2463,"title":{},"body":{"classes/UpdateSupplierDto.html":{},"coverage.html":{}}}],["src/supplier/model/supplier.model.ts",{"_index":2214,"title":{},"body":{"classes/Supplier.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/supplier/model/supplier.model.ts:10",{"_index":2217,"title":{},"body":{"classes/Supplier.html":{}}}],["src/supplier/model/supplier.model.ts:13",{"_index":2215,"title":{},"body":{"classes/Supplier.html":{}}}],["src/supplier/model/supplier.model.ts:7",{"_index":2216,"title":{},"body":{"classes/Supplier.html":{}}}],["src/supplier/supplier.controller.ts",{"_index":2221,"title":{},"body":{"controllers/SupplierController.html":{},"coverage.html":{}}}],["src/supplier/supplier.controller.ts:22",{"_index":2224,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:27",{"_index":2225,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:32",{"_index":2226,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:37",{"_index":2229,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.controller.ts:45",{"_index":2227,"title":{},"body":{"controllers/SupplierController.html":{}}}],["src/supplier/supplier.module.ts",{"_index":2244,"title":{},"body":{"modules/SupplierModule.html":{}}}],["src/supplier/supplier.service.ts",{"_index":2248,"title":{},"body":{"injectables/SupplierService.html":{},"coverage.html":{}}}],["src/supplier/supplier.service.ts:13",{"_index":2252,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:22",{"_index":2253,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:30",{"_index":2254,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:38",{"_index":2256,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:46",{"_index":2255,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/supplier/supplier.service.ts:9",{"_index":2250,"title":{},"body":{"injectables/SupplierService.html":{}}}],["src/ticket/dto/add",{"_index":94,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"coverage.html":{}}}],["src/ticket/dto/create",{"_index":1125,"title":{},"body":{"classes/CreateTicketDto.html":{},"coverage.html":{}}}],["src/ticket/dto/update",{"_index":2470,"title":{},"body":{"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["src/ticket/enums/ticket",{"_index":2801,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/ticket/interface/addticket",{"_index":109,"title":{},"body":{"interfaces/AddTicketUpdatesInterface.html":{},"coverage.html":{}}}],["src/ticket/interface/ticket.interface.ts",{"_index":2327,"title":{},"body":{"interfaces/TicketInterface.html":{},"coverage.html":{}}}],["src/ticket/models/ticket",{"_index":2364,"title":{},"body":{"classes/TicketUpdates.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/ticket/models/ticket.model.ts",{"_index":2267,"title":{},"body":{"classes/Ticket.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/ticket/models/ticket.model.ts:13",{"_index":2273,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:16",{"_index":2270,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:19",{"_index":2268,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:22",{"_index":2269,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:25",{"_index":2272,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:28",{"_index":2271,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/models/ticket.model.ts:31",{"_index":2275,"title":{},"body":{"classes/Ticket.html":{}}}],["src/ticket/ticket.controller.ts",{"_index":2283,"title":{},"body":{"controllers/TicketController.html":{},"coverage.html":{}}}],["src/ticket/ticket.controller.ts:34",{"_index":2293,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:50",{"_index":2294,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:55",{"_index":2295,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:60",{"_index":2289,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:74",{"_index":2302,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:87",{"_index":2299,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.controller.ts:93",{"_index":2297,"title":{},"body":{"controllers/TicketController.html":{}}}],["src/ticket/ticket.module.ts",{"_index":2332,"title":{},"body":{"modules/TicketModule.html":{}}}],["src/ticket/ticket.service.ts",{"_index":2338,"title":{},"body":{"injectables/TicketService.html":{},"coverage.html":{}}}],["src/ticket/ticket.service.ts:11",{"_index":2342,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:16",{"_index":2348,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:25",{"_index":2349,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:33",{"_index":2350,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:41",{"_index":2352,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:49",{"_index":2345,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:59",{"_index":2347,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/ticket/ticket.service.ts:69",{"_index":2351,"title":{},"body":{"injectables/TicketService.html":{}}}],["src/users/dto/change",{"_index":596,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{},"coverage.html":{}}}],["src/users/dto/create",{"_index":1156,"title":{},"body":{"classes/CreateUserDto-1.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":2456,"title":{},"body":{"classes/UpdateRefreshDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/enums/account",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["src/users/enums/sex.enum",{"_index":270,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["src/users/enums/sex.enum.ts",{"_index":2790,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/users/model/user.model",{"_index":74,"title":{},"body":{"injectables/ATStrategy.html":{},"classes/Attendence.html":{},"injectables/AuthService.html":{},"classes/Branch.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{}}}],["src/users/model/user.model.ts",{"_index":2485,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/model/user.model.ts:14",{"_index":2488,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:17",{"_index":2495,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:20",{"_index":2489,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:23",{"_index":2491,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:26",{"_index":2493,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:29",{"_index":2492,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:32",{"_index":2494,"title":{},"body":{"classes/User.html":{}}}],["src/users/model/user.model.ts:35",{"_index":2490,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":2504,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:24",{"_index":2512,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":2510,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:38",{"_index":2513,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":2514,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:48",{"_index":2520,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:53",{"_index":2515,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:58",{"_index":2518,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":347,"title":{},"body":{"modules/AuthModule.html":{},"modules/StockModule.html":{},"modules/TicketModule.html":{}}}],["src/users/users.module.ts",{"_index":2536,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":75,"title":{},"body":{"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"injectables/AuthService.html":{}}}],["src/users/users.service.ts",{"_index":2539,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:113",{"_index":2581,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:127",{"_index":2575,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:135",{"_index":2558,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:141",{"_index":2560,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:145",{"_index":2554,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:168",{"_index":2578,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:20",{"_index":2551,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":2573,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:30",{"_index":2565,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":2568,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:48",{"_index":2571,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:59",{"_index":2570,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:66",{"_index":2582,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:69",{"_index":2584,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:77",{"_index":2567,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:87",{"_index":2576,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:91",{"_index":2563,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:98",{"_index":2557,"title":{},"body":{"injectables/UsersService.html":{}}}],["ssid",{"_index":302,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["staff_use",{"_index":2800,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["start",{"_index":2841,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":2844,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":2846,"title":{},"body":{"index.html":{}}}],["start_location",{"_index":865,"title":{},"body":{"classes/CreateDeliveryDto.html":{},"classes/DelivereyOrder.html":{}}}],["startdate",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["started",{"_index":2822,"title":{"index.html":{}},"body":{}}],["starter",{"_index":2833,"title":{},"body":{"index.html":{}}}],["statements",{"_index":2639,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":598,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateTicketDto.html":{},"classes/DelivereyOrder.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["status.dto",{"_index":2587,"title":{},"body":{"injectables/UsersService.html":{}}}],["status.dto.ts",{"_index":597,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{},"coverage.html":{}}}],["status.dto.ts:7",{"_index":600,"title":{},"body":{"classes/ChangeUserStatusDTO.html":{}}}],["status.enum",{"_index":1141,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{}}}],["status.enum.ts",{"_index":2716,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["status.enums",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"classes/TakeAwayOrder.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["status.enums.ts",{"_index":2693,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["stay",{"_index":2868,"title":{},"body":{"index.html":{}}}],["stock",{"_index":1095,"title":{"classes/Stock.html":{}},"body":{"classes/CreateStockItemDto.html":{},"classes/CreateStockItemLogsDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/UpdateStockItemDto.html":{},"classes/UpdateStockItemLogsDto.html":{},"coverage.html":{}}}],["stock.dto",{"_index":1950,"title":{},"body":{"controllers/StockController.html":{},"injectables/StockService.html":{},"classes/UpdateStockDto.html":{}}}],["stock.dto.ts",{"_index":1089,"title":{},"body":{"classes/CreateStockDto.html":{},"classes/UpdateStockDto.html":{},"coverage.html":{}}}],["stock.dto.ts:7",{"_index":1091,"title":{},"body":{"classes/CreateStockDto.html":{}}}],["stock.name",{"_index":2110,"title":{},"body":{"modules/StockModule.html":{}}}],["stock.service",{"_index":2078,"title":{},"body":{"injectables/StockItemService.html":{}}}],["stock/stock.module",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["stock_item",{"_index":2056,"title":{},"body":{"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{}}}],["stock_items",{"_index":1971,"title":{},"body":{"interfaces/StockGardInterface.html":{},"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{}}}],["stockcontroller",{"_index":1938,"title":{"controllers/StockController.html":{}},"body":{"controllers/StockController.html":{},"modules/StockModule.html":{},"coverage.html":{}}}],["stockgard",{"_index":1930,"title":{"classes/StockGard.html":{}},"body":{"classes/Stock.html":{},"classes/StockGard.html":{},"interfaces/StockInterface.html":{},"modules/StockModule.html":{},"coverage.html":{}}}],["stockgard.name",{"_index":2113,"title":{},"body":{"modules/StockModule.html":{}}}],["stockgardinterface",{"_index":1968,"title":{"interfaces/StockGardInterface.html":{}},"body":{"interfaces/StockGardInterface.html":{},"coverage.html":{}}}],["stockgardschema",{"_index":1966,"title":{},"body":{"classes/StockGard.html":{},"modules/StockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stockinterface",{"_index":1972,"title":{"interfaces/StockInterface.html":{}},"body":{"interfaces/StockInterface.html":{},"coverage.html":{}}}],["stockitem",{"_index":1975,"title":{"classes/StockItem.html":{}},"body":{"classes/StockItem.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"coverage.html":{}}}],["stockitem.name",{"_index":2060,"title":{},"body":{"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{}}}],["stockitemcontroller",{"_index":1981,"title":{"controllers/StockItemController.html":{}},"body":{"controllers/StockItemController.html":{},"modules/StockModule.html":{},"coverage.html":{}}}],["stockiteminterface",{"_index":2003,"title":{"interfaces/StockItemInterface.html":{}},"body":{"interfaces/StockItemInterface.html":{},"injectables/StockItemService.html":{},"coverage.html":{}}}],["stockitemlogrepo",{"_index":2035,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{}}}],["stockitemlogscontroller",{"_index":2005,"title":{"controllers/StockItemLogsController.html":{}},"body":{"controllers/StockItemLogsController.html":{},"modules/StockModule.html":{},"coverage.html":{}}}],["stockitemlogserivce",{"_index":2173,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["stockitemlogsinterface",{"_index":2023,"title":{"interfaces/StockItemLogsInterface.html":{}},"body":{"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"coverage.html":{}}}],["stockitemlogsservice",{"_index":2014,"title":{"injectables/StockItemLogsService.html":{}},"body":{"controllers/StockItemLogsController.html":{},"injectables/StockItemLogsService.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["stockitemquantity",{"_index":1963,"title":{"classes/StockItemQuantity.html":{}},"body":{"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"modules/StockModule.html":{},"classes/StockTransaction.html":{},"coverage.html":{}}}],["stockitemquantity.name",{"_index":1965,"title":{},"body":{"classes/StockGard.html":{},"modules/StockModule.html":{}}}],["stockitemquantityinterface",{"_index":2063,"title":{"interfaces/StockItemQuantityInterface.html":{}},"body":{"interfaces/StockItemQuantityInterface.html":{},"interfaces/StockTransactionInterface.html":{},"coverage.html":{}}}],["stockitemquantityschema",{"_index":2061,"title":{},"body":{"classes/StockItemQuantity.html":{},"modules/StockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stockitemrepo",{"_index":2071,"title":{},"body":{"injectables/StockItemService.html":{}}}],["stockitemschema",{"_index":1979,"title":{},"body":{"classes/StockItem.html":{},"modules/StockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stockitemserivce",{"_index":2172,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["stockitemservice",{"_index":1992,"title":{"injectables/StockItemService.html":{}},"body":{"controllers/StockItemController.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockTransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["stockitemslogs",{"_index":1932,"title":{"classes/StockItemslogs.html":{}},"body":{"classes/Stock.html":{},"interfaces/StockInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"coverage.html":{}}}],["stockitemslogs.name",{"_index":2111,"title":{},"body":{"modules/StockModule.html":{}}}],["stockitemslogsschema",{"_index":2091,"title":{},"body":{"classes/StockItemslogs.html":{},"modules/StockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stocklogdata",{"_index":2132,"title":{},"body":{"injectables/StockService.html":{}}}],["stockmodule",{"_index":187,"title":{"modules/StockModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StockModule.html":{},"modules.html":{},"overview.html":{}}}],["stockrepo",{"_index":2119,"title":{},"body":{"injectables/StockService.html":{}}}],["stockschema",{"_index":1936,"title":{},"body":{"classes/Stock.html":{},"modules/StockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stockserive",{"_index":2069,"title":{},"body":{"injectables/StockItemService.html":{}}}],["stockservice",{"_index":1947,"title":{"injectables/StockService.html":{}},"body":{"controllers/StockController.html":{},"injectables/StockItemService.html":{},"modules/StockModule.html":{},"injectables/StockService.html":{},"coverage.html":{},"overview.html":{}}}],["stocktransaction",{"_index":2103,"title":{"classes/StockTransaction.html":{}},"body":{"modules/StockModule.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"coverage.html":{}}}],["stocktransaction.name",{"_index":2112,"title":{},"body":{"modules/StockModule.html":{}}}],["stocktransactioncontroller",{"_index":2099,"title":{"controllers/StockTransactionController.html":{}},"body":{"modules/StockModule.html":{},"controllers/StockTransactionController.html":{},"coverage.html":{}}}],["stocktransactioninterface",{"_index":2166,"title":{"interfaces/StockTransactionInterface.html":{}},"body":{"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"coverage.html":{}}}],["stocktransactionrepo",{"_index":2175,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["stocktransactionschema",{"_index":2102,"title":{},"body":{"modules/StockModule.html":{},"classes/StockTransaction.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stocktransactionservice",{"_index":2097,"title":{"injectables/StockTransactionService.html":{}},"body":{"modules/StockModule.html":{},"controllers/StockTransactionController.html":{},"injectables/StockTransactionService.html":{},"coverage.html":{},"overview.html":{}}}],["stocktransactionstatus",{"_index":2145,"title":{},"body":{"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["stocktransactionstatus.compeleted",{"_index":2194,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["stocktransactionstatus.inprogress",{"_index":2150,"title":{},"body":{"classes/StockTransaction.html":{}}}],["stocktransactiontype",{"_index":2026,"title":{},"body":{"interfaces/StockItemLogsInterface.html":{},"classes/StockItemslogs.html":{},"injectables/StockTransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["stocktransactiontype.add",{"_index":2207,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["strategy",{"_index":69,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["strategy/at.strategy",{"_index":350,"title":{},"body":{"modules/AuthModule.html":{}}}],["street",{"_index":816,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["street_address",{"_index":614,"title":{},"body":{"classes/Coordinates.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/Location.html":{},"classes/UpdateLocationDto.html":{}}}],["street_address'})@isstring()@isnotempty",{"_index":968,"title":{},"body":{"classes/CreateLocationDto.html":{}}}],["street_address'})@isstring()@isoptional",{"_index":2418,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["string",{"_index":99,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"miscellaneous/variables.html":{}}}],["subcategory",{"_index":1055,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["subcategory.enum",{"_index":1082,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["subcategory.enum.ts",{"_index":2712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successfully",{"_index":2203,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["super",{"_index":37,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/RTGuard.html":{},"injectables/RolesGuard.html":{}}}],["super.canactivate(context",{"_index":46,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/JWTGuard.html":{}}}],["superuser",{"_index":2782,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["supplier",{"_index":1108,"title":{"classes/Supplier.html":{}},"body":{"classes/CreateSupplierDto.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"classes/UpdateSupplierDto.html":{},"coverage.html":{}}}],["supplier.controller",{"_index":2245,"title":{},"body":{"modules/SupplierModule.html":{}}}],["supplier.dto",{"_index":2232,"title":{},"body":{"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"classes/UpdateSupplierDto.html":{}}}],["supplier.dto.ts",{"_index":1106,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{},"coverage.html":{}}}],["supplier.dto.ts:17",{"_index":1113,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["supplier.dto.ts:20",{"_index":2467,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["supplier.dto.ts:28",{"_index":1117,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["supplier.dto.ts:31",{"_index":2469,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["supplier.dto.ts:37",{"_index":1110,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["supplier.dto.ts:40",{"_index":2465,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["supplier.name",{"_index":2247,"title":{},"body":{"modules/SupplierModule.html":{}}}],["supplier.service",{"_index":2231,"title":{},"body":{"controllers/SupplierController.html":{},"modules/SupplierModule.html":{}}}],["supplier/supplier.module",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["suppliercontroller",{"_index":2220,"title":{"controllers/SupplierController.html":{}},"body":{"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"coverage.html":{}}}],["suppliermodule",{"_index":188,"title":{"modules/SupplierModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SupplierModule.html":{},"modules.html":{},"overview.html":{}}}],["supplierrepo",{"_index":2251,"title":{},"body":{"injectables/SupplierService.html":{}}}],["supplierschema",{"_index":2218,"title":{},"body":{"classes/Supplier.html":{},"modules/SupplierModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["supplierservice",{"_index":2230,"title":{"injectables/SupplierService.html":{}},"body":{"controllers/SupplierController.html":{},"modules/SupplierModule.html":{},"injectables/SupplierService.html":{},"coverage.html":{},"overview.html":{}}}],["supplies",{"_index":1119,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["supplies'})@isnotempty()@isstring",{"_index":1112,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["supplies'})@isoptional()@isstring",{"_index":2466,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["support",{"_index":2859,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":2879,"title":{},"body":{"modules.html":{}}}],["table",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["table_number",{"_index":891,"title":{},"body":{"classes/CreateDineInOrderDto.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["takeaway",{"_index":1123,"title":{},"body":{"classes/CreateTakeAwayOrderDto.html":{},"controllers/OrderController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["takeawayorder",{"_index":1234,"title":{"classes/TakeAwayOrder.html":{}},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"injectables/OrderService.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{}}}],["takeawayorder.name",{"_index":1713,"title":{},"body":{"modules/OrderModule.html":{}}}],["takeawayorderinterface",{"_index":1676,"title":{"interfaces/TakeAwayOrderInterface.html":{}},"body":{"controllers/OrderController.html":{},"injectables/OrderService.html":{},"interfaces/TakeAwayOrderInterface.html":{},"coverage.html":{}}}],["takeawayorderschema",{"_index":1235,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"classes/TakeAwayOrder.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["takeawayrepo",{"_index":1723,"title":{},"body":{"injectables/OrderService.html":{}}}],["tax",{"_index":1284,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["tax_percent",{"_index":999,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["ten",{"_index":2735,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":2849,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":2852,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2851,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2848,"title":{},"body":{"index.html":{}}}],["text",{"_index":2564,"title":{},"body":{"injectables/UsersService.html":{}}}],["thanks",{"_index":2857,"title":{},"body":{"index.html":{}}}],["third",{"_index":818,"title":{},"body":{"classes/CreateCordinatesDto.html":{},"classes/CreateLocationDto.html":{},"classes/UpdateLocationDto.html":{}}}],["thirty",{"_index":2741,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["thirtyfive",{"_index":2742,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["this.addtransactiontostock(transaction_id",{"_index":2198,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.authservice.addroletouser(asssignroledto",{"_index":156,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authservice.logout(id",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.removerolefromuser(asssignroledto",{"_index":158,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.authservice.signinbyemail(signinbyemaildto",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.usersignup(createuserdto",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.billingservice.create(createbillingdto",{"_index":482,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.findall",{"_index":483,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.findone(+id",{"_index":485,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.remove(+id",{"_index":489,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.billingservice.update(+id",{"_index":487,"title":{},"body":{"controllers/BillingController.html":{}}}],["this.branch",{"_index":1254,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.branchrepo(createbranchdto",{"_index":557,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.find().exec",{"_index":559,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.findbyid(id",{"_index":560,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.findbyidanddelete(id",{"_index":562,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchrepo.findbyidandupdate(id",{"_index":561,"title":{},"body":{"injectables/BranchService.html":{}}}],["this.branchservice.create(createbranchdto",{"_index":531,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.branchservice.findall",{"_index":532,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.branchservice.findonebyid(branchid",{"_index":1683,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.branchservice.findonebyid(id",{"_index":533,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.branchservice.remove(id",{"_index":535,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.branchservice.update(id",{"_index":534,"title":{},"body":{"controllers/BranchController.html":{}}}],["this.brnachservice.findonebyid(branchid",{"_index":2315,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.cartservice.create(createcartdto",{"_index":580,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findall",{"_index":581,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.findone(+id",{"_index":582,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.remove(+id",{"_index":584,"title":{},"body":{"controllers/CartController.html":{}}}],["this.cartservice.update(+id",{"_index":583,"title":{},"body":{"controllers/CartController.html":{}}}],["this.configservice.get('jwt_refresh_expirein",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.configservice.get('jwt_token_expirein",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.connection.startsession",{"_index":2196,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.constructor",{"_index":1251,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.coupon",{"_index":1273,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.couponrepo",{"_index":691,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo(createcoupondto",{"_index":682,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.find().exec",{"_index":685,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.findbyid(id",{"_index":686,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.findbyidanddelete(id",{"_index":688,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.findbyidandupdate(id",{"_index":687,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponrepo.findone",{"_index":684,"title":{},"body":{"injectables/CouponService.html":{}}}],["this.couponservice.create(createcoupondto",{"_index":649,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.couponservice.findall",{"_index":650,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.couponservice.findonebyid(id",{"_index":652,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.couponservice.remove(id",{"_index":654,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.couponservice.update(id",{"_index":653,"title":{},"body":{"controllers/CouponController.html":{}}}],["this.createtakeawayorder(createorderdata",{"_index":1763,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.customerservice.create(createcustomerdto",{"_index":1184,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findall",{"_index":1185,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findone(+id",{"_index":1186,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.remove(+id",{"_index":1188,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.update(+id",{"_index":1187,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.daily_orderid",{"_index":1257,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.deliveryservice.create(createdeliverydto",{"_index":1305,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.findall",{"_index":1306,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.findone(+id",{"_index":1307,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.remove(+id",{"_index":1309,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.deliveryservice.update(+id",{"_index":1308,"title":{},"body":{"controllers/DeliveryController.html":{}}}],["this.discount",{"_index":1277,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.employeeservice.addemployeeattendaction",{"_index":1407,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.addemployeepdr",{"_index":1416,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.addemployeetransaction(data",{"_index":1413,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.create(createemployeedto",{"_index":1399,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.findall",{"_index":1400,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.findbyid(id",{"_index":1402,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.findempbyuserid",{"_index":1756,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.employeeservice.remove(id",{"_index":1405,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.removeemployeeattendaction",{"_index":1421,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.removeemployeepdr(user_id",{"_index":1423,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.removeemployeetransaction",{"_index":1419,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeeservice.update(id",{"_index":1404,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["this.employeesservice.isuserworkinginbranch(user_id",{"_index":1472,"title":{},"body":{"classes/IsWorkingInBranchGuard.html":{}}}],["this.empservice.isuseremployee(user._id",{"_index":1462,"title":{},"body":{"classes/IsEmployeeGuard.html":{}}}],["this.findbyid(transaction_id",{"_index":2190,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.generatetokenandrefresh(user._id",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.hashfunction(createuserdto.password",{"_index":2594,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.isnew",{"_index":1244,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.items.foreach((item",{"_index":1264,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.jwtservice.signasync",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.locationservice.create(createlocationdto",{"_index":1501,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.locationservice.findall",{"_index":1502,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.locationservice.findone(+id",{"_index":1503,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.locationservice.remove(+id",{"_index":1505,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.locationservice.update(+id",{"_index":1504,"title":{},"body":{"controllers/LocationController.html":{}}}],["this.materialservice.create(creatematerialdto",{"_index":1545,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.materialservice.findall",{"_index":1546,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.materialservice.findone(+id",{"_index":1547,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.materialservice.remove(+id",{"_index":1549,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.materialservice.update(+id",{"_index":1548,"title":{},"body":{"controllers/MaterialController.html":{}}}],["this.offerrepo",{"_index":1630,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo(createofferdto",{"_index":1622,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.find",{"_index":1626,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.find().exec",{"_index":1624,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.findbyid(id",{"_index":1625,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.findbyidanddelete(id",{"_index":1628,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offerrepo.findbyidandupdate(id",{"_index":1627,"title":{},"body":{"injectables/OffersService.html":{}}}],["this.offers",{"_index":1268,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.offers.foreach(async",{"_index":1269,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.offersservice.create(createofferdto",{"_index":1589,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.findall",{"_index":1590,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.findofferbyname(offername",{"_index":1593,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.findonebyid(id",{"_index":1591,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.remove(id",{"_index":1595,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.offersservice.update(id",{"_index":1594,"title":{},"body":{"controllers/OffersController.html":{}}}],["this.orderrepo",{"_index":1771,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo(createorderdata",{"_index":1753,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo.find().populate('items.item').exec",{"_index":1769,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo.findbyid(id",{"_index":1770,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo.findbyidanddelete(id",{"_index":1775,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderrepo.findbyidandupdate(orderid",{"_index":1773,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.orderservice.createorder(data",{"_index":1689,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.createtakeawayorder(data",{"_index":1687,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findall",{"_index":1691,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.findonebyid(id",{"_index":1692,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.orderservice.remove(id",{"_index":1693,"title":{},"body":{"controllers/OrderController.html":{}}}],["this.paymentrepo(createpaymentdto",{"_index":1820,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepo.find().exec",{"_index":1822,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepo.findbyid(id).exec",{"_index":1823,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepo.findbyidanddelete(id",{"_index":1825,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentrepo.findbyidandupdate(id",{"_index":1824,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentservice.create(createpaymentdto",{"_index":1799,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.findall",{"_index":1800,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.findonebyid(id",{"_index":1801,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.remove(id",{"_index":1803,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.paymentservice.update(id",{"_index":1802,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.percent_discount",{"_index":1278,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.productrepo",{"_index":1906,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo(createproductdto",{"_index":1902,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.find",{"_index":1905,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.find().exec",{"_index":1904,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.findbyid(id).exec",{"_index":1907,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.findbyidanddelete(id",{"_index":1909,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepo.findbyidandupdate(id",{"_index":1908,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.create(createproductdto",{"_index":1873,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":1874,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findonebyid(id",{"_index":1875,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductsbybranchid(branchid",{"_index":1869,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductsbybranchidandcategory",{"_index":1872,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.remove(id",{"_index":1877,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id",{"_index":1876,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.reflactor.getallandoverride(roles_keys",{"_index":1920,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["this.refleactor.getallandoverride('ispublic",{"_index":41,"title":{},"body":{"injectables/ATGuard.html":{}}}],["this.reflector.getallandoverride('ispublic",{"_index":1477,"title":{},"body":{"injectables/JWTGuard.html":{}}}],["this.stockitemlogrepo",{"_index":2052,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["this.stockitemlogrepo(data",{"_index":2048,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["this.stockitemlogrepo(stocklogdata",{"_index":2134,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockitemlogrepo.find().exec",{"_index":2050,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["this.stockitemlogrepo.findbyid(id).exec",{"_index":2051,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["this.stockitemlogrepo.findbyidanddelete(id).exec",{"_index":2054,"title":{},"body":{"injectables/StockItemLogsService.html":{}}}],["this.stockitemlogserivce.create(newlogdata",{"_index":2209,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stockitemlogsservice.create(createdto",{"_index":2018,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["this.stockitemlogsservice.deletebyid(id",{"_index":2022,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["this.stockitemlogsservice.findall",{"_index":2019,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["this.stockitemlogsservice.findonebyid(id",{"_index":2020,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["this.stockitemlogsservice.updatebyid(id",{"_index":2021,"title":{},"body":{"controllers/StockItemLogsController.html":{}}}],["this.stockitemrepo",{"_index":2084,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo(data",{"_index":2081,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo.find().exec",{"_index":2082,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo.findbyid(id).exec",{"_index":2083,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemrepo.findbyidanddelete(id).exec",{"_index":2085,"title":{},"body":{"injectables/StockItemService.html":{}}}],["this.stockitemservice.create(createdto",{"_index":1998,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockitemservice.deletebyid(id",{"_index":2002,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockitemservice.findall",{"_index":1999,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockitemservice.findonebyid(id",{"_index":2000,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockitemservice.updatebyid(id",{"_index":2001,"title":{},"body":{"controllers/StockItemController.html":{}}}],["this.stockrepo(createstockdto",{"_index":2130,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.find().exec",{"_index":2137,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.findbyid(id",{"_index":2138,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.findbyidanddelete(id",{"_index":2140,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.findbyidandupdate(branch_id",{"_index":2135,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockrepo.findbyidandupdate(id",{"_index":2139,"title":{},"body":{"injectables/StockService.html":{}}}],["this.stockservice.createstock(createstockdto",{"_index":1954,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.findall",{"_index":1955,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.findonebyid(id",{"_index":1956,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.remove(id",{"_index":1958,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stockservice.update(id",{"_index":1957,"title":{},"body":{"controllers/StockController.html":{}}}],["this.stocktransactionrepo",{"_index":2212,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo(data",{"_index":2188,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo.find().exec",{"_index":2211,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo.findbyid(id",{"_index":2210,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionrepo.findbyidanddelete(id).exec",{"_index":2213,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.stocktransactionservice.create(createdto",{"_index":2161,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.deletebyid(id",{"_index":2165,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.findall",{"_index":2162,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.findbyid(id",{"_index":2163,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.stocktransactionservice.updatebyid(id",{"_index":2164,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["this.supplierrepo(createsupplierdto",{"_index":2259,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierrepo.find().exec",{"_index":2261,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierrepo.findbyid(id",{"_index":2262,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierrepo.findbyidanddelete(id",{"_index":2264,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierrepo.findbyidandupdate(id",{"_index":2263,"title":{},"body":{"injectables/SupplierService.html":{}}}],["this.supplierservice.create(createsupplierdto",{"_index":2236,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.supplierservice.findall",{"_index":2237,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.supplierservice.findonebyid(id",{"_index":2238,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.supplierservice.remove(id",{"_index":2240,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.supplierservice.update(id",{"_index":2239,"title":{},"body":{"controllers/SupplierController.html":{}}}],["this.takeawayrepo(createorderdata",{"_index":1767,"title":{},"body":{"injectables/OrderService.html":{}}}],["this.tax_percent",{"_index":1288,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["this.ticketrepo(data",{"_index":2355,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.find().exec",{"_index":2357,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.findbyid(id",{"_index":2358,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.findbyidanddelete(id",{"_index":2363,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.findbyidandupdate(id",{"_index":2359,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketrepo.findoneandupdate",{"_index":2360,"title":{},"body":{"injectables/TicketService.html":{}}}],["this.ticketservice.addticketupdate(ticketid",{"_index":2321,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.changeticketstatus(ticketid",{"_index":2324,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.create(data",{"_index":2317,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findall",{"_index":2318,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.findonebyid(id",{"_index":2319,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.remove(id",{"_index":2326,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.ticketservice.update(id",{"_index":2325,"title":{},"body":{"controllers/TicketController.html":{}}}],["this.updatebyid(transaction_id",{"_index":2199,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["this.userrepo",{"_index":2622,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo(createuserdto",{"_index":2593,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.find",{"_index":2619,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.find().exec",{"_index":2601,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyid(id).exec",{"_index":2602,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyid(userid",{"_index":2610,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyidanddelete(id",{"_index":2607,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyidandupdate",{"_index":2615,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findbyidandupdate(id",{"_index":2604,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findone",{"_index":2603,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.findoneandupdate",{"_index":2626,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userrepo.updatemany",{"_index":2605,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userserivce.blockuser(id",{"_index":161,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.userservice.addroletouser",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.comparetextwithhash",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.create(createuserdto",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.deleterefresh(id",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyemail",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyemail(email",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyid",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findonebyid(payload.userid",{"_index":86,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["this.userservice.hashfunction",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.unassignrolefromuser",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.update(user._id",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updaterefresh(user._id",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.addlocationtouser(user_id",{"_index":2525,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.create(createuserdto",{"_index":2524,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findall",{"_index":2526,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonebyid(id",{"_index":2527,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.remove(id",{"_index":2529,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.removelocationfromuser(user_id",{"_index":2531,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":2528,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":90,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["ticket",{"_index":95,"title":{"classes/Ticket.html":{}},"body":{"classes/AddTicketUpdateDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"coverage.html":{}}}],["ticket.controller",{"_index":2333,"title":{},"body":{"modules/TicketModule.html":{}}}],["ticket.dto",{"_index":2305,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{}}}],["ticket.dto.ts",{"_index":1126,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["ticket.dto.ts:13",{"_index":1130,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:17",{"_index":1135,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:21",{"_index":1132,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.dto.ts:9",{"_index":1138,"title":{},"body":{"classes/CreateTicketDto.html":{}}}],["ticket.name",{"_index":2336,"title":{},"body":{"modules/TicketModule.html":{}}}],["ticket.service",{"_index":2304,"title":{},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{}}}],["ticket/ticket.module",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["ticketcategory",{"_index":1128,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"miscellaneous/enumerations.html":{}}}],["ticketcategory.improve",{"_index":2278,"title":{},"body":{"classes/Ticket.html":{}}}],["ticketcontroller",{"_index":2282,"title":{"controllers/TicketController.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"coverage.html":{}}}],["ticketid",{"_index":2290,"title":{},"body":{"controllers/TicketController.html":{}}}],["ticketinterface",{"_index":2306,"title":{"interfaces/TicketInterface.html":{}},"body":{"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"coverage.html":{}}}],["ticketmodule",{"_index":189,"title":{"modules/TicketModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TicketModule.html":{},"modules.html":{},"overview.html":{}}}],["ticketrepo",{"_index":2343,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketschema",{"_index":2280,"title":{},"body":{"classes/Ticket.html":{},"modules/TicketModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ticketsegment",{"_index":1133,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"miscellaneous/enumerations.html":{}}}],["ticketsegment.normal",{"_index":2279,"title":{},"body":{"classes/Ticket.html":{}}}],["ticketservice",{"_index":2303,"title":{"injectables/TicketService.html":{}},"body":{"controllers/TicketController.html":{},"modules/TicketModule.html":{},"injectables/TicketService.html":{},"coverage.html":{},"overview.html":{}}}],["ticketstatus",{"_index":1136,"title":{},"body":{"classes/CreateTicketDto.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"miscellaneous/enumerations.html":{}}}],["ticketstatus.close",{"_index":2362,"title":{},"body":{"injectables/TicketService.html":{}}}],["ticketstatus.open",{"_index":2277,"title":{},"body":{"classes/Ticket.html":{}}}],["ticketupdates",{"_index":2274,"title":{"classes/TicketUpdates.html":{}},"body":{"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{},"classes/TicketUpdates.html":{},"coverage.html":{}}}],["ticketupdates.name",{"_index":2337,"title":{},"body":{"modules/TicketModule.html":{}}}],["ticketupdatesschema",{"_index":2335,"title":{},"body":{"modules/TicketModule.html":{},"classes/TicketUpdates.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timestamps",{"_index":275,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/User.html":{}}}],["todayend",{"_index":1247,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["todayend.sethours(23",{"_index":1248,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["todaystart",{"_index":1245,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["todaystart.sethours(0",{"_index":1246,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["token",{"_index":328,"title":{"interfaces/Token.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Token.html":{},"coverage.html":{}}}],["token.dto",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["token.dto.ts",{"_index":2631,"title":{},"body":{"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{}}}],["token.dto.ts:11",{"_index":2635,"title":{},"body":{"classes/VerifyandRefreshTokenDto.html":{}}}],["token.dto.ts:19",{"_index":2633,"title":{},"body":{"classes/VerifyandRefreshTokenDto.html":{}}}],["token.guard.ts",{"_index":7,"title":{},"body":{"injectables/ATGuard.html":{},"coverage.html":{}}}],["token.guard.ts:10",{"_index":26,"title":{},"body":{"injectables/ATGuard.html":{}}}],["token.guard.ts:6",{"_index":17,"title":{},"body":{"injectables/ATGuard.html":{}}}],["token.refresh_token",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokens.refresh_token",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":1263,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["touch",{"_index":2869,"title":{},"body":{"index.html":{}}}],["tpken.guard.ts",{"_index":1912,"title":{},"body":{"classes/RTGuard.html":{},"coverage.html":{}}}],["tpken.guard.ts:3",{"_index":1913,"title":{},"body":{"classes/RTGuard.html":{}}}],["transaction",{"_index":272,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"interfaces/StockInterface.html":{},"interfaces/StockItemLogsInterface.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"miscellaneous/enumerations.html":{}}}],["transaction).stock_items.foreach(async",{"_index":2204,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.bonas",{"_index":1414,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["transaction.controller",{"_index":2108,"title":{},"body":{"modules/StockModule.html":{}}}],["transaction.controller.ts",{"_index":2152,"title":{},"body":{"controllers/StockTransactionController.html":{},"coverage.html":{}}}],["transaction.controller.ts:23",{"_index":2153,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:28",{"_index":2154,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:33",{"_index":2155,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:38",{"_index":2158,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.controller.ts:46",{"_index":2156,"title":{},"body":{"controllers/StockTransactionController.html":{}}}],["transaction.dto",{"_index":1392,"title":{},"body":{"controllers/EmployeeController.html":{},"controllers/StockTransactionController.html":{},"classes/UpdateStockTransactionDto.html":{}}}],["transaction.dto.ts",{"_index":1148,"title":{},"body":{"classes/CreateTransactionDto.html":{},"classes/EmployeeTransactionDto.html":{},"classes/UpdateStockTransactionDto.html":{},"coverage.html":{}}}],["transaction.dto.ts:10",{"_index":1441,"title":{},"body":{"classes/EmployeeTransactionDto.html":{}}}],["transaction.dto.ts:17",{"_index":1444,"title":{},"body":{"classes/EmployeeTransactionDto.html":{}}}],["transaction.enum",{"_index":274,"title":{},"body":{"classes/Attendence.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{}}}],["transaction.enum.ts",{"_index":2722,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transaction.interface",{"_index":1395,"title":{},"body":{"controllers/EmployeeController.html":{},"injectables/StockTransactionService.html":{}}}],["transaction.interface.ts",{"_index":1448,"title":{},"body":{"interfaces/EmployeeTransactionInterface.html":{},"interfaces/StockTransactionInterface.html":{},"coverage.html":{}}}],["transaction.loan",{"_index":1412,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["transaction.model",{"_index":2104,"title":{},"body":{"modules/StockModule.html":{},"injectables/StockTransactionService.html":{}}}],["transaction.model.ts",{"_index":2141,"title":{},"body":{"classes/StockTransaction.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transaction.model.ts:13",{"_index":2147,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.model.ts:16",{"_index":2148,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.model.ts:19",{"_index":2149,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.model.ts:22",{"_index":2144,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.model.ts:25",{"_index":2146,"title":{},"body":{"classes/StockTransaction.html":{}}}],["transaction.service",{"_index":2105,"title":{},"body":{"modules/StockModule.html":{},"controllers/StockTransactionController.html":{}}}],["transaction.service.ts",{"_index":2168,"title":{},"body":{"injectables/StockTransactionService.html":{},"coverage.html":{}}}],["transaction.service.ts:108",{"_index":2182,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:13",{"_index":2174,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:22",{"_index":2181,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:31",{"_index":2179,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:58",{"_index":2177,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:82",{"_index":2184,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:90",{"_index":2183,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.service.ts:98",{"_index":2185,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction.transfer_to",{"_index":2208,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transaction_id",{"_index":2180,"title":{},"body":{"injectables/StockTransactionService.html":{}}}],["transactionid",{"_index":1383,"title":{},"body":{"controllers/EmployeeController.html":{}}}],["transactions.enum",{"_index":2028,"title":{},"body":{"interfaces/StockItemLogsInterface.html":{},"classes/StockItemslogs.html":{},"injectables/StockTransactionService.html":{}}}],["transactions.enum.ts",{"_index":2717,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transfer",{"_index":2799,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["transfer_from",{"_index":2142,"title":{},"body":{"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{}}}],["transfer_to",{"_index":2143,"title":{},"body":{"classes/StockTransaction.html":{},"interfaces/StockTransactionInterface.html":{}}}],["transformer",{"_index":767,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateSupplierDto.html":{},"dependencies.html":{}}}],["true",{"_index":45,"title":{},"body":{"injectables/ATGuard.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItem.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"miscellaneous/variables.html":{}}}],["true})@isarray()@arrayminsize(1",{"_index":1116,"title":{},"body":{"classes/CreateSupplierDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["true})@isarray()@isnotempty",{"_index":922,"title":{},"body":{"classes/CreateEmployeeDto.html":{}}}],["true})@isarray()@isoptional",{"_index":2399,"title":{},"body":{"classes/UpdateEmployeeDto.html":{}}}],["true})@isdatestring()@isnotempty",{"_index":979,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["true})@isemail()@isnotempty",{"_index":1158,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["true})@isnotempty()@isarray()@isstring()@ismongoid",{"_index":981,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["true})@isnotempty()@isemail",{"_index":702,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInByEmailDto.html":{}}}],["true})@isnotempty()@isenum(productcategory",{"_index":1061,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isenum(productsize",{"_index":1074,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isenum(productsubcategory",{"_index":1077,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isenum(roles",{"_index":232,"title":{},"body":{"classes/AssignRoleDto.html":{}}}],["true})@isnotempty()@isnumber",{"_index":833,"title":{},"body":{"classes/CreateCouponDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateProductDto.html":{}}}],["true})@isnotempty()@isstring",{"_index":711,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/SignInByEmailDto.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["true})@isnotempty()@minlength(8",{"_index":705,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{}}}],["true})@isnumber()@isnotempty",{"_index":987,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["true})@isoptional()@isnumber",{"_index":2381,"title":{},"body":{"classes/UpdateCouponDto.html":{}}}],["true})@isstring()@isarray()@isnotempty",{"_index":977,"title":{},"body":{"classes/CreateOfferDto.html":{}}}],["true})@isstring()@isnotempty",{"_index":235,"title":{},"body":{"classes/AssignRoleDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateUserDto-1.html":{}}}],["true})@isstring({each",{"_index":921,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["true})@type(undefined",{"_index":755,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["true})@type(undefined)@isarray()@arrayminsize(1",{"_index":744,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["try",{"_index":38,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OffersService.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["twenty",{"_index":2738,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["twentyfive",{"_index":2739,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["twitter",{"_index":2875,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"injectables/ATGuard.html":{},"injectables/ATStrategy.html":{},"classes/AddTicketUpdateDto.html":{},"interfaces/AddTicketUpdatesInterface.html":{},"controllers/AdminController.html":{},"classes/AssignRoleDto.html":{},"classes/Attendence.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/Branch.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/Coordinates.html":{},"classes/Coupon.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTakeAwayOrderDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"controllers/EmployeeController.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactionDto.html":{},"interfaces/EmployeeTransactionInterface.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/JWTGuard.html":{},"classes/Location.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/LogoutDto.html":{},"classes/Material.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/Offer.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/RolesGuard.html":{},"classes/SignInByEmailDto.html":{},"classes/Stock.html":{},"controllers/StockController.html":{},"classes/StockGard.html":{},"interfaces/StockGardInterface.html":{},"interfaces/StockInterface.html":{},"classes/StockItem.html":{},"controllers/StockItemController.html":{},"interfaces/StockItemInterface.html":{},"controllers/StockItemLogsController.html":{},"interfaces/StockItemLogsInterface.html":{},"injectables/StockItemLogsService.html":{},"classes/StockItemQuantity.html":{},"interfaces/StockItemQuantityInterface.html":{},"injectables/StockItemService.html":{},"classes/StockItemslogs.html":{},"injectables/StockService.html":{},"classes/StockTransaction.html":{},"controllers/StockTransactionController.html":{},"interfaces/StockTransactionInterface.html":{},"injectables/StockTransactionService.html":{},"classes/Supplier.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{},"classes/Ticket.html":{},"controllers/TicketController.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{},"classes/TicketUpdates.html":{},"interfaces/Token.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enums",{"_index":1042,"title":{},"body":{"classes/CreatePaymentDto.html":{},"interfaces/CreatePaymentInterface.html":{},"classes/Payment.html":{}}}],["type.enums.ts",{"_index":2707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":2888,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":2483,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["types.enums",{"_index":1003,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"controllers/OrderController.html":{},"classes/OrderItems.html":{},"modules/OrderModule.html":{},"classes/TakeAwayOrder.html":{},"interfaces/TakeAwayOrderInterface.html":{}}}],["types.enums.ts",{"_index":2705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typescript",{"_index":2832,"title":{},"body":{"index.html":{}}}],["unassignrolefromuser",{"_index":2548,"title":{},"body":{"injectables/UsersService.html":{}}}],["unassignrolefromuser(userid",{"_index":2579,"title":{},"body":{"injectables/UsersService.html":{}}}],["unauthorizedexception",{"_index":66,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["undefined",{"_index":257,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/Coupon.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateSupplierDto.html":{},"classes/Customer.html":{},"classes/DelivereyOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Offer.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/Product.html":{},"classes/Stock.html":{},"classes/StockGard.html":{},"classes/StockItemQuantity.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/User.html":{}}}],["undefined})@isnotempty()@isstring({each",{"_index":1115,"title":{},"body":{"classes/CreateSupplierDto.html":{}}}],["undefined})@isoptional()@isstring({each",{"_index":2468,"title":{},"body":{"classes/UpdateSupplierDto.html":{}}}],["unique",{"_index":627,"title":{},"body":{"classes/Coupon.html":{},"classes/Offer.html":{},"classes/Stock.html":{},"classes/StockItemQuantity.html":{},"classes/Supplier.html":{},"classes/User.html":{}}}],["unit",{"_index":2847,"title":{},"body":{"index.html":{}}}],["units.enum",{"_index":1530,"title":{},"body":{"classes/Material.html":{}}}],["units.enum.ts",{"_index":2703,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BranchService.html":{},"injectables/CouponService.html":{},"injectables/OffersService.html":{},"controllers/OrderController.html":{},"injectables/OrderService.html":{},"injectables/PaymentService.html":{},"injectables/RolesGuard.html":{},"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockService.html":{},"injectables/StockTransactionService.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":2887,"title":{},"body":{"properties.html":{}}}],["unset",{"_index":2606,"title":{},"body":{"injectables/UsersService.html":{}}}],["update",{"_index":457,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":486,"title":{},"body":{"controllers/BillingController.html":{},"controllers/BranchController.html":{},"controllers/CartController.html":{},"controllers/CouponController.html":{},"controllers/CustomerController.html":{},"controllers/DeliveryController.html":{},"controllers/LocationController.html":{},"controllers/MaterialController.html":{},"controllers/OffersController.html":{},"controllers/PaymentController.html":{},"controllers/ProductController.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/TicketController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":468,"title":{},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"controllers/BranchController.html":{},"injectables/BranchService.html":{},"controllers/CartController.html":{},"injectables/CartService.html":{},"controllers/CouponController.html":{},"injectables/CouponService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"controllers/EmployeeController.html":{},"controllers/LocationController.html":{},"injectables/LocationService.html":{},"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"controllers/OffersController.html":{},"injectables/OffersService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/StockController.html":{},"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"injectables/StockService.html":{},"controllers/StockTransactionController.html":{},"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"controllers/TicketController.html":{},"injectables/TicketService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updatebillingdto",{"_index":469,"title":{"classes/UpdateBillingDto.html":{}},"body":{"controllers/BillingController.html":{},"injectables/BillingService.html":{},"classes/UpdateBillingDto.html":{},"coverage.html":{}}}],["updatebranchdto",{"_index":524,"title":{"classes/UpdateBranchDto.html":{}},"body":{"controllers/BranchController.html":{},"injectables/BranchService.html":{},"classes/UpdateBranchDto.html":{},"coverage.html":{}}}],["updatebyid",{"_index":2032,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{}}}],["updatebyid(id",{"_index":2042,"title":{},"body":{"injectables/StockItemLogsService.html":{},"injectables/StockItemService.html":{},"injectables/StockTransactionService.html":{}}}],["updatecartdto",{"_index":573,"title":{"classes/UpdateCartDto.html":{}},"body":{"controllers/CartController.html":{},"injectables/CartService.html":{},"classes/UpdateCartDto.html":{},"coverage.html":{}}}],["updatecordinatesdto",{"_index":2419,"title":{},"body":{"classes/UpdateLocationDto.html":{}}}],["updatecoupondto",{"_index":642,"title":{"classes/UpdateCouponDto.html":{}},"body":{"controllers/CouponController.html":{},"injectables/CouponService.html":{},"classes/UpdateCouponDto.html":{},"coverage.html":{}}}],["updatecustomerdto",{"_index":1177,"title":{"classes/UpdateCustomerDto.html":{}},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["updated",{"_index":2628,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatedeliverydto",{"_index":1299,"title":{"classes/UpdateDeliveryDto.html":{}},"body":{"controllers/DeliveryController.html":{},"injectables/DeliveryService.html":{},"classes/UpdateDeliveryDto.html":{},"coverage.html":{}}}],["updatedto",{"_index":1989,"title":{},"body":{"controllers/StockItemController.html":{},"controllers/StockItemLogsController.html":{},"controllers/StockTransactionController.html":{}}}],["updateduser",{"_index":2621,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateemployeedto",{"_index":1384,"title":{"classes/UpdateEmployeeDto.html":{}},"body":{"controllers/EmployeeController.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["updatelocationdto",{"_index":1495,"title":{"classes/UpdateLocationDto.html":{}},"body":{"controllers/LocationController.html":{},"injectables/LocationService.html":{},"classes/UpdateLocationDto.html":{},"coverage.html":{}}}],["updatematerialdto",{"_index":1538,"title":{"classes/UpdateMaterialDto.html":{}},"body":{"controllers/MaterialController.html":{},"injectables/MaterialService.html":{},"classes/UpdateMaterialDto.html":{},"coverage.html":{}}}],["updateofferdto",{"_index":1581,"title":{"classes/UpdateOfferDto.html":{}},"body":{"controllers/OffersController.html":{},"injectables/OffersService.html":{},"classes/UpdateOfferDto.html":{},"coverage.html":{}}}],["updateorderstatusbyorderid",{"_index":1721,"title":{},"body":{"injectables/OrderService.html":{}}}],["updateorderstatusbyorderid(orderid",{"_index":1743,"title":{},"body":{"injectables/OrderService.html":{}}}],["updatepaymentdto",{"_index":1793,"title":{"classes/UpdatePaymentDto.html":{}},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/UpdatePaymentDto.html":{},"coverage.html":{}}}],["updateproductdto",{"_index":1857,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updaterefresh",{"_index":2549,"title":{},"body":{"injectables/UsersService.html":{}}}],["updaterefresh(id",{"_index":2583,"title":{},"body":{"injectables/UsersService.html":{}}}],["updaterefreshdto",{"_index":2455,"title":{"classes/UpdateRefreshDto.html":{}},"body":{"classes/UpdateRefreshDto.html":{},"coverage.html":{}}}],["updates",{"_index":501,"title":{},"body":{"injectables/BillingService.html":{},"injectables/CartService.html":{},"injectables/CustomerService.html":{},"injectables/DeliveryService.html":{},"injectables/LocationService.html":{},"injectables/MaterialService.html":{},"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"injectables/TicketService.html":{}}}],["updates.dtos",{"_index":2309,"title":{},"body":{"controllers/TicketController.html":{}}}],["updates.dtos.ts",{"_index":96,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"coverage.html":{}}}],["updates.dtos.ts:6",{"_index":102,"title":{},"body":{"classes/AddTicketUpdateDto.html":{}}}],["updates.inteface",{"_index":2311,"title":{},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{}}}],["updates.inteface.ts",{"_index":110,"title":{},"body":{"interfaces/AddTicketUpdatesInterface.html":{},"coverage.html":{}}}],["updates.model",{"_index":2276,"title":{},"body":{"classes/Ticket.html":{},"interfaces/TicketInterface.html":{},"modules/TicketModule.html":{}}}],["updates.model.ts",{"_index":2365,"title":{},"body":{"classes/TicketUpdates.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["updates.model.ts:11",{"_index":2366,"title":{},"body":{"classes/TicketUpdates.html":{}}}],["updates.model.ts:8",{"_index":2367,"title":{},"body":{"classes/TicketUpdates.html":{}}}],["updatestockdto",{"_index":1945,"title":{"classes/UpdateStockDto.html":{}},"body":{"controllers/StockController.html":{},"injectables/StockService.html":{},"classes/UpdateStockDto.html":{},"coverage.html":{}}}],["updatestockitemdto",{"_index":1990,"title":{"classes/UpdateStockItemDto.html":{}},"body":{"controllers/StockItemController.html":{},"classes/UpdateStockItemDto.html":{},"coverage.html":{}}}],["updatestockitemlogsdto",{"_index":2012,"title":{"classes/UpdateStockItemLogsDto.html":{}},"body":{"controllers/StockItemLogsController.html":{},"classes/UpdateStockItemLogsDto.html":{},"coverage.html":{}}}],["updatestocktransactiondto",{"_index":2157,"title":{"classes/UpdateStockTransactionDto.html":{}},"body":{"controllers/StockTransactionController.html":{},"classes/UpdateStockTransactionDto.html":{},"coverage.html":{}}}],["updatesupplierdto",{"_index":2228,"title":{"classes/UpdateSupplierDto.html":{}},"body":{"controllers/SupplierController.html":{},"injectables/SupplierService.html":{},"classes/UpdateSupplierDto.html":{},"coverage.html":{}}}],["updateticketdto",{"_index":2287,"title":{"classes/UpdateTicketDto.html":{}},"body":{"controllers/TicketController.html":{},"injectables/TicketService.html":{},"classes/UpdateTicketDto.html":{},"coverage.html":{}}}],["updateticketstatus",{"_index":2285,"title":{},"body":{"controllers/TicketController.html":{}}}],["updateticketstatus(ticketid",{"_index":2300,"title":{},"body":{"controllers/TicketController.html":{}}}],["updateuserdto",{"_index":2472,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["urgent",{"_index":2808,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["uri",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["use",{"_index":1280,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{},"miscellaneous/enumerations.html":{}}}],["useclass",{"_index":364,"title":{},"body":{"modules/AuthModule.html":{}}}],["usefactory",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":137,"title":{},"body":{"controllers/AdminController.html":{},"controllers/OrderController.html":{},"controllers/ProductController.html":{}}}],["useguards(isemployeeguard",{"_index":1680,"title":{},"body":{"controllers/OrderController.html":{}}}],["useguards(rolesguard",{"_index":150,"title":{},"body":{"controllers/AdminController.html":{}}}],["user",{"_index":73,"title":{"classes/User.html":{}},"body":{"injectables/ATStrategy.html":{},"classes/Attendence.html":{},"injectables/AuthService.html":{},"classes/Branch.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateEmployeeDto.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/IsEmployeeGuard.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"injectables/OrderService.html":{},"classes/Payment.html":{},"injectables/RolesGuard.html":{},"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"classes/UpdateEmployeeDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["user.dto",{"_index":2484,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":1157,"title":{},"body":{"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:12",{"_index":1159,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["user.dto.ts:13",{"_index":2477,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:17",{"_index":2481,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:20",{"_index":1160,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["user.dto.ts:21",{"_index":2480,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:25",{"_index":2478,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:28",{"_index":1162,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["user.dto.ts:31",{"_index":1161,"title":{},"body":{"classes/CreateUserDto-1.html":{}}}],["user.dto.ts:9",{"_index":2475,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.name",{"_index":277,"title":{},"body":{"classes/Attendence.html":{},"classes/Branch.html":{},"classes/DelivereyOrder.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/Payment.html":{},"classes/StockGard.html":{},"classes/StockItemslogs.html":{},"classes/StockTransaction.html":{},"classes/TakeAwayOrder.html":{},"classes/Ticket.html":{},"classes/TicketUpdates.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["user.refreshtoken",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles.some((role",{"_index":1921,"title":{},"body":{"injectables/RolesGuard.html":{}}}],["user.save",{"_index":2595,"title":{},"body":{"injectables/UsersService.html":{}}}],["user.status",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_id",{"_index":781,"title":{},"body":{"classes/CreateBranchDto.html":{},"controllers/EmployeeController.html":{},"classes/IsWorkingInBranchGuard.html":{},"classes/UpdateBranchDto.html":{},"controllers/UsersController.html":{}}}],["userdocument",{"_index":2498,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":229,"title":{},"body":{"classes/AssignRoleDto.html":{},"injectables/AuthService.html":{},"classes/LogoutDto.html":{},"injectables/OrderService.html":{},"injectables/UsersService.html":{},"classes/VerifyandRefreshTokenDto.html":{}}}],["username",{"_index":700,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}}}],["userrepo",{"_index":2552,"title":{},"body":{"injectables/UsersService.html":{}}}],["users",{"_index":2505,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":2537,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":2521,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":2501,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":2503,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userserivce",{"_index":153,"title":{},"body":{"controllers/AdminController.html":{}}}],["userservice",{"_index":61,"title":{},"body":{"injectables/ATStrategy.html":{},"injectables/AuthService.html":{}}}],["usersignup",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersignup(createuserdto",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["usersmodule",{"_index":190,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/StockModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":58,"title":{"injectables/UsersService.html":{}},"body":{"injectables/ATStrategy.html":{},"controllers/AdminController.html":{},"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["valid",{"_index":1685,"title":{},"body":{"controllers/OrderController.html":{}}}],["validate",{"_index":56,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["validate(payload",{"_index":62,"title":{},"body":{"injectables/ATStrategy.html":{}}}],["validatenested",{"_index":763,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateLocationDto.html":{},"classes/CreateSupplierDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateSupplierDto.html":{}}}],["validatenested({each",{"_index":743,"title":{},"body":{"classes/CreateBaseOrderDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateTakeAwayOrderDto.html":{}}}],["validateuser",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(email",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationschema",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":105,"title":{},"body":{"classes/AddTicketUpdateDto.html":{},"classes/AssignRoleDto.html":{},"classes/ChangeUserStatusDTO.html":{},"classes/CreateAdminUserDto.html":{},"classes/CreateAttendActionDTO.html":{},"classes/CreateBaseOrderDto.html":{},"classes/CreateBranchDto.html":{},"classes/CreateCordinatesDto.html":{},"classes/CreateCouponDto.html":{},"classes/CreateDelivereyOrderDto.html":{},"classes/CreateDeliveryDto.html":{},"classes/CreateDineInOrderDto.html":{},"classes/CreateEmployeeDto.html":{},"classes/CreateEmployeePDRDTO.html":{},"classes/CreateLocationDto.html":{},"classes/CreateOfferDto.html":{},"classes/CreateOrderItemsDto.html":{},"classes/CreatePaymentDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateStockDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateSupplierDto.html":{},"classes/CreateTicketDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserDto-1.html":{},"classes/EmployeeTransactionDto.html":{},"classes/LogoutDto.html":{},"classes/SignInByEmailDto.html":{},"classes/UpdateBranchDto.html":{},"classes/UpdateCouponDto.html":{},"classes/UpdateEmployeeDto.html":{},"classes/UpdateLocationDto.html":{},"classes/UpdateOfferDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateRefreshDto.html":{},"classes/UpdateSupplierDto.html":{},"classes/UpdateUserDto.html":{},"classes/VerifyandRefreshTokenDto.html":{},"dependencies.html":{}}}],["validcoupon",{"_index":690,"title":{},"body":{"injectables/CouponService.html":{}}}],["validoffer",{"_index":1629,"title":{},"body":{"injectables/OffersService.html":{}}}],["value",{"_index":707,"title":{},"body":{"classes/CreateAdminUserDto.html":{},"classes/CreateSuperUserDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":2645,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2891,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbose_name",{"_index":1012,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["verifyandrefreshtoken",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyandrefreshtoken(verifyandrefreshtokendto",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyandrefreshtokendto",{"_index":389,"title":{"classes/VerifyandRefreshTokenDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/VerifyandRefreshTokenDto.html":{},"coverage.html":{}}}],["verifyandrefreshtokendto.refresh_token",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{}}}],["verifyandrefreshtokendto.userid",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":2885,"title":{},"body":{"properties.html":{}}}],["virtual",{"_index":1282,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["virtuals",{"_index":1290,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["waitingcustomer",{"_index":2752,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["waitingorder",{"_index":2750,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":2842,"title":{},"body":{"index.html":{}}}],["website",{"_index":2873,"title":{},"body":{"index.html":{}}}],["within",{"_index":1281,"title":{},"body":{"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["without_component",{"_index":1014,"title":{},"body":{"interfaces/CreateOrderInterface.html":{},"classes/CreateOrderItemsDto.html":{},"interfaces/CreateOrderItemsInterface.html":{},"classes/DelivereyOrderType.html":{},"classes/DineinOrder.html":{},"classes/Order.html":{},"classes/OrderItems.html":{},"classes/TakeAwayOrder.html":{}}}],["work_from",{"_index":505,"title":{},"body":{"classes/Branch.html":{},"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["work_to",{"_index":506,"title":{},"body":{"classes/Branch.html":{},"classes/CreateBranchDto.html":{},"classes/UpdateBranchDto.html":{}}}],["working",{"_index":933,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/IsWorkingInBranchGuard.html":{},"injectables/OrderService.html":{},"classes/UpdateEmployeeDto.html":{},"coverage.html":{}}}],["working_in",{"_index":295,"title":{},"body":{"classes/Attendence.html":{},"classes/CreateEmployeeDto.html":{},"classes/Employee.html":{},"classes/EmployeePDR.html":{},"classes/EmployeeTransactions.html":{},"classes/UpdateEmployeeDto.html":{}}}],["works",{"_index":911,"title":{},"body":{"classes/CreateEmployeeDto.html":{},"classes/UpdateEmployeeDto.html":{}}}],["xl",{"_index":2774,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["xlarge",{"_index":2773,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["you'd",{"_index":2862,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BillingModule.html":{},"modules/BranchModule.html":{},"modules/CartModule.html":{},"modules/CouponModule.html":{},"modules/CustomerModule.html":{},"modules/DeliveryModule.html":{},"modules/EmployeeModule.html":{},"modules/LocationModule.html":{},"modules/MaterialModule.html":{},"modules/OffersModule.html":{},"modules/OrderModule.html":{},"modules/PaymentModule.html":{},"modules/ProductModule.html":{},"modules/StockModule.html":{},"modules/SupplierModule.html":{},"modules/TicketModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ATGuard.html":{"url":"injectables/ATGuard.html","title":"injectable - ATGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ATGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/access-token.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refleactor: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/access-token.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refleactor\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/access-token.guard.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class ATGuard extends AuthGuard('jwt') {\n  constructor(private refleactor: Reflector) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    try {\n      const isPublic = this.refleactor.getAllAndOverride('isPublic', [\n        context.getClass(),\n        context.getHandler(),\n      ]);\n      if (isPublic) return true;\n      return super.canActivate(context);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ATStrategy.html":{"url":"injectables/ATStrategy.html","title":"injectable - ATStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ATStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/Strategy/at.strategy.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PassportStrategy(Strategy)\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/Strategy/at.strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(payload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/Strategy/at.strategy.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { User } from 'src/users/Model/user.model';\nimport { UsersService } from 'src/users/users.service';\n\n@Injectable()\nexport class ATStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private userService: UsersService,\n    private configService: ConfigService,\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: configService.get('JWT_SECRET'),\n    });\n  }\n\n  async validate(payload: any): Promise {\n    try {\n      // Assuming you have a method to find a user by ID in your UsersService\n      const user = await this.userService.findOneByid(payload.userid);\n\n      if (!user) {\n        // Handle case when user is not found\n        throw new UnauthorizedException();\n      }\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTicketUpdateDto.html":{"url":"classes/AddTicketUpdateDto.html","title":"class - AddTicketUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTicketUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/Add-Ticket-updates.dtos.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                description\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/Add-Ticket-updates.dtos.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class AddTicketUpdateDto {\n  @IsNotEmpty()\n  @IsString()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddTicketUpdatesInterface.html":{"url":"interfaces/AddTicketUpdatesInterface.html","title":"interface - AddTicketUpdatesInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddTicketUpdatesInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/interface/AddTicket-Updates.inteface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createby\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddTicketUpdatesInterface {\n  createby: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin-auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                AddRoleToUser\n                            \n                            \n                                    \n                                    \n                                BlockUser\n                            \n                            \n                                    \n                                    \n                                RemoveRoleFromUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        AddRoleToUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddRoleToUser(asssignRoleDto: AssignRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('assign-role')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/admin/admin.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asssignRoleDto\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        BlockUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    BlockUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('block/:id')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/admin/admin.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        RemoveRoleFromUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    RemoveRoleFromUser(asssignRoleDto: AssignRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('unassign-role')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/admin/admin.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                asssignRoleDto\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Param, Post, UseGuards } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Role } from '../decorator/roles.decorator';\nimport { AssignRoleDto } from '../dto/AssignRole.dto';\n\nimport { Roles } from '../enums/roles.enums';\nimport { RolesGuard } from '../guards/roles.guard';\nimport { AuthService } from '../auth.service';\nimport { UsersService } from 'src/users/users.service';\n\n@ApiTags('Auth Admin')\n@UseGuards(RolesGuard)\n@Controller('admin-auth')\nexport class AdminController {\n  constructor(\n    private readonly authService: AuthService,\n    private userserivce: UsersService,\n  ) {}\n\n  @Post('assign-role')\n  @Role(Roles.SUPERUSER)\n  AddRoleToUser(@Body() asssignRoleDto: AssignRoleDto) {\n    return this.authService.AddRoleToUser(asssignRoleDto);\n  }\n\n  @Post('unassign-role')\n  @Role(Roles.SUPERUSER)\n  RemoveRoleFromUser(@Body() asssignRoleDto: AssignRoleDto) {\n    return this.authService.RemoveRoleFromUser(asssignRoleDto);\n  }\n\n  @Post('block/:id')\n  @Role(Roles.SUPERUSER)\n  BlockUser(@Param(':id') id: string) {\n    return this.userserivce.BlockUser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBillingModule\n\nBillingModule\n\nAppModule -->\n\nBillingModule->AppModule\n\n\n\n\n\nBranchModule\n\nBranchModule\n\nAppModule -->\n\nBranchModule->AppModule\n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCouponModule\n\nCouponModule\n\nAppModule -->\n\nCouponModule->AppModule\n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nAppModule -->\n\nDeliveryModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nLocationModule\n\nLocationModule\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nOffersModule\n\nOffersModule\n\nAppModule -->\n\nOffersModule->AppModule\n\n\n\n\n\nOrderModule\n\nOrderModule\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nStockModule\n\nStockModule\n\nAppModule -->\n\nStockModule->AppModule\n\n\n\n\n\nSupplierModule\n\nSupplierModule\n\nAppModule -->\n\nSupplierModule->AppModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BillingModule\n                        \n                        \n                            BranchModule\n                        \n                        \n                            CartModule\n                        \n                        \n                            CouponModule\n                        \n                        \n                            CustomerModule\n                        \n                        \n                            DeliveryModule\n                        \n                        \n                            EmployeeModule\n                        \n                        \n                            LocationModule\n                        \n                        \n                            MaterialModule\n                        \n                        \n                            OffersModule\n                        \n                        \n                            OrderModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            StockModule\n                        \n                        \n                            SupplierModule\n                        \n                        \n                            TicketModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProductModule } from './product/product.module';\nimport { OrderModule } from './order/order.module';\nimport { BranchModule } from './branch/branch.module';\nimport { SupplierModule } from './supplier/supplier.module';\nimport { MaterialModule } from './material/material.module';\nimport { CartModule } from './cart/cart.module';\nimport { PaymentModule } from './payment/payment.module';\nimport { DeliveryModule } from './delivery/delivery.module';\nimport { LocationModule } from './location/location.module';\nimport { CustomerModule } from './customer/customer.module';\nimport { OffersModule } from './offers/offers.module';\nimport { CouponModule } from './coupon/coupon.module';\nimport { EmployeeModule } from './employee/employee.module';\nimport { StockModule } from './stock/stock.module';\nimport { BillingModule } from './billing/billing.module';\nimport { TicketModule } from './ticket/ticket.module';\nimport * as joi from 'joi';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      validationSchema: joi.object({\n        mongoCluster: joi.string().required(),\n      }),\n    }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get('mongoCluster'),\n      }),\n      inject: [ConfigService],\n    }),\n    AuthModule,\n    UsersModule,\n    ProductModule,\n    OrderModule,\n    BranchModule,\n    SupplierModule,\n    MaterialModule,\n    CartModule,\n    PaymentModule,\n    DeliveryModule,\n    LocationModule,\n    CustomerModule,\n    OffersModule,\n    CouponModule,\n    EmployeeModule,\n    StockModule,\n    BillingModule,\n    TicketModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AssignRoleDto.html":{"url":"classes/AssignRoleDto.html","title":"class - AssignRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AssignRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/AssignRole.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                role\n                            \n                            \n                                    \n                                    \n                                    \n                                userid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: Roles, required: true})@IsNotEmpty()@IsEnum(Roles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/AssignRole.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '0121asd014', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/AssignRole.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsString } from 'class-validator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\nexport class AssignRoleDto {\n  @ApiProperty({\n    example: '0121asd014',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  userid: string;\n\n  @ApiProperty({\n    example: Roles,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEnum(Roles)\n  role: Roles;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Attendence.html":{"url":"classes/Attendence.html","title":"class - Attendence","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Attendence\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/Model/employee.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                note\n                            \n                            \n                                    \n                                phone\n                            \n                            \n                                    \n                                signby\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttendenceActions\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coordinates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Coordinates})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        signby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { User } from 'src/users/Model/user.model';\nimport { AttendenceActions } from '../enums/attendence-action.enums';\nimport { Department } from '../enums/department.enums';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Coordinates, Location } from 'src/location/Model/location.model';\nimport { Transaction } from '../enums/emp-transaction.enum';\n\n@Schema({ timestamps: true })\nexport class Attendence {\n  @Prop()\n  action: AttendenceActions;\n\n  @Prop({ type: Coordinates })\n  location: Coordinates;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  signby: string;\n\n  @Prop()\n  phone: string;\n\n  @Prop()\n  note: string;\n}\n\nexport const AttendenceSchema = SchemaFactory.createForClass(Attendence);\n\n@Schema({ timestamps: true })\nexport class EmployeeTransactions {\n  @Prop({ required: true })\n  amount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ required: true })\n  transaction: Transaction;\n\n  @Prop()\n  notes: string;\n}\n\nexport const EmployeeTransactionsSchema =\n  SchemaFactory.createForClass(EmployeeTransactions);\n\n@Schema({ timestamps: true })\nexport class EmployeePDR {\n  @Prop({ required: true })\n  pdr: number;\n\n  @Prop()\n  details: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n}\n\nexport const EmployeePDRSchema = SchemaFactory.createForClass(EmployeePDR);\n\n@Schema({ timestamps: true })\nexport class Employee {\n  @Prop()\n  join_at: Date;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  user: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  working_in: string;\n\n  @Prop({ type: [Attendence] })\n  attendence: Attendence[];\n\n  @Prop({ required: true })\n  department: Department;\n\n  @Prop({ required: true })\n  base_salary: number;\n\n  @Prop({\n    type: [EmployeeTransactions],\n  })\n  transaction: EmployeeTransactions[];\n\n  @Prop({ required: true })\n  phones: string[];\n\n  @Prop({ default: Sex.MALE })\n  gender: Sex;\n\n  @Prop({ type: Location })\n  addrees: Location;\n\n  @Prop()\n  ssid: number;\n\n  @Prop()\n  birthdate: Date;\n\n  @Prop()\n  bank_account: string;\n\n  @Prop({ type: [EmployeePDR] })\n  monthly_pdr: EmployeePDR[];\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                Logout\n                            \n                            \n                                    \n                                    Async\n                                signinByEmail\n                            \n                            \n                                    \n                                    Async\n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        Logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    Logout(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('logout')@HttpCode(200)\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signinByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signinByEmail(signInByEmailDto: SignInByEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signin-by-email')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signInByEmailDto\n                                            \n                                                            SignInByEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        signup\n                        \n                    \n                \n            \n            \n                \n                        \n                    signup(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('signup')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Post } from '@nestjs/common';\nimport { CreateUserDto } from './dto/User-Singup.dto';\nimport { Token } from './dto/token.payload';\nimport { SignInByEmailDto } from './dto/SignIn-by-email.dto';\nimport { Public } from 'src/auth/decorator/IsPuplic.decorator';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\n\n@ApiTags('auth')\n@Public()\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('signup')\n  async signup(@Body() createUserDto: CreateUserDto): Promise {\n    return await this.authService.Usersignup(createUserDto);\n  }\n\n  @Post('signin-by-email')\n  async signinByEmail(\n    @Body() signInByEmailDto: SignInByEmailDto,\n  ): Promise {\n    return await this.authService.signinByEmail(signInByEmailDto);\n  }\n\n  @Post('logout')\n  @HttpCode(200)\n  async Logout(@Body('id') id: string): Promise {\n    return await this.authService.logout(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nATStrategy\n\nATStrategy\n\nAuthModule -->\n\nATStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ATStrategy\n                        \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { ATStrategy } from './Strategy/at.strategy';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JWTGuard } from './guards/jwt.guard';\nimport { APP_GUARD } from '@nestjs/core';\nimport { AdminController } from './admin/admin.controller';\n\n@Module({\n  imports: [\n    ConfigModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n        signOptions: { expiresIn: configService.get('JWT_TOKEN_EXPIREIN') },\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n  ],\n  controllers: [AuthController, AdminController],\n  providers: [\n    AuthService,\n    ATStrategy,\n    {\n      provide: APP_GUARD,\n      useClass: JWTGuard,\n    },\n  ],\n  exports: [],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddRoleToUser\n                            \n                            \n                                    Async\n                                GenerateTokenandRefresh\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                RemoveRoleFromUser\n                            \n                            \n                                    Async\n                                signinByEmail\n                            \n                            \n                                    Async\n                                Usersignup\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                            \n                                    Async\n                                VerifyandRefreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, jwtService: JwtService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddRoleToUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddRoleToUser(assignRoleDto: AssignRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                assignRoleDto\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        GenerateTokenandRefresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    GenerateTokenandRefresh(userid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        RemoveRoleFromUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    RemoveRoleFromUser(assignRoleDto: AssignRoleDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                assignRoleDto\n                                            \n                                                            AssignRoleDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signinByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    signinByEmail(signinByEmailDto: SignInByEmailDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signinByEmailDto\n                                            \n                                                            SignInByEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Usersignup\n                        \n                    \n                \n            \n            \n                \n                        \n                    Usersignup(createUserDto: CreateUserDto | CreateAdminUserDto | CreateSuperUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                        CreateUserDto | CreateAdminUserDto | CreateSuperUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateUser(email: string, pass: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pass\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        VerifyandRefreshToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    VerifyandRefreshToken(verifyandRefreshTokenDto: VerifyandRefreshTokenDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                verifyandRefreshTokenDto\n                                            \n                                                            VerifyandRefreshTokenDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  ForbiddenException,\n  Injectable,\n} from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService } from 'src/users/users.service';\nimport * as bcrypt from 'bcrypt';\nimport { User } from 'src/users/Model/user.model';\nimport { ConfigService } from '@nestjs/config';\nimport { CreateUserDto } from './dto/User-Singup.dto';\nimport { Token } from './dto/token.payload';\nimport { SignInByEmailDto } from './dto/SignIn-by-email.dto';\nimport { VerifyandRefreshTokenDto } from './dto/Verify-and-Refresh-token.dto';\nimport { CreateAdminUserDto } from './admin/dto/Admin-signup.dto';\nimport { CreateSuperUserDto } from './admin/dto/SuperUser-SignUP.dto';\nimport { AssignRoleDto } from './dto/AssignRole.dto';\nimport { AccountStatus } from 'src/users/enums/account-status.enums';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly userService: UsersService,\n    private jwtService: JwtService,\n    private configService: ConfigService,\n  ) {}\n\n  async GenerateTokenandRefresh(userid: string): Promise {\n    const [token, refresh] = await Promise.all([\n      this.jwtService.signAsync(\n        { userid: userid },\n        {\n          secret: this.configService.get('JWT_SECRET'),\n          expiresIn: this.configService.get('JWT_TOKEN_EXPIREIN'),\n        },\n      ),\n      this.jwtService.signAsync(\n        { userid: userid },\n        {\n          secret: this.configService.get('JWT_SECRET'),\n          expiresIn: this.configService.get('JWT_REFRESH_EXPIREIN'),\n        },\n      ),\n    ]);\n    return {\n      access_token: token,\n      refresh_token: refresh,\n    };\n  }\n  async validateUser(email: string, pass: string): Promise {\n    const user = await this.userService.findOneByEmail(email);\n    if (user && bcrypt.compare(pass, user.password)) {\n      return user;\n    }\n    return null;\n  }\n  async Usersignup(\n    createUserDto: CreateUserDto | CreateAdminUserDto | CreateSuperUserDto,\n  ): Promise {\n    try {\n      const user: User = await this.userService.create(createUserDto);\n      const token = await this.GenerateTokenandRefresh(user._id);\n      const hashRefresh = await this.userService.hashFunction(\n        token.refresh_token,\n      );\n      await this.userService.update(user._id, { refreshToken: hashRefresh });\n      return token;\n    } catch (err) {\n      if (err.status == 409) {\n        throw new ConflictException(err.response.message);\n      }\n      console.log(err);\n    }\n  }\n\n  async signinByEmail(signinByEmailDto: SignInByEmailDto): Promise {\n    try {\n      const user = await this.userService.findOneByEmail(\n        signinByEmailDto.email,\n      );\n      if (!user || user.status == AccountStatus.BLOCK)\n        throw new ForbiddenException('Accesss Denied!');\n      const isMatchPassword = await this.userService.CompareTextWithHash(\n        signinByEmailDto.password,\n        user.password,\n      );\n      if (!isMatchPassword) throw new ForbiddenException('Accesss Denied!');\n      const tokens = await this.GenerateTokenandRefresh(user._id);\n      await this.userService.update(user._id, {\n        refreshToken: tokens.refresh_token,\n      });\n      return tokens;\n    } catch (err) {\n      if (err.response.statusCode === 404)\n        throw new ForbiddenException('Accesss Denied!');\n      console.log(err);\n    }\n  }\n\n  async logout(id: string) {\n    try {\n      await this.userService.DeleteRefresh(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async VerifyandRefreshToken(\n    verifyandRefreshTokenDto: VerifyandRefreshTokenDto,\n  ) {\n    const user = await this.userService.findOneByid(\n      verifyandRefreshTokenDto.userid,\n    );\n    if (!user || !user.refreshToken)\n      throw new ForbiddenException('Access Denied');\n    const IsRefreshMatched = await this.userService.CompareTextWithHash(\n      verifyandRefreshTokenDto.refresh_token,\n      user.refreshToken,\n    );\n    if (!IsRefreshMatched) throw new ForbiddenException('Access Denied');\n    const tokens = await this.GenerateTokenandRefresh(user._id);\n    await this.userService.updateRefresh(user._id, tokens.refresh_token);\n    return tokens;\n  }\n  async AddRoleToUser(assignRoleDto: AssignRoleDto) {\n    return await this.userService.AddRoleToUser(\n      assignRoleDto.userid,\n      assignRoleDto.role,\n    );\n  }\n  async RemoveRoleFromUser(assignRoleDto: AssignRoleDto) {\n    return await this.userService.UnAssignRoleFromUser(\n      assignRoleDto.userid,\n      assignRoleDto.role,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Billing.html":{"url":"classes/Billing.html","title":"class - Billing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Billing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/entities/billing.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Billing {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BillingController.html":{"url":"controllers/BillingController.html","title":"controller - BillingController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BillingController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/billing.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                billing\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBillingDto: CreateBillingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/billing/billing.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBillingDto\n                                            \n                                                            CreateBillingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/billing/billing.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/billing.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/billing.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateBillingDto: UpdateBillingDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/billing/billing.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBillingDto\n                                            \n                                                            UpdateBillingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { BillingService } from './billing.service';\nimport { CreateBillingDto } from './dto/create-billing.dto';\nimport { UpdateBillingDto } from './dto/update-billing.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Billing')\n@Controller('billing')\nexport class BillingController {\n  constructor(private readonly billingService: BillingService) {}\n\n  @Post()\n  create(@Body() createBillingDto: CreateBillingDto) {\n    return this.billingService.create(createBillingDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.billingService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.billingService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateBillingDto: UpdateBillingDto) {\n    return this.billingService.update(+id, updateBillingDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.billingService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BillingModule.html":{"url":"modules/BillingModule.html","title":"module - BillingModule","body":"\n                   \n\n\n\n\n    Modules\n    BillingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BillingModule\n\n\n\ncluster_BillingModule_providers\n\n\n\n\nBillingService\n\nBillingService\n\n\n\nBillingModule\n\nBillingModule\n\nBillingModule -->\n\nBillingService->BillingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/billing/billing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BillingService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BillingController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BillingService } from './billing.service';\nimport { BillingController } from './billing.controller';\n\n@Module({\n  controllers: [BillingController],\n  providers: [BillingService],\n})\nexport class BillingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BillingService.html":{"url":"injectables/BillingService.html","title":"injectable - BillingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BillingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/billing.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createBillingDto: CreateBillingDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/billing.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBillingDto\n                                            \n                                                            CreateBillingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/billing.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/billing.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/billing.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateBillingDto: UpdateBillingDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/billing/billing.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBillingDto\n                                            \n                                                            UpdateBillingDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBillingDto } from './dto/create-billing.dto';\nimport { UpdateBillingDto } from './dto/update-billing.dto';\n\n@Injectable()\nexport class BillingService {\n  create(createBillingDto: CreateBillingDto) {\n    return 'This action adds a new billing';\n  }\n\n  findAll() {\n    return `This action returns all billing`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} billing`;\n  }\n\n  update(id: number, updateBillingDto: UpdateBillingDto) {\n    return `This action updates a #${id} billing`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} billing`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Branch.html":{"url":"classes/Branch.html","title":"class - Branch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Branch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/Model/branch.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                manager\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                work_from\n                            \n                            \n                                    \n                                work_to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Location})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        work_from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        work_to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/Model/branch.model.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Location } from 'src/location/Model/location.model';\nimport { User } from 'src/users/Model/user.model';\n\n@Schema({ timestamps: true })\nexport class Branch {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ type: Date })\n  work_from: Date;\n\n  @Prop({ type: Date })\n  work_to: Date;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  manager: string;\n\n  @Prop({ type: Location })\n  location: Location;\n}\nexport const BranchSchema = SchemaFactory.createForClass(Branch);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BranchController.html":{"url":"controllers/BranchController.html","title":"controller - BranchController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BranchController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/branch.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                branch\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBranchDto: CreateBranchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBranchDto\n                                            \n                                                            CreateBranchDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateBranchDto: UpdateBranchDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/branch/branch.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBranchDto\n                                            \n                                                            UpdateBranchDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { BranchService } from './branch.service';\nimport { CreateBranchDto } from './dto/create-branch.dto';\nimport { UpdateBranchDto } from './dto/update-branch.dto';\nimport { Public } from 'src/auth/decorator/IsPuplic.decorator';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('branch')\n@Controller('branch')\nexport class BranchController {\n  constructor(private readonly branchService: BranchService) {}\n\n  @Post()\n  @Public()\n  create(@Body() createBranchDto: CreateBranchDto) {\n    return this.branchService.create(createBranchDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.branchService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.branchService.findOneByID(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateBranchDto: UpdateBranchDto) {\n    return this.branchService.update(id, updateBranchDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.branchService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BranchModule.html":{"url":"modules/BranchModule.html","title":"module - BranchModule","body":"\n                   \n\n\n\n\n    Modules\n    BranchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BranchModule\n\n\n\ncluster_BranchModule_exports\n\n\n\ncluster_BranchModule_providers\n\n\n\n\nBranchService \n\nBranchService \n\n\n\nBranchModule\n\nBranchModule\n\nBranchService  -->\n\nBranchModule->BranchService \n\n\n\n\n\nBranchService\n\nBranchService\n\nBranchModule -->\n\nBranchService->BranchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/branch/branch.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BranchService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BranchController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BranchService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BranchService } from './branch.service';\nimport { BranchController } from './branch.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Branch, BranchSchema } from './Model/branch.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Branch.name, schema: BranchSchema }]),\n  ],\n  controllers: [BranchController],\n  providers: [BranchService],\n  exports: [BranchService],\n})\nexport class BranchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BranchService.html":{"url":"injectables/BranchService.html","title":"injectable - BranchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BranchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/branch.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByID\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(branchRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/branch/branch.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        branchRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createBranchDto: CreateBranchDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createBranchDto\n                                            \n                                                            CreateBranchDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateBranchDto: UpdateBranchDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/branch/branch.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateBranchDto\n                                            \n                                                            UpdateBranchDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateBranchDto } from './dto/create-branch.dto';\nimport { UpdateBranchDto } from './dto/update-branch.dto';\nimport { Branch } from './Model/branch.model';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class BranchService {\n  constructor(\n    @InjectModel(Branch.name) private readonly branchRepo: Model,\n  ) {}\n  async create(createBranchDto: CreateBranchDto) {\n    try {\n      const branch = new this.branchRepo(createBranchDto);\n      return await branch.save();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.branchRepo.find().exec();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findOneByID(id: string) {\n    try {\n      return await this.branchRepo.findById(id);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  update(id: string, updateBranchDto: UpdateBranchDto) {\n    try {\n      return this.branchRepo.findByIdAndUpdate(id, updateBranchDto);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async remove(id: string) {\n    try {\n      return await this.branchRepo.findByIdAndDelete(id);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cart.html":{"url":"classes/Cart.html","title":"class - Cart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/entities/cart.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cart {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CartController.html":{"url":"controllers/CartController.html","title":"controller - CartController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CartController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cart\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCartDto: CreateCartDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCartDto\n                                            \n                                                            CreateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCartDto: UpdateCartDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/cart/cart.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCartDto\n                                            \n                                                            UpdateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CreateCartDto } from './dto/create-cart.dto';\nimport { UpdateCartDto } from './dto/update-cart.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('cart')\n@Controller('cart')\nexport class CartController {\n  constructor(private readonly cartService: CartService) {}\n\n  @Post()\n  create(@Body() createCartDto: CreateCartDto) {\n    return this.cartService.create(createCartDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.cartService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.cartService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCartDto: UpdateCartDto) {\n    return this.cartService.update(+id, updateCartDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.cartService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CartModule.html":{"url":"modules/CartModule.html","title":"module - CartModule","body":"\n                   \n\n\n\n\n    Modules\n    CartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\n\nCartService\n\nCartService\n\n\n\nCartModule\n\nCartModule\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cart/cart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CartService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CartController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CartService } from './cart.service';\nimport { CartController } from './cart.controller';\n\n@Module({\n  controllers: [CartController],\n  providers: [CartService],\n})\nexport class CartModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CartService.html":{"url":"injectables/CartService.html","title":"injectable - CartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/cart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCartDto: CreateCartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCartDto\n                                            \n                                                            CreateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCartDto: UpdateCartDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cart/cart.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCartDto\n                                            \n                                                            UpdateCartDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCartDto } from './dto/create-cart.dto';\nimport { UpdateCartDto } from './dto/update-cart.dto';\n\n@Injectable()\nexport class CartService {\n  create(createCartDto: CreateCartDto) {\n    return 'This action adds a new cart';\n  }\n\n  findAll() {\n    return `This action returns all cart`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} cart`;\n  }\n\n  update(id: number, updateCartDto: UpdateCartDto) {\n    return `This action updates a #${id} cart`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} cart`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ChangeUserStatusDTO.html":{"url":"classes/ChangeUserStatusDTO.html","title":"class - ChangeUserStatusDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ChangeUserStatusDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/Change-User-Status.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(AccountStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/Change-User-Status.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty } from 'class-validator';\nimport { AccountStatus } from '../enums/account-status.enums';\n\nexport class ChangeUserStatusDTO {\n  @IsNotEmpty()\n  @IsEnum(AccountStatus)\n  status: AccountStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coordinates.html":{"url":"classes/Coordinates.html","title":"class - Coordinates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coordinates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/Model/location.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                lat\n                            \n                            \n                                    \n                                long\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nexport class Coordinates {\n  @Prop({ required: true })\n  long: number;\n\n  @Prop({ required: true })\n  lat: number;\n}\n\nconst CoordinatesSchema = SchemaFactory.createForClass(Coordinates);\n\n@Schema()\nexport class Location {\n  @Prop()\n  name: string;\n\n  @Prop()\n  country: string;\n\n  @Prop()\n  city: string;\n\n  @Prop()\n  district: string;\n\n  @Prop()\n  neighborhood: string;\n\n  @Prop()\n  street_Address: string;\n\n  @Prop()\n  building_Number: string;\n\n  @Prop()\n  floor: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: CoordinatesSchema })\n  cordinates: Coordinates;\n}\n\nexport const LocationSchema = SchemaFactory.createForClass(Location);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Coupon.html":{"url":"classes/Coupon.html","title":"class - Coupon","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Coupon\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/Model/coupon.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branches\n                            \n                            \n                                    \n                                from\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                percent_discount\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percent_discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/Model/coupon.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\n\n@Schema()\nexport class Coupon {\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  branches: string[];\n\n  @Prop({ type: Date })\n  from: Date;\n\n  @Prop({ type: Date })\n  to: Date;\n\n  @Prop({ required: true })\n  quantity: number;\n\n  @Prop({ required: true })\n  percent_discount: number;\n}\n\nexport const CouponSchema = SchemaFactory.createForClass(Coupon);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CouponController.html":{"url":"controllers/CouponController.html","title":"controller - CouponController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CouponController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/coupon.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                coupon\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCouponDto: CreateCouponDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCouponDto\n                                            \n                                                            CreateCouponDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCouponDto: UpdateCouponDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/coupon/coupon.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCouponDto\n                                            \n                                                            UpdateCouponDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { CouponService } from './coupon.service';\nimport { CreateCouponDto } from './dto/create-coupon.dto';\nimport { UpdateCouponDto } from './dto/update-coupon.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('coupon')\n@Controller('coupon')\nexport class CouponController {\n  constructor(private readonly couponService: CouponService) {}\n\n  @Post()\n  create(@Body() createCouponDto: CreateCouponDto) {\n    return this.couponService.create(createCouponDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.couponService.findAll();\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.couponService.findOneByID(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCouponDto: UpdateCouponDto) {\n    return this.couponService.update(id, updateCouponDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.couponService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CouponModule.html":{"url":"modules/CouponModule.html","title":"module - CouponModule","body":"\n                   \n\n\n\n\n    Modules\n    CouponModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CouponModule\n\n\n\ncluster_CouponModule_providers\n\n\n\n\nCouponService\n\nCouponService\n\n\n\nCouponModule\n\nCouponModule\n\nCouponModule -->\n\nCouponService->CouponModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/coupon/coupon.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CouponService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CouponController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CouponService } from './coupon.service';\nimport { CouponController } from './coupon.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Coupon, CouponSchema } from './Model/coupon.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Coupon.name, schema: CouponSchema }]),\n  ],\n  controllers: [CouponController],\n  providers: [CouponService],\n})\nexport class CouponModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CouponService.html":{"url":"injectables/CouponService.html","title":"injectable - CouponService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CouponService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/coupon.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCouponName\n                            \n                            \n                                    Async\n                                findOneByID\n                            \n                            \n                                    Async\n                                IsValidCouponByName\n                            \n                            \n                                    Async\n                                IsValidCouponInBranchByName\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(couponRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/coupon/coupon.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        couponRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCouponDto: CreateCouponDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCouponDto\n                                            \n                                                            CreateCouponDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByCouponName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByCouponName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCouponByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCouponByName(couponName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                couponName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCouponInBranchByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCouponInBranchByName(couponName: string, branchId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                couponName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCouponDto: UpdateCouponDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/coupon/coupon.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCouponDto\n                                            \n                                                            UpdateCouponDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCouponDto } from './dto/create-coupon.dto';\nimport { UpdateCouponDto } from './dto/update-coupon.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Coupon } from './Model/coupon.model';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class CouponService {\n  constructor(\n    @InjectModel(Coupon.name) private readonly couponRepo: Model,\n  ) {}\n\n  async create(createCouponDto: CreateCouponDto) {\n    try {\n      const coupon = new this.couponRepo(createCouponDto);\n      return await coupon.save();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findByCouponName(name: string) {\n    try {\n      return await this.couponRepo.findOne({ name });\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n  async findAll() {\n    try {\n      return await this.couponRepo.find().exec();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findOneByID(id: string) {\n    try {\n      return await this.couponRepo.findById(id);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async update(id: string, updateCouponDto: UpdateCouponDto) {\n    try {\n      return await this.couponRepo.findByIdAndUpdate(id, updateCouponDto);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async remove(id: string) {\n    try {\n      return await this.couponRepo.findByIdAndDelete(id);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async IsValidCouponByName(couponName: string) {\n    try {\n      const currentDate = new Date();\n\n      const validCoupon = await this.couponRepo\n        .findOne({\n          name: couponName,\n          quantity: { $gt: 0 },\n          from: { $lte: currentDate },\n          to: { $gte: currentDate },\n        })\n        .exec();\n\n      return !!validCoupon;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidCouponInBranchByName(couponName: string, branchId: string) {\n    try {\n      const currentDate = new Date();\n\n      const validCoupon = await this.couponRepo\n        .findOne({\n          name: couponName,\n          quantity: { $gt: 0 },\n          from: { $lte: currentDate },\n          to: { $gte: currentDate },\n          branches: branchId,\n        })\n        .exec();\n\n      return !!validCoupon;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAdminUserDto.html":{"url":"classes/CreateAdminUserDto.html","title":"class - CreateAdminUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAdminUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/admin/dto/Admin-signup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ayani@gmail.com', required: true})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/admin/dto/Admin-signup.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mypassword', required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/admin/dto/Admin-signup.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles\n\n                    \n                \n                \n                    \n                        Default value : Roles.ADMIN\n                    \n                \n                    \n                        \n                                Defined in src/auth/admin/dto/Admin-signup.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ayani', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/admin/dto/Admin-signup.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\nexport class CreateAdminUserDto {\n  @ApiProperty({\n    example: 'ayani@gmail.com',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: 'ayani',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @ApiProperty({\n    example: 'mypassword',\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n\n  roles: Roles = Roles.ADMIN;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAttendActionDTO.html":{"url":"classes/CreateAttendActionDTO.html","title":"class - CreateAttendActionDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAttendActionDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/create-attend-action.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                action\n                            \n                            \n                                    \n                                    \n                                employee_id\n                            \n                            \n                                location\n                            \n                            \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AttendenceActions\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(AttendenceActions)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-attend-action.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        employee_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsMongoId()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-attend-action.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-attend-action.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-attend-action.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsMongoId, IsNotEmpty } from 'class-validator';\nimport { AttendenceActions } from '../enums/attendence-action.enums';\n\nexport class CreateAttendActionDTO {\n  @IsMongoId()\n  @IsNotEmpty()\n  employee_id: string;\n  @IsEnum(AttendenceActions)\n  @IsNotEmpty()\n  action: AttendenceActions;\n\n  location: string;\n  phone: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBaseOrderDto.html":{"url":"classes/CreateBaseOrderDto.html","title":"class - CreateBaseOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBaseOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/base-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    Optional\n                                order_status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                payment\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(OrderStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePaymentDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/base-order.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArrayMinSize,\n  IsArray,\n  IsDateString,\n  IsEnum,\n  IsMongoId,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateOrderItemsDto } from './order-items/create-order-items.dto';\nimport { Type } from 'class-transformer';\nimport { CreatePaymentDto } from 'src/payment/dto/create-payment.dto';\nimport { OrderStatus } from '../enums/Order-Status.enums';\n\nexport class CreateBaseOrderDto {\n  @ValidateNested({ each: true })\n  @Type(() => CreateOrderItemsDto)\n  @IsArray()\n  @ArrayMinSize(1)\n  items: CreateOrderItemsDto[];\n\n  @IsOptional()\n  @IsDateString()\n  readyat?: Date;\n\n  @IsOptional()\n  @IsString()\n  @IsArray()\n  offers?: string[];\n\n  @IsOptional()\n  @IsMongoId()\n  coupon?: string;\n\n  @IsOptional()\n  @IsString()\n  kitchen_notes?: string;\n\n  @IsOptional()\n  @IsMongoId()\n  customer?: string;\n\n  @IsOptional()\n  @ValidateNested({ each: true })\n  @Type(() => CreatePaymentDto)\n  payment?: CreatePaymentDto;\n\n  @IsEnum(OrderStatus)\n  order_status?: OrderStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBillingDto.html":{"url":"classes/CreateBillingDto.html","title":"class - CreateBillingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBillingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/create-billing.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateBillingDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBranchDto.html":{"url":"classes/CreateBranchDto.html","title":"class - CreateBranchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBranchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/dto/create-branch.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                manager\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                work_from\n                            \n                            \n                                    \n                                    \n                                    \n                                work_to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: CreateLocationDto, required: false})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user_id', required: false})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Port Said', required: false})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        work_from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-20', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        work_to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-20', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/create-branch.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsDateString,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class CreateBranchDto {\n  @ApiProperty({\n    example: 'Port Said',\n    required: false,\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: '2020-02-20',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  work_from: Date;\n\n  @ApiProperty({\n    example: '2020-02-20',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  work_to: Date;\n\n  @ApiProperty({\n    example: 'user_id',\n    required: false,\n  })\n  @IsNotEmpty()\n  @IsString()\n  manager: string;\n\n  @ApiProperty({\n    // example: ,\n    type: CreateLocationDto,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  location?: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCartDto.html":{"url":"classes/CreateCartDto.html","title":"class - CreateCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dto/create-cart.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCartDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCordinatesDto.html":{"url":"classes/CreateCordinatesDto.html","title":"class - CreateCordinatesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCordinatesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/create-location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                lat\n                            \n                            \n                                    \n                                    \n                                    \n                                long\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        lat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '17.1', name: 'Latitude'})@IsNotEmpty()@IsLatitude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        long\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '17.1', name: 'Longitude'})@IsLongitude()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsLatitude,\n  IsLongitude,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateCordinatesDto {\n  @ApiProperty({\n    example: '17.1',\n    name: 'Longitude',\n  })\n  @IsLongitude()\n  @IsNotEmpty()\n  long: number;\n\n  @ApiProperty({\n    example: '17.1',\n    name: 'Latitude',\n  })\n  @IsNotEmpty()\n  @IsLatitude()\n  lat: number;\n}\n\nexport class CreateLocationDto {\n  @ApiProperty({\n    example: 'My Home',\n    name: 'name',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'Egypt',\n    name: 'country',\n  })\n  @IsString()\n  @IsNotEmpty()\n  country: string;\n\n  @ApiProperty({\n    example: 'Port Said',\n    name: 'city',\n  })\n  @IsString()\n  @IsNotEmpty()\n  city: string;\n\n  @ApiProperty({\n    example: 'Madient Nasr',\n    name: 'district',\n  })\n  @IsString()\n  @IsNotEmpty()\n  district: string;\n\n  @ApiProperty({\n    example: 'Obour Area',\n    name: 'neighborhood',\n  })\n  @IsString()\n  @IsNotEmpty()\n  neighborhood: string;\n\n  @ApiProperty({\n    example: 'Mohamed Ali Street',\n    name: 'street_Address',\n  })\n  @IsString()\n  @IsNotEmpty()\n  street_Address: string;\n\n  @ApiProperty({\n    example: '3C',\n    name: 'building_Number',\n  })\n  @IsString()\n  @IsNotEmpty()\n  building_Number: string;\n\n  @ApiProperty({\n    example: 'third Or 3th',\n    name: 'floor',\n  })\n  @IsString()\n  @IsNotEmpty()\n  floor: string;\n\n  @ApiProperty({\n    example: 'the building next to the market',\n    name: 'description',\n  })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({\n    type: CreateCordinatesDto,\n    name: 'cordinates',\n  })\n  @ValidateNested()\n  @Type(() => CreateCordinatesDto)\n  @IsOptional()\n  cordinates: CreateCordinatesDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCouponDto.html":{"url":"classes/CreateCouponDto.html","title":"class - CreateCouponDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCouponDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/dto/create-coupon.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                branches\n                            \n                            \n                                    \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                percent_discount\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[branch1,branch2]', required: false})@IsNotEmpty()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-03', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'copoun1', required: false})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        percent_discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 20, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-03', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/create-coupon.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsArray,\n  IsDateString,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class CreateCouponDto {\n  @ApiProperty({\n    example: 'copoun1',\n    required: false,\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: '[branch1,branch2]',\n    required: false,\n  })\n  @IsNotEmpty()\n  @IsArray()\n  branches: string[];\n\n  @ApiProperty({\n    example: '2020-02-03',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  from: Date;\n\n  @ApiProperty({\n    example: '2020-02-03',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  to: Date;\n\n  @ApiProperty({\n    example: 20,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty({\n    example: 10,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  percent_discount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomerDto.html":{"url":"classes/CreateCustomerDto.html","title":"class - CreateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/create-customer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCustomerDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDelivereyOrderDto.html":{"url":"classes/CreateDelivereyOrderDto.html","title":"class - CreateDelivereyOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDelivereyOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/delivery/create-deliverey-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateBaseOrderDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deliverey\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    Optional\n                                order_status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                payment\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deliverey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateDeliveryDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/delivery/create-deliverey-order.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(OrderStatus)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePaymentDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, ValidateNested } from 'class-validator';\nimport { CreateBaseOrderDto } from '../base-order.dto';\nimport { CreateDeliveryDto } from 'src/delivery/dto/create-delivery.dto';\nimport { Type } from 'class-transformer';\n\nexport class CreateDelivereyOrderDto extends CreateBaseOrderDto {\n  @IsNotEmpty()\n  @ValidateNested()\n  @Type(() => CreateDeliveryDto)\n  deliverey: CreateDeliveryDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDeliveryDto.html":{"url":"classes/CreateDeliveryDto.html","title":"class - CreateDeliveryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDeliveryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/dto/create-delivery.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                deliverey_method\n                            \n                            \n                                    \n                                    \n                                    \n                                delivery_price\n                            \n                            \n                                    \n                                    \n                                end_location\n                            \n                            \n                                    \n                                    \n                                    \n                                pilot\n                            \n                            \n                                    \n                                    \n                                start_location\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        deliverey_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DelivereyMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: DelivereyMethod})@IsOptional()@IsEnum(DelivereyMethod)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dto/create-delivery.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        delivery_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryPrice\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: DeliveryPrice})@IsOptional()@IsEnum(DeliveryPrice)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dto/create-delivery.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        end_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dto/create-delivery.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        pilot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'MOhamed'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dto/create-delivery.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        start_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dto/create-delivery.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: DeliveryStatus})@IsOptional()@IsEnum(DeliveryStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/dto/create-delivery.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateLocationDto } from 'src/location/dto/create-location.dto';\nimport { DeliveryPrice } from '../enums/Deliver-price.enums';\nimport { DelivereyMethod } from '../enums/Deliverey-method.enums';\nimport { DeliveryStatus } from '../enums/delivery-status.enums';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateDeliveryDto {\n  @IsNotEmpty()\n  @Type(() => CreateDeliveryDto)\n  start_location: CreateLocationDto;\n  @IsNotEmpty()\n  @Type(() => CreateDeliveryDto)\n  end_location: CreateLocationDto;\n\n  @ApiProperty({\n    example: 'MOhamed',\n  })\n  @IsOptional()\n  @IsString()\n  pilot: string;\n\n  @ApiProperty({\n    example: DelivereyMethod,\n  })\n  @IsOptional()\n  @IsEnum(DelivereyMethod)\n  deliverey_method: DelivereyMethod;\n\n  @ApiProperty({\n    example: DeliveryStatus,\n  })\n  @IsOptional()\n  @IsEnum(DeliveryStatus)\n  status: DeliveryStatus;\n\n  @ApiProperty({\n    example: DeliveryPrice,\n  })\n  @IsOptional()\n  @IsEnum(DeliveryPrice)\n  delivery_price: DeliveryPrice;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDineInOrderDto.html":{"url":"classes/CreateDineInOrderDto.html","title":"class - CreateDineInOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDineInOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/dinein/create-dinein-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateBaseOrderDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                table_number\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    Optional\n                                order_status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                payment\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        table_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/dinein/create-dinein-order.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(OrderStatus)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePaymentDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, IsOptional } from 'class-validator';\nimport { CreateBaseOrderDto } from '../base-order.dto';\n\nexport class CreateDineInOrderDto extends CreateBaseOrderDto {\n  @IsNumber()\n  @IsOptional()\n  table_number: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeeDto.html":{"url":"classes/CreateEmployeeDto.html","title":"class - CreateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/create-employee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bank_account\n                            \n                            \n                                    \n                                    \n                                    \n                                base_salary\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                birthdate\n                            \n                            \n                                    \n                                    \n                                    \n                                department\n                            \n                            \n                                    \n                                    \n                                    \n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                join_at\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                phones\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                ssid\n                            \n                            \n                                    \n                                    \n                                    \n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                working_in\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Address of the employee', type: CreateLocationDto, required: false})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bank_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Bank account number (optional)', required: false, example: '123456789'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        base_salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Base salary of the employee', example: 50000})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        birthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Birthdate of the employee (optional)', example: '1990-01-01', required: false})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Department\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Department, description: 'Department the employee works in'})@IsNotEmpty()@IsEnum(Department)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: Sex, description: 'Gender of the employee'})@IsEnum(Sex)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        join_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The date the employee joined', example: '2023-01-01'})@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Phone numbers', example: undefined, isArray: true})@IsString({each: true})@IsArray()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        ssid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Social Security ID (optional)', required: false, example: '123-45-6789'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'User MongoDB ID', required: false, example: '507f191e810c19729de860ea'})@IsOptional()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        working_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Working in MongoDB ID', example: '507f191e810c19729de860eb'})@IsNotEmpty()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsMongoId,\n  IsEnum,\n  IsNumber,\n  IsString,\n  IsDateString,\n  IsNotEmpty,\n  IsOptional,\n  IsArray,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Department } from '../enums/department.enums';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class CreateEmployeeDto {\n  @ApiProperty({\n    description: 'The date the employee joined',\n    example: '2023-01-01',\n  })\n  @IsDateString()\n  @IsNotEmpty()\n  join_at: Date;\n\n  @ApiProperty({\n    description: 'User MongoDB ID',\n    required: false,\n    example: '507f191e810c19729de860ea',\n  })\n  @IsOptional()\n  @IsMongoId()\n  user: string;\n\n  @ApiProperty({\n    description: 'Working in MongoDB ID',\n    example: '507f191e810c19729de860eb',\n  })\n  @IsNotEmpty()\n  @IsMongoId()\n  working_in: string;\n\n  @ApiProperty({\n    enum: Department,\n    description: 'Department the employee works in',\n  })\n  @IsNotEmpty()\n  @IsEnum(Department)\n  department: Department;\n\n  @ApiProperty({ description: 'Base salary of the employee', example: 50000 })\n  @IsNumber()\n  @IsNotEmpty()\n  base_salary: number;\n\n  @ApiProperty({\n    description: 'Phone numbers',\n    example: ['+1234567890'],\n    isArray: true,\n  })\n  @IsString({ each: true })\n  @IsArray()\n  @IsNotEmpty()\n  phones: string[];\n\n  @ApiProperty({ enum: Sex, description: 'Gender of the employee' })\n  @IsEnum(Sex)\n  @IsNotEmpty()\n  gender: Sex;\n\n  @ApiProperty({\n    description: 'Address of the employee',\n    type: CreateLocationDto,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  address?: CreateLocationDto;\n\n  @ApiProperty({\n    description: 'Social Security ID (optional)',\n    required: false,\n    example: '123-45-6789',\n  })\n  @IsOptional()\n  @IsString()\n  ssid?: string;\n\n  @ApiProperty({\n    description: 'Birthdate of the employee (optional)',\n    example: '1990-01-01',\n    required: false,\n  })\n  @IsDateString()\n  @IsOptional()\n  birthdate?: Date;\n\n  @ApiProperty({\n    description: 'Bank account number (optional)',\n    required: false,\n    example: '123456789',\n  })\n  @IsOptional()\n  @IsString()\n  bank_account?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEmployeePDRDTO.html":{"url":"classes/CreateEmployeePDRDTO.html","title":"class - CreateEmployeePDRDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEmployeePDRDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/create-employee-pdr.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                details\n                            \n                            \n                                    \n                                    \n                                pdr\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee-pdr.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        pdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/create-employee-pdr.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class CreateEmployeePDRDTO {\n  @IsNotEmpty()\n  @IsNumber()\n  pdr: number;\n\n  @IsOptional()\n  @IsString()\n  details?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLocationDto.html":{"url":"classes/CreateLocationDto.html","title":"class - CreateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/create-location.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                building_Number\n                            \n                            \n                                    \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                cordinates\n                            \n                            \n                                    \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                district\n                            \n                            \n                                    \n                                    \n                                    \n                                floor\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                neighborhood\n                            \n                            \n                                    \n                                    \n                                    \n                                street_Address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        building_Number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '3C', name: 'building_Number'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Port Said', name: 'city'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        cordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateCordinatesDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: CreateCordinatesDto, name: 'cordinates'})@ValidateNested()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Egypt', name: 'country'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'the building next to the market', name: 'description'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        district\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Madient Nasr', name: 'district'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'third Or 3th', name: 'floor'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'My Home', name: 'name'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        neighborhood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Obour Area', name: 'neighborhood'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        street_Address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mohamed Ali Street', name: 'street_Address'})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/create-location.dto.ts:77\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  IsLatitude,\n  IsLongitude,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\n\nexport class CreateCordinatesDto {\n  @ApiProperty({\n    example: '17.1',\n    name: 'Longitude',\n  })\n  @IsLongitude()\n  @IsNotEmpty()\n  long: number;\n\n  @ApiProperty({\n    example: '17.1',\n    name: 'Latitude',\n  })\n  @IsNotEmpty()\n  @IsLatitude()\n  lat: number;\n}\n\nexport class CreateLocationDto {\n  @ApiProperty({\n    example: 'My Home',\n    name: 'name',\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    description: 'Egypt',\n    name: 'country',\n  })\n  @IsString()\n  @IsNotEmpty()\n  country: string;\n\n  @ApiProperty({\n    example: 'Port Said',\n    name: 'city',\n  })\n  @IsString()\n  @IsNotEmpty()\n  city: string;\n\n  @ApiProperty({\n    example: 'Madient Nasr',\n    name: 'district',\n  })\n  @IsString()\n  @IsNotEmpty()\n  district: string;\n\n  @ApiProperty({\n    example: 'Obour Area',\n    name: 'neighborhood',\n  })\n  @IsString()\n  @IsNotEmpty()\n  neighborhood: string;\n\n  @ApiProperty({\n    example: 'Mohamed Ali Street',\n    name: 'street_Address',\n  })\n  @IsString()\n  @IsNotEmpty()\n  street_Address: string;\n\n  @ApiProperty({\n    example: '3C',\n    name: 'building_Number',\n  })\n  @IsString()\n  @IsNotEmpty()\n  building_Number: string;\n\n  @ApiProperty({\n    example: 'third Or 3th',\n    name: 'floor',\n  })\n  @IsString()\n  @IsNotEmpty()\n  floor: string;\n\n  @ApiProperty({\n    example: 'the building next to the market',\n    name: 'description',\n  })\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n\n  @ApiProperty({\n    type: CreateCordinatesDto,\n    name: 'cordinates',\n  })\n  @ValidateNested()\n  @Type(() => CreateCordinatesDto)\n  @IsOptional()\n  cordinates: CreateCordinatesDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMaterialDto.html":{"url":"classes/CreateMaterialDto.html","title":"class - CreateMaterialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMaterialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/dto/create-material.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateMaterialDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOfferDto.html":{"url":"classes/CreateOfferDto.html","title":"class - CreateOfferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOfferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/dto/create-offer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                branches\n                            \n                            \n                                    \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@IsString()@IsArray()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-02', required: true})@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: true})@IsNotEmpty()@IsArray()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Family Offer', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: true})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-02', required: true})@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/create-offer.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsArray,\n  IsDateString,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n} from 'class-validator';\n\nexport class CreateOfferDto {\n  @ApiProperty({\n    example: 'Family Offer',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({\n    example: ['65d5b8076bf8d67aee25ccd5', '65d5b8076bf8d67aee25ccd2'],\n    required: true,\n  })\n  @IsString()\n  @IsArray()\n  @IsNotEmpty()\n  branches: string[];\n\n  @ApiProperty({\n    example: '2020-02-02',\n    required: true,\n  })\n  @IsDateString()\n  @IsNotEmpty()\n  from: Date;\n\n  @ApiProperty({\n    example: '2020-02-02',\n    required: true,\n  })\n  @IsDateString()\n  @IsNotEmpty()\n  to: Date;\n\n  @ApiProperty({\n    example: 100,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty({\n    example: ['65d5b8076bf8d67aee25ccd5', '65d5b8076bf8d67aee25ccd2'],\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsArray()\n  @IsString()\n  @IsMongoId()\n  items: string[];\n\n  @ApiProperty({\n    example: 100,\n    required: true,\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  price: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOrderInterface.html":{"url":"interfaces/CreateOrderInterface.html","title":"interface - CreateOrderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOrderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Interface/Create-Order.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            approvedby\n                                        \n                                \n                                \n                                        \n                                            branch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            coupon\n                                        \n                                \n                                \n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            customer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            discount\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            kitchen_notes\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            order_status\n                                        \n                                \n                                \n                                        \n                                            order_type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            percent_discount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            readyat\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            tax_percent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        approvedby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        approvedby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coupon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        coupon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        customer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        discount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         CreateOrderItemsInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CreateOrderItemsInterface[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kitchen_notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kitchen_notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order_status:         OrderStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        order_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order_type:         OrderType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment:         CreatePaymentInterface\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CreatePaymentInterface\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        percent_discount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        percent_discount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readyat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readyat:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tax_percent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tax_percent:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OrderStatus } from '../enums/Order-Status.enums';\nimport { OrderType } from '../enums/Order-Types.enums';\nimport { Product } from 'src/product/Model/product.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { CreatePaymentInterface } from 'src/payment/interface/Create-Payment.interface';\n\nexport interface CreateOrderItemsInterface {\n  item: string;\n\n  verbose_name?: string;\n\n  quantity: number;\n\n  note?: string;\n\n  extra?: Product[];\n\n  without_component?: ProductComponents[];\n}\n\nexport interface CreateOrderInterface {\n  items: CreateOrderItemsInterface[];\n\n  branch: string;\n\n  order_type: OrderType;\n\n  readyat?: Date;\n\n  tax_percent?: number;\n\n  discount?: number;\n\n  percent_discount?: number;\n\n  offers?: string[];\n\n  coupon?: string;\n\n  approvedby?: string;\n\n  createby: string;\n\n  order_status?: OrderStatus;\n\n  kitchen_notes?: string;\n\n  customer?: string;\n\n  payment?: CreatePaymentInterface;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderItemsDto.html":{"url":"classes/CreateOrderItemsDto.html","title":"class - CreateOrderItemsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderItemsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/order-items/create-order-items.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                extra\n                            \n                            \n                                    \n                                    \n                                item\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                note\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                verbose_name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                without_component\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(Product)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        verbose_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        without_component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ProductComponents)@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/dto/order-items/create-order-items.dto.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { Product } from 'src/product/Model/product.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\n\nexport class CreateOrderItemsDto {\n  @IsNotEmpty()\n  @IsString()\n  item: string;\n\n  @IsOptional()\n  @IsString()\n  verbose_name?: string;\n  @IsNotEmpty()\n  @IsNumber()\n  quantity: number;\n\n  @IsNotEmpty()\n  @IsString()\n  note?: string;\n\n  @IsOptional()\n  @IsEnum(Product)\n  @IsArray()\n  extra?: Product[];\n\n  @IsOptional()\n  @IsEnum(ProductComponents)\n  @IsArray()\n  without_component?: ProductComponents[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateOrderItemsInterface.html":{"url":"interfaces/CreateOrderItemsInterface.html","title":"interface - CreateOrderItemsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateOrderItemsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Interface/Create-Order.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            extra\n                                        \n                                \n                                \n                                        \n                                            item\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verbose_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            without_component\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        extra\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        extra:         Product[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Product[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verbose_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verbose_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        without_component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        without_component:         ProductComponents[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProductComponents[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OrderStatus } from '../enums/Order-Status.enums';\nimport { OrderType } from '../enums/Order-Types.enums';\nimport { Product } from 'src/product/Model/product.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { CreatePaymentInterface } from 'src/payment/interface/Create-Payment.interface';\n\nexport interface CreateOrderItemsInterface {\n  item: string;\n\n  verbose_name?: string;\n\n  quantity: number;\n\n  note?: string;\n\n  extra?: Product[];\n\n  without_component?: ProductComponents[];\n}\n\nexport interface CreateOrderInterface {\n  items: CreateOrderItemsInterface[];\n\n  branch: string;\n\n  order_type: OrderType;\n\n  readyat?: Date;\n\n  tax_percent?: number;\n\n  discount?: number;\n\n  percent_discount?: number;\n\n  offers?: string[];\n\n  coupon?: string;\n\n  approvedby?: string;\n\n  createby: string;\n\n  order_status?: OrderStatus;\n\n  kitchen_notes?: string;\n\n  customer?: string;\n\n  payment?: CreatePaymentInterface;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePaymentDto.html":{"url":"classes/CreatePaymentDto.html","title":"class - CreatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/create-payment.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                createby\n                            \n                            \n                                    \n                                    \n                                payment_id\n                            \n                            \n                                    \n                                    \n                                payment_status\n                            \n                            \n                                    \n                                    \n                                payment_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsMongoId()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        payment_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        payment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(PaymentStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        payment_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(PaymentType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/dto/create-payment.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEnum,\n  IsMongoId,\n  IsNotEmpty,\n  IsNumber,\n  IsString,\n} from 'class-validator';\nimport { PaymentStatus } from '../enums/payment-status.enums';\nimport { PaymentType } from '../enums/payment-type.enums';\n\nexport class CreatePaymentDto {\n  @IsEnum(PaymentType)\n  @IsNotEmpty()\n  payment_type: PaymentType;\n\n  @IsEnum(PaymentStatus)\n  @IsNotEmpty()\n  payment_status: PaymentStatus;\n\n  @IsNotEmpty()\n  @IsString()\n  payment_id: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  amount: number;\n\n  @IsNotEmpty()\n  @IsMongoId()\n  @IsString()\n  createby: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreatePaymentInterface.html":{"url":"interfaces/CreatePaymentInterface.html","title":"interface - CreatePaymentInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreatePaymentInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/interface/Create-Payment.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            createby\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            payment_status\n                                        \n                                \n                                \n                                        \n                                            payment_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_status:         PaymentStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_type:         PaymentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PaymentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PaymentStatus } from '../enums/payment-status.enums';\nimport { PaymentType } from '../enums/payment-type.enums';\n\nexport interface CreatePaymentInterface {\n  payment_type: PaymentType;\n\n  payment_status: PaymentStatus;\n\n  payment_id: string;\n\n  amount: number;\n\n  createby: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                branch\n                            \n                            \n                                    \n                                    \n                                    \n                                can_deliver\n                            \n                            \n                                    \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                    \n                                components\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                images\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                production_price\n                            \n                            \n                                    \n                                    \n                                    \n                                size\n                            \n                            \n                                    \n                                    \n                                    \n                                subcategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'BRANCH ID', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        can_deliver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'true', required: false})@IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ProductCategory, required: true})@IsNotEmpty()@IsEnum(ProductCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ProductComponents, required: false})@IsOptional()@IsEnum(ProductComponents)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'http://example.com', required: false})@IsOptional()@IsArray()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'product 1', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: true})@IsNotEmpty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        production_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: false})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ProductSize, required: true})@IsNotEmpty()@IsEnum(ProductSize)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        subcategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSubCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: ProductSubCategory, required: true})@IsNotEmpty()@IsEnum(ProductSubCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/create-product.dto.ts:63\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsArray,\n  IsBoolean,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\nimport { ProductCategory } from '../enums/product-category.enums';\nimport { ProductComponents } from '../enums/product-components.enum';\nimport { ProductSubCategory } from '../enums/product-subcategory.enum';\nimport { ProductSize } from '../enums/size.enum';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProductDto {\n  @ApiProperty({\n    example: 'product 1',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: 100,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsNumber()\n  price: number;\n\n  @ApiProperty({\n    example: 100,\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  production_price: number;\n\n  @ApiProperty({\n    example: 'BRANCH ID',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  branch: string;\n\n  @ApiProperty({\n    example: ProductCategory,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEnum(ProductCategory)\n  category: ProductCategory;\n\n  @ApiProperty({\n    example: ProductSubCategory,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEnum(ProductSubCategory)\n  subcategory: ProductSubCategory;\n\n  @ApiProperty({\n    example: ProductSize,\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEnum(ProductSize)\n  size: ProductSize;\n\n  @ApiProperty({\n    example: ProductComponents,\n    required: false,\n  })\n  @IsOptional()\n  @IsEnum(ProductComponents)\n  components: ProductComponents[];\n\n  @ApiProperty({\n    example: 'http://example.com',\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString()\n  images: string[];\n\n  @ApiProperty({\n    example: 'true',\n    required: false,\n  })\n  @IsOptional()\n  @IsBoolean()\n  can_deliver: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockDto.html":{"url":"classes/CreateStockDto.html","title":"class - CreateStockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock/create-stock.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                branch\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/dto/Stock/create-stock.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsMongoId, IsNotEmpty, IsString } from 'class-validator';\n\nexport class CreateStockDto {\n  @IsNotEmpty()\n  @IsString()\n  @IsMongoId()\n  branch: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockItemDto.html":{"url":"classes/CreateStockItemDto.html","title":"class - CreateStockItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Item/create-stock-item.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateStockItemDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStockItemLogsDto.html":{"url":"classes/CreateStockItemLogsDto.html","title":"class - CreateStockItemLogsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStockItemLogsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Item Logs/create-Stock-Item-Logs.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateStockItemLogsDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSuperUserDto.html":{"url":"classes/CreateSuperUserDto.html","title":"class - CreateSuperUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSuperUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/admin/dto/SuperUser-SignUP.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed@gmail.com', required: true})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/admin/dto/SuperUser-SignUP.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mypassword', required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/admin/dto/SuperUser-SignUP.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles\n\n                    \n                \n                \n                    \n                        Default value : Roles.SUPERUSER\n                    \n                \n                    \n                        \n                                Defined in src/auth/admin/dto/SuperUser-SignUP.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/admin/dto/SuperUser-SignUP.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\nexport class CreateSuperUserDto {\n  @ApiProperty({\n    example: 'ahmed@gmail.com',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: 'ahmed',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @ApiProperty({\n    example: 'mypassword',\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n\n  roles: Roles = Roles.SUPERUSER;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSupplierDto.html":{"url":"classes/CreateSupplierDto.html","title":"class - CreateSupplierDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSupplierDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/dto/create-supplier.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                phones\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Location of the supplier', type: () => CreateLocationDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/create-supplier.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Name of the supplier', example: 'ABC Supplies'})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/create-supplier.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Contact phone numbers for the supplier', example: undefined, type: undefined})@IsNotEmpty()@IsString({each: true})@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/create-supplier.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { Type } from 'class-transformer';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class CreateSupplierDto {\n  @ApiProperty({ description: 'Name of the supplier', example: 'ABC Supplies' })\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    description: 'Contact phone numbers for the supplier',\n    example: ['+1234567890', '+0987654321'],\n    type: [String],\n  })\n  @IsNotEmpty()\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(1)\n  phones: string[];\n\n  @ApiPropertyOptional({\n    description: 'Location of the supplier',\n    type: () => CreateLocationDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  location?: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTakeAwayOrderDto.html":{"url":"classes/CreateTakeAwayOrderDto.html","title":"class - CreateTakeAwayOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTakeAwayOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/dto/takeaway/create-takeaway-order.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateBaseOrderDto\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                coupon\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                customer\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                items\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                kitchen_notes\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                offers\n                            \n                            \n                                    \n                                    Optional\n                                order_status\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                payment\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                readyat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsMongoId()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:42\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CreateOrderItemsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:38\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()@IsArray()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        order_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(OrderStatus)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:50\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePaymentDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:47\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsDateString()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateBaseOrderDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateBaseOrderDto:25\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateBaseOrderDto } from '../base-order.dto';\n\nexport class CreateTakeAwayOrderDto extends CreateBaseOrderDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTicketDto.html":{"url":"classes/CreateTicketDto.html","title":"class - CreateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/create-ticket.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                category\n                            \n                            \n                                    \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                segment\n                            \n                            \n                                    \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(TicketCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        segment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketSegment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(TicketSegment)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEnum(TicketStatus)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/dto/create-ticket.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsString } from 'class-validator';\nimport { TicketCategory } from '../enums/Ticket-category.enum';\nimport { TicketStatus } from '../enums/ticket-status.enum';\nimport { TicketSegment } from '../enums/Ticket-Segment.enum';\n\nexport class CreateTicketDto {\n  @IsNotEmpty()\n  @IsEnum(TicketStatus)\n  status: TicketStatus;\n\n  @IsNotEmpty()\n  @IsEnum(TicketCategory)\n  category: TicketCategory;\n\n  @IsNotEmpty()\n  @IsEnum(TicketSegment)\n  segment: TicketSegment;\n\n  @IsString()\n  @IsNotEmpty()\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionDto.html":{"url":"classes/CreateTransactionDto.html","title":"class - CreateTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Transaction/create-Transaction.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTransactionDto {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/User-Singup.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed@gmail.com', required: true})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/User-Singup.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mypassword', required: true})@IsNotEmpty()@MinLength(8)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/User-Singup.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles\n\n                    \n                \n                \n                    \n                        Default value : Roles.USER\n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/User-Singup.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/User-Singup.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    example: 'ahmed@gmail.com',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: 'ahmed',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  username: string;\n\n  @ApiProperty({\n    example: 'mypassword',\n    required: true,\n  })\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n\n  roles: Roles = Roles.USER;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto-1.html":{"url":"classes/CreateUserDto-1.html","title":"class - CreateUserDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed@gmail.com', required: true})@IsEmail()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mypassword', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Roles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ahmed', required: true})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsEnum, IsNotEmpty, IsString } from 'class-validator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\nexport class CreateUserDto {\n  @ApiProperty({\n    example: 'ahmed@gmail.com',\n    required: true,\n  })\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @ApiProperty({\n    example: 'mypassword',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  password: string;\n\n  @ApiProperty({\n    example: 'ahmed',\n    required: true,\n  })\n  @IsString()\n  @IsNotEmpty()\n  username: string;\n\n  @IsEnum(Roles)\n  roles: Roles;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Customer.html":{"url":"classes/Customer.html","title":"class - Customer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/Model/customer.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/Model/customer.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Location } from 'src/location/Model/location.model';\n\n@Schema()\nexport class Customer {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop({ required: true })\n  phone: string[];\n\n  @Prop({ type: [Location], required: true, default: [] })\n  location: Location[];\n\n  @Prop()\n  notes: string;\n}\n\nexport const CustomerSchema = SchemaFactory.createForClass(Customer);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerController.html":{"url":"controllers/CustomerController.html","title":"controller - CustomerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createCustomerDto: CreateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCustomerDto\n                                            \n                                                            CreateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/customer/customer.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCustomerDto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { CustomerService } from './customer.service';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('customer')\n@Controller('customer')\nexport class CustomerController {\n  constructor(private readonly customerService: CustomerService) {}\n\n  @Post()\n  create(@Body() createCustomerDto: CreateCustomerDto) {\n    return this.customerService.create(createCustomerDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.customerService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.customerService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCustomerDto: UpdateCustomerDto) {\n    return this.customerService.update(+id, updateCustomerDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.customerService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_providers\n\n\n\n\nCustomerService\n\nCustomerService\n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CustomerService } from './customer.service';\nimport { CustomerController } from './customer.controller';\n\n@Module({\n  controllers: [CustomerController],\n  providers: [CustomerService],\n})\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createCustomerDto\n                                            \n                                                            CreateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/customer/customer.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateCustomerDto\n                                            \n                                                            UpdateCustomerDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\n\n@Injectable()\nexport class CustomerService {\n  create(createCustomerDto: CreateCustomerDto) {\n    return 'This action adds a new customer';\n  }\n\n  findAll() {\n    return `This action returns all customer`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} customer`;\n  }\n\n  update(id: number, updateCustomerDto: UpdateCustomerDto) {\n    return `This action updates a #${id} customer`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} customer`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelivereyOrder.html":{"url":"classes/DelivereyOrder.html","title":"class - DelivereyOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelivereyOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/Model/delivery.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                deliverey_method\n                            \n                            \n                                    \n                                delivery_price\n                            \n                            \n                                    \n                                end_location\n                            \n                            \n                                    \n                                pilot\n                            \n                            \n                                    \n                                start_location\n                            \n                            \n                                    \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        deliverey_method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DelivereyMethod\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/Model/delivery.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delivery_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryPrice\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/Model/delivery.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        end_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Location})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/Model/delivery.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pilot\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/Model/delivery.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        start_location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: Location})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/Model/delivery.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DeliveryStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/delivery/Model/delivery.model.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { DeliveryStatus } from '../enums/delivery-status.enums';\nimport { DeliveryPrice } from '../enums/Deliver-price.enums';\nimport { Location } from 'src/location/Model/location.model';\nimport { DelivereyMethod } from '../enums/Deliverey-method.enums';\n\n@Schema({ timestamps: true })\nexport class DelivereyOrder {\n  @Prop({ required: true, type: Location })\n  start_location: Location;\n\n  @Prop({ required: true, type: Location })\n  end_location: Location;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  pilot: string;\n\n  @Prop()\n  deliverey_method: DelivereyMethod;\n\n  @Prop({ required: true, default: DeliveryStatus.WAITINGORDER })\n  status: DeliveryStatus;\n\n  @Prop({ required: true })\n  delivery_price: DeliveryPrice;\n}\n\nexport const DeliveryOrderSchema = SchemaFactory.createForClass(DelivereyOrder);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelivereyOrderType.html":{"url":"classes/DelivereyOrderType.html","title":"class - DelivereyOrderType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelivereyOrderType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/order.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                delivery\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        delivery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DelivereyOrder\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: DelivereyOrder})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:96\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport * as mongoose from 'mongoose';\nimport { OrderType } from '../enums/Order-Types.enums';\nimport { User } from 'src/users/Model/user.model';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { Product } from 'src/product/Model/product.model';\nimport { Customer } from 'src/customer/Model/customer.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { Payment } from 'src/payment/Model/payment.model';\nimport { Coupon, CouponSchema } from 'src/coupon/Model/coupon.model';\nimport { Offer, OfferSchema } from 'src/offers/Model/offer.model';\nimport { DelivereyOrder } from 'src/delivery/Model/delivery.model';\nimport { Model } from 'mongoose';\n\n@Schema()\nexport class OrderItems {\n  @Prop()\n  verbose_name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Product.name })\n  item: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  note: string;\n\n  @Prop()\n  extra: Product[];\n\n  @Prop()\n  without_component: ProductComponents[];\n}\n\n@Schema({ timestamps: true, discriminatorKey: 'order_type' })\nexport class Order {\n  @Prop()\n  daily_orderid: number;\n\n  @Prop({ type: [OrderItems] })\n  items: OrderItems[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n\n  @Prop({\n    required: true,\n    enum: Object.values(OrderType),\n  })\n  order_type: OrderType;\n\n  @Prop()\n  readyat: Date;\n\n  @Prop({ default: 14, required: true })\n  tax_percent: number;\n\n  @Prop()\n  discount: number;\n\n  @Prop()\n  percent_discount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Offer.name })\n  offers: string[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Coupon.name })\n  coupon: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  approvedby?: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ default: OrderStatus.PREPARING, required: true })\n  order_status: OrderStatus;\n\n  @Prop()\n  kitchen_notes: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Customer.name })\n  customer: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Payment.name })\n  payment: Payment;\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n@Schema()\nexport class DelivereyOrderType extends Order {\n  @Prop({ type: DelivereyOrder })\n  delivery: DelivereyOrder;\n}\n\nexport const DelivereyOrderTypeSchema =\n  SchemaFactory.createForClass(DelivereyOrderType);\n\n@Schema()\nexport class TakeAwayOrder extends Order {}\n\nexport const TakeAwayOrderSchema = SchemaFactory.createForClass(TakeAwayOrder);\n\n@Schema()\nexport class DineinOrder extends Order {\n  @Prop({ default: 30 })\n  service_price: number;\n\n  @Prop()\n  table_number: string;\n}\n\nexport const DineinOrderSchema = SchemaFactory.createForClass(DineinOrder);\n\nOrderSchema.pre('save', async function (next) {\n  if (this.isNew) {\n    const todayStart = new Date();\n    todayStart.setHours(0, 0, 0, 0);\n\n    const todayEnd = new Date();\n    todayEnd.setHours(23, 59, 59, 999);\n\n    const model = this.constructor as Model;\n\n    const count = await model\n      .countDocuments({\n        branch: this.branch,\n        createdAt: {\n          $gte: todayStart,\n          $lt: todayEnd,\n        },\n      })\n      .exec();\n\n    this.daily_orderid = count + 1;\n  }\n\n  next();\n});\n\n// const OfferModel = mongoose.model(Offer.name, OfferSchema);\n// const CouponModel = mongoose.model(Coupon.name, CouponSchema);\n\n// OrderSchema.virtual('total_without_tax').get(async function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   if (this.offers) {\n//     this.offers.forEach(async (offerid) => {\n//       const offer = await OfferModel.findById(offerid).exec();\n//       total += offer.price;\n//     });\n//   }\n\n//   if (this.coupon) {\n//     const coupon = await CouponModel.findById(this.coupon).exec();\n//     const couponDiscount = total * (coupon.percent_discount / 100);\n//     total -= couponDiscount;\n//   }\n\n//   if (this.discount) {\n//     total -= this.discount;\n//   }\n//   if (this.percent_discount) {\n//     const percent = total * (this.percent_discount / 100);\n//     total -= percent;\n//   }\n//   return total;\n// });\n\n// // And also use it within the virtual for total, including the tax calculation\n// OrderSchema.virtual('total').get(function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   const orderTax = total * (this.tax_percent / 100);\n//   return total + orderTax;\n// });\n\nOrderSchema.set('toJSON', { virtuals: true });\nOrderSchema.set('toObject', { virtuals: true });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DeliveryController.html":{"url":"controllers/DeliveryController.html","title":"controller - DeliveryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DeliveryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/delivery.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                delivery\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDeliveryDto: CreateDeliveryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/delivery/delivery.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryDto\n                                            \n                                                            CreateDeliveryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/delivery/delivery.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery/delivery.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery/delivery.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDeliveryDto: UpdateDeliveryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/delivery/delivery.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryDto\n                                            \n                                                            UpdateDeliveryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { DeliveryService } from './delivery.service';\nimport { CreateDeliveryDto } from './dto/create-delivery.dto';\nimport { UpdateDeliveryDto } from './dto/update-delivery.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('delivery')\n@Controller('delivery')\nexport class DeliveryController {\n  constructor(private readonly deliveryService: DeliveryService) {}\n\n  @Post()\n  create(@Body() createDeliveryDto: CreateDeliveryDto) {\n    return this.deliveryService.create(createDeliveryDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.deliveryService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.deliveryService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateDeliveryDto: UpdateDeliveryDto) {\n    return this.deliveryService.update(+id, updateDeliveryDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.deliveryService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DeliveryModule.html":{"url":"modules/DeliveryModule.html","title":"module - DeliveryModule","body":"\n                   \n\n\n\n\n    Modules\n    DeliveryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DeliveryModule\n\n\n\ncluster_DeliveryModule_providers\n\n\n\n\nDeliveryService\n\nDeliveryService\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nDeliveryModule -->\n\nDeliveryService->DeliveryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/delivery/delivery.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DeliveryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DeliveryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DeliveryService } from './delivery.service';\nimport { DeliveryController } from './delivery.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { DelivereyOrder, DeliveryOrderSchema } from './Model/delivery.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: DelivereyOrder.name, schema: DeliveryOrderSchema },\n    ]),\n  ],\n  controllers: [DeliveryController],\n  providers: [DeliveryService],\n})\nexport class DeliveryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeliveryService.html":{"url":"injectables/DeliveryService.html","title":"injectable - DeliveryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DeliveryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/delivery.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createDeliveryDto: CreateDeliveryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery/delivery.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDeliveryDto\n                                            \n                                                            CreateDeliveryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery/delivery.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery/delivery.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery/delivery.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateDeliveryDto: UpdateDeliveryDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/delivery/delivery.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDeliveryDto\n                                            \n                                                            UpdateDeliveryDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateDeliveryDto } from './dto/create-delivery.dto';\nimport { UpdateDeliveryDto } from './dto/update-delivery.dto';\n\n@Injectable()\nexport class DeliveryService {\n  create(createDeliveryDto: CreateDeliveryDto) {\n    return 'This action adds a new delivery';\n  }\n\n  findAll() {\n    return `This action returns all delivery`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} delivery`;\n  }\n\n  update(id: number, updateDeliveryDto: UpdateDeliveryDto) {\n    return `This action updates a #${id} delivery`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} delivery`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DineinOrder.html":{"url":"classes/DineinOrder.html","title":"class - DineinOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DineinOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/order.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                service_price\n                            \n                            \n                                    \n                                table_number\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        service_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 30})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        table_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:113\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport * as mongoose from 'mongoose';\nimport { OrderType } from '../enums/Order-Types.enums';\nimport { User } from 'src/users/Model/user.model';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { Product } from 'src/product/Model/product.model';\nimport { Customer } from 'src/customer/Model/customer.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { Payment } from 'src/payment/Model/payment.model';\nimport { Coupon, CouponSchema } from 'src/coupon/Model/coupon.model';\nimport { Offer, OfferSchema } from 'src/offers/Model/offer.model';\nimport { DelivereyOrder } from 'src/delivery/Model/delivery.model';\nimport { Model } from 'mongoose';\n\n@Schema()\nexport class OrderItems {\n  @Prop()\n  verbose_name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Product.name })\n  item: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  note: string;\n\n  @Prop()\n  extra: Product[];\n\n  @Prop()\n  without_component: ProductComponents[];\n}\n\n@Schema({ timestamps: true, discriminatorKey: 'order_type' })\nexport class Order {\n  @Prop()\n  daily_orderid: number;\n\n  @Prop({ type: [OrderItems] })\n  items: OrderItems[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n\n  @Prop({\n    required: true,\n    enum: Object.values(OrderType),\n  })\n  order_type: OrderType;\n\n  @Prop()\n  readyat: Date;\n\n  @Prop({ default: 14, required: true })\n  tax_percent: number;\n\n  @Prop()\n  discount: number;\n\n  @Prop()\n  percent_discount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Offer.name })\n  offers: string[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Coupon.name })\n  coupon: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  approvedby?: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ default: OrderStatus.PREPARING, required: true })\n  order_status: OrderStatus;\n\n  @Prop()\n  kitchen_notes: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Customer.name })\n  customer: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Payment.name })\n  payment: Payment;\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n@Schema()\nexport class DelivereyOrderType extends Order {\n  @Prop({ type: DelivereyOrder })\n  delivery: DelivereyOrder;\n}\n\nexport const DelivereyOrderTypeSchema =\n  SchemaFactory.createForClass(DelivereyOrderType);\n\n@Schema()\nexport class TakeAwayOrder extends Order {}\n\nexport const TakeAwayOrderSchema = SchemaFactory.createForClass(TakeAwayOrder);\n\n@Schema()\nexport class DineinOrder extends Order {\n  @Prop({ default: 30 })\n  service_price: number;\n\n  @Prop()\n  table_number: string;\n}\n\nexport const DineinOrderSchema = SchemaFactory.createForClass(DineinOrder);\n\nOrderSchema.pre('save', async function (next) {\n  if (this.isNew) {\n    const todayStart = new Date();\n    todayStart.setHours(0, 0, 0, 0);\n\n    const todayEnd = new Date();\n    todayEnd.setHours(23, 59, 59, 999);\n\n    const model = this.constructor as Model;\n\n    const count = await model\n      .countDocuments({\n        branch: this.branch,\n        createdAt: {\n          $gte: todayStart,\n          $lt: todayEnd,\n        },\n      })\n      .exec();\n\n    this.daily_orderid = count + 1;\n  }\n\n  next();\n});\n\n// const OfferModel = mongoose.model(Offer.name, OfferSchema);\n// const CouponModel = mongoose.model(Coupon.name, CouponSchema);\n\n// OrderSchema.virtual('total_without_tax').get(async function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   if (this.offers) {\n//     this.offers.forEach(async (offerid) => {\n//       const offer = await OfferModel.findById(offerid).exec();\n//       total += offer.price;\n//     });\n//   }\n\n//   if (this.coupon) {\n//     const coupon = await CouponModel.findById(this.coupon).exec();\n//     const couponDiscount = total * (coupon.percent_discount / 100);\n//     total -= couponDiscount;\n//   }\n\n//   if (this.discount) {\n//     total -= this.discount;\n//   }\n//   if (this.percent_discount) {\n//     const percent = total * (this.percent_discount / 100);\n//     total -= percent;\n//   }\n//   return total;\n// });\n\n// // And also use it within the virtual for total, including the tax calculation\n// OrderSchema.virtual('total').get(function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   const orderTax = total * (this.tax_percent / 100);\n//   return total + orderTax;\n// });\n\nOrderSchema.set('toJSON', { virtuals: true });\nOrderSchema.set('toObject', { virtuals: true });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Employee.html":{"url":"classes/Employee.html","title":"class - Employee","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Employee\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/Model/employee.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addrees\n                            \n                            \n                                    \n                                attendence\n                            \n                            \n                                    \n                                bank_account\n                            \n                            \n                                    \n                                base_salary\n                            \n                            \n                                    \n                                birthdate\n                            \n                            \n                                    \n                                department\n                            \n                            \n                                    \n                                gender\n                            \n                            \n                                    \n                                join_at\n                            \n                            \n                                    \n                                monthly_pdr\n                            \n                            \n                                    \n                                phones\n                            \n                            \n                                    \n                                ssid\n                            \n                            \n                                    \n                                transaction\n                            \n                            \n                                    \n                                user\n                            \n                            \n                                    \n                                working_in\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addrees\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Location})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        attendence\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Attendence[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:75\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        bank_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        base_salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:81\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        birthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Department\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        join_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        monthly_pdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EmployeePDR[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:107\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        ssid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:98\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EmployeeTransactions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        working_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:72\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { User } from 'src/users/Model/user.model';\nimport { AttendenceActions } from '../enums/attendence-action.enums';\nimport { Department } from '../enums/department.enums';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Coordinates, Location } from 'src/location/Model/location.model';\nimport { Transaction } from '../enums/emp-transaction.enum';\n\n@Schema({ timestamps: true })\nexport class Attendence {\n  @Prop()\n  action: AttendenceActions;\n\n  @Prop({ type: Coordinates })\n  location: Coordinates;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  signby: string;\n\n  @Prop()\n  phone: string;\n\n  @Prop()\n  note: string;\n}\n\nexport const AttendenceSchema = SchemaFactory.createForClass(Attendence);\n\n@Schema({ timestamps: true })\nexport class EmployeeTransactions {\n  @Prop({ required: true })\n  amount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ required: true })\n  transaction: Transaction;\n\n  @Prop()\n  notes: string;\n}\n\nexport const EmployeeTransactionsSchema =\n  SchemaFactory.createForClass(EmployeeTransactions);\n\n@Schema({ timestamps: true })\nexport class EmployeePDR {\n  @Prop({ required: true })\n  pdr: number;\n\n  @Prop()\n  details: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n}\n\nexport const EmployeePDRSchema = SchemaFactory.createForClass(EmployeePDR);\n\n@Schema({ timestamps: true })\nexport class Employee {\n  @Prop()\n  join_at: Date;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  user: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  working_in: string;\n\n  @Prop({ type: [Attendence] })\n  attendence: Attendence[];\n\n  @Prop({ required: true })\n  department: Department;\n\n  @Prop({ required: true })\n  base_salary: number;\n\n  @Prop({\n    type: [EmployeeTransactions],\n  })\n  transaction: EmployeeTransactions[];\n\n  @Prop({ required: true })\n  phones: string[];\n\n  @Prop({ default: Sex.MALE })\n  gender: Sex;\n\n  @Prop({ type: Location })\n  addrees: Location;\n\n  @Prop()\n  ssid: number;\n\n  @Prop()\n  birthdate: Date;\n\n  @Prop()\n  bank_account: string;\n\n  @Prop({ type: [EmployeePDR] })\n  monthly_pdr: EmployeePDR[];\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmployeeController.html":{"url":"controllers/EmployeeController.html","title":"controller - EmployeeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmployeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/employee.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                employee\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                addAttend\n                            \n                            \n                                    \n                                addBonas\n                            \n                            \n                                    \n                                addEmpPDR\n                            \n                            \n                                    \n                                addLoan\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findById\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                removeAttend\n                            \n                            \n                                    \n                                removeEmpPDR\n                            \n                            \n                                    \n                                removeTransaction\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addAttend\n                        \n                    \n                \n            \n            \n                \n                        \n                    addAttend(createDto: CreateAttendActionDTO, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('attend')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateAttendActionDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addBonas\n                        \n                    \n                \n            \n            \n                \n                        \n                    addBonas(id: string, createDto: EmployeeTransactionDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('bonas/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createDto\n                                            \n                                                            EmployeeTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addEmpPDR\n                        \n                    \n                \n            \n            \n                \n                        \n                    addEmpPDR(user_id: string, createDto: CreateEmployeePDRDTO, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('pdr/:userid')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createDto\n                                            \n                                                            CreateEmployeePDRDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        addLoan\n                        \n                    \n                \n            \n            \n                \n                        \n                    addLoan(id: string, createDto: EmployeeTransactionDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('loan/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createDto\n                                            \n                                                            EmployeeTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createEmployeeDto: CreateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createEmployeeDto\n                                            \n                                                            CreateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeAttend\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeAttend(employeeid: string, AttendenceId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('attendance/:employeeid/:attendanceid')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                employeeid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                AttendenceId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeEmpPDR\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeEmpPDR(user_id: string, pdr_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('attendance/:userid/:pdr_id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pdr_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeTransaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeTransaction(transactionid: string, employeeid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('transaction/:employeeid/:transactionid')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transactionid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                employeeid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateEmployeeDto: UpdateEmployeeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/employee/employee.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateEmployeeDto\n                                            \n                                                            UpdateEmployeeDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n} from '@nestjs/common';\nimport { EmployeeService } from './employee.service';\nimport { CreateEmployeeDto } from './dto/create-employee.dto';\nimport { UpdateEmployeeDto } from './dto/update-employee.dto';\nimport { CreateAttendActionDTO } from './dto/create-attend-action.dto';\nimport { Request } from 'express';\nimport { EmployeeTransactionDto } from './dto/emp-transaction.dto';\nimport { Transaction } from './enums/emp-transaction.enum';\nimport { EmployeeTransactionInterface } from './interfaces/emp-transaction.interface';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateEmployeePDRDTO } from './dto/create-employee-pdr.dto';\n\n@ApiTags('employee')\n@Controller('employee')\nexport class EmployeeController {\n  constructor(private readonly employeeService: EmployeeService) {}\n\n  @Post()\n  create(@Body() createEmployeeDto: CreateEmployeeDto) {\n    return this.employeeService.create(createEmployeeDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.employeeService.findAll();\n  }\n\n  @Get(':id')\n  findById(@Param('id') id: string) {\n    return this.employeeService.findById(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateEmployeeDto: UpdateEmployeeDto,\n  ) {\n    return this.employeeService.update(id, updateEmployeeDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.employeeService.remove(id);\n  }\n\n  @Post('attend')\n  addAttend(@Body() createDto: CreateAttendActionDTO, @Req() req: Request) {\n    return this.employeeService.AddEmployeeAttendAction(\n      (req as any).user._id,\n      createDto,\n    );\n  }\n\n  @Post('loan/:id')\n  addLoan(\n    @Param('id') id: string,\n    @Body() createDto: EmployeeTransactionDto,\n    @Req() req: Request,\n  ) {\n    const data: EmployeeTransactionInterface = {\n      amount: createDto.amount,\n      notes: createDto.notes,\n      employee_id: id,\n      transaction: Transaction.LOAN,\n      createby: (req as any).user._id,\n    };\n\n    return this.employeeService.addEmployeeTransaction(data);\n  }\n\n  @Post('bonas/:id')\n  addBonas(\n    @Param('id') id: string,\n    @Body() createDto: EmployeeTransactionDto,\n    @Req() req: Request,\n  ) {\n    const data: EmployeeTransactionInterface = {\n      amount: createDto.amount,\n      notes: createDto.notes,\n      employee_id: id,\n      transaction: Transaction.BONAS,\n      createby: (req as any).user._id,\n    };\n\n    return this.employeeService.addEmployeeTransaction(data);\n  }\n\n  @Post('pdr/:userid')\n  addEmpPDR(\n    @Param('userid') user_id: string,\n    @Body() createDto: CreateEmployeePDRDTO,\n    @Req() req: Request,\n  ) {\n    return this.employeeService.AddEmployeePDR(\n      user_id,\n      (req as any).user._id,\n      createDto,\n    );\n  }\n\n  @Delete('transaction/:employeeid/:transactionid')\n  removeTransaction(\n    @Param('transactionid') transactionid: string,\n    @Param('employeeid') employeeid: string,\n  ) {\n    return this.employeeService.removeEmployeeTransaction(\n      employeeid,\n      transactionid,\n    );\n  }\n\n  @Delete('attendance/:employeeid/:attendanceid')\n  removeAttend(\n    @Param('employeeid') employeeid: string,\n    @Param('attendanceid') AttendenceId: string,\n  ) {\n    return this.employeeService.removeEmployeeAttendAction(\n      employeeid,\n      AttendenceId,\n    );\n  }\n\n  @Delete('attendance/:userid/:pdr_id')\n  removeEmpPDR(\n    @Param('userid') user_id: string,\n    @Param('pdr_id') pdr_id: string,\n  ) {\n    return this.employeeService.removeEmployeePDR(user_id, pdr_id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmployeeModule.html":{"url":"modules/EmployeeModule.html","title":"module - EmployeeModule","body":"\n                   \n\n\n\n\n    Modules\n    EmployeeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_imports\n\n\n\ncluster_EmployeeModule_exports\n\n\n\ncluster_EmployeeModule_providers\n\n\n\n\nLocationModule\n\nLocationModule\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nEmployeeModule -->\n\nLocationModule->EmployeeModule\n\n\n\n\n\nEmployeeService \n\nEmployeeService \n\nEmployeeService  -->\n\nEmployeeModule->EmployeeService \n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/employee/employee.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EmployeeService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EmployeeController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LocationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EmployeeService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EmployeeService } from './employee.service';\nimport { EmployeeController } from './employee.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  Attendence,\n  AttendenceSchema,\n  Employee,\n  EmployeePDR,\n  EmployeePDRSchema,\n  EmployeeSchema,\n  EmployeeTransactions,\n  EmployeeTransactionsSchema,\n} from './Model/employee.model';\nimport { LocationModule } from 'src/location/location.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Employee.name, schema: EmployeeSchema },\n      { name: Attendence.name, schema: AttendenceSchema },\n      { name: EmployeeTransactions.name, schema: EmployeeTransactionsSchema },\n      { name: EmployeePDR.name, schema: EmployeePDRSchema },\n    ]),\n    LocationModule,\n  ],\n  controllers: [EmployeeController],\n  providers: [EmployeeService],\n  exports: [EmployeeService],\n})\nexport class EmployeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeePDR.html":{"url":"classes/EmployeePDR.html","title":"class - EmployeePDR","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeePDR\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/Model/employee.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                details\n                            \n                            \n                                    \n                                pdr\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        pdr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:52\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { User } from 'src/users/Model/user.model';\nimport { AttendenceActions } from '../enums/attendence-action.enums';\nimport { Department } from '../enums/department.enums';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Coordinates, Location } from 'src/location/Model/location.model';\nimport { Transaction } from '../enums/emp-transaction.enum';\n\n@Schema({ timestamps: true })\nexport class Attendence {\n  @Prop()\n  action: AttendenceActions;\n\n  @Prop({ type: Coordinates })\n  location: Coordinates;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  signby: string;\n\n  @Prop()\n  phone: string;\n\n  @Prop()\n  note: string;\n}\n\nexport const AttendenceSchema = SchemaFactory.createForClass(Attendence);\n\n@Schema({ timestamps: true })\nexport class EmployeeTransactions {\n  @Prop({ required: true })\n  amount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ required: true })\n  transaction: Transaction;\n\n  @Prop()\n  notes: string;\n}\n\nexport const EmployeeTransactionsSchema =\n  SchemaFactory.createForClass(EmployeeTransactions);\n\n@Schema({ timestamps: true })\nexport class EmployeePDR {\n  @Prop({ required: true })\n  pdr: number;\n\n  @Prop()\n  details: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n}\n\nexport const EmployeePDRSchema = SchemaFactory.createForClass(EmployeePDR);\n\n@Schema({ timestamps: true })\nexport class Employee {\n  @Prop()\n  join_at: Date;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  user: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  working_in: string;\n\n  @Prop({ type: [Attendence] })\n  attendence: Attendence[];\n\n  @Prop({ required: true })\n  department: Department;\n\n  @Prop({ required: true })\n  base_salary: number;\n\n  @Prop({\n    type: [EmployeeTransactions],\n  })\n  transaction: EmployeeTransactions[];\n\n  @Prop({ required: true })\n  phones: string[];\n\n  @Prop({ default: Sex.MALE })\n  gender: Sex;\n\n  @Prop({ type: Location })\n  addrees: Location;\n\n  @Prop()\n  ssid: number;\n\n  @Prop()\n  birthdate: Date;\n\n  @Prop()\n  bank_account: string;\n\n  @Prop({ type: [EmployeePDR] })\n  monthly_pdr: EmployeePDR[];\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeTransactionDto.html":{"url":"classes/EmployeeTransactionDto.html","title":"class - EmployeeTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/emp-transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                amount\n                            \n                            \n                                    \n                                    \n                                    \n                                notes\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1000'})@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/emp-transaction.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Boans For attuide'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/emp-transaction.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\n\nexport class EmployeeTransactionDto {\n  @ApiProperty({\n    example: '1000',\n  })\n  @IsNumber()\n  @IsNotEmpty()\n  amount: number;\n\n  @ApiProperty({\n    example: 'Boans For attuide',\n  })\n  @IsString()\n  @IsOptional()\n  notes: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmployeeTransactionInterface.html":{"url":"interfaces/EmployeeTransactionInterface.html","title":"interface - EmployeeTransactionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmployeeTransactionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/interfaces/emp-transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            createby\n                                        \n                                \n                                \n                                        \n                                            employee_id\n                                        \n                                \n                                \n                                        \n                                            notes\n                                        \n                                \n                                \n                                        \n                                            transaction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        employee_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        employee_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        notes:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction:         Transaction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transaction\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Transaction } from '../enums/emp-transaction.enum';\n\nexport interface EmployeeTransactionInterface {\n  amount: number;\n\n  transaction: Transaction;\n\n  notes: string;\n\n  createby: string;\n\n  employee_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmployeeTransactions.html":{"url":"classes/EmployeeTransactions.html","title":"class - EmployeeTransactions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmployeeTransactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/Model/employee.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                notes\n                            \n                            \n                                    \n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/Model/employee.model.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { User } from 'src/users/Model/user.model';\nimport { AttendenceActions } from '../enums/attendence-action.enums';\nimport { Department } from '../enums/department.enums';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Coordinates, Location } from 'src/location/Model/location.model';\nimport { Transaction } from '../enums/emp-transaction.enum';\n\n@Schema({ timestamps: true })\nexport class Attendence {\n  @Prop()\n  action: AttendenceActions;\n\n  @Prop({ type: Coordinates })\n  location: Coordinates;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  signby: string;\n\n  @Prop()\n  phone: string;\n\n  @Prop()\n  note: string;\n}\n\nexport const AttendenceSchema = SchemaFactory.createForClass(Attendence);\n\n@Schema({ timestamps: true })\nexport class EmployeeTransactions {\n  @Prop({ required: true })\n  amount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ required: true })\n  transaction: Transaction;\n\n  @Prop()\n  notes: string;\n}\n\nexport const EmployeeTransactionsSchema =\n  SchemaFactory.createForClass(EmployeeTransactions);\n\n@Schema({ timestamps: true })\nexport class EmployeePDR {\n  @Prop({ required: true })\n  pdr: number;\n\n  @Prop()\n  details: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n}\n\nexport const EmployeePDRSchema = SchemaFactory.createForClass(EmployeePDR);\n\n@Schema({ timestamps: true })\nexport class Employee {\n  @Prop()\n  join_at: Date;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  user: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  working_in: string;\n\n  @Prop({ type: [Attendence] })\n  attendence: Attendence[];\n\n  @Prop({ required: true })\n  department: Department;\n\n  @Prop({ required: true })\n  base_salary: number;\n\n  @Prop({\n    type: [EmployeeTransactions],\n  })\n  transaction: EmployeeTransactions[];\n\n  @Prop({ required: true })\n  phones: string[];\n\n  @Prop({ default: Sex.MALE })\n  gender: Sex;\n\n  @Prop({ type: Location })\n  addrees: Location;\n\n  @Prop()\n  ssid: number;\n\n  @Prop()\n  birthdate: Date;\n\n  @Prop()\n  bank_account: string;\n\n  @Prop({ type: [EmployeePDR] })\n  monthly_pdr: EmployeePDR[];\n}\n\nexport const EmployeeSchema = SchemaFactory.createForClass(Employee);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsEmployeeGuard.html":{"url":"classes/IsEmployeeGuard.html","title":"class - IsEmployeeGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsEmployeeGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/guards/IsEmployee.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector, empService: EmployeeService)\n                    \n                \n                        \n                            \n                                Defined in src/employee/guards/IsEmployee.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        empService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/employee/guards/IsEmployee.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\nimport { EmployeeService } from '../employee.service';\n\nexport class IsEmployeeGuard extends AuthGuard('jwt') {\n  constructor(\n    private reflector: Reflector,\n    private empService: EmployeeService,\n  ) {\n    super();\n  }\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    try {\n      const user = context.switchToHttp().getRequest().user;\n      return this.empService.IsUserEmployee(user._id);\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsWorkingInBranchGuard.html":{"url":"classes/IsWorkingInBranchGuard.html","title":"class - IsWorkingInBranchGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsWorkingInBranchGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/guards/Is-working-In-Branch.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(refleactor: Reflector, employeesService: EmployeeService)\n                    \n                \n                        \n                            \n                                Defined in src/order/guards/Is-working-In-Branch.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refleactor\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeesService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/guards/Is-working-In-Branch.guard.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Request } from 'express';\nimport { EmployeeService } from 'src/employee/employee.service';\n\nexport class IsWorkingInBranchGuard extends AuthGuard('jwt') {\n  constructor(\n    private refleactor: Reflector,\n    private employeesService: EmployeeService,\n  ) {\n    super();\n  }\n  canActivate(context: ExecutionContext) {\n    try {\n      const req = context.switchToHttp().getRequest();\n      const branch = req.params.branchid;\n      const user_id = (req as any).user._id;\n      return this.employeesService.IsUserWorkingInBranch(user_id, branch);\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTGuard.html":{"url":"injectables/JWTGuard.html","title":"injectable - JWTGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JWTGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/jwt.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.guard.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt.guard.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JWTGuard extends AuthGuard('jwt') {\n  constructor(private readonly reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const is_public = this.reflector.getAllAndOverride('isPublic', [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n    if (is_public) return true;\n    return super.canActivate(context);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Location.html":{"url":"classes/Location.html","title":"class - Location","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Location\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/Model/location.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                building_Number\n                            \n                            \n                                    \n                                city\n                            \n                            \n                                    \n                                cordinates\n                            \n                            \n                                    \n                                country\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                district\n                            \n                            \n                                    \n                                floor\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                neighborhood\n                            \n                            \n                                    \n                                street_Address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        building_Number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        cordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Coordinates\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: CoordinatesSchema})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        district\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        neighborhood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        street_Address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/Model/location.model.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nexport class Coordinates {\n  @Prop({ required: true })\n  long: number;\n\n  @Prop({ required: true })\n  lat: number;\n}\n\nconst CoordinatesSchema = SchemaFactory.createForClass(Coordinates);\n\n@Schema()\nexport class Location {\n  @Prop()\n  name: string;\n\n  @Prop()\n  country: string;\n\n  @Prop()\n  city: string;\n\n  @Prop()\n  district: string;\n\n  @Prop()\n  neighborhood: string;\n\n  @Prop()\n  street_Address: string;\n\n  @Prop()\n  building_Number: string;\n\n  @Prop()\n  floor: string;\n\n  @Prop()\n  description: string;\n\n  @Prop({ type: CoordinatesSchema })\n  cordinates: Coordinates;\n}\n\nexport const LocationSchema = SchemaFactory.createForClass(Location);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LocationController.html":{"url":"controllers/LocationController.html","title":"controller - LocationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LocationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                location\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createLocationDto: CreateLocationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocationDto\n                                            \n                                                            CreateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateLocationDto: UpdateLocationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/location/location.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLocationDto\n                                            \n                                                            UpdateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { LocationService } from './location.service';\nimport { CreateLocationDto } from './dto/create-location.dto';\nimport { UpdateLocationDto } from './dto/update-location.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('location')\n@Controller('location')\nexport class LocationController {\n  constructor(private readonly locationService: LocationService) {}\n\n  @Post()\n  create(@Body() createLocationDto: CreateLocationDto) {\n    return this.locationService.create(createLocationDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.locationService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.locationService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateLocationDto: UpdateLocationDto) {\n    return this.locationService.update(+id, updateLocationDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.locationService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_LocationModule_exports\n\n\n\n\nLocationService \n\nLocationService \n\n\n\nLocationModule\n\nLocationModule\n\nLocationService  -->\n\nLocationModule->LocationService \n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/location/location.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LocationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LocationController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocationService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LocationService } from './location.service';\nimport { LocationController } from './location.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Location, LocationSchema } from './Model/location.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Location.name, schema: LocationSchema },\n    ]),\n  ],\n  controllers: [LocationController],\n  providers: [LocationService],\n  exports: [LocationService],\n})\nexport class LocationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocationService.html":{"url":"injectables/LocationService.html","title":"injectable - LocationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/location.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createLocationDto: CreateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocationDto\n                                            \n                                                            CreateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateLocationDto: UpdateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/location/location.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateLocationDto\n                                            \n                                                            UpdateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateLocationDto } from './dto/create-location.dto';\nimport { UpdateLocationDto } from './dto/update-location.dto';\n\n@Injectable()\nexport class LocationService {\n  create(createLocationDto: CreateLocationDto) {\n    return 'This action adds a new location';\n  }\n\n  findAll() {\n    return `This action returns all location`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} location`;\n  }\n\n  update(id: number, updateLocationDto: UpdateLocationDto) {\n    return `This action updates a #${id} location`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} location`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogoutDto.html":{"url":"classes/LogoutDto.html","title":"class - LogoutDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogoutDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/Logout.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                userid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ID', required: false})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Logout.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LogoutDto {\n  @ApiProperty({\n    example: 'ID',\n    required: false,\n  })\n  @IsString()\n  @IsNotEmpty()\n  userid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Material.html":{"url":"classes/Material.html","title":"class - Material","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Material\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/Model/material.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                measure_by\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        measure_by\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MeasureUnits\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: MeasureUnits})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/material/Model/material.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/material/Model/material.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema } from '@nestjs/mongoose';\nimport { MeasureUnits } from '../enums/measure-units.enum';\n\n@Schema()\nexport class Material {\n  @Prop()\n  name: string;\n\n  @Prop({ type: MeasureUnits })\n  measure_by: MeasureUnits;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MaterialController.html":{"url":"controllers/MaterialController.html","title":"controller - MaterialController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MaterialController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/material.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                material\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createMaterialDto: CreateMaterialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMaterialDto\n                                            \n                                                            CreateMaterialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateMaterialDto: UpdateMaterialDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/material/material.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMaterialDto\n                                            \n                                                            UpdateMaterialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { MaterialService } from './material.service';\nimport { CreateMaterialDto } from './dto/create-material.dto';\nimport { UpdateMaterialDto } from './dto/update-material.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('material')\n@Controller('material')\nexport class MaterialController {\n  constructor(private readonly materialService: MaterialService) {}\n\n  @Post()\n  create(@Body() createMaterialDto: CreateMaterialDto) {\n    return this.materialService.create(createMaterialDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.materialService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.materialService.findOne(+id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateMaterialDto: UpdateMaterialDto) {\n    return this.materialService.update(+id, updateMaterialDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.materialService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n    Modules\n    MaterialModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_providers\n\n\n\n\nMaterialService\n\nMaterialService\n\n\n\nMaterialModule\n\nMaterialModule\n\nMaterialModule -->\n\nMaterialService->MaterialModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/material/material.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MaterialService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MaterialController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MaterialService } from './material.service';\nimport { MaterialController } from './material.controller';\n\n@Module({\n  controllers: [MaterialController],\n  providers: [MaterialService],\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MaterialService.html":{"url":"injectables/MaterialService.html","title":"injectable - MaterialService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MaterialService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/material.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createMaterialDto: CreateMaterialDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createMaterialDto\n                                            \n                                                            CreateMaterialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateMaterialDto: UpdateMaterialDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/material/material.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateMaterialDto\n                                            \n                                                            UpdateMaterialDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateMaterialDto } from './dto/create-material.dto';\nimport { UpdateMaterialDto } from './dto/update-material.dto';\n\n@Injectable()\nexport class MaterialService {\n  create(createMaterialDto: CreateMaterialDto) {\n    return 'This action adds a new material';\n  }\n\n  findAll() {\n    return `This action returns all material`;\n  }\n\n  findOne(id: number) {\n    return `This action returns a #${id} material`;\n  }\n\n  update(id: number, updateMaterialDto: UpdateMaterialDto) {\n    return `This action updates a #${id} material`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} material`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Offer.html":{"url":"classes/Offer.html","title":"class - Offer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Offer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/Model/offer.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branches\n                            \n                            \n                                    \n                                from\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Date})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/Model/offer.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport * as mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { Product } from 'src/product/Model/product.model';\n\n@Schema()\nexport class Offer {\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  branches: string[];\n\n  @Prop({ type: Date })\n  from: Date;\n\n  @Prop({ type: Date })\n  to: Date;\n\n  @Prop({ required: true })\n  quantity: number;\n\n  @Prop({ required: true, type: mongoose.Types.ObjectId, ref: Product.name })\n  items: string[];\n\n  @Prop({ required: true })\n  price: number;\n}\n\nexport const OfferSchema = SchemaFactory.createForClass(Offer);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OffersController.html":{"url":"controllers/OffersController.html","title":"controller - OffersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OffersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/offers.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                offers\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findByname\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createOfferDto: CreateOfferDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOfferDto\n                                            \n                                                            CreateOfferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findByname\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByname(offerName: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('search')\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offerName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateOfferDto: UpdateOfferDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/offers/offers.controller.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOfferDto\n                                            \n                                                            UpdateOfferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Query,\n} from '@nestjs/common';\nimport { OffersService } from './offers.service';\nimport { CreateOfferDto } from './dto/create-offer.dto';\nimport { UpdateOfferDto } from './dto/update-offer.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('offers')\n@Controller('offers')\nexport class OffersController {\n  constructor(private readonly offersService: OffersService) {}\n\n  @Post()\n  create(@Body() createOfferDto: CreateOfferDto) {\n    return this.offersService.create(createOfferDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.offersService.findAll();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.offersService.findOneById(id);\n  }\n\n  @Get('search')\n  findByname(@Query('name') offerName: string) {\n    return this.offersService.findOfferByName(offerName);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateOfferDto: UpdateOfferDto) {\n    return this.offersService.update(id, updateOfferDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.offersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OffersModule.html":{"url":"modules/OffersModule.html","title":"module - OffersModule","body":"\n                   \n\n\n\n\n    Modules\n    OffersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OffersModule\n\n\n\ncluster_OffersModule_providers\n\n\n\ncluster_OffersModule_exports\n\n\n\n\nOffersService \n\nOffersService \n\n\n\nOffersModule\n\nOffersModule\n\nOffersService  -->\n\nOffersModule->OffersService \n\n\n\n\n\nOffersService\n\nOffersService\n\nOffersModule -->\n\nOffersService->OffersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/offers/offers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OffersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OffersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OffersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OffersService } from './offers.service';\nimport { OffersController } from './offers.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Offer, OfferSchema } from './Model/offer.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Offer.name, schema: OfferSchema }]),\n  ],\n  controllers: [OffersController],\n  providers: [OffersService],\n  exports: [OffersService],\n})\nexport class OffersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OffersService.html":{"url":"injectables/OffersService.html","title":"injectable - OffersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OffersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/offers.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOfferByName\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                IsValidCouponByID\n                            \n                            \n                                    Async\n                                IsValidOfferInBranchByID\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(offerRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/offers/offers.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        offerRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createOfferDto: CreateOfferDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createOfferDto\n                                            \n                                                            CreateOfferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOfferByName\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOfferByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidCouponByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidCouponByID(offerId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                offerId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsValidOfferInBranchByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsValidOfferInBranchByID(OfferId: string, branchId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                OfferId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                branchId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateOfferDto: UpdateOfferDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/offers/offers.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateOfferDto\n                                            \n                                                            UpdateOfferDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateOfferDto } from './dto/create-offer.dto';\nimport { UpdateOfferDto } from './dto/update-offer.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Offer } from './Model/offer.model';\n\n@Injectable()\nexport class OffersService {\n  constructor(\n    @InjectModel(Offer.name) private readonly offerRepo: Model,\n  ) {}\n  async create(createOfferDto: CreateOfferDto) {\n    try {\n      const newOffer = new this.offerRepo(createOfferDto);\n      return await newOffer.save();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.offerRepo.find().exec();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.offerRepo.findById(id);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findOfferByName(name: string) {\n    try {\n      return await this.offerRepo.find({ name }).exec();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async update(id: string, updateOfferDto: UpdateOfferDto) {\n    try {\n      return await this.offerRepo.findByIdAndUpdate(id, updateOfferDto);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async remove(id: string) {\n    try {\n      return await this.offerRepo.findByIdAndDelete(id);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async IsValidCouponByID(offerId: string) {\n    try {\n      const currentDate = new Date();\n\n      const validOffer = await this.offerRepo\n        .findOne({\n          _id: offerId,\n          quantity: { $gt: 0 },\n          from: { $lte: currentDate },\n          to: { $gte: currentDate },\n        })\n        .exec();\n\n      return !!validOffer;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async IsValidOfferInBranchByID(OfferId: string, branchId: string) {\n    try {\n      const currentDate = new Date();\n\n      const validOffer = await this.offerRepo\n        .findOne({\n          _id: OfferId,\n          quantity: { $gt: 0 },\n          from: { $lte: currentDate },\n          to: { $gte: currentDate },\n          branches: branchId,\n        })\n        .exec();\n\n      return !!validOffer;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/order.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                approvedby\n                            \n                            \n                                    \n                                branch\n                            \n                            \n                                    \n                                coupon\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                customer\n                            \n                            \n                                    \n                                daily_orderid\n                            \n                            \n                                    \n                                discount\n                            \n                            \n                                    \n                                items\n                            \n                            \n                                    \n                                kitchen_notes\n                            \n                            \n                                    \n                                offers\n                            \n                            \n                                    \n                                order_status\n                            \n                            \n                                    \n                                order_type\n                            \n                            \n                                    \n                                payment\n                            \n                            \n                                    \n                                percent_discount\n                            \n                            \n                                    \n                                readyat\n                            \n                            \n                                    \n                                tax_percent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        approvedby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:73\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        coupon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        customer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        daily_orderid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OrderItems[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        kitchen_notes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        offers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        order_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OrderType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, enum: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        percent_discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        readyat\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        tax_percent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: 14, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:58\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport * as mongoose from 'mongoose';\nimport { OrderType } from '../enums/Order-Types.enums';\nimport { User } from 'src/users/Model/user.model';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { Product } from 'src/product/Model/product.model';\nimport { Customer } from 'src/customer/Model/customer.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { Payment } from 'src/payment/Model/payment.model';\nimport { Coupon, CouponSchema } from 'src/coupon/Model/coupon.model';\nimport { Offer, OfferSchema } from 'src/offers/Model/offer.model';\nimport { DelivereyOrder } from 'src/delivery/Model/delivery.model';\nimport { Model } from 'mongoose';\n\n@Schema()\nexport class OrderItems {\n  @Prop()\n  verbose_name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Product.name })\n  item: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  note: string;\n\n  @Prop()\n  extra: Product[];\n\n  @Prop()\n  without_component: ProductComponents[];\n}\n\n@Schema({ timestamps: true, discriminatorKey: 'order_type' })\nexport class Order {\n  @Prop()\n  daily_orderid: number;\n\n  @Prop({ type: [OrderItems] })\n  items: OrderItems[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n\n  @Prop({\n    required: true,\n    enum: Object.values(OrderType),\n  })\n  order_type: OrderType;\n\n  @Prop()\n  readyat: Date;\n\n  @Prop({ default: 14, required: true })\n  tax_percent: number;\n\n  @Prop()\n  discount: number;\n\n  @Prop()\n  percent_discount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Offer.name })\n  offers: string[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Coupon.name })\n  coupon: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  approvedby?: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ default: OrderStatus.PREPARING, required: true })\n  order_status: OrderStatus;\n\n  @Prop()\n  kitchen_notes: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Customer.name })\n  customer: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Payment.name })\n  payment: Payment;\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n@Schema()\nexport class DelivereyOrderType extends Order {\n  @Prop({ type: DelivereyOrder })\n  delivery: DelivereyOrder;\n}\n\nexport const DelivereyOrderTypeSchema =\n  SchemaFactory.createForClass(DelivereyOrderType);\n\n@Schema()\nexport class TakeAwayOrder extends Order {}\n\nexport const TakeAwayOrderSchema = SchemaFactory.createForClass(TakeAwayOrder);\n\n@Schema()\nexport class DineinOrder extends Order {\n  @Prop({ default: 30 })\n  service_price: number;\n\n  @Prop()\n  table_number: string;\n}\n\nexport const DineinOrderSchema = SchemaFactory.createForClass(DineinOrder);\n\nOrderSchema.pre('save', async function (next) {\n  if (this.isNew) {\n    const todayStart = new Date();\n    todayStart.setHours(0, 0, 0, 0);\n\n    const todayEnd = new Date();\n    todayEnd.setHours(23, 59, 59, 999);\n\n    const model = this.constructor as Model;\n\n    const count = await model\n      .countDocuments({\n        branch: this.branch,\n        createdAt: {\n          $gte: todayStart,\n          $lt: todayEnd,\n        },\n      })\n      .exec();\n\n    this.daily_orderid = count + 1;\n  }\n\n  next();\n});\n\n// const OfferModel = mongoose.model(Offer.name, OfferSchema);\n// const CouponModel = mongoose.model(Coupon.name, CouponSchema);\n\n// OrderSchema.virtual('total_without_tax').get(async function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   if (this.offers) {\n//     this.offers.forEach(async (offerid) => {\n//       const offer = await OfferModel.findById(offerid).exec();\n//       total += offer.price;\n//     });\n//   }\n\n//   if (this.coupon) {\n//     const coupon = await CouponModel.findById(this.coupon).exec();\n//     const couponDiscount = total * (coupon.percent_discount / 100);\n//     total -= couponDiscount;\n//   }\n\n//   if (this.discount) {\n//     total -= this.discount;\n//   }\n//   if (this.percent_discount) {\n//     const percent = total * (this.percent_discount / 100);\n//     total -= percent;\n//   }\n//   return total;\n// });\n\n// // And also use it within the virtual for total, including the tax calculation\n// OrderSchema.virtual('total').get(function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   const orderTax = total * (this.tax_percent / 100);\n//   return total + orderTax;\n// });\n\nOrderSchema.set('toJSON', { virtuals: true });\nOrderSchema.set('toObject', { virtuals: true });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrderController.html":{"url":"controllers/OrderController.html","title":"controller - OrderController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrderController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                order\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createDelivereyOrder\n                            \n                            \n                                    \n                                createDineInOrder\n                            \n                            \n                                    \n                                    Async\n                                createTakeAwayOrder\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOne\n                            \n                            \n                                    \n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createDelivereyOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDelivereyOrder(branchid: string, createOrderDto: CreateDelivereyOrderDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':branchid/deliverey')\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateDelivereyOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createDineInOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDineInOrder(branchid: string, createOrderDto: CreateDineInOrderDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':branchid/dinein')\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateDineInOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        createTakeAwayOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    createTakeAwayOrder(branchid: string, createOrderDto: CreateTakeAwayOrderDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':branchid/takeaway')\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createOrderDto\n                                            \n                                                            CreateTakeAwayOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/order/order.controller.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  Req,\n  // UseGuards,\n  NotFoundException,\n} from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateTakeAwayOrderDto } from './dto/takeaway/create-takeaway-order.dto';\nimport { CreateDineInOrderDto } from './dto/dinein/create-dinein-order.dto';\nimport { CreateDelivereyOrderDto } from './dto/delivery/create-deliverey-order.dto';\nimport { IsEmployeeGuard } from 'src/employee/guards/IsEmployee.guard';\nimport { CreateOrderInterface } from './Interface/Create-Order.interface';\nimport { OrderType } from './enums/Order-Types.enums';\nimport { BranchService } from 'src/branch/branch.service';\nimport { TakeAwayOrderInterface } from './Interface/TakeAway-Order.interfce';\n\n@ApiTags('order')\n// @UseGuards(IsEmployeeGuard)\n@Controller('order')\nexport class OrderController {\n  constructor(\n    private readonly orderService: OrderService,\n    private branchService: BranchService,\n  ) {}\n\n  @Post(':branchid/takeaway')\n  async createTakeAwayOrder(\n    @Param('branchid') branchid: string,\n    @Body() createOrderDto: CreateTakeAwayOrderDto,\n    @Req() req: Request,\n  ) {\n    const branch = await this.branchService.findOneByID(branchid);\n    if (!branch) throw new NotFoundException('Not Valid Branch');\n    const data: TakeAwayOrderInterface = {\n      branch: branchid,\n      createby: (req as any).user._id,\n      order_type: OrderType.TAKEAWAY,\n      ...createOrderDto,\n    };\n    return this.orderService.CreateTakeAwayOrder(data);\n  }\n\n  @Post(':branchid/deliverey')\n  createDelivereyOrder(\n    @Param('branchid') branchid: string,\n    @Body() createOrderDto: CreateDelivereyOrderDto,\n    @Req() req: Request,\n  ) {\n    const data: CreateOrderInterface = {\n      branch: branchid,\n      createby: (req as any).user._id,\n      order_type: OrderType.DELIVEREY,\n      ...createOrderDto,\n    };\n    return this.orderService.CreateOrder(data);\n  }\n\n  @Post(':branchid/dinein')\n  createDineInOrder(\n    @Param('branchid') branchid: string,\n    @Body() createOrderDto: CreateDineInOrderDto,\n    @Req() req: Request,\n  ) {\n    const data: CreateOrderInterface = {\n      branch: branchid,\n      createby: (req as any).user._id,\n      order_type: OrderType.DINEIN,\n      ...createOrderDto,\n    };\n    return this.orderService.CreateOrder(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.orderService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.orderService.findOneByID(id);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.orderService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderItems.html":{"url":"classes/OrderItems.html","title":"class - OrderItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/order.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                extra\n                            \n                            \n                                    \n                                item\n                            \n                            \n                                    \n                                note\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                verbose_name\n                            \n                            \n                                    \n                                without_component\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        extra\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        note\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        verbose_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        without_component\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/order/Model/order.model.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport * as mongoose from 'mongoose';\nimport { OrderType } from '../enums/Order-Types.enums';\nimport { User } from 'src/users/Model/user.model';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { Product } from 'src/product/Model/product.model';\nimport { Customer } from 'src/customer/Model/customer.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { Payment } from 'src/payment/Model/payment.model';\nimport { Coupon, CouponSchema } from 'src/coupon/Model/coupon.model';\nimport { Offer, OfferSchema } from 'src/offers/Model/offer.model';\nimport { DelivereyOrder } from 'src/delivery/Model/delivery.model';\nimport { Model } from 'mongoose';\n\n@Schema()\nexport class OrderItems {\n  @Prop()\n  verbose_name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Product.name })\n  item: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  note: string;\n\n  @Prop()\n  extra: Product[];\n\n  @Prop()\n  without_component: ProductComponents[];\n}\n\n@Schema({ timestamps: true, discriminatorKey: 'order_type' })\nexport class Order {\n  @Prop()\n  daily_orderid: number;\n\n  @Prop({ type: [OrderItems] })\n  items: OrderItems[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n\n  @Prop({\n    required: true,\n    enum: Object.values(OrderType),\n  })\n  order_type: OrderType;\n\n  @Prop()\n  readyat: Date;\n\n  @Prop({ default: 14, required: true })\n  tax_percent: number;\n\n  @Prop()\n  discount: number;\n\n  @Prop()\n  percent_discount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Offer.name })\n  offers: string[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Coupon.name })\n  coupon: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  approvedby?: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ default: OrderStatus.PREPARING, required: true })\n  order_status: OrderStatus;\n\n  @Prop()\n  kitchen_notes: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Customer.name })\n  customer: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Payment.name })\n  payment: Payment;\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n@Schema()\nexport class DelivereyOrderType extends Order {\n  @Prop({ type: DelivereyOrder })\n  delivery: DelivereyOrder;\n}\n\nexport const DelivereyOrderTypeSchema =\n  SchemaFactory.createForClass(DelivereyOrderType);\n\n@Schema()\nexport class TakeAwayOrder extends Order {}\n\nexport const TakeAwayOrderSchema = SchemaFactory.createForClass(TakeAwayOrder);\n\n@Schema()\nexport class DineinOrder extends Order {\n  @Prop({ default: 30 })\n  service_price: number;\n\n  @Prop()\n  table_number: string;\n}\n\nexport const DineinOrderSchema = SchemaFactory.createForClass(DineinOrder);\n\nOrderSchema.pre('save', async function (next) {\n  if (this.isNew) {\n    const todayStart = new Date();\n    todayStart.setHours(0, 0, 0, 0);\n\n    const todayEnd = new Date();\n    todayEnd.setHours(23, 59, 59, 999);\n\n    const model = this.constructor as Model;\n\n    const count = await model\n      .countDocuments({\n        branch: this.branch,\n        createdAt: {\n          $gte: todayStart,\n          $lt: todayEnd,\n        },\n      })\n      .exec();\n\n    this.daily_orderid = count + 1;\n  }\n\n  next();\n});\n\n// const OfferModel = mongoose.model(Offer.name, OfferSchema);\n// const CouponModel = mongoose.model(Coupon.name, CouponSchema);\n\n// OrderSchema.virtual('total_without_tax').get(async function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   if (this.offers) {\n//     this.offers.forEach(async (offerid) => {\n//       const offer = await OfferModel.findById(offerid).exec();\n//       total += offer.price;\n//     });\n//   }\n\n//   if (this.coupon) {\n//     const coupon = await CouponModel.findById(this.coupon).exec();\n//     const couponDiscount = total * (coupon.percent_discount / 100);\n//     total -= couponDiscount;\n//   }\n\n//   if (this.discount) {\n//     total -= this.discount;\n//   }\n//   if (this.percent_discount) {\n//     const percent = total * (this.percent_discount / 100);\n//     total -= percent;\n//   }\n//   return total;\n// });\n\n// // And also use it within the virtual for total, including the tax calculation\n// OrderSchema.virtual('total').get(function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   const orderTax = total * (this.tax_percent / 100);\n//   return total + orderTax;\n// });\n\nOrderSchema.set('toJSON', { virtuals: true });\nOrderSchema.set('toObject', { virtuals: true });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrderModule.html":{"url":"modules/OrderModule.html","title":"module - OrderModule","body":"\n                   \n\n\n\n\n    Modules\n    OrderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_OrderModule_exports\n\n\n\ncluster_OrderModule_imports\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nBranchModule->OrderModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nOrderModule -->\n\nEmployeeModule->OrderModule\n\n\n\n\n\nOffersModule\n\nOffersModule\n\nOrderModule -->\n\nOffersModule->OrderModule\n\n\n\n\n\nOrderService \n\nOrderService \n\nOrderService  -->\n\nOrderModule->OrderService \n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/order/order.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrderController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            EmployeeModule\n                        \n                        \n                            OffersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrderService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrderService } from './order.service';\nimport { OrderController } from './order.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport {\n  DelivereyOrderType,\n  DelivereyOrderTypeSchema,\n  DineinOrder,\n  DineinOrderSchema,\n  Order,\n  OrderSchema,\n  TakeAwayOrder,\n  TakeAwayOrderSchema,\n} from './Model/order.model';\nimport { BranchModule } from 'src/branch/branch.module';\nimport { EmployeeModule } from 'src/employee/employee.module';\nimport { OffersModule } from 'src/offers/offers.module';\nimport { OrderType } from './enums/Order-Types.enums';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      // {\n      //   name: Order.name,\n      //   schema: OrderSchema,\n      //   discriminators: [\n      //     {\n      //       name: DineinOrder.name,\n      //       schema: DineinOrderSchema,\n      //     },\n      //     {\n      //       name: TakeAwayOrder.name,\n      //       schema: TakeAwayOrderSchema,\n      //     },\n      //     {\n      //       name: DelivereyOrderType.name,\n      //       schema: DelivereyOrderTypeSchema,\n      //     },\n      //   ],\n      // },\n      { name: Order.name, schema: OrderSchema },\n      {\n        name: DineinOrder.name,\n        schema: DineinOrderSchema,\n        discriminators: [{ name: OrderType.DINEIN, schema: DineinOrderSchema }],\n      },\n      {\n        name: TakeAwayOrder.name,\n        schema: TakeAwayOrderSchema,\n        discriminators: [\n          { name: OrderType.TAKEAWAY, schema: TakeAwayOrderSchema },\n        ],\n      },\n      {\n        name: DelivereyOrderType.name,\n        schema: DelivereyOrderTypeSchema,\n        discriminators: [\n          { name: OrderType.DELIVEREY, schema: DelivereyOrderTypeSchema },\n        ],\n      },\n    ]),\n    BranchModule,\n    EmployeeModule,\n    OffersModule,\n  ],\n  controllers: [OrderController],\n  providers: [OrderService],\n  exports: [OrderService],\n})\nexport class OrderModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderService.html":{"url":"injectables/OrderService.html","title":"injectable - OrderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/order.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                CreateBaseOrder\n                            \n                            \n                                    Async\n                                CreateOrder\n                            \n                            \n                                    Async\n                                CreateTakeAwayOrder\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllPendingOrder\n                            \n                            \n                                    Async\n                                findAllPendingOrderByBranchID\n                            \n                            \n                                    Async\n                                findAllPendingOrderByUserID\n                            \n                            \n                                    Async\n                                findOneByID\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                UpdateOrderStatusByOrderID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(orderRepo: Model, TakeAwayRepo: Model, DineInRepo: Model, DelivereyRepo: Model, branchService: BranchService, employeeService: EmployeeService)\n                    \n                \n                        \n                            \n                                Defined in src/order/order.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        orderRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        TakeAwayRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        DineInRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        DelivereyRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        branchService\n                                                  \n                                                        \n                                                                        BranchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        employeeService\n                                                  \n                                                        \n                                                                        EmployeeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CreateBaseOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    CreateBaseOrder(CreateOrderData: CreateBaseOrderDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateOrderData\n                                            \n                                                            CreateBaseOrderDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CreateOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    CreateOrder(CreateOrderData: CreateOrderInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateOrderData\n                                            \n                                                            CreateOrderInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CreateTakeAwayOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    CreateTakeAwayOrder(CreateOrderData: TakeAwayOrderInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                CreateOrderData\n                                            \n                                                            TakeAwayOrderInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPendingOrder\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPendingOrderByBranchID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrderByBranchID(branchid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllPendingOrderByUserID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllPendingOrderByUserID(userid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:139\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateOrderStatusByOrderID\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateOrderStatusByOrderID(orderid: string, newStatus: OrderStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/order/order.service.ts:150\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                orderid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newStatus\n                                            \n                                                            OrderStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport mongoose, { Model } from 'mongoose';\nimport {\n  DelivereyOrderType,\n  DineinOrder,\n  Order,\n  TakeAwayOrder,\n} from './Model/order.model';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreateBaseOrderDto } from './dto/base-order.dto';\nimport { BranchService } from 'src/branch/branch.service';\nimport { EmployeeService } from 'src/employee/employee.service';\nimport { OrderStatus } from './enums/Order-Status.enums';\nimport { CreateOrderInterface } from './Interface/Create-Order.interface';\nimport { TakeAwayOrderInterface } from './Interface/TakeAway-Order.interfce';\n\n@Injectable()\nexport class OrderService {\n  constructor(\n    @InjectModel(Order.name) private readonly orderRepo: Model,\n    @InjectModel(TakeAwayOrder.name)\n    private readonly TakeAwayRepo: Model,\n    @InjectModel(DineinOrder.name)\n    private readonly DineInRepo: Model,\n    @InjectModel(DelivereyOrderType.name)\n    private readonly DelivereyRepo: Model,\n    private branchService: BranchService,\n    private employeeService: EmployeeService,\n  ) {}\n\n  async CreateBaseOrder(CreateOrderData: CreateBaseOrderDto) {\n    try {\n      const newOrder = new this.orderRepo(CreateOrderData);\n      return await newOrder.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async CreateOrder(CreateOrderData: CreateOrderInterface) {\n    // try {\n    //   const emp = await this.employeeService.findEmpByUserId(\n    //     CreateOrderData.createby,\n    //   );\n    //   //  Check If this is Employee\n    //   if (emp) {\n    //     // Employee But Check His Working Location\n    //     if (\n    //       new mongoose.Types.ObjectId(emp.working_in) ==\n    //       new mongoose.Types.ObjectId(CreateOrderData.branch)\n    //     ) {\n    //       CreateOrderData.approvedby = CreateOrderData.createby;\n    //       if (CreateOrderData.order_type == OrderType.TAKEAWAY) {\n    //         return this.CreateTakeAwayOrder(CreateOrderData);\n    //       }\n    //     }\n    //     // Employee But Working in Another Location\n    //     else {\n    //       CreateOrderData.order_status = OrderStatus.PENDING;\n    //       if (CreateOrderData.order_type == OrderType.TAKEAWAY) {\n    //         return this.CreateTakeAwayOrder(CreateOrderData);\n    //       }\n    //     }\n    //     // User But Not An Employee\n    //   } else {\n    //     CreateOrderData.order_status = OrderStatus.PENDING;\n    //     if (CreateOrderData.order_type == OrderType.TAKEAWAY) {\n    //       return this.CreateTakeAwayOrder(CreateOrderData);\n    //     }\n    //   }\n    // } catch (err) {\n    //   throw err;\n    // }\n  }\n\n  async CreateTakeAwayOrder(CreateOrderData: TakeAwayOrderInterface) {\n    try {\n      const emp = await this.employeeService.findEmpByUserId(\n        CreateOrderData.createby,\n      );\n      //  Check If this is Employee\n      if (emp) {\n        // Employee But Check His Working Location\n        if (\n          new mongoose.Types.ObjectId(emp.working_in) ==\n          new mongoose.Types.ObjectId(CreateOrderData.branch)\n        ) {\n          CreateOrderData.approvedby = CreateOrderData.createby;\n          const order = new this.TakeAwayRepo(CreateOrderData);\n          return await order.save();\n        }\n      }\n      CreateOrderData.order_status = OrderStatus.PENDING;\n      const order = new this.TakeAwayRepo(CreateOrderData);\n      return await order.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.orderRepo.find().populate('items.item').exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneByID(id: string) {\n    try {\n      return this.orderRepo.findById(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllPendingOrder() {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.PENDING })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllPendingOrderByBranchID(branchid: string) {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.PENDING, branch: branchid })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAllPendingOrderByUserID(userid: string) {\n    try {\n      return await this.orderRepo\n        .find({ order_status: OrderStatus.PENDING, createby: userid })\n        .populate('items.item')\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateOrderStatusByOrderID(orderid: string, newStatus: OrderStatus) {\n    try {\n      return await this.orderRepo.findByIdAndUpdate(orderid, {\n        $set: { order_status: newStatus },\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async remove(id: string) {\n    try {\n      return await this.orderRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payment.html":{"url":"classes/Payment.html","title":"class - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/Model/payment.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                amount\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                payment_id\n                            \n                            \n                                    \n                                payment_status\n                            \n                            \n                                    \n                                payment_type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        payment_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PaymentType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/payment/Model/payment.model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { PaymentType } from '../enums/payment-type.enums';\nimport { PaymentStatus } from '../enums/payment-status.enums';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\n\n@Schema({ timestamps: true })\nexport class Payment {\n  @Prop({ required: true, default: PaymentType.CASH })\n  payment_type: PaymentType;\n\n  @Prop({ required: true, default: PaymentStatus.PENDING })\n  payment_status: PaymentStatus;\n\n  @Prop()\n  payment_id: string;\n\n  @Prop()\n  amount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n}\n\nexport const PaymentSchema = SchemaFactory.createForClass(Payment);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPaymentDto: CreatePaymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPaymentDto\n                                            \n                                                            CreatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePaymentDto: UpdatePaymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/payment/payment.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePaymentDto\n                                            \n                                                            UpdatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { UpdatePaymentDto } from './dto/update-payment.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('payment')\n@Controller('payment')\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  @Post()\n  create(@Body() createPaymentDto: CreatePaymentDto) {\n    return this.paymentService.create(createPaymentDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.paymentService.findAll();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.paymentService.findOneById(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePaymentDto: UpdatePaymentDto) {\n    return this.paymentService.update(id, updatePaymentDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.paymentService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nPaymentService\n\nPaymentService\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/payment/payment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { PaymentController } from './payment.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Payment, PaymentSchema } from './Model/payment.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Payment.name, schema: PaymentSchema }]),\n  ],\n  controllers: [PaymentController],\n  providers: [PaymentService],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/payment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/payment/payment.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createPaymentDto: CreatePaymentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPaymentDto\n                                            \n                                                            CreatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updatePaymentDto: UpdatePaymentDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/payment/payment.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updatePaymentDto\n                                            \n                                                            UpdatePaymentDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreatePaymentDto } from './dto/create-payment.dto';\nimport { UpdatePaymentDto } from './dto/update-payment.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Payment } from './Model/payment.model';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class PaymentService {\n  constructor(\n    @InjectModel(Payment.name) private readonly paymentRepo: Model,\n  ) {}\n  async create(createPaymentDto: CreatePaymentDto) {\n    try {\n      const newPayment = new this.paymentRepo(createPaymentDto);\n      return await newPayment.save();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.paymentRepo.find().exec();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.paymentRepo.findById(id).exec();\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async update(id: string, updatePaymentDto: UpdatePaymentDto) {\n    try {\n      return await this.paymentRepo.findByIdAndUpdate(id, updatePaymentDto);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n\n  async remove(id: string) {\n    try {\n      return await this.paymentRepo.findByIdAndDelete(id);\n    } catch (err) {\n      console.log(err);\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/Model/product.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branch\n                            \n                            \n                                    \n                                can_deliver\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                components\n                            \n                            \n                                    \n                                images\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                price\n                            \n                            \n                                    \n                                production_price\n                            \n                            \n                                    \n                                size\n                            \n                            \n                                    \n                                subcategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        can_deliver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        production_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        subcategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSubCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/Model/product.model.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport * as mongoose from 'mongoose';\nimport { ProductCategory } from '../enums/product-category.enums';\nimport { ProductSubCategory } from '../enums/product-subcategory.enum';\nimport { ProductSize } from '../enums/size.enum';\nimport { ProductComponents } from '../enums/product-components.enum';\n\n@Schema({ timestamps: true })\nexport class Product {\n  @Prop()\n  name: string;\n\n  @Prop()\n  price: number;\n\n  @Prop()\n  production_price: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n\n  @Prop()\n  category: ProductCategory;\n\n  @Prop()\n  subcategory: ProductSubCategory;\n\n  @Prop()\n  size: ProductSize;\n\n  @Prop()\n  components: ProductComponents[];\n\n  @Prop()\n  images: string[];\n\n  @Prop({ default: true })\n  can_deliver: boolean;\n}\n\nexport const ProductSchema = SchemaFactory.createForClass(Product);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                findAll\n                            \n                            \n                                    \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                    \n                                findProductbyBranchId\n                            \n                            \n                                    \n                                    \n                                findProductbyBranchIdandCategory\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findProductbyBranchId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductbyBranchId(branchid: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':branchid')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        findProductbyBranchIdandCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductbyBranchIdandCategory(branchid: string, category: ProductCategory)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':branchid/:category')@Public()\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            ProductCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@Role(Roles.SUPERUSER)\n                \n            \n\n                    \n                        \n                            Defined in src/product/product.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { RolesGuard } from 'src/auth/guards/roles.guard';\nimport { Role } from 'src/auth/decorator/roles.decorator';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { Public } from 'src/auth/decorator/IsPuplic.decorator';\nimport { ProductCategory } from './enums/product-category.enums';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('product')\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Get(':branchid')\n  @Public()\n  findProductbyBranchId(@Param('branchid') branchid: string) {\n    return this.productService.findProductsByBranchID(branchid);\n  }\n\n  @Get(':branchid/:category')\n  @Public()\n  findProductbyBranchIdandCategory(\n    @Param('branchid') branchid: string,\n    @Param('category') category: ProductCategory,\n  ) {\n    return this.productService.findProductsByBranchIDandCategory(\n      branchid,\n      category,\n    );\n  }\n\n  @Post()\n  // @Role(Roles.SUPERUSER)\n  @Public()\n  create(@Body() createProductDto: CreateProductDto) {\n    return this.productService.create(createProductDto);\n  }\n\n  @Get()\n  @Role(Roles.SUPERUSER)\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @Role(Roles.SUPERUSER)\n  findOneByID(@Param('id') id: string) {\n    return this.productService.findOneByID(id);\n  }\n\n  @Patch(':id')\n  @Role(Roles.SUPERUSER)\n  update(@Param('id') id: string, @Body() updateProductDto: UpdateProductDto) {\n    return this.productService.update(id, updateProductDto);\n  }\n\n  @Delete(':id')\n  @Role(Roles.SUPERUSER)\n  remove(@Param('id') id: string) {\n    return this.productService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductService\n\nProductService\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Product, ProductSchema } from './Model/product.model';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: Product.name, schema: ProductSchema }]),\n  ],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByID\n                            \n                            \n                                    Async\n                                findProductsByBranchID\n                            \n                            \n                                    Async\n                                findProductsByBranchIDandCategory\n                            \n                            \n                                    Async\n                                findProductsByBranchIDandCategoryandSubCategory\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createProductDto: CreateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createProductDto\n                                            \n                                                            CreateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductsByBranchID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductsByBranchID(branchid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductsByBranchIDandCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductsByBranchIDandCategory(branchid: string, category: ProductCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            ProductCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findProductsByBranchIDandCategoryandSubCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    findProductsByBranchIDandCategoryandSubCategory(branchid: string, category: ProductCategory, subcategory: ProductSubCategory)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                category\n                                            \n                                                            ProductCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subcategory\n                                            \n                                                            ProductSubCategory\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateProductDto: UpdateProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/product/product.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateProductDto\n                                            \n                                                            UpdateProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Model } from 'mongoose';\nimport { Product } from './Model/product.model';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ProductCategory } from './enums/product-category.enums';\nimport { ProductSubCategory } from './enums/product-subcategory.enum';\n\n@Injectable()\nexport class ProductService {\n  constructor(@InjectModel(Product.name) private productRepo: Model) {}\n\n  async create(createProductDto: CreateProductDto): Promise {\n    try {\n      const product = new this.productRepo(createProductDto);\n      return await product.save();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async findAll(): Promise {\n    try {\n      return await this.productRepo.find().exec();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  async findProductsByBranchID(branchid: string): Promise {\n    try {\n      return await this.productRepo.find({ branch: branchid }).exec();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async findProductsByBranchIDandCategory(\n    branchid: string,\n    category: ProductCategory,\n  ): Promise {\n    try {\n      return await this.productRepo.find({ branch: branchid, category }).exec();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async findProductsByBranchIDandCategoryandSubCategory(\n    branchid: string,\n    category: ProductCategory,\n    subcategory: ProductSubCategory,\n  ): Promise {\n    try {\n      return await this.productRepo\n        .find({ branch: branchid, category, subcategory })\n        .exec();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async findOneByID(id: string): Promise {\n    try {\n      return await this.productRepo.findById(id).exec();\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async update(\n    id: string,\n    updateProductDto: UpdateProductDto,\n  ): Promise {\n    try {\n      return await this.productRepo.findByIdAndUpdate(id, updateProductDto);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async remove(id: string): Promise {\n    try {\n      return await this.productRepo.findByIdAndDelete(id);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RTGuard.html":{"url":"classes/RTGuard.html","title":"class - RTGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RTGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/refresh-tpken.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt-refresh')\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/refresh-tpken.guard.ts:3\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AuthGuard } from '@nestjs/passport';\n\nexport class RTGuard extends AuthGuard('jwt-refresh') {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesGuard.html":{"url":"injectables/RolesGuard.html","title":"injectable - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/guards/roles.guard.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AuthGuard('jwt')\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflactor: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/roles.guard.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflactor\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/roles.guard.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ROLES_KEYS } from '../decorator/roles.decorator';\nimport { Roles } from '../enums/roles.enums';\n\n@Injectable()\nexport class RolesGuard extends AuthGuard('jwt') {\n  constructor(private reflactor: Reflector) {\n    super();\n  }\n  async canActivate(context: ExecutionContext) {\n    try {\n      const isPublic = this.reflactor.getAllAndOverride(ROLES_KEYS, [\n        context.getClass(),\n        context.getHandler(),\n      ]);\n      const user = context.switchToHttp().getRequest().user;\n      if (user) {\n        return user.roles.some((role) => isPublic.includes(role));\n      }\n      return false;\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInByEmailDto.html":{"url":"classes/SignInByEmailDto.html","title":"class - SignInByEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInByEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/SignIn-by-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'ayani@gmail.com', required: true})@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/SignIn-by-email.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'mypassword', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/SignIn-by-email.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class SignInByEmailDto {\n  @ApiProperty({\n    example: 'ayani@gmail.com',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    example: 'mypassword',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Stock.html":{"url":"classes/Stock.html","title":"class - Stock","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Stock\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/stock.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branch\n                            \n                            \n                                    \n                                gard\n                            \n                            \n                                    \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/stock.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        gard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StockGard[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/stock.model.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StockItemslogs[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/stock.model.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { StockItemslogs } from './Stock-item-logs.model';\nimport { StockGard } from './Stock-Gard.model';\n\n@Schema({ timestamps: true })\nexport class Stock {\n  @Prop({\n    type: mongoose.Types.ObjectId,\n    ref: Branch.name,\n    required: true,\n    unique: true,\n  })\n  branch: string;\n\n  @Prop({ type: [StockItemslogs] })\n  items: StockItemslogs[];\n\n  @Prop({ type: [StockGard] })\n  gard: StockGard[];\n}\n\nexport const StockSchema = SchemaFactory.createForClass(Stock);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockController.html":{"url":"controllers/StockController.html","title":"controller - StockController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createStockDto: CreateStockDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStockDto\n                                            \n                                                            CreateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateStockDto: UpdateStockDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStockDto\n                                            \n                                                            UpdateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { StockService } from '../service/stock.service';\nimport { CreateStockDto } from '../dto/Stock/create-stock.dto';\nimport { UpdateStockDto } from '../dto/Stock/update-stock.dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Stock')\n@Controller('stock')\nexport class StockController {\n  constructor(private readonly stockService: StockService) {}\n\n  @Post()\n  create(@Body() createStockDto: CreateStockDto) {\n    return this.stockService.createStock(createStockDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.stockService.findAll();\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.stockService.findOneByID(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateStockDto: UpdateStockDto) {\n    return this.stockService.update(id, updateStockDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.stockService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockGard.html":{"url":"classes/StockGard.html","title":"class - StockGard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockGard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-Gard.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                items\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Gard.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Gard.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { StockItemQuantity } from './Stock-item-quantity.model';\n\n@Schema({ timestamps: true })\nexport class StockGard {\n  @Prop({\n    type: mongoose.Types.ObjectId,\n    ref: StockItemQuantity.name,\n    required: true,\n  })\n  items: string[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n}\n\nexport const StockGardSchema = SchemaFactory.createForClass(StockGard);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockGardInterface.html":{"url":"interfaces/StockGardInterface.html","title":"interface - StockGardInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockGardInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Gard.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stock_items\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock_items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stock_items:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StockGardInterface {\n  stock_items?: string[];\n  branch?: string;\n  createby?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockInterface.html":{"url":"interfaces/StockInterface.html","title":"interface - StockInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branch\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gard\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transaction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gard:     StockGard[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StockGard[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:     StockItemslogs[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     StockItemslogs[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StockGard } from '../Model/Stock-Gard.model';\nimport { StockItemslogs } from '../Model/Stock-item-logs.model';\n\nexport interface StockInterface {\n  branch?: string;\n\n  items?: StockItemslogs[];\n\n  transaction?: string[];\n\n  gard?: StockGard[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockItem.html":{"url":"classes/StockItem.html","title":"class - StockItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-Item.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Item.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Item.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\n\n@Schema()\nexport class StockItem {\n  @Prop({ required: true })\n  name: string;\n\n  @Prop()\n  description: string;\n}\n\nexport const StockItemSchema = SchemaFactory.createForClass(StockItem);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockItemController.html":{"url":"controllers/StockItemController.html","title":"controller - StockItemController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockItemController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock-item.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock-item\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateStockItemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateStockItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateStockItemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdateStockItemDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { StockItemService } from '../service/stock-item.service';\nimport { CreateStockItemDto } from '../dto/Stock Item/create-stock-item.dto';\nimport { UpdateStockItemDto } from '../dto/Stock Item/update-Stock-Item.dto';\n\n@ApiTags('Stock Item')\n@Controller('stock-item')\nexport class StockItemController {\n  constructor(private readonly stockItemService: StockItemService) {}\n\n  @Post()\n  create(@Body() createDto: CreateStockItemDto) {\n    return this.stockItemService.create(createDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.stockItemService.findAll();\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.stockItemService.findOneById(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateDto: UpdateStockItemDto) {\n    return this.stockItemService.UpdateById(id, updateDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.stockItemService.DeleteById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockItemInterface.html":{"url":"interfaces/StockItemInterface.html","title":"interface - StockItemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockItemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Item.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StockItemInterface {\n  name?: string;\n\n  description?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockItemLogsController.html":{"url":"controllers/StockItemLogsController.html","title":"controller - StockItemLogsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockItemLogsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock-item-logs.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock-item-logs\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateStockItemLogsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item-logs.controller.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateStockItemLogsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item-logs.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item-logs.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item-logs.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateStockItemLogsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-item-logs.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdateStockItemLogsDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { StockItemLogsService } from '../service/stock-item-logs.service';\nimport { CreateStockItemLogsDto } from '../dto/Stock Item Logs/create-Stock-Item-Logs.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { UpdateStockItemLogsDto } from '../dto/Stock Item Logs/update-Stock-item-Logs.dto';\n\n@ApiTags('Stock Item Logs')\n@Controller('stock-item-logs')\nexport class StockItemLogsController {\n  constructor(private readonly stockItemLogsService: StockItemLogsService) {}\n\n  @Post()\n  create(@Body() createDto: CreateStockItemLogsDto) {\n    return this.stockItemLogsService.create(createDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.stockItemLogsService.findAll();\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.stockItemLogsService.findOneById(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateDto: UpdateStockItemLogsDto) {\n    return this.stockItemLogsService.UpdateById(id, updateDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.stockItemLogsService.DeleteById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockItemLogsInterface.html":{"url":"interfaces/StockItemLogsInterface.html","title":"interface - StockItemLogsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockItemLogsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Item-logs.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            branch_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            item\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transaction\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        item:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transaction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transaction:         StockTransactionTYPE\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockTransactionTYPE\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StockTransactionTYPE } from '../enums/Stock-Transactions.enum';\n\nexport interface StockItemLogsInterface {\n  item?: string;\n\n  quantity?: number;\n\n  createby?: string;\n\n  transaction?: StockTransactionTYPE;\n\n  branch_id?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockItemLogsService.html":{"url":"injectables/StockItemLogsService.html","title":"injectable - StockItemLogsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockItemLogsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock-item-logs.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                DeleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                UpdateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockItemLogRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock-item-logs.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockItemLogRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: StockItemLogsInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item-logs.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockItemLogsInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item-logs.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item-logs.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item-logs.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateById(id: string, data: StockItemLogsInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item-logs.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StockItemLogsInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { StockItemslogs } from '../Model/Stock-item-logs.model';\nimport { Model } from 'mongoose';\nimport { StockItemLogsInterface } from '../interfaces/Stock-Item-logs.interface';\n\n@Injectable()\nexport class StockItemLogsService {\n  constructor(\n    @InjectModel(StockItemslogs.name)\n    private readonly stockItemLogRepo: Model,\n  ) {}\n\n  async create(data: StockItemLogsInterface) {\n    try {\n      const newItem = new this.stockItemLogRepo(data);\n      return await newItem.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.stockItemLogRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.stockItemLogRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateById(id: string, data: StockItemLogsInterface) {\n    try {\n      return await this.stockItemLogRepo\n        .findByIdAndUpdate(id, { data }, { new: true })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteById(id: string) {\n    try {\n      return await this.stockItemLogRepo.findByIdAndDelete(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockItemQuantity.html":{"url":"classes/StockItemQuantity.html","title":"class - StockItemQuantity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockItemQuantity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-item-quantity.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                stock_item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-quantity.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock_item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, unique: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-quantity.model.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { StockItem } from './Stock-Item.model';\n\n@Schema()\nexport class StockItemQuantity {\n  @Prop({\n    type: mongoose.Types.ObjectId,\n    ref: StockItem.name,\n    unique: true,\n    required: true,\n  })\n  stock_item: string;\n\n  @Prop({ required: true })\n  quantity: number;\n}\n\nexport const StockItemQuantitySchema =\n  SchemaFactory.createForClass(StockItemQuantity);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockItemQuantityInterface.html":{"url":"interfaces/StockItemQuantityInterface.html","title":"interface - StockItemQuantityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockItemQuantityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Item-quantity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            quantity\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stock_item\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock_item\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stock_item:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StockItemQuantityInterface {\n  stock_item?: string;\n\n  quantity?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockItemService.html":{"url":"injectables/StockItemService.html","title":"injectable - StockItemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockItemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock-item.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                DeleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                UpdateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockItemRepo: Model, connection: mongoose.Connection, stockSerive: StockService)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock-item.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockItemRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    mongoose.Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockSerive\n                                                  \n                                                        \n                                                                        StockService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: StockItemInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockItemInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateById(id: string, data: StockItemInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-item.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StockItemInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel, InjectConnection } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { StockService } from './stock.service';\nimport { StockItemInterface } from '../interfaces/Stock-Item.interface';\nimport { StockItem } from '../Model/Stock-Item.model';\n\n@Injectable()\nexport class StockItemService {\n  constructor(\n    @InjectModel(StockItem.name)\n    private readonly stockItemRepo: Model,\n    @InjectConnection() private readonly connection: mongoose.Connection,\n    private stockSerive: StockService,\n  ) {}\n\n  async create(data: StockItemInterface) {\n    try {\n      const newItem = new this.stockItemRepo(data);\n      return await newItem.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.stockItemRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.stockItemRepo.findById(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateById(id: string, data: StockItemInterface) {\n    try {\n      return await this.stockItemRepo\n        .findByIdAndUpdate(id, { data }, { new: true })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteById(id: string) {\n    try {\n      return await this.stockItemRepo.findByIdAndDelete(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockItemslogs.html":{"url":"classes/StockItemslogs.html","title":"class - StockItemslogs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockItemslogs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-item-logs.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                item\n                            \n                            \n                                    \n                                quantity\n                            \n                            \n                                    \n                                transaction\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-logs.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        item\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-logs.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-logs.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transaction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockTransactionTYPE\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-item-logs.model.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { StockTransactionTYPE } from '../enums/Stock-Transactions.enum';\nimport { StockItem } from './Stock-Item.model';\n\n@Schema({ timestamps: true })\nexport class StockItemslogs {\n  @Prop({ type: mongoose.Types.ObjectId, ref: StockItem.name })\n  item: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  createby: string;\n\n  @Prop()\n  transaction: StockTransactionTYPE;\n}\n\nexport const StockItemslogsSchema =\n  SchemaFactory.createForClass(StockItemslogs);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StockModule.html":{"url":"modules/StockModule.html","title":"module - StockModule","body":"\n                   \n\n\n\n\n    Modules\n    StockModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StockModule\n\n\n\ncluster_StockModule_providers\n\n\n\ncluster_StockModule_imports\n\n\n\ncluster_StockModule_exports\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nStockModule\n\nStockModule\n\nStockModule -->\n\nBranchModule->StockModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nStockModule -->\n\nUsersModule->StockModule\n\n\n\n\n\nStockItemService \n\nStockItemService \n\nStockItemService  -->\n\nStockModule->StockItemService \n\n\n\n\n\nStockService \n\nStockService \n\nStockService  -->\n\nStockModule->StockService \n\n\n\n\n\nStockTransactionService \n\nStockTransactionService \n\nStockTransactionService  -->\n\nStockModule->StockTransactionService \n\n\n\n\n\nStockItemLogsService\n\nStockItemLogsService\n\nStockModule -->\n\nStockItemLogsService->StockModule\n\n\n\n\n\nStockItemService\n\nStockItemService\n\nStockModule -->\n\nStockItemService->StockModule\n\n\n\n\n\nStockService\n\nStockService\n\nStockModule -->\n\nStockService->StockModule\n\n\n\n\n\nStockTransactionService\n\nStockTransactionService\n\nStockModule -->\n\nStockTransactionService->StockModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/stock/stock.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StockItemLogsService\n                        \n                        \n                            StockItemService\n                        \n                        \n                            StockService\n                        \n                        \n                            StockTransactionService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StockController\n                        \n                        \n                            StockItemController\n                        \n                        \n                            StockTransactionController\n                        \n                        \n                            StockItemLogsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StockItemService\n                        \n                        \n                            StockService\n                        \n                        \n                            StockTransactionService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { StockService } from './service/stock.service';\nimport { StockController } from './controller/stock.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { StockItem, StockItemSchema } from './Model/Stock-Item.model';\nimport { Stock, StockSchema } from './Model/stock.model';\nimport {\n  StockTransactionSchema,\n  StockTransaction,\n} from './Model/Stock-Transaction.model';\nimport { StockGard, StockGardSchema } from './Model/Stock-Gard.model';\nimport {\n  StockItemQuantity,\n  StockItemQuantitySchema,\n} from './Model/Stock-item-quantity.model';\nimport {\n  StockItemslogs,\n  StockItemslogsSchema,\n} from './Model/Stock-item-logs.model';\nimport { BranchModule } from 'src/branch/branch.module';\nimport { UsersModule } from 'src/users/users.module';\nimport { StockItemService } from './service/stock-item.service';\nimport { StockTransactionService } from './service/stock-transaction.service';\nimport { StockItemLogsService } from './service/stock-item-logs.service';\nimport { StockItemController } from './controller/stock-item.controller';\nimport { StockTransactionController } from './controller/stock-transaction.controller';\nimport { StockItemLogsController } from './controller/stock-item-logs.controller';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: StockItem.name,\n        schema: StockItemSchema,\n      },\n      {\n        name: Stock.name,\n        schema: StockSchema,\n      },\n      {\n        name: StockItemslogs.name,\n        schema: StockItemslogsSchema,\n      },\n      {\n        name: StockTransaction.name,\n        schema: StockTransactionSchema,\n      },\n      {\n        name: StockGard.name,\n        schema: StockGardSchema,\n      },\n      {\n        name: StockItemQuantity.name,\n        schema: StockItemQuantitySchema,\n      },\n    ]),\n    BranchModule,\n    UsersModule,\n  ],\n  controllers: [\n    StockController,\n    StockItemController,\n    StockTransactionController,\n    StockItemLogsController,\n  ],\n  providers: [\n    StockService,\n    StockItemService,\n    StockTransactionService,\n    StockItemLogsService,\n  ],\n  exports: [StockService, StockItemService, StockTransactionService],\n})\nexport class StockModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockService.html":{"url":"injectables/StockService.html","title":"injectable - StockService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createStock\n                            \n                            \n                                    Async\n                                CreateStockItemlog\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneByID\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockRepo: Model, stockItemLogRepo: Model, connection: mongoose.Connection)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockItemLogRepo\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    mongoose.Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    createStock(createStockDto: CreateStockDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createStockDto\n                                            \n                                                            CreateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CreateStockItemlog\n                        \n                    \n                \n            \n            \n                \n                        \n                    CreateStockItemlog(data: StockItemLogsInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockItemLogsInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateStockDto: UpdateStockDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateStockDto\n                                            \n                                                            UpdateStockDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateStockDto } from '../dto/Stock/create-stock.dto';\nimport { UpdateStockDto } from '../dto/Stock/update-stock.dto';\nimport { InjectConnection, InjectModel } from '@nestjs/mongoose';\nimport { Stock } from '../Model/stock.model';\nimport mongoose, { Model } from 'mongoose';\nimport { StockItemLogsInterface } from '../interfaces/Stock-Item-logs.interface';\nimport { StockItemslogs } from '../Model/Stock-item-logs.model';\n\n@Injectable()\nexport class StockService {\n  constructor(\n    @InjectModel(Stock.name) private readonly stockRepo: Model,\n    @InjectModel(StockItemslogs.name)\n    private readonly stockItemLogRepo: Model,\n    @InjectConnection() private readonly connection: mongoose.Connection,\n  ) {}\n\n  async createStock(createStockDto: CreateStockDto) {\n    try {\n      const newStock = new this.stockRepo(createStockDto);\n      return await newStock.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async CreateStockItemlog(data: StockItemLogsInterface) {\n    try {\n      const { branch_id, ...stocklogdata } = data;\n      const newStckItemLog = new this.stockItemLogRepo(stocklogdata);\n      return await this.stockRepo.findByIdAndUpdate(branch_id, {\n        $push: { items: newStckItemLog },\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.stockRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneByID(id: string) {\n    try {\n      return await this.stockRepo.findById(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async update(id: string, updateStockDto: UpdateStockDto) {\n    try {\n      return await this.stockRepo.findByIdAndUpdate(id, updateStockDto);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async remove(id: string) {\n    try {\n      return await this.stockRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StockTransaction.html":{"url":"classes/StockTransaction.html","title":"class - StockTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StockTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/Model/Stock-Transaction.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                stock_items\n                            \n                            \n                                    \n                                transfer_from\n                            \n                            \n                                    \n                                transfer_to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StockTransactionStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        stock_items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     StockItemQuantity[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transfer_from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        transfer_to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/stock/Model/Stock-Transaction.model.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { StockItemQuantity } from './Stock-item-quantity.model';\nimport { User } from 'src/users/Model/user.model';\nimport { StockTransactionStatus } from '../enums/Stock-Transaction-Status.enum';\n\n@Schema({ timestamps: true })\nexport class StockTransaction {\n  @Prop({\n    type: [StockItemQuantity],\n  })\n  stock_items: StockItemQuantity[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  transfer_from: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  transfer_to: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ required: true, default: StockTransactionStatus.INPROGRESS })\n  status: StockTransactionStatus;\n}\n\nexport const StockTransactionSchema =\n  SchemaFactory.createForClass(StockTransaction);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StockTransactionController.html":{"url":"controllers/StockTransactionController.html","title":"controller - StockTransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StockTransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/controller/stock-transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                stock-transaction\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByID\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createDto: CreateTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createDto\n                                            \n                                                            CreateTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByID(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateDto: UpdateStockTransactionDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/stock/controller/stock-transaction.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateDto\n                                            \n                                                            UpdateStockTransactionDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Param,\n  Patch,\n  Post,\n} from '@nestjs/common';\nimport { StockTransactionService } from '../service/stock-transaction.service';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateTransactionDto } from '../dto/Transaction/create-Transaction.dto';\nimport { UpdateStockTransactionDto } from '../dto/Transaction/update-Transaction.dto';\n\n@ApiTags('Stock Transaction')\n@Controller('stock-transaction')\nexport class StockTransactionController {\n  constructor(\n    private readonly stockTransactionService: StockTransactionService,\n  ) {}\n\n  @Post()\n  create(@Body() createDto: CreateTransactionDto) {\n    return this.stockTransactionService.Create(createDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.stockTransactionService.findAll();\n  }\n\n  @Get(':id')\n  findOneByID(@Param('id') id: string) {\n    return this.stockTransactionService.findByID(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateDto: UpdateStockTransactionDto,\n  ) {\n    return this.stockTransactionService.UpdateById(id, updateDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.stockTransactionService.DeleteById(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StockTransactionInterface.html":{"url":"interfaces/StockTransactionInterface.html","title":"interface - StockTransactionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StockTransactionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/interfaces/Stock-Transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createby\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            stock_items\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transfer_from\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transfer_to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         StockTransactionStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockTransactionStatus\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stock_items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stock_items:         StockItemQuantityInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StockItemQuantityInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transfer_from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transfer_from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transfer_to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transfer_to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { StockTransactionStatus } from '../enums/Stock-Transaction-Status.enum';\nimport { StockItemQuantityInterface } from './Stock-Item-quantity.interface';\n\nexport interface StockTransactionInterface {\n  stock_items?: StockItemQuantityInterface[];\n\n  transfer_from?: string;\n  transfer_to?: string;\n  createby?: string;\n  status?: StockTransactionStatus;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StockTransactionService.html":{"url":"injectables/StockTransactionService.html","title":"injectable - StockTransactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StockTransactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/service/stock-transaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddTransactionToStock\n                            \n                            \n                                    Async\n                                ChangeTransactionStatus\n                            \n                            \n                                    Async\n                                Create\n                            \n                            \n                                    Async\n                                DeleteById\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByID\n                            \n                            \n                                    Async\n                                UpdateById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(stockTransactionRepo: Model, stockItemSerivce: StockItemService, stockItemlogSerivce: StockItemLogsService, connection: mongoose.Connection)\n                    \n                \n                        \n                            \n                                Defined in src/stock/service/stock-transaction.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        stockTransactionRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockItemSerivce\n                                                  \n                                                        \n                                                                        StockItemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stockItemlogSerivce\n                                                  \n                                                        \n                                                                        StockItemLogsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    mongoose.Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddTransactionToStock\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddTransactionToStock(transaction: StockTransactionInterface, createby: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction\n                                            \n                                                            StockTransactionInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createby\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeTransactionStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTransactionStatus(transaction_id, status: StockTransactionStatus, createby: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                transaction_id\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            StockTransactionStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createby\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        Create\n                        \n                    \n                \n            \n            \n                \n                        \n                    Create(data: StockTransactionInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            StockTransactionInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteById\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findByID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findByID(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UpdateById\n                        \n                    \n                \n            \n            \n                \n                        \n                    UpdateById(id: string, data: StockTransactionInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/stock/service/stock-transaction.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            StockTransactionInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConflictException, Injectable } from '@nestjs/common';\nimport { StockTransactionStatus } from '../enums/Stock-Transaction-Status.enum';\nimport { StockTransactionInterface } from '../interfaces/Stock-Transaction.interface';\nimport { InjectModel, InjectConnection } from '@nestjs/mongoose';\nimport mongoose, { Model } from 'mongoose';\nimport { StockTransaction } from '../Model/Stock-Transaction.model';\nimport { StockItemService } from './stock-item.service';\nimport { StockItemLogsInterface } from '../interfaces/Stock-Item-logs.interface';\nimport { StockTransactionTYPE } from '../enums/Stock-Transactions.enum';\nimport { StockItemLogsService } from './stock-item-logs.service';\n\n@Injectable()\nexport class StockTransactionService {\n  constructor(\n    @InjectModel(StockTransaction.name)\n    private readonly stockTransactionRepo: Model,\n    private stockItemSerivce: StockItemService,\n    private stockItemlogSerivce: StockItemLogsService,\n    @InjectConnection() private readonly connection: mongoose.Connection,\n  ) {}\n\n  async Create(data: StockTransactionInterface) {\n    try {\n      const newTransactin = new this.stockTransactionRepo(data);\n      return await newTransactin.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async ChangeTransactionStatus(\n    transaction_id,\n    status: StockTransactionStatus,\n    createby: string,\n  ) {\n    try {\n      const data = await this.findByID(transaction_id);\n      if (data.status === status) {\n        throw new ConflictException('Status Already ', status);\n      } else {\n        if (status == StockTransactionStatus.COMPELETED) {\n          const session = await this.connection.startSession();\n          await session.withTransaction(async () => {\n            this.AddTransactionToStock(transaction_id, createby);\n            await this.UpdateById(transaction_id, { status });\n          });\n          session.endSession();\n          return { MSG: 'Transaction added successfully' };\n        } else {\n          return await this.UpdateById(transaction_id, { status });\n        }\n      }\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async AddTransactionToStock(\n    transaction: StockTransactionInterface,\n    createby: string,\n  ) {\n    try {\n      const session = await this.connection.startSession();\n      await session.withTransaction(async () => {\n        (await transaction).stock_items.forEach(async (item) => {\n          const newLogData: StockItemLogsInterface = {\n            item: item.stock_item,\n            quantity: item.quantity,\n            createby,\n            transaction: StockTransactionTYPE.ADD,\n            branch_id: transaction.transfer_to,\n          };\n          await this.stockItemlogSerivce.create(newLogData);\n        });\n        session.endSession();\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findByID(id: string) {\n    try {\n      return await this.stockTransactionRepo.findById(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.stockTransactionRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async UpdateById(id: string, data: StockTransactionInterface) {\n    try {\n      return await this.stockTransactionRepo\n        .findByIdAndUpdate(id, { data }, { new: true })\n        .exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async DeleteById(id: string) {\n    try {\n      return await this.stockTransactionRepo.findByIdAndDelete(id).exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Supplier.html":{"url":"classes/Supplier.html","title":"class - Supplier","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Supplier\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/Model/supplier.Model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                location\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                phones\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: Location})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/Model/supplier.Model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/Model/supplier.Model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/Model/supplier.Model.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Location } from 'src/location/Model/location.model';\n\n@Schema({ timestamps: true })\nexport class Supplier {\n  @Prop({ required: true, unique: true })\n  name: string;\n\n  @Prop()\n  phones: string[];\n\n  @Prop({ type: Location })\n  location: Location;\n}\n\nexport const SupplierSchema = SchemaFactory.createForClass(Supplier);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SupplierController.html":{"url":"controllers/SupplierController.html","title":"controller - SupplierController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SupplierController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/supplier.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                supplier\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSupplierDto: CreateSupplierDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBody({type: CreateSupplierDto})\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSupplierDto\n                                            \n                                                            CreateSupplierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSupplierDto: UpdateSupplierDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/supplier/supplier.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSupplierDto\n                                            \n                                                            UpdateSupplierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n} from '@nestjs/common';\nimport { SupplierService } from './supplier.service';\nimport { CreateSupplierDto } from './dto/create-supplier.dto';\nimport { UpdateSupplierDto } from './dto/update-supplier.dto';\nimport { ApiBody, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('supplier')\n@Controller('supplier')\nexport class SupplierController {\n  constructor(private readonly supplierService: SupplierService) {}\n\n  @Post()\n  @ApiBody({ type: CreateSupplierDto })\n  create(@Body() createSupplierDto: CreateSupplierDto) {\n    return this.supplierService.create(createSupplierDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.supplierService.findAll();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.supplierService.findOneById(id);\n  }\n\n  @Patch(':id')\n  update(\n    @Param('id') id: string,\n    @Body() updateSupplierDto: UpdateSupplierDto,\n  ) {\n    return this.supplierService.update(id, updateSupplierDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.supplierService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SupplierModule.html":{"url":"modules/SupplierModule.html","title":"module - SupplierModule","body":"\n                   \n\n\n\n\n    Modules\n    SupplierModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SupplierModule\n\n\n\ncluster_SupplierModule_imports\n\n\n\ncluster_SupplierModule_providers\n\n\n\n\nLocationModule\n\nLocationModule\n\n\n\nSupplierModule\n\nSupplierModule\n\nSupplierModule -->\n\nLocationModule->SupplierModule\n\n\n\n\n\nSupplierService\n\nSupplierService\n\nSupplierModule -->\n\nSupplierService->SupplierModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/supplier/supplier.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupplierService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SupplierController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LocationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SupplierService } from './supplier.service';\nimport { SupplierController } from './supplier.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Supplier, SupplierSchema } from './Model/supplier.Model';\nimport { LocationModule } from 'src/location/location.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Supplier.name, schema: SupplierSchema },\n    ]),\n    LocationModule,\n  ],\n  controllers: [SupplierController],\n  providers: [SupplierService],\n})\nexport class SupplierModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupplierService.html":{"url":"injectables/SupplierService.html","title":"injectable - SupplierService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SupplierService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/supplier.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supplierRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/supplier/supplier.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supplierRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createSupplierDto: CreateSupplierDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createSupplierDto\n                                            \n                                                            CreateSupplierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateSupplierDto: UpdateSupplierDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/supplier/supplier.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateSupplierDto\n                                            \n                                                            UpdateSupplierDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CreateSupplierDto } from './dto/create-supplier.dto';\nimport { UpdateSupplierDto } from './dto/update-supplier.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Supplier } from './Model/supplier.Model';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class SupplierService {\n  constructor(\n    @InjectModel(Supplier.name) private readonly supplierRepo: Model,\n  ) {}\n  async create(createSupplierDto: CreateSupplierDto) {\n    try {\n      const newSupplier = new this.supplierRepo(createSupplierDto);\n      return await newSupplier.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.supplierRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.supplierRepo.findById(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async update(id: string, updateSupplierDto: UpdateSupplierDto) {\n    try {\n      return await this.supplierRepo.findByIdAndUpdate(id, updateSupplierDto);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async remove(id: string) {\n    try {\n      return await this.supplierRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TakeAwayOrder.html":{"url":"classes/TakeAwayOrder.html","title":"class - TakeAwayOrder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TakeAwayOrder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Model/order.model.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport * as mongoose from 'mongoose';\nimport { OrderType } from '../enums/Order-Types.enums';\nimport { User } from 'src/users/Model/user.model';\nimport { OrderStatus } from '../enums/Order-Status.enums';\nimport { Product } from 'src/product/Model/product.model';\nimport { Customer } from 'src/customer/Model/customer.model';\nimport { ProductComponents } from 'src/product/enums/product-components.enum';\nimport { Payment } from 'src/payment/Model/payment.model';\nimport { Coupon, CouponSchema } from 'src/coupon/Model/coupon.model';\nimport { Offer, OfferSchema } from 'src/offers/Model/offer.model';\nimport { DelivereyOrder } from 'src/delivery/Model/delivery.model';\nimport { Model } from 'mongoose';\n\n@Schema()\nexport class OrderItems {\n  @Prop()\n  verbose_name: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Product.name })\n  item: string;\n\n  @Prop()\n  quantity: number;\n\n  @Prop()\n  note: string;\n\n  @Prop()\n  extra: Product[];\n\n  @Prop()\n  without_component: ProductComponents[];\n}\n\n@Schema({ timestamps: true, discriminatorKey: 'order_type' })\nexport class Order {\n  @Prop()\n  daily_orderid: number;\n\n  @Prop({ type: [OrderItems] })\n  items: OrderItems[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name })\n  branch: string;\n\n  @Prop({\n    required: true,\n    enum: Object.values(OrderType),\n  })\n  order_type: OrderType;\n\n  @Prop()\n  readyat: Date;\n\n  @Prop({ default: 14, required: true })\n  tax_percent: number;\n\n  @Prop()\n  discount: number;\n\n  @Prop()\n  percent_discount: number;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Offer.name })\n  offers: string[];\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Coupon.name })\n  coupon: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  approvedby?: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ default: OrderStatus.PREPARING, required: true })\n  order_status: OrderStatus;\n\n  @Prop()\n  kitchen_notes: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Customer.name })\n  customer: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Payment.name })\n  payment: Payment;\n}\n\nexport const OrderSchema = SchemaFactory.createForClass(Order);\n\n@Schema()\nexport class DelivereyOrderType extends Order {\n  @Prop({ type: DelivereyOrder })\n  delivery: DelivereyOrder;\n}\n\nexport const DelivereyOrderTypeSchema =\n  SchemaFactory.createForClass(DelivereyOrderType);\n\n@Schema()\nexport class TakeAwayOrder extends Order {}\n\nexport const TakeAwayOrderSchema = SchemaFactory.createForClass(TakeAwayOrder);\n\n@Schema()\nexport class DineinOrder extends Order {\n  @Prop({ default: 30 })\n  service_price: number;\n\n  @Prop()\n  table_number: string;\n}\n\nexport const DineinOrderSchema = SchemaFactory.createForClass(DineinOrder);\n\nOrderSchema.pre('save', async function (next) {\n  if (this.isNew) {\n    const todayStart = new Date();\n    todayStart.setHours(0, 0, 0, 0);\n\n    const todayEnd = new Date();\n    todayEnd.setHours(23, 59, 59, 999);\n\n    const model = this.constructor as Model;\n\n    const count = await model\n      .countDocuments({\n        branch: this.branch,\n        createdAt: {\n          $gte: todayStart,\n          $lt: todayEnd,\n        },\n      })\n      .exec();\n\n    this.daily_orderid = count + 1;\n  }\n\n  next();\n});\n\n// const OfferModel = mongoose.model(Offer.name, OfferSchema);\n// const CouponModel = mongoose.model(Coupon.name, CouponSchema);\n\n// OrderSchema.virtual('total_without_tax').get(async function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   if (this.offers) {\n//     this.offers.forEach(async (offerid) => {\n//       const offer = await OfferModel.findById(offerid).exec();\n//       total += offer.price;\n//     });\n//   }\n\n//   if (this.coupon) {\n//     const coupon = await CouponModel.findById(this.coupon).exec();\n//     const couponDiscount = total * (coupon.percent_discount / 100);\n//     total -= couponDiscount;\n//   }\n\n//   if (this.discount) {\n//     total -= this.discount;\n//   }\n//   if (this.percent_discount) {\n//     const percent = total * (this.percent_discount / 100);\n//     total -= percent;\n//   }\n//   return total;\n// });\n\n// // And also use it within the virtual for total, including the tax calculation\n// OrderSchema.virtual('total').get(function () {\n//   let total = 0;\n//   this.items.forEach((item) => {\n//     const item_price = item.item.price * item.quantity;\n//     total += item_price;\n//   });\n//   const orderTax = total * (this.tax_percent / 100);\n//   return total + orderTax;\n// });\n\nOrderSchema.set('toJSON', { virtuals: true });\nOrderSchema.set('toObject', { virtuals: true });\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TakeAwayOrderInterface.html":{"url":"interfaces/TakeAwayOrderInterface.html","title":"interface - TakeAwayOrderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TakeAwayOrderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/order/Interface/TakeAway-Order.interfce.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateOrderInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            order_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        order_type:         OrderType.TAKEAWAY\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderType.TAKEAWAY\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OrderType } from '../enums/Order-Types.enums';\nimport { CreateOrderInterface } from './Create-Order.interface';\n\nexport interface TakeAwayOrderInterface extends CreateOrderInterface {\n  order_type: OrderType.TAKEAWAY;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Ticket.html":{"url":"classes/Ticket.html","title":"class - Ticket","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Ticket\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/Models/ticket.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                branch\n                            \n                            \n                                    \n                                category\n                            \n                            \n                                    \n                                createby\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                segment\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updates\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createby\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        segment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketSegment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TicketStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TicketUpdates[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket.model.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { TicketStatus } from '../enums/ticket-status.enum';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\nimport { Branch } from 'src/branch/Model/branch.model';\nimport { TicketCategory } from '../enums/Ticket-category.enum';\nimport { TicketUpdates } from './ticket-updates.model';\nimport { TicketSegment } from '../enums/Ticket-Segment.enum';\n\n@Schema({ timestamps: true })\nexport class Ticket {\n  @Prop({ required: true, default: TicketStatus.OPEN })\n  status: TicketStatus;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name, required: true })\n  createby: string;\n\n  @Prop({ type: mongoose.Types.ObjectId, ref: Branch.name, required: true })\n  branch: string;\n\n  @Prop({ required: true, default: TicketCategory.IMPROVE })\n  category: TicketCategory;\n\n  @Prop({ required: true, default: TicketSegment.NORMAL })\n  segment: TicketSegment;\n\n  @Prop({ required: true })\n  description: string;\n\n  @Prop({ type: [TicketUpdates] })\n  updates: TicketUpdates[];\n}\n\nexport const TicketSchema = SchemaFactory.createForClass(Ticket);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TicketController.html":{"url":"controllers/TicketController.html","title":"controller - TicketController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TicketController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                ticket\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                AddTicketUpdates\n                            \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneById\n                            \n                            \n                                    \n                                    \n                                remove\n                            \n                            \n                                    \n                                    \n                                update\n                            \n                            \n                                    \n                                    \n                                updateTicketStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AddTicketUpdates\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddTicketUpdates(ticketid: string, updateTicketDto: AddTicketUpdateDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('updates/:ticketid')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ticketid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTicketDto\n                                            \n                                                            AddTicketUpdateDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(branchid: string, createTicketDto: CreateTicketDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':branchid')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                branchid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createTicketDto\n                                            \n                                                            CreateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Role(Roles.SUPERUSER)@Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTicketDto: UpdateTicketDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Role(Roles.SUPERUSER)@Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTicketDto\n                                            \n                                                            UpdateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updateTicketStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateTicketStatus(ticketid: string, newstatus: TicketStatus)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Role(Roles.SUPERUSER)@Patch('status/:ticketid/:newstatus')\n                \n            \n\n                    \n                        \n                            Defined in src/ticket/ticket.controller.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ticketid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newstatus\n                                            \n                                                            TicketStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n  NotFoundException,\n} from '@nestjs/common';\nimport { TicketService } from './ticket.service';\nimport { CreateTicketDto } from './dto/create-ticket.dto';\nimport { UpdateTicketDto } from './dto/update-ticket.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Request } from 'express';\nimport { TicketInterface } from './interface/Ticket.interface';\nimport { BranchService } from 'src/branch/branch.service';\nimport { AddTicketUpdateDto } from './dto/Add-Ticket-updates.dtos';\nimport { AddTicketUpdatesInterface } from './interface/AddTicket-Updates.inteface';\nimport { Role } from 'src/auth/decorator/roles.decorator';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { TicketStatus } from './enums/ticket-status.enum';\n\n@ApiTags('Tickets')\n@Controller('ticket')\nexport class TicketController {\n  constructor(\n    private readonly ticketService: TicketService,\n    private readonly brnachService: BranchService,\n  ) {}\n\n  @Post(':branchid')\n  async create(\n    @Param('branchid') branchid: string,\n    @Body() createTicketDto: CreateTicketDto,\n    @Req() req: Request,\n  ) {\n    const branch = await this.brnachService.findOneByID(branchid);\n    if (!branch) throw new NotFoundException('UnValid Branch');\n    const data: TicketInterface = {\n      ...createTicketDto,\n      createby: (req as any).user._id,\n      branch: branchid,\n    };\n    return this.ticketService.create(data);\n  }\n\n  @Get()\n  findAll() {\n    return this.ticketService.findAll();\n  }\n\n  @Get(':id')\n  findOneById(@Param('id') id: string) {\n    return this.ticketService.findOneById(id);\n  }\n\n  @Post('updates/:ticketid')\n  AddTicketUpdates(\n    @Param('ticketid') ticketid: string,\n    @Body() updateTicketDto: AddTicketUpdateDto,\n    @Req() req: Request,\n  ) {\n    const data: AddTicketUpdatesInterface = {\n      ...updateTicketDto,\n      createby: (req as any).user._id,\n    };\n    return this.ticketService.AddTicketupdate(ticketid, data);\n  }\n\n  @Role(Roles.SUPERUSER)\n  @Patch('status/:ticketid/:newstatus')\n  updateTicketStatus(\n    @Param('ticketid') ticketid: string,\n    @Param('newstatus') newstatus: TicketStatus,\n  ) {\n    try {\n      return this.ticketService.ChangeTicketStatus(ticketid, newstatus);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  @Role(Roles.SUPERUSER)\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTicketDto: UpdateTicketDto) {\n    return this.ticketService.update(id, updateTicketDto);\n  }\n\n  @Role(Roles.SUPERUSER)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.ticketService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TicketInterface.html":{"url":"interfaces/TicketInterface.html","title":"interface - TicketInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TicketInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/interface/Ticket.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            branch\n                                        \n                                \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            createby\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            segment\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updates\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        branch\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        branch:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         TicketCategory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TicketCategory\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createby\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createby:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segment:         TicketSegment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TicketSegment\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         TicketStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TicketStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updates:     TicketUpdates[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TicketUpdates[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TicketUpdates } from '../Models/ticket-updates.model';\nimport { TicketSegment } from '../enums/Ticket-Segment.enum';\nimport { TicketCategory } from '../enums/Ticket-category.enum';\nimport { TicketStatus } from '../enums/ticket-status.enum';\n\nexport interface TicketInterface {\n  status: TicketStatus;\n\n  createby: string;\n\n  branch: string;\n\n  category: TicketCategory;\n\n  segment: TicketSegment;\n\n  description: string;\n\n  updates?: TicketUpdates[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TicketModule.html":{"url":"modules/TicketModule.html","title":"module - TicketModule","body":"\n                   \n\n\n\n\n    Modules\n    TicketModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_imports\n\n\n\ncluster_TicketModule_providers\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nTicketModule\n\nTicketModule\n\nTicketModule -->\n\nBranchModule->TicketModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nTicketModule -->\n\nUsersModule->TicketModule\n\n\n\n\n\nTicketService\n\nTicketService\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/ticket/ticket.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TicketService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TicketController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BranchModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TicketService } from './ticket.service';\nimport { TicketController } from './ticket.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Ticket, TicketSchema } from './Models/ticket.model';\nimport {\n  TicketUpdates,\n  TicketUpdatesSchema,\n} from './Models/ticket-updates.model';\nimport { BranchModule } from 'src/branch/branch.module';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: Ticket.name,\n        schema: TicketSchema,\n      },\n      {\n        name: TicketUpdates.name,\n        schema: TicketUpdatesSchema,\n      },\n    ]),\n    BranchModule,\n    UsersModule,\n  ],\n  controllers: [TicketController],\n  providers: [TicketService],\n})\nexport class TicketModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TicketService.html":{"url":"injectables/TicketService.html","title":"injectable - TicketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TicketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/ticket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddTicketupdate\n                            \n                            \n                                    Async\n                                ChangeTicketStatus\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOneById\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(ticketRepo: Model)\n                    \n                \n                        \n                            \n                                Defined in src/ticket/ticket.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ticketRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddTicketupdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddTicketupdate(id: string, data: AddTicketUpdatesInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            AddTicketUpdatesInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeTicketStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeTicketStatus(id: string, status: TicketStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            TicketStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: TicketInterface)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            TicketInterface\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateTicketDto: UpdateTicketDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/ticket/ticket.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateTicketDto\n                                            \n                                                            UpdateTicketDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UpdateTicketDto } from './dto/update-ticket.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Ticket } from './Models/ticket.model';\nimport { Model } from 'mongoose';\nimport { TicketInterface } from './interface/Ticket.interface';\nimport { AddTicketUpdatesInterface } from './interface/AddTicket-Updates.inteface';\nimport { TicketStatus } from './enums/ticket-status.enum';\n\n@Injectable()\nexport class TicketService {\n  constructor(\n    @InjectModel(Ticket.name) private readonly ticketRepo: Model,\n  ) {}\n\n  async create(data: TicketInterface) {\n    try {\n      const newTicket = new this.ticketRepo(data);\n      return await newTicket.save();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findAll() {\n    try {\n      return await this.ticketRepo.find().exec();\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async findOneById(id: string) {\n    try {\n      return await this.ticketRepo.findById(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async update(id: string, updateTicketDto: UpdateTicketDto) {\n    try {\n      return await this.ticketRepo.findByIdAndUpdate(id, updateTicketDto);\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async AddTicketupdate(id: string, data: AddTicketUpdatesInterface) {\n    try {\n      return await this.ticketRepo.findByIdAndUpdate(id, {\n        $push: { updates: data },\n      });\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async ChangeTicketStatus(id: string, status: TicketStatus) {\n    try {\n      return await this.ticketRepo.findOneAndUpdate(\n        { _id: id, status: { $ne: TicketStatus.CLOSE } },\n        { $set: { status } },\n      );\n    } catch (err) {\n      throw err;\n    }\n  }\n  async remove(id: string) {\n    try {\n      return await this.ticketRepo.findByIdAndDelete(id);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TicketUpdates.html":{"url":"classes/TicketUpdates.html","title":"class - TicketUpdates","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TicketUpdates\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/Models/ticket-updates.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket-updates.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, ref: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/ticket/Models/ticket-updates.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport mongoose from 'mongoose';\nimport { User } from 'src/users/Model/user.model';\n\n@Schema({ timestamps: true })\nexport class TicketUpdates {\n  @Prop({ type: mongoose.Types.ObjectId, ref: User.name })\n  user: string;\n\n  @Prop()\n  description: string;\n}\n\nexport const TicketUpdatesSchema = SchemaFactory.createForClass(TicketUpdates);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Token.html":{"url":"interfaces/Token.html","title":"interface - Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Token\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/token.payload.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Token {\n  access_token: string;\n  refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBillingDto.html":{"url":"classes/UpdateBillingDto.html","title":"class - UpdateBillingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBillingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/billing/dto/update-billing.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateBillingDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateBillingDto } from './create-billing.dto';\n\nexport class UpdateBillingDto extends PartialType(CreateBillingDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBranchDto.html":{"url":"classes/UpdateBranchDto.html","title":"class - UpdateBranchDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBranchDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/branch/dto/update-branch.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateBranchDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                manager\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                work_from\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                work_to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: CreateLocationDto, required: false})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        manager\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'user_id', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Port Said', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        work_from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-20', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        work_to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-20', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/branch/dto/update-branch.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateBranchDto } from './create-branch.dto';\nimport {\n  IsOptional,\n  IsString,\n  IsDateString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class UpdateBranchDto extends PartialType(CreateBranchDto) {\n  @ApiProperty({\n    example: 'Port Said',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @ApiProperty({\n    example: '2020-02-20',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  work_from?: Date;\n\n  @ApiProperty({\n    example: '2020-02-20',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  work_to?: Date;\n\n  @ApiProperty({\n    example: 'user_id',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  manager?: string;\n\n  @ApiProperty({\n    // example: ,\n    type: CreateLocationDto,\n    required: false,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  location?: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCartDto.html":{"url":"classes/UpdateCartDto.html","title":"class - UpdateCartDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCartDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cart/dto/update-cart.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCartDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCartDto } from './create-cart.dto';\n\nexport class UpdateCartDto extends PartialType(CreateCartDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCouponDto.html":{"url":"classes/UpdateCouponDto.html","title":"class - UpdateCouponDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCouponDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/coupon/dto/update-coupon.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCouponDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                branches\n                            \n                            \n                                    \n                                    \n                                    \n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                percent_discount\n                            \n                            \n                                    \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '[branch1,branch2]', required: false})@IsOptional()@IsArray()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-03', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'copoun1', required: false})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        percent_discount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 10, required: true})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 20, required: true})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-03', required: false})@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/coupon/dto/update-coupon.dto.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateCouponDto } from './create-coupon.dto';\nimport {\n  IsArray,\n  IsDateString,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class UpdateCouponDto extends PartialType(CreateCouponDto) {\n  @ApiProperty({\n    example: 'copoun1',\n    required: false,\n  })\n  @IsOptional()\n  @IsString()\n  name: string;\n\n  @ApiProperty({\n    example: '[branch1,branch2]',\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  branches: string[];\n\n  @ApiProperty({\n    example: '2020-02-03',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  from: Date;\n\n  @ApiProperty({\n    example: '2020-02-03',\n    required: false,\n  })\n  @IsOptional()\n  @IsDateString()\n  to: Date;\n\n  @ApiProperty({\n    example: 20,\n    required: true,\n  })\n  @IsOptional()\n  @IsNumber()\n  quantity: number;\n\n  @ApiProperty({\n    example: 10,\n    required: true,\n  })\n  @IsOptional()\n  @IsNumber()\n  percent_discount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerDto.html":{"url":"classes/UpdateCustomerDto.html","title":"class - UpdateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/update-customer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCustomerDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCustomerDto } from './create-customer.dto';\n\nexport class UpdateCustomerDto extends PartialType(CreateCustomerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDeliveryDto.html":{"url":"classes/UpdateDeliveryDto.html","title":"class - UpdateDeliveryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDeliveryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/delivery/dto/update-delivery.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDeliveryDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateDeliveryDto } from './create-delivery.dto';\n\nexport class UpdateDeliveryDto extends PartialType(CreateDeliveryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEmployeeDto.html":{"url":"classes/UpdateEmployeeDto.html","title":"class - UpdateEmployeeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEmployeeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/employee/dto/update-employee.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                bank_account\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                base_salary\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                birthdate\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                department\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                gender\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                join_at\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                phones\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                ssid\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                user\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                working_in\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Address of the employee', type: () => Location})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        bank_account\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Bank account number', example: '123456789'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:104\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        base_salary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Base salary of the employee', example: 50000})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        birthdate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Birthdate of the employee', example: '1990-01-01'})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        department\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Department\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Department, description: 'Department the employee works in'})@IsEnum(Department)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        gender\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({enum: Sex, description: 'Gender of the employee'})@IsEnum(Sex)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        join_at\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'The date the employee joined', example: '2023-01-01'})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Phone numbers', example: undefined, isArray: true})@IsString({each: true})@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        ssid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Social Security ID', example: '123-45-6789'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'User MongoDB ID', example: '507f191e810c19729de860ea'})@IsMongoId()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        working_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Working in MongoDB ID', example: '507f191e810c19729de860eb'})@IsMongoId()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/employee/dto/update-employee.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsMongoId,\n  IsEnum,\n  IsNumber,\n  IsString,\n  IsDateString,\n  IsOptional,\n  IsArray,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { Sex } from 'src/users/enums/Sex.enum';\nimport { Department } from '../enums/department.enums';\nimport { Location } from 'src/location/Model/location.model';\n\nexport class UpdateEmployeeDto {\n  @ApiPropertyOptional({\n    description: 'The date the employee joined',\n    example: '2023-01-01',\n  })\n  @IsDateString()\n  @IsOptional()\n  join_at?: Date;\n\n  @ApiPropertyOptional({\n    description: 'User MongoDB ID',\n    example: '507f191e810c19729de860ea',\n  })\n  @IsMongoId()\n  @IsOptional()\n  user?: string;\n\n  @ApiPropertyOptional({\n    description: 'Working in MongoDB ID',\n    example: '507f191e810c19729de860eb',\n  })\n  @IsMongoId()\n  @IsOptional()\n  working_in?: string;\n\n  @ApiPropertyOptional({\n    enum: Department,\n    description: 'Department the employee works in',\n  })\n  @IsEnum(Department)\n  @IsOptional()\n  department?: Department;\n\n  @ApiPropertyOptional({\n    description: 'Base salary of the employee',\n    example: 50000,\n  })\n  @IsNumber()\n  @IsOptional()\n  base_salary?: number;\n\n  @ApiPropertyOptional({\n    description: 'Phone numbers',\n    example: ['+1234567890'],\n    isArray: true,\n  })\n  @IsString({ each: true })\n  @IsArray()\n  @IsOptional()\n  phones?: string[];\n\n  @ApiPropertyOptional({ enum: Sex, description: 'Gender of the employee' })\n  @IsEnum(Sex)\n  @IsOptional()\n  gender?: Sex;\n\n  @ApiPropertyOptional({\n    description: 'Address of the employee',\n    type: () => Location,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => Location)\n  address?: Location;\n\n  @ApiPropertyOptional({\n    description: 'Social Security ID',\n    example: '123-45-6789',\n  })\n  @IsOptional()\n  @IsString()\n  ssid?: string;\n\n  @ApiPropertyOptional({\n    description: 'Birthdate of the employee',\n    example: '1990-01-01',\n  })\n  @IsDateString()\n  @IsOptional()\n  birthdate?: Date;\n\n  @ApiPropertyOptional({\n    description: 'Bank account number',\n    example: '123456789',\n  })\n  @IsOptional()\n  @IsString()\n  bank_account?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLocationDto.html":{"url":"classes/UpdateLocationDto.html","title":"class - UpdateLocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/location/dto/update-location.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateLocationDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                building_Number\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                city\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                cordinates\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                country\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                district\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                floor\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                neighborhood\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                street_Address\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        building_Number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '3C', name: 'building_Number'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Port Said', name: 'city'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        cordinates\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateCordinatesDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: CreateCordinatesDto, name: 'cordinates'})@ValidateNested()@Type(undefined)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Egypt', name: 'country'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'the building next to the market', name: 'description'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        district\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Madient Nasr', name: 'district'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        floor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'third Or 3th', name: 'floor'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'My Home', name: 'name'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        neighborhood\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Obour Area', name: 'neighborhood'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        street_Address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Mohamed Ali Street', name: 'street_Address'})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/location/dto/update-location.dto.ts:69\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateCordinatesDto, CreateLocationDto } from './create-location.dto';\nimport { Type } from 'class-transformer';\nimport {\n  IsString,\n  ValidateNested,\n  IsOptional,\n  //   IsLongitude,\n  //   IsLatitude,\n} from 'class-validator';\n\n// class UpdateCordinatesDto extends PartialType(CreateCordinatesDto) {\n//   @IsOptional()\n//   @IsLongitude()\n//   long?: number;\n\n//   @IsOptional()\n//   @IsLatitude()\n//   lat?: number;\n// }\n\nexport class UpdateLocationDto extends PartialType(CreateLocationDto) {\n  @ApiProperty({\n    example: 'My Home',\n    name: 'name',\n  })\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @ApiProperty({\n    description: 'Egypt',\n    name: 'country',\n  })\n  @IsString()\n  @IsOptional()\n  country?: string;\n\n  @ApiProperty({\n    example: 'Port Said',\n    name: 'city',\n  })\n  @IsString()\n  @IsOptional()\n  city?: string;\n\n  @ApiProperty({\n    example: 'Madient Nasr',\n    name: 'district',\n  })\n  @IsString()\n  @IsOptional()\n  district?: string;\n\n  @ApiProperty({\n    example: 'Obour Area',\n    name: 'neighborhood',\n  })\n  @IsString()\n  @IsOptional()\n  neighborhood?: string;\n\n  @ApiProperty({\n    example: 'Mohamed Ali Street',\n    name: 'street_Address',\n  })\n  @IsString()\n  @IsOptional()\n  street_Address?: string;\n\n  @ApiProperty({\n    example: '3C',\n    name: 'building_Number',\n  })\n  @IsString()\n  @IsOptional()\n  building_Number?: string;\n\n  @ApiProperty({\n    example: 'third Or 3th',\n    name: 'floor',\n  })\n  @IsString()\n  @IsOptional()\n  floor?: string;\n\n  @ApiProperty({\n    example: 'the building next to the market',\n    name: 'description',\n  })\n  @IsString()\n  @IsOptional()\n  description?: string;\n\n  @ApiProperty({\n    type: CreateCordinatesDto,\n    name: 'cordinates',\n  })\n  @ValidateNested()\n  @Type(() => CreateCordinatesDto)\n  @IsOptional()\n  cordinates?: CreateCordinatesDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMaterialDto.html":{"url":"classes/UpdateMaterialDto.html","title":"class - UpdateMaterialDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMaterialDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/material/dto/update-material.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateMaterialDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateMaterialDto } from './create-material.dto';\n\nexport class UpdateMaterialDto extends PartialType(CreateMaterialDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOfferDto.html":{"url":"classes/UpdateOfferDto.html","title":"class - UpdateOfferDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOfferDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/offers/dto/update-offer.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateOfferDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                branches\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                from\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                items\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                quantity\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        branches\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsString()@IsArray()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-02', required: false})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, required: false})@IsOptional()@IsArray()@IsString()@IsMongoId()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Family Offer', required: false})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: false})@IsNumber()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 100, required: false})@IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-02-02', required: false})@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/offers/dto/update-offer.dto.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateOfferDto } from './create-offer.dto';\nimport {\n  IsArray,\n  IsDateString,\n  IsMongoId,\n  IsNumber,\n  IsOptional,\n  IsString,\n} from 'class-validator';\n\nexport class UpdateOfferDto extends PartialType(CreateOfferDto) {\n  @ApiProperty({\n    example: 'Family Offer',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  name?: string;\n\n  @ApiProperty({\n    example: ['65d5b8076bf8d67aee25ccd5', '65d5b8076bf8d67aee25ccd2'],\n    required: false,\n  })\n  @IsString()\n  @IsArray()\n  @IsOptional()\n  branches?: string[];\n\n  @ApiProperty({\n    example: '2020-02-02',\n    required: false,\n  })\n  @IsDateString()\n  @IsOptional()\n  from?: Date;\n\n  @ApiProperty({\n    example: '2020-02-02',\n    required: false,\n  })\n  @IsDateString()\n  @IsOptional()\n  to?: Date;\n\n  @ApiProperty({\n    example: 100,\n    required: false,\n  })\n  @IsOptional()\n  @IsNumber()\n  quantity?: number;\n\n  @ApiProperty({\n    example: ['65d5b8076bf8d67aee25ccd5', '65d5b8076bf8d67aee25ccd2'],\n    required: false,\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString()\n  @IsMongoId()\n  items?: string[];\n\n  @ApiProperty({\n    example: 100,\n    required: false,\n  })\n  @IsNumber()\n  @IsOptional()\n  price?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePaymentDto.html":{"url":"classes/UpdatePaymentDto.html","title":"class - UpdatePaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/payment/dto/update-payment.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreatePaymentDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePaymentDto } from './create-payment.dto';\n\nexport class UpdatePaymentDto extends PartialType(CreatePaymentDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/update-product.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateProductDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Optional\n                                branch\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                can_deliver\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                category\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                components\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                images\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                production_price\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                size\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                subcategory\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Optional\n                        branch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        can_deliver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ProductCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductComponents[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ProductComponents)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsArray()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        production_price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ProductSize)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        subcategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductSubCategory\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsEnum(ProductSubCategory)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/product/dto/update-product.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\nimport {\n  IsString,\n  IsNumber,\n  IsOptional,\n  IsEnum,\n  IsArray,\n  IsBoolean,\n} from 'class-validator';\nimport { ProductCategory } from '../enums/product-category.enums';\nimport { ProductComponents } from '../enums/product-components.enum';\nimport { ProductSubCategory } from '../enums/product-subcategory.enum';\nimport { ProductSize } from '../enums/size.enum';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @IsOptional()\n  @IsNumber()\n  price?: number;\n\n  @IsOptional()\n  @IsNumber()\n  production_price?: number;\n\n  @IsOptional()\n  branch?: string;\n\n  @IsOptional()\n  @IsEnum(ProductCategory)\n  category?: ProductCategory;\n\n  @IsOptional()\n  @IsEnum(ProductSubCategory)\n  subcategory?: ProductSubCategory;\n\n  @IsOptional()\n  @IsEnum(ProductSize)\n  size?: ProductSize;\n\n  @IsOptional()\n  @IsEnum(ProductComponents)\n  components?: ProductComponents[];\n\n  @IsOptional()\n  @IsArray()\n  @IsString()\n  images?: string[];\n\n  @IsOptional()\n  @IsBoolean()\n  can_deliver?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRefreshDto.html":{"url":"classes/UpdateRefreshDto.html","title":"class - UpdateRefreshDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRefreshDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/Update-refresh.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/Update-refresh.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\n\nexport class UpdateRefreshDto {\n  @IsNotEmpty()\n  @IsString()\n  refreshToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockDto.html":{"url":"classes/UpdateStockDto.html","title":"class - UpdateStockDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock/update-stock.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateStockDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateStockDto } from './create-stock.dto';\n\nexport class UpdateStockDto extends PartialType(CreateStockDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockItemDto.html":{"url":"classes/UpdateStockItemDto.html","title":"class - UpdateStockItemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockItemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Item/update-Stock-Item.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateStockItemDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateStockItemDto } from './create-stock-item.dto';\n\nexport class UpdateStockItemDto extends PartialType(CreateStockItemDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockItemLogsDto.html":{"url":"classes/UpdateStockItemLogsDto.html","title":"class - UpdateStockItemLogsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockItemLogsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Stock Item Logs/update-Stock-item-Logs.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(\n  CreateStockItemLogsDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateStockItemLogsDto } from './create-Stock-Item-Logs.dto';\n\nexport class UpdateStockItemLogsDto extends PartialType(\n  CreateStockItemLogsDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStockTransactionDto.html":{"url":"classes/UpdateStockTransactionDto.html","title":"class - UpdateStockTransactionDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStockTransactionDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/stock/dto/Transaction/update-Transaction.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(\n  CreateTransactionDto,\n)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTransactionDto } from './create-Transaction.dto';\n\nexport class UpdateStockTransactionDto extends PartialType(\n  CreateTransactionDto,\n) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSupplierDto.html":{"url":"classes/UpdateSupplierDto.html","title":"class - UpdateSupplierDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSupplierDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supplier/dto/update-supplier.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateSupplierDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                location\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                phones\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreateLocationDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Location of the supplier', type: () => CreateLocationDto})@IsOptional()@ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/update-supplier.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Name of the supplier', example: 'ABC Supplies'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/update-supplier.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        phones\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'Contact phone numbers for the supplier', example: undefined, type: undefined})@IsOptional()@IsString({each: true})@IsArray()@ArrayMinSize(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/supplier/dto/update-supplier.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional, PartialType } from '@nestjs/swagger';\nimport { CreateSupplierDto } from './create-supplier.dto';\nimport {\n  ArrayMinSize,\n  IsArray,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\n\nexport class UpdateSupplierDto extends PartialType(CreateSupplierDto) {\n  @ApiPropertyOptional({\n    description: 'Name of the supplier',\n    example: 'ABC Supplies',\n  })\n  @IsOptional()\n  @IsString()\n  name?: string;\n\n  @ApiPropertyOptional({\n    description: 'Contact phone numbers for the supplier',\n    example: ['+1234567890', '+0987654321'],\n    type: [String],\n  })\n  @IsOptional()\n  @IsString({ each: true })\n  @IsArray()\n  @ArrayMinSize(1)\n  phones?: string[];\n\n  @ApiPropertyOptional({\n    description: 'Location of the supplier',\n    type: () => CreateLocationDto,\n  })\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => CreateLocationDto)\n  location?: CreateLocationDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTicketDto.html":{"url":"classes/UpdateTicketDto.html","title":"class - UpdateTicketDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTicketDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/ticket/dto/update-ticket.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateTicketDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTicketDto } from './create-ticket.dto';\n\nexport class UpdateTicketDto extends PartialType(CreateTicketDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Optional\n                                email\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                password\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                refreshToken\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                roles\n                            \n                            \n                                    \n                                    \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Roles)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\nimport { IsEmail, IsString, IsEnum, IsOptional } from 'class-validator';\nimport { Roles } from 'src/auth/enums/roles.enums';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  @IsEmail()\n  @IsOptional()\n  email?: string;\n\n  @IsString()\n  @IsOptional()\n  password?: string;\n\n  @IsString()\n  @IsOptional()\n  username?: string;\n\n  @IsEnum(Roles)\n  @IsOptional()\n  roles?: Roles;\n\n  @IsString()\n  @IsOptional()\n  refreshToken?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/Model/user.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                locations\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                refreshToken\n                            \n                            \n                                    \n                                roles\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, auto: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        locations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Location[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: undefined, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Roles[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AccountStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({default: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/Model/user.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { HydratedDocument, SchemaTypes } from 'mongoose';\nimport { AccountStatus } from 'src/users/enums/account-status.enums';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { Location } from 'src/location/Model/location.model';\n\nexport type UserDocument = HydratedDocument;\n\n@Schema({\n  timestamps: true,\n})\nexport class User {\n  @Prop({ type: SchemaTypes.ObjectId, auto: true })\n  _id: string;\n\n  @Prop({ required: true, unique: true })\n  username: string;\n\n  @Prop({ required: true, unique: true })\n  email: string;\n\n  @Prop({ required: true })\n  password: string;\n\n  @Prop({ default: Roles.USER })\n  roles: Roles[];\n\n  @Prop()\n  refreshToken: string;\n\n  @Prop({ default: AccountStatus.ACTIVE, required: true })\n  status: AccountStatus;\n\n  @Prop({ type: [Location], default: [] })\n  locations: Location[];\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                AddLocation\n                            \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                findAll\n                            \n                            \n                                    \n                                findOneByid\n                            \n                            \n                                    \n                                remove\n                            \n                            \n                                    \n                                removeLocation\n                            \n                            \n                                    \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        AddLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddLocation(createLocationDto: CreateLocationDto, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('location')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createLocationDto\n                                            \n                                                            CreateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        findOneByid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByid(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        removeLocation\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeLocation(locationid: string, req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('location/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                locationid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Req,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags } from '@nestjs/swagger';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\nimport { Request } from 'express';\n\n@ApiTags('users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.usersService.create(createUserDto);\n  }\n\n  @Post('location')\n  AddLocation(\n    @Body() createLocationDto: CreateLocationDto,\n    @Req() req: Request,\n  ) {\n    const user_id = (req as any).user._id;\n    return this.usersService.AddLocationToUser(user_id, createLocationDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOneByid(@Param('id') id: string) {\n    return this.usersService.findOneByid(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n\n  @Delete('location/:id')\n  removeLocation(@Param('id') locationid: string, @Req() req: Request) {\n    const user_id = (req as any).user._id;\n    return this.usersService.RemoveLocationFromUser(user_id, locationid);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nLocationModule\n\nLocationModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nLocationModule->UsersModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LocationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { User, UserSchema } from './Model/user.model';\nimport { LocationModule } from 'src/location/location.module';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: User.name, schema: UserSchema }]),\n    LocationModule,\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                AddLocationToUser\n                            \n                            \n                                    Async\n                                AddRoleToUser\n                            \n                            \n                                    Async\n                                BlockUser\n                            \n                            \n                                    Async\n                                ChangeUserStatus\n                            \n                            \n                                    Async\n                                CompareTextWithHash\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                DeleteRefresh\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOneByEmail\n                            \n                            \n                                    Async\n                                findOneByid\n                            \n                            \n                                    Async\n                                hashFunction\n                            \n                            \n                                    Async\n                                IsUserHaveRole\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                RemoveLocationFromUser\n                            \n                            \n                                    Async\n                                UnAssignRoleFromUser\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateRefresh\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepo: Model, locationService: LocationService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepo\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locationService\n                                                  \n                                                        \n                                                                        LocationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddLocationToUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddLocationToUser(userid: string, createLocationDTO: CreateLocationDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:145\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                createLocationDTO\n                                            \n                                                            CreateLocationDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        AddRoleToUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    AddRoleToUser(userid: string, newRole: Roles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newRole\n                                            \n                                                            Roles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        BlockUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    BlockUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ChangeUserStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    ChangeUserStatus(id: string, changeUserStatusDTO: ChangeUserStatusDTO)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changeUserStatusDTO\n                                            \n                                                            ChangeUserStatusDTO\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        CompareTextWithHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    CompareTextWithHash(text: string, HashedValue: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:91\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                HashedValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        DeleteRefresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    DeleteRefresh(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneByid\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByid(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hashFunction\n                        \n                    \n                \n            \n            \n                \n                        \n                    hashFunction(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        IsUserHaveRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    IsUserHaveRole(id: string, role: Roles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:127\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                role\n                                            \n                                                            Roles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                        \n                    remove(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        RemoveLocationFromUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    RemoveLocationFromUser(userId: string, locationId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:168\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                locationId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        UnAssignRoleFromUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    UnAssignRoleFromUser(userid: string, RemovedRole: Roles)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:113\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                RemovedRole\n                                            \n                                                            Roles\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateRefresh\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateRefresh(id: string, updateUserDto: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User, UserDocument } from './Model/user.model';\nimport { Model } from 'mongoose';\nimport * as bcrypt from 'bcrypt';\nimport { Roles } from 'src/auth/enums/roles.enums';\nimport { AccountStatus } from './enums/account-status.enums';\nimport { ChangeUserStatusDTO } from './dto/Change-User-Status.dto';\nimport { CreateLocationDto } from 'src/location/dto/create-location.dto';\nimport { LocationService } from 'src/location/location.service';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectModel(User.name) private userRepo: Model,\n    private locationService: LocationService,\n  ) {}\n\n  async hashFunction(text: string): Promise {\n    const salt = await bcrypt.genSalt();\n    return await bcrypt.hash(text, salt);\n  }\n  async create(createUserDto: CreateUserDto): Promise {\n    try {\n      const user = new this.userRepo(createUserDto);\n      user.password = await this.hashFunction(createUserDto.password);\n      return await user.save();\n    } catch (err) {\n      if (err.code == 11000) {\n        throw new ConflictException(\"Can't Save , User Already Exist\");\n      }\n      console.log(err);\n      throw new InternalServerErrorException();\n    }\n  }\n\n  findAll() {\n    return this.userRepo.find().exec();\n  }\n\n  async findOneByid(id: string): Promise {\n    try {\n      const user = await this.userRepo.findById(id).exec();\n      if (user) {\n        return user;\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async findOneByEmail(email: string): Promise {\n    const user = await this.userRepo.findOne({ email }).exec();\n    if (user) {\n      return user;\n    }\n    throw new NotFoundException();\n  }\n  async update(id: string, updateUserDto: UpdateUserDto): Promise {\n    return await this.userRepo.findByIdAndUpdate(id, updateUserDto);\n  }\n  async updateRefresh(id: string, updateUserDto: string): Promise {\n    await this.userRepo.updateMany(\n      { _id: id },\n      {\n        refreshToken: updateUserDto,\n      },\n    );\n  }\n  async DeleteRefresh(id: string): Promise {\n    await this.userRepo.updateMany(\n      { _id: id },\n      {\n        $unset: {\n          refreshToken: 1,\n        },\n      },\n    );\n  }\n  async remove(id: string) {\n    return await this.userRepo.findByIdAndDelete(id);\n  }\n\n  async CompareTextWithHash(\n    text: string,\n    HashedValue: string,\n  ): Promise {\n    return await bcrypt.compare(text, HashedValue);\n  }\n\n  async AddRoleToUser(userid: string, newRole: Roles): Promise {\n    try {\n      const document = await this.userRepo.findById(userid);\n      if (!document) throw new NotFoundException();\n      if (document.roles.includes(newRole))\n        throw new ConflictException('Role Is Already Exist');\n      await document.roles.push(newRole);\n      return await document.save();\n    } catch (err) {\n      if (err.status == 409) {\n        throw new ConflictException('Role Is Already Exist');\n      }\n      console.log(err);\n    }\n  }\n  async UnAssignRoleFromUser(\n    userid: string,\n    RemovedRole: Roles,\n  ): Promise {\n    try {\n      return await this.userRepo.findByIdAndUpdate(\n        userid,\n        { $pull: { roles: RemovedRole } },\n        { new: true },\n      );\n    } catch (err) {\n      throw new InternalServerErrorException(err);\n    }\n  }\n  async IsUserHaveRole(id: string, role: Roles) {\n    const isexist = await this.userRepo.find({\n      _id: id,\n      roles: { $in: [role] },\n    });\n    if (isexist.length > 0) return true;\n    return false;\n  }\n  async BlockUser(id: string) {\n    return await this.userRepo.findByIdAndUpdate(id, {\n      status: AccountStatus.BLOCK,\n    });\n  }\n\n  async ChangeUserStatus(id: string, changeUserStatusDTO: ChangeUserStatusDTO) {\n    return await this.userRepo.findByIdAndUpdate(id, changeUserStatusDTO);\n  }\n\n  async AddLocationToUser(\n    userid: string,\n    createLocationDTO: CreateLocationDto,\n  ) {\n    try {\n      const updatedUser = await this.userRepo\n        .findByIdAndUpdate(\n          userid,\n          { $push: { locations: createLocationDTO } },\n          { new: true, runValidators: true },\n        )\n        .exec();\n\n      if (!updatedUser) {\n        throw new NotFoundException(`No user found with ID ${userid}`);\n      }\n\n      return updatedUser;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  async RemoveLocationFromUser(userId: string, locationId: string) {\n    try {\n      const user = await this.userRepo.findOneAndUpdate(\n        { _id: userId, 'locations._id': locationId },\n        { $pull: { locations: { _id: locationId } } },\n        { new: true }, // Return the updated document\n      );\n\n      if (!user) {\n        throw new NotFoundException('User or Location not found');\n      }\n\n      return user;\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyandRefreshTokenDto.html":{"url":"classes/VerifyandRefreshTokenDto.html","title":"class - VerifyandRefreshTokenDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyandRefreshTokenDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/Verify-and-Refresh-token.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                refresh_token\n                            \n                            \n                                    \n                                    \n                                    \n                                userid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        refresh_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '01sdad.asdsds505.asda0wqeq05', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Verify-and-Refresh-token.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        userid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '0121asdasd21', required: true})@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/Verify-and-Refresh-token.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class VerifyandRefreshTokenDto {\n  @ApiProperty({\n    example: '0121asdasd21',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  userid: string;\n\n  @ApiProperty({\n    example: '01sdad.asdsds505.asda0wqeq05',\n    required: true,\n  })\n  @IsNotEmpty()\n  @IsString()\n  refresh_token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth/Strategy/at.strategy.ts\n            \n            injectable\n            ATStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/admin/dto/Admin-signup.dto.ts\n            \n            class\n            CreateAdminUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/admin/dto/SuperUser-SignUP.dto.ts\n            \n            class\n            CreateSuperUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/auth/decorator/IsPuplic.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/roles.decorator.ts\n            \n            variable\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorator/roles.decorator.ts\n            \n            variable\n            ROLES_KEYS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/AssignRole.dto.ts\n            \n            class\n            AssignRoleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/Logout.dto.ts\n            \n            class\n            LogoutDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/SignIn-by-email.dto.ts\n            \n            class\n            SignInByEmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/User-Singup.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/Verify-and-Refresh-token.dto.ts\n            \n            class\n            VerifyandRefreshTokenDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/token.payload.ts\n            \n            interface\n            Token\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/access-token.guard.ts\n            \n            injectable\n            ATGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.guard.ts\n            \n            injectable\n            JWTGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/refresh-tpken.guard.ts\n            \n            class\n            RTGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/guards/roles.guard.ts\n            \n            injectable\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/billing/billing.controller.ts\n            \n            controller\n            BillingController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/billing/billing.service.ts\n            \n            injectable\n            BillingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/billing/dto/create-billing.dto.ts\n            \n            class\n            CreateBillingDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/billing/dto/update-billing.dto.ts\n            \n            class\n            UpdateBillingDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/billing/entities/billing.entity.ts\n            \n            class\n            Billing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/branch/Model/branch.model.ts\n            \n            class\n            Branch\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/branch/Model/branch.model.ts\n            \n            variable\n            BranchSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/branch/branch.controller.ts\n            \n            controller\n            BranchController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/branch/branch.service.ts\n            \n            injectable\n            BranchService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/branch/dto/create-branch.dto.ts\n            \n            class\n            CreateBranchDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/branch/dto/update-branch.dto.ts\n            \n            class\n            UpdateBranchDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart/cart.controller.ts\n            \n            controller\n            CartController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart/cart.service.ts\n            \n            injectable\n            CartService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cart/dto/create-cart.dto.ts\n            \n            class\n            CreateCartDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/dto/update-cart.dto.ts\n            \n            class\n            UpdateCartDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cart/entities/cart.entity.ts\n            \n            class\n            Cart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/functions/Dates.ts\n            \n            function\n            isDateWithinRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/interfaces/location.interface.ts\n            \n            interface\n            Location\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/coupon/Model/coupon.model.ts\n            \n            class\n            Coupon\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/coupon/Model/coupon.model.ts\n            \n            variable\n            CouponSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/coupon/coupon.controller.ts\n            \n            controller\n            CouponController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/coupon/coupon.service.ts\n            \n            injectable\n            CouponService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/coupon/dto/create-coupon.dto.ts\n            \n            class\n            CreateCouponDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/coupon/dto/update-coupon.dto.ts\n            \n            class\n            UpdateCouponDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/customer/Model/customer.model.ts\n            \n            class\n            Customer\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/customer/Model/customer.model.ts\n            \n            variable\n            CustomerSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/customer.controller.ts\n            \n            controller\n            CustomerController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/customer/dto/create-customer.dto.ts\n            \n            class\n            CreateCustomerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/dto/update-customer.dto.ts\n            \n            class\n            UpdateCustomerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery/Model/delivery.model.ts\n            \n            class\n            DelivereyOrder\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/delivery/Model/delivery.model.ts\n            \n            variable\n            DeliveryOrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/delivery/delivery.controller.ts\n            \n            controller\n            DeliveryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/delivery/delivery.service.ts\n            \n            injectable\n            DeliveryService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/delivery/dto/create-delivery.dto.ts\n            \n            class\n            CreateDeliveryDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/delivery/dto/update-delivery.dto.ts\n            \n            class\n            UpdateDeliveryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/Model/employee.model.ts\n            \n            class\n            Attendence\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/employee/Model/employee.model.ts\n            \n            class\n            Employee\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/employee/Model/employee.model.ts\n            \n            class\n            EmployeePDR\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/employee/Model/employee.model.ts\n            \n            class\n            EmployeeTransactions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/employee/Model/employee.model.ts\n            \n            variable\n            AttendenceSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/Model/employee.model.ts\n            \n            variable\n            EmployeePDRSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/Model/employee.model.ts\n            \n            variable\n            EmployeeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/Model/employee.model.ts\n            \n            variable\n            EmployeeTransactionsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/employee/dto/create-attend-action.dto.ts\n            \n            class\n            CreateAttendActionDTO\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/employee/dto/create-employee-pdr.dto.ts\n            \n            class\n            CreateEmployeePDRDTO\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/employee/dto/create-employee.dto.ts\n            \n            class\n            CreateEmployeeDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/employee/dto/emp-transaction.dto.ts\n            \n            class\n            EmployeeTransactionDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/employee/dto/update-employee.dto.ts\n            \n            class\n            UpdateEmployeeDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/employee/employee.controller.ts\n            \n            controller\n            EmployeeController\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/employee/employee.service.ts\n            \n            injectable\n            EmployeeService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/employee/guards/IsEmployee.guard.ts\n            \n            class\n            IsEmployeeGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/employee/interfaces/emp-transaction.interface.ts\n            \n            interface\n            EmployeeTransactionInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/location/Model/location.model.ts\n            \n            class\n            Coordinates\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/location/Model/location.model.ts\n            \n            class\n            Location\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/location/Model/location.model.ts\n            \n            variable\n            CoordinatesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/Model/location.model.ts\n            \n            variable\n            LocationSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/location/dto/create-location.dto.ts\n            \n            class\n            CreateCordinatesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/location/dto/create-location.dto.ts\n            \n            class\n            CreateLocationDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/location/dto/update-location.dto.ts\n            \n            class\n            UpdateLocationDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/location/location.controller.ts\n            \n            controller\n            LocationController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/location/location.service.ts\n            \n            injectable\n            LocationService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/material/Model/material.model.ts\n            \n            class\n            Material\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/material/dto/create-material.dto.ts\n            \n            class\n            CreateMaterialDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/material/dto/update-material.dto.ts\n            \n            class\n            UpdateMaterialDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/material/material.controller.ts\n            \n            controller\n            MaterialController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/material/material.service.ts\n            \n            injectable\n            MaterialService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/offers/Model/offer.model.ts\n            \n            class\n            Offer\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/offers/Model/offer.model.ts\n            \n            variable\n            OfferSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/offers/dto/create-offer.dto.ts\n            \n            class\n            CreateOfferDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/offers/dto/update-offer.dto.ts\n            \n            class\n            UpdateOfferDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/offers/offers.controller.ts\n            \n            controller\n            OffersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/offers/offers.service.ts\n            \n            injectable\n            OffersService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/order/Interface/Create-Order.interface.ts\n            \n            interface\n            CreateOrderInterface\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/order/Interface/Create-Order.interface.ts\n            \n            interface\n            CreateOrderItemsInterface\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/Interface/TakeAway-Order.interfce.ts\n            \n            interface\n            TakeAwayOrderInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            class\n            DelivereyOrderType\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            class\n            DineinOrder\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            class\n            OrderItems\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            class\n            TakeAwayOrder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            variable\n            DelivereyOrderTypeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            variable\n            DineinOrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            variable\n            OrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/Model/order.model.ts\n            \n            variable\n            TakeAwayOrderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/order/dto/base-order.dto.ts\n            \n            class\n            CreateBaseOrderDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/order/dto/delivery/create-deliverey-order.dto.ts\n            \n            class\n            CreateDelivereyOrderDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/order/dto/dinein/create-dinein-order.dto.ts\n            \n            class\n            CreateDineInOrderDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/order/dto/order-items/create-order-items.dto.ts\n            \n            class\n            CreateOrderItemsDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/dto/takeaway/create-takeaway-order.dto.ts\n            \n            class\n            CreateTakeAwayOrderDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/order/guards/Is-working-In-Branch.guard.ts\n            \n            class\n            IsWorkingInBranchGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/order/order.controller.ts\n            \n            controller\n            OrderController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/order/order.service.ts\n            \n            injectable\n            OrderService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/payment/Model/payment.model.ts\n            \n            class\n            Payment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment/Model/payment.model.ts\n            \n            variable\n            PaymentSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/dto/create-payment.dto.ts\n            \n            class\n            CreatePaymentDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment/dto/update-payment.dto.ts\n            \n            class\n            UpdatePaymentDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/payment/interface/Create-Payment.interface.ts\n            \n            interface\n            CreatePaymentInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/payment/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/product/Model/product.model.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/product/Model/product.model.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-Gard.model.ts\n            \n            class\n            StockGard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-Gard.model.ts\n            \n            variable\n            StockGardSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-Item.model.ts\n            \n            class\n            StockItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-Item.model.ts\n            \n            variable\n            StockItemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-Transaction.model.ts\n            \n            class\n            StockTransaction\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-Transaction.model.ts\n            \n            variable\n            StockTransactionSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-item-logs.model.ts\n            \n            class\n            StockItemslogs\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-item-logs.model.ts\n            \n            variable\n            StockItemslogsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-item-quantity.model.ts\n            \n            class\n            StockItemQuantity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stock/Model/Stock-item-quantity.model.ts\n            \n            variable\n            StockItemQuantitySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/Model/stock.model.ts\n            \n            class\n            Stock\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stock/Model/stock.model.ts\n            \n            variable\n            StockSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/controller/stock-item-logs.controller.ts\n            \n            controller\n            StockItemLogsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stock/controller/stock-item.controller.ts\n            \n            controller\n            StockItemController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stock/controller/stock-transaction.controller.ts\n            \n            controller\n            StockTransactionController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stock/controller/stock.controller.ts\n            \n            controller\n            StockController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stock/dto/Stock Item Logs/create-Stock-Item-Logs.dto.ts\n            \n            class\n            CreateStockItemLogsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/dto/Stock Item Logs/update-Stock-item-Logs.dto.ts\n            \n            class\n            UpdateStockItemLogsDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/dto/Stock Item/create-stock-item.dto.ts\n            \n            class\n            CreateStockItemDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/dto/Stock Item/update-Stock-Item.dto.ts\n            \n            class\n            UpdateStockItemDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/dto/Stock/create-stock.dto.ts\n            \n            class\n            CreateStockDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/stock/dto/Stock/update-stock.dto.ts\n            \n            class\n            UpdateStockDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/dto/Transaction/create-Transaction.dto.ts\n            \n            class\n            CreateTransactionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/dto/Transaction/update-Transaction.dto.ts\n            \n            class\n            UpdateStockTransactionDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/stock/interfaces/Stock-Gard.interface.ts\n            \n            interface\n            StockGardInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/stock/interfaces/Stock-Item-logs.interface.ts\n            \n            interface\n            StockItemLogsInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stock/interfaces/Stock-Item-quantity.interface.ts\n            \n            interface\n            StockItemQuantityInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stock/interfaces/Stock-Item.interface.ts\n            \n            interface\n            StockItemInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/stock/interfaces/Stock-Transaction.interface.ts\n            \n            interface\n            StockTransactionInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/stock/interfaces/Stock.interface.ts\n            \n            interface\n            StockInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/stock/service/stock-item-logs.service.ts\n            \n            injectable\n            StockItemLogsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/stock/service/stock-item.service.ts\n            \n            injectable\n            StockItemService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/stock/service/stock-transaction.service.ts\n            \n            injectable\n            StockTransactionService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/stock/service/stock.service.ts\n            \n            injectable\n            StockService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/supplier/Model/supplier.Model.ts\n            \n            class\n            Supplier\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/supplier/Model/supplier.Model.ts\n            \n            variable\n            SupplierSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/supplier/dto/create-supplier.dto.ts\n            \n            class\n            CreateSupplierDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/supplier/dto/update-supplier.dto.ts\n            \n            class\n            UpdateSupplierDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/supplier/supplier.controller.ts\n            \n            controller\n            SupplierController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/supplier/supplier.service.ts\n            \n            injectable\n            SupplierService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/ticket/Models/ticket-updates.model.ts\n            \n            class\n            TicketUpdates\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ticket/Models/ticket-updates.model.ts\n            \n            variable\n            TicketUpdatesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ticket/Models/ticket.model.ts\n            \n            class\n            Ticket\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ticket/Models/ticket.model.ts\n            \n            variable\n            TicketSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ticket/dto/Add-Ticket-updates.dtos.ts\n            \n            class\n            AddTicketUpdateDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/ticket/dto/create-ticket.dto.ts\n            \n            class\n            CreateTicketDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/ticket/dto/update-ticket.dto.ts\n            \n            class\n            UpdateTicketDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/ticket/interface/AddTicket-Updates.inteface.ts\n            \n            interface\n            AddTicketUpdatesInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/ticket/interface/Ticket.interface.ts\n            \n            interface\n            TicketInterface\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ticket/ticket.controller.ts\n            \n            controller\n            TicketController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/ticket/ticket.service.ts\n            \n            injectable\n            TicketService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/Model/user.model.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/Model/user.model.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/Change-User-Status.dto.ts\n            \n            class\n            ChangeUserStatusDTO\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/Update-refresh.dto.ts\n            \n            class\n            UpdateRefreshDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/19)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mongoose : ^10.0.2\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.2.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            joi : ^17.12.1\n        \n            moment : ^2.30.1\n        \n            mongoose : ^8.1.1\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AccountStatus   (src/.../account-status.enums.ts)\n                        \n                        \n                            AttendenceActions   (src/.../attendence-action.enums.ts)\n                        \n                        \n                            DelivereyMethod   (src/.../Deliverey-method.enums.ts)\n                        \n                        \n                            DeliveryPrice   (src/.../Deliver-price.enums.ts)\n                        \n                        \n                            DeliveryStatus   (src/.../delivery-status.enums.ts)\n                        \n                        \n                            Department   (src/.../department.enums.ts)\n                        \n                        \n                            MeasureUnits   (src/.../measure-units.enum.ts)\n                        \n                        \n                            OrderStatus   (src/.../Order-Status.enums.ts)\n                        \n                        \n                            OrderType   (src/.../Order-Types.enums.ts)\n                        \n                        \n                            PaymentStatus   (src/.../payment-status.enums.ts)\n                        \n                        \n                            PaymentType   (src/.../payment-type.enums.ts)\n                        \n                        \n                            ProductCategory   (src/.../product-category.enums.ts)\n                        \n                        \n                            ProductComponents   (src/.../product-components.enum.ts)\n                        \n                        \n                            ProductSize   (src/.../size.enum.ts)\n                        \n                        \n                            ProductSubCategory   (src/.../product-subcategory.enum.ts)\n                        \n                        \n                            Roles   (src/.../roles.enums.ts)\n                        \n                        \n                            Sex   (src/.../Sex.enum.ts)\n                        \n                        \n                            StockTransactionStatus   (src/.../Stock-Transaction-Status.enum.ts)\n                        \n                        \n                            StockTransactionTYPE   (src/.../Stock-Transactions.enum.ts)\n                        \n                        \n                            TicketCategory   (src/.../Ticket-category.enum.ts)\n                        \n                        \n                            TicketSegment   (src/.../Ticket-Segment.enum.ts)\n                        \n                        \n                            TicketStatus   (src/.../ticket-status.enum.ts)\n                        \n                        \n                            Transaction   (src/.../emp-transaction.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/enums/account-status.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AccountStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : active\n                            \n                        \n                        \n                            \n                                 BLOCK\n                            \n                        \n                        \n                            \n                                Value : block\n                            \n                        \n                        \n                            \n                                 LOCKED\n                            \n                        \n                        \n                            \n                                Value : locked\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n            \n        \n\n    src/employee/enums/attendence-action.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AttendenceActions\n                    \n                \n                        \n                            \n                                 SIGNIN\n                            \n                        \n                        \n                            \n                                Value : signin\n                            \n                        \n                        \n                            \n                                 SIGNOUT\n                            \n                        \n                        \n                            \n                                Value : signout\n                            \n                        \n            \n        \n\n    src/delivery/enums/Deliverey-method.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        DelivereyMethod\n                    \n                \n                        \n                            \n                                 BIKE\n                            \n                        \n                        \n                            \n                                Value : bike\n                            \n                        \n            \n        \n\n    src/delivery/enums/Deliver-price.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        DeliveryPrice\n                    \n                \n                        \n                            \n                                 FIVE\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 TEN\n                            \n                        \n                        \n                            \n                                Value : 10\n                            \n                        \n                        \n                            \n                                 FIFTEEN\n                            \n                        \n                        \n                            \n                                Value : 15\n                            \n                        \n                        \n                            \n                                 TWENTY\n                            \n                        \n                        \n                            \n                                Value : 20\n                            \n                        \n                        \n                            \n                                 TWENTYFIVE\n                            \n                        \n                        \n                            \n                                Value : 25\n                            \n                        \n                        \n                            \n                                 THIRTY\n                            \n                        \n                        \n                            \n                                Value : 30\n                            \n                        \n                        \n                            \n                                 THIRTYFIVE\n                            \n                        \n                        \n                            \n                                Value : 35\n                            \n                        \n                        \n                            \n                                 FOURTY\n                            \n                        \n                        \n                            \n                                Value : 40\n                            \n                        \n                        \n                            \n                                 FOURTYFIVE\n                            \n                        \n                        \n                            \n                                Value : 45\n                            \n                        \n                        \n                            \n                                 FIFTY\n                            \n                        \n                        \n                            \n                                Value : 50\n                            \n                        \n            \n        \n\n    src/delivery/enums/delivery-status.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        DeliveryStatus\n                    \n                \n                        \n                            \n                                 WAITINGORDER\n                            \n                        \n                        \n                            \n                                Value : waitingorder\n                            \n                        \n                        \n                            \n                                 INDELIVER\n                            \n                        \n                        \n                            \n                                Value : indeliver\n                            \n                        \n                        \n                            \n                                 WAITINGCUSTOMER\n                            \n                        \n                        \n                            \n                                Value : waitingcustomer\n                            \n                        \n                        \n                            \n                                 COMPELETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/employee/enums/department.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        Department\n                    \n                \n                        \n                            \n                                 KITCHEN\n                            \n                        \n                        \n                            \n                                Value : kitchen\n                            \n                        \n                        \n                            \n                                 CASHIER\n                            \n                        \n                        \n                            \n                                Value : cashier\n                            \n                        \n                        \n                            \n                                 ACCOUNTING\n                            \n                        \n                        \n                            \n                                Value : accounting\n                            \n                        \n                        \n                            \n                                 DELIVEREY\n                            \n                        \n                        \n                            \n                                Value : deliverey\n                            \n                        \n            \n        \n\n    src/material/enums/measure-units.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        MeasureUnits\n                    \n                \n                        \n                            \n                                 Kilo\n                            \n                        \n                        \n                            \n                                Value : kilo\n                            \n                        \n                        \n                            \n                                 Litre\n                            \n                        \n                        \n                            \n                                Value : litre\n                            \n                        \n            \n        \n\n    src/order/enums/Order-Status.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderStatus\n                    \n                \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 PREPARING\n                            \n                        \n                        \n                            \n                                Value : perparing\n                            \n                        \n                        \n                            \n                                 COMPELETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n    src/order/enums/Order-Types.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        OrderType\n                    \n                \n                        \n                            \n                                 DINEIN\n                            \n                        \n                        \n                            \n                                Value : dinein\n                            \n                        \n                        \n                            \n                                 TAKEAWAY\n                            \n                        \n                        \n                            \n                                Value : takeaway\n                            \n                        \n                        \n                            \n                                 DELIVEREY\n                            \n                        \n                        \n                            \n                                Value : deliverey\n                            \n                        \n            \n        \n\n    src/payment/enums/payment-status.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentStatus\n                    \n                \n                        \n                            \n                                 COMPELETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : pending\n                            \n                        \n                        \n                            \n                                 CANCELLED\n                            \n                        \n                        \n                            \n                                Value : cancelled\n                            \n                        \n            \n        \n\n    src/payment/enums/payment-type.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        PaymentType\n                    \n                \n                        \n                            \n                                 CASH\n                            \n                        \n                        \n                            \n                                Value : cash\n                            \n                        \n                        \n                            \n                                 PAYPALL\n                            \n                        \n                        \n                            \n                                Value : paypall\n                            \n                        \n            \n        \n\n    src/product/enums/product-category.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductCategory\n                    \n                \n                        \n                            \n                                 PIZZA\n                            \n                        \n                        \n                            \n                                Value : pizza\n                            \n                        \n                        \n                            \n                                 PASTA\n                            \n                        \n                        \n                            \n                                Value : pasta\n                            \n                        \n            \n        \n\n    src/product/enums/product-components.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductComponents\n                    \n                \n                        \n                            \n                                 SASUAGE\n                            \n                        \n                        \n                            \n                                Value : sasuage\n                            \n                        \n            \n        \n\n    src/product/enums/size.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductSize\n                    \n                \n                        \n                            \n                                 XLARGE\n                            \n                        \n                        \n                            \n                                Value : XL\n                            \n                        \n                        \n                            \n                                 LARGE\n                            \n                        \n                        \n                            \n                                Value : L\n                            \n                        \n                        \n                            \n                                 MEDUIM\n                            \n                        \n                        \n                            \n                                Value : M\n                            \n                        \n            \n        \n\n    src/product/enums/product-subcategory.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ProductSubCategory\n                    \n                \n                        \n                            \n                                 MEAT\n                            \n                        \n                        \n                            \n                                Value : لحوم\n                            \n                        \n                        \n                            \n                                 CHICKEN\n                            \n                        \n                        \n                            \n                                Value : فراخ\n                            \n                        \n            \n        \n\n    src/auth/enums/roles.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        Roles\n                    \n                \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n                        \n                            \n                                 SUPERUSER\n                            \n                        \n                        \n                            \n                                Value : superuser\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 CASHIER\n                            \n                        \n                        \n                            \n                                Value : cashier\n                            \n                        \n                        \n                            \n                                 CASHIERSENIOR\n                            \n                        \n                        \n                            \n                                Value : cashier_senior\n                            \n                        \n                        \n                            \n                                 KitchenAssistance\n                            \n                        \n                        \n                            \n                                Value : kitchen_assistance\n                            \n                        \n                        \n                            \n                                 KITCHENCHIEF\n                            \n                        \n                        \n                            \n                                Value : kitchen_chief\n                            \n                        \n                        \n                            \n                                 BRANCHMANAGER\n                            \n                        \n                        \n                            \n                                Value : branchmanager\n                            \n                        \n                        \n                            \n                                 DELIVEREY\n                            \n                        \n                        \n                            \n                                Value : deliverey\n                            \n                        \n            \n        \n\n    src/users/enums/Sex.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Sex\n                    \n                \n                        \n                            \n                                 MALE\n                            \n                        \n                        \n                            \n                                Value : male\n                            \n                        \n                        \n                            \n                                 FEMALE\n                            \n                        \n                        \n                            \n                                Value : female\n                            \n                        \n            \n        \n\n    src/stock/enums/Stock-Transaction-Status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StockTransactionStatus\n                    \n                \n                        \n                            \n                                 COMPELETED\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n                        \n                            \n                                 INPROGRESS\n                            \n                        \n                        \n                            \n                                Value : in_progress\n                            \n                        \n                        \n                            \n                                 CANCELED\n                            \n                        \n                        \n                            \n                                Value : canceled\n                            \n                        \n            \n        \n\n    src/stock/enums/Stock-Transactions.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StockTransactionTYPE\n                    \n                \n                        \n                            \n                                 ADD\n                            \n                        \n                        \n                            \n                                Value : add\n                            \n                        \n                        \n                            \n                                 USE\n                            \n                        \n                        \n                            \n                                Value : use\n                            \n                        \n                        \n                            \n                                 EXPIRE\n                            \n                        \n                        \n                            \n                                Value : expire\n                            \n                        \n                        \n                            \n                                 TRANSFER\n                            \n                        \n                        \n                            \n                                Value : transfer\n                            \n                        \n                        \n                            \n                                 STAFF_USE\n                            \n                        \n                        \n                            \n                                Value : staff_use\n                            \n                        \n            \n        \n\n    src/ticket/enums/Ticket-category.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketCategory\n                    \n                \n                        \n                            \n                                 OUT_OF_STOCK\n                            \n                        \n                        \n                            \n                                Value : out_of_stock\n                            \n                        \n                        \n                            \n                                 IMPROVE\n                            \n                        \n                        \n                            \n                                Value : improve\n                            \n                        \n                        \n                            \n                                 REPLACE\n                            \n                        \n                        \n                            \n                                Value : replace\n                            \n                        \n                        \n                            \n                                 NEED\n                            \n                        \n                        \n                            \n                                Value : need\n                            \n                        \n            \n        \n\n    src/ticket/enums/Ticket-Segment.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketSegment\n                    \n                \n                        \n                            \n                                 NORMAL\n                            \n                        \n                        \n                            \n                                Value : normal\n                            \n                        \n                        \n                            \n                                 IMPORTANT\n                            \n                        \n                        \n                            \n                                Value : important\n                            \n                        \n                        \n                            \n                                 URGENT\n                            \n                        \n                        \n                            \n                                Value : urgent\n                            \n                        \n            \n        \n\n    src/ticket/enums/ticket-status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TicketStatus\n                    \n                \n                        \n                            \n                                 OPEN\n                            \n                        \n                        \n                            \n                                Value : open\n                            \n                        \n                        \n                            \n                                 CLOSE\n                            \n                        \n                        \n                            \n                                Value : close\n                            \n                        \n            \n        \n\n    src/employee/enums/emp-transaction.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Transaction\n                    \n                \n                        \n                            \n                                 LOAN\n                            \n                        \n                        \n                            \n                                Value : loan\n                            \n                        \n                        \n                            \n                                 BONAS\n                            \n                        \n                        \n                            \n                                Value : bonas\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            isDateWithinRange   (src/.../Dates.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/functions/Dates.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isDateWithinRange\n                        \n                    \n                \n            \n            \n                \nisDateWithinRange(dateToCheck: Date, startDate: Date, endDate: Date)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateToCheck\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                startDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                endDate\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BillingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BranchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CouponModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DeliveryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmployeeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OffersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StockModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SupplierModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TicketModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BillingModule\n\n\n\ncluster_BillingModule_providers\n\n\n\ncluster_BranchModule\n\n\n\ncluster_BranchModule_exports\n\n\n\ncluster_BranchModule_providers\n\n\n\ncluster_CartModule\n\n\n\ncluster_CartModule_providers\n\n\n\ncluster_CouponModule\n\n\n\ncluster_CouponModule_providers\n\n\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_providers\n\n\n\ncluster_DeliveryModule\n\n\n\ncluster_DeliveryModule_providers\n\n\n\ncluster_EmployeeModule\n\n\n\ncluster_EmployeeModule_exports\n\n\n\ncluster_EmployeeModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MaterialModule\n\n\n\ncluster_MaterialModule_providers\n\n\n\ncluster_OffersModule\n\n\n\ncluster_OffersModule_exports\n\n\n\ncluster_OffersModule_providers\n\n\n\ncluster_OrderModule\n\n\n\ncluster_OrderModule_exports\n\n\n\ncluster_OrderModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_StockModule\n\n\n\ncluster_StockModule_exports\n\n\n\ncluster_StockModule_providers\n\n\n\ncluster_SupplierModule\n\n\n\ncluster_SupplierModule_providers\n\n\n\ncluster_TicketModule\n\n\n\ncluster_TicketModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBillingModule\n\nBillingModule\n\nAppModule -->\n\nBillingModule->AppModule\n\n\n\n\n\nBranchModule\n\nBranchModule\n\n\n\nOrderModule\n\nOrderModule\n\nOrderModule -->\n\nBranchModule->OrderModule\n\n\n\n\n\nStockModule\n\nStockModule\n\nStockModule -->\n\nBranchModule->StockModule\n\n\n\n\n\nTicketModule\n\nTicketModule\n\nTicketModule -->\n\nBranchModule->TicketModule\n\n\n\nAppModule -->\n\nBranchModule->AppModule\n\n\n\n\n\nBranchService \n\nBranchService \n\nBranchService  -->\n\nBranchModule->BranchService \n\n\n\n\n\nCartModule\n\nCartModule\n\nAppModule -->\n\nCartModule->AppModule\n\n\n\n\n\nCouponModule\n\nCouponModule\n\nAppModule -->\n\nCouponModule->AppModule\n\n\n\n\n\nCustomerModule\n\nCustomerModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nDeliveryModule\n\nDeliveryModule\n\nAppModule -->\n\nDeliveryModule->AppModule\n\n\n\n\n\nEmployeeModule\n\nEmployeeModule\n\nOrderModule -->\n\nEmployeeModule->OrderModule\n\n\n\nAppModule -->\n\nEmployeeModule->AppModule\n\n\n\n\n\nEmployeeService \n\nEmployeeService \n\nEmployeeService  -->\n\nEmployeeModule->EmployeeService \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nEmployeeModule -->\n\nLocationModule->EmployeeModule\n\n\n\n\n\nSupplierModule\n\nSupplierModule\n\nSupplierModule -->\n\nLocationModule->SupplierModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nLocationModule->UsersModule\n\n\n\nAppModule -->\n\nLocationModule->AppModule\n\n\n\n\n\nLocationService \n\nLocationService \n\nLocationService  -->\n\nLocationModule->LocationService \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nOffersModule\n\nOffersModule\n\nOrderModule -->\n\nOffersModule->OrderModule\n\n\n\nAppModule -->\n\nOffersModule->AppModule\n\n\n\n\n\nOffersService \n\nOffersService \n\nOffersService  -->\n\nOffersModule->OffersService \n\n\n\nAppModule -->\n\nOrderModule->AppModule\n\n\n\n\n\nOrderService \n\nOrderService \n\nOrderService  -->\n\nOrderModule->OrderService \n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nStockModule->AppModule\n\n\n\n\n\nStockItemService \n\nStockItemService \n\nStockItemService  -->\n\nStockModule->StockItemService \n\n\n\n\n\nStockService \n\nStockService \n\nStockService  -->\n\nStockModule->StockService \n\n\n\n\n\nStockTransactionService \n\nStockTransactionService \n\nStockTransactionService  -->\n\nStockModule->StockTransactionService \n\n\n\nAppModule -->\n\nSupplierModule->AppModule\n\n\n\nAppModule -->\n\nTicketModule->AppModule\n\n\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nStockModule -->\n\nUsersModule->StockModule\n\n\n\nTicketModule -->\n\nUsersModule->TicketModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nATStrategy\n\nATStrategy\n\nAuthModule -->\n\nATStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nBillingService\n\nBillingService\n\nBillingModule -->\n\nBillingService->BillingModule\n\n\n\n\n\nBranchService\n\nBranchService\n\nBranchModule -->\n\nBranchService->BranchModule\n\n\n\n\n\nCartService\n\nCartService\n\nCartModule -->\n\nCartService->CartModule\n\n\n\n\n\nCouponService\n\nCouponService\n\nCouponModule -->\n\nCouponService->CouponModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\nDeliveryService\n\nDeliveryService\n\nDeliveryModule -->\n\nDeliveryService->DeliveryModule\n\n\n\n\n\nEmployeeService\n\nEmployeeService\n\nEmployeeModule -->\n\nEmployeeService->EmployeeModule\n\n\n\n\n\nLocationService\n\nLocationService\n\nLocationModule -->\n\nLocationService->LocationModule\n\n\n\n\n\nMaterialService\n\nMaterialService\n\nMaterialModule -->\n\nMaterialService->MaterialModule\n\n\n\n\n\nOffersService\n\nOffersService\n\nOffersModule -->\n\nOffersService->OffersModule\n\n\n\n\n\nOrderService\n\nOrderService\n\nOrderModule -->\n\nOrderService->OrderModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nStockItemLogsService\n\nStockItemLogsService\n\nStockModule -->\n\nStockItemLogsService->StockModule\n\n\n\n\n\nStockItemService\n\nStockItemService\n\nStockModule -->\n\nStockItemService->StockModule\n\n\n\n\n\nStockService\n\nStockService\n\nStockModule -->\n\nStockService->StockModule\n\n\n\n\n\nStockTransactionService\n\nStockTransactionService\n\nStockModule -->\n\nStockTransactionService->StockModule\n\n\n\n\n\nSupplierService\n\nSupplierService\n\nSupplierModule -->\n\nSupplierService->SupplierModule\n\n\n\n\n\nTicketService\n\nTicketService\n\nTicketModule -->\n\nTicketService->TicketModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        19 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    22 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    25 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    91 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            UserDocument   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/Model/user.model.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                            HydratedDocument\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AttendenceSchema   (src/.../employee.model.ts)\n                        \n                        \n                            BranchSchema   (src/.../branch.model.ts)\n                        \n                        \n                            CoordinatesSchema   (src/.../location.model.ts)\n                        \n                        \n                            CouponSchema   (src/.../coupon.model.ts)\n                        \n                        \n                            CustomerSchema   (src/.../customer.model.ts)\n                        \n                        \n                            DelivereyOrderTypeSchema   (src/.../order.model.ts)\n                        \n                        \n                            DeliveryOrderSchema   (src/.../delivery.model.ts)\n                        \n                        \n                            DineinOrderSchema   (src/.../order.model.ts)\n                        \n                        \n                            EmployeePDRSchema   (src/.../employee.model.ts)\n                        \n                        \n                            EmployeeSchema   (src/.../employee.model.ts)\n                        \n                        \n                            EmployeeTransactionsSchema   (src/.../employee.model.ts)\n                        \n                        \n                            LocationSchema   (src/.../location.model.ts)\n                        \n                        \n                            OfferSchema   (src/.../offer.model.ts)\n                        \n                        \n                            OrderSchema   (src/.../order.model.ts)\n                        \n                        \n                            PaymentSchema   (src/.../payment.model.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.model.ts)\n                        \n                        \n                            Public   (src/.../IsPuplic.decorator.ts)\n                        \n                        \n                            Role   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEYS   (src/.../roles.decorator.ts)\n                        \n                        \n                            StockGardSchema   (src/.../Stock-Gard.model.ts)\n                        \n                        \n                            StockItemQuantitySchema   (src/.../Stock-item-quantity.model.ts)\n                        \n                        \n                            StockItemSchema   (src/.../Stock-Item.model.ts)\n                        \n                        \n                            StockItemslogsSchema   (src/.../Stock-item-logs.model.ts)\n                        \n                        \n                            StockSchema   (src/.../stock.model.ts)\n                        \n                        \n                            StockTransactionSchema   (src/.../Stock-Transaction.model.ts)\n                        \n                        \n                            SupplierSchema   (src/.../supplier.Model.ts)\n                        \n                        \n                            TakeAwayOrderSchema   (src/.../order.model.ts)\n                        \n                        \n                            TicketSchema   (src/.../ticket.model.ts)\n                        \n                        \n                            TicketUpdatesSchema   (src/.../ticket-updates.model.ts)\n                        \n                        \n                            UserSchema   (src/.../user.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/employee/Model/employee.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AttendenceSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Attendence)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EmployeePDRSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(EmployeePDR)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EmployeeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Employee)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EmployeeTransactionsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(EmployeeTransactions)\n                    \n                \n\n\n        \n    \n\n    src/branch/Model/branch.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BranchSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Branch)\n                    \n                \n\n\n        \n    \n\n    src/location/Model/location.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CoordinatesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Coordinates)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LocationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Location)\n                    \n                \n\n\n        \n    \n\n    src/coupon/Model/coupon.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CouponSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Coupon)\n                    \n                \n\n\n        \n    \n\n    src/customer/Model/customer.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomerSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Customer)\n                    \n                \n\n\n        \n    \n\n    src/order/Model/order.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DelivereyOrderTypeSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DelivereyOrderType)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DineinOrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DineinOrder)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Order)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TakeAwayOrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(TakeAwayOrder)\n                    \n                \n\n\n        \n    \n\n    src/delivery/Model/delivery.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeliveryOrderSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(DelivereyOrder)\n                    \n                \n\n\n        \n    \n\n    src/offers/Model/offer.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        OfferSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Offer)\n                    \n                \n\n\n        \n    \n\n    src/payment/Model/payment.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PaymentSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Payment)\n                    \n                \n\n\n        \n    \n\n    src/product/Model/product.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Product)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/IsPuplic.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata('isPublic', true)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorator/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Role\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: Roles[]) => SetMetadata(ROLES_KEYS, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEYS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-Gard.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockGardSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockGard)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-item-quantity.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockItemQuantitySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockItemQuantity)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-Item.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockItemSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockItem)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-item-logs.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockItemslogsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockItemslogs)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/stock.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Stock)\n                    \n                \n\n\n        \n    \n\n    src/stock/Model/Stock-Transaction.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        StockTransactionSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(StockTransaction)\n                    \n                \n\n\n        \n    \n\n    src/supplier/Model/supplier.Model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SupplierSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Supplier)\n                    \n                \n\n\n        \n    \n\n    src/ticket/Models/ticket.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TicketSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Ticket)\n                    \n                \n\n\n        \n    \n\n    src/ticket/Models/ticket-updates.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        TicketUpdatesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(TicketUpdates)\n                    \n                \n\n\n        \n    \n\n    src/users/Model/user.model.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
